{"materials":[{"id":24218,"path":"Assets/Content/Materials/Particles/CartoonWhite.mat","assetBundleId":-1,"data":["CartoonWhite",0,66,2000,0,[["_Cutoff",0.5],["_Glossiness",0],["_GlossMapScale",1],["_SmoothnessTextureChannel",0],["_Metallic",0],["_SpecularHighlights",1],["_GlossyReflections",1],["_BumpScale",1],["_Parallax",0.0199999995529652],["_OcclusionStrength",1],["_DetailNormalMapScale",1],["_UVSec",0],["_Mode",0],["_SrcBlend",1],["_DstBlend",0],["_ZWrite",1]],[["_Color",1,1,1,1],["_EmissionColor",1,1,1,1]],[["_MainTex_ST",1,1,0,0],["_MetallicGlossMap_ST",1,1,0,0],["_BumpMap_ST",1,1,0,0],["_ParallaxMap_ST",1,1,0,0],["_OcclusionMap_ST",1,1,0,0],["_EmissionMap_ST",1,1,0,0],["_DetailMask_ST",1,1,0,0],["_DetailAlbedoMap_ST",1,1,0,0],["_DetailNormalMap_ST",1,1,0,0]],[["_MainTex",6,26692],["_MetallicGlossMap",null,null],["_BumpMap",null,null],["_ParallaxMap",null,null],["_OcclusionMap",null,null],["_EmissionMap",null,null],["_DetailMask",null,null],["_DetailAlbedoMap",null,null],["_DetailNormalMap",null,null]],[["_EMISSION",1],["_RECEIVE_SHADOWS_OFF",0]]]},{"id":-3102,"path":"Default UI Material","assetBundleId":-1,"data":["Default UI Material",0,30,3000,0,[["_StencilComp",8],["_Stencil",0],["_StencilOp",0],["_StencilWriteMask",255],["_StencilReadMask",255],["_ColorMask",15],["_UseUIAlphaClip",0]],[["_Color",1,1,1,1]],[["_MainTex_ST",1,1,0,0]],[["_MainTex",null,null]],[]]},{"id":24212,"path":"Assets/Content/Materials/Particles/spark_custom.mat","assetBundleId":-1,"data":["spark_custom",0,176,3000,0,[["_Cutoff",0.5],["_BumpScale",1],["_DistortionStrength",1],["_DistortionBlend",0.5],["_SoftParticlesNearFadeDistance",0],["_SoftParticlesFarFadeDistance",1],["_CameraNearFadeDistance",1],["_CameraFarFadeDistance",2],["_Mode",2],["_ColorMode",4],["_FlipbookMode",0],["_LightingEnabled",0],["_DistortionEnabled",0],["_EmissionEnabled",0],["_BlendOp",0],["_SrcBlend",5],["_DstBlend",10],["_ZWrite",0],["_Cull",2],["_SoftParticlesEnabled",0],["_CameraFadingEnabled",0],["_DistortionStrengthScaled",0]],[["_Color",1,1,1,1],["_EmissionColor",0,0,0,1]],[["_MainTex_ST",1,1,0,0],["_BumpMap_ST",1,1,0,0],["_EmissionMap_ST",1,1,0,0],["_SoftParticleFadeParams",0,0,0,0],["_CameraFadeParams",0,1e9999,0,0],["_ColorAddSubDiff",0,0,0,0]],[["_MainTex",6,25510],["_BumpMap",null,null],["_EmissionMap",null,null]],[["_ALPHABLEND_ON",1],["_COLORCOLOR_ON",1],["_FLIPBOOKBLENDING_OFF",0],["_SURFACE_TYPE_TRANSPARENT",0]]]},{"id":24686,"path":"Assets/TextMesh Pro/Resources/Fonts & Materials/LiberationSans SDF - Drop Shadow.mat","assetBundleId":-1,"data":["LiberationSans SDF - Drop Shadow",0,408,3000,0,[["_FaceDilate",0.100000001490116],["_OutlineWidth",0.100000001490116],["_OutlineSoftness",0],["_UnderlayOffsetX",0.5],["_UnderlayOffsetY",-0.5],["_UnderlayDilate",0],["_UnderlaySoftness",0.0500000007450581],["_WeightNormal",0],["_WeightBold",0.75],["_ShaderFlags",0],["_ScaleRatioA",0.899999976158142],["_ScaleRatioB",0.731249988079071],["_ScaleRatioC",0.641250014305115],["_TextureWidth",1024],["_TextureHeight",1024],["_GradientScale",10],["_ScaleX",1],["_ScaleY",1],["_PerspectiveFilter",0.875],["_Sharpness",0],["_VertexOffsetX",0],["_VertexOffsetY",0],["_MaskSoftnessX",0],["_MaskSoftnessY",0],["_StencilComp",8],["_Stencil",0],["_StencilOp",0],["_StencilWriteMask",255],["_StencilReadMask",255],["_CullMode",0],["_ColorMask",15]],[["_FaceColor",1,1,1,1],["_OutlineColor",0,0,0,1],["_UnderlayColor",0,0,0,0.5]],[["_MainTex_ST",1,1,0,0],["_ClipRect",-32767,-32767,32767,32767]],[["_MainTex",6,24630]],[["OUTLINE_ON",1],["UNDERLAY_ON",1]]]},{"id":31122,"path":"Assets/TextMesh Pro/Resources/Sprite Assets/EmojiOne.asset","assetBundleId":-1,"data":["TextMeshPro/Sprite",0,410,3000,0,[["_StencilComp",8],["_Stencil",0],["_StencilOp",0],["_StencilWriteMask",255],["_StencilReadMask",255],["_CullMode",0],["_ColorMask",15],["_UseUIAlphaClip",0]],[["_Color",1,1,1,1]],[["_MainTex_ST",1,1,0,0],["_ClipRect",-32767,-32767,32767,32767]],[["_MainTex",null,null]],[]]},{"id":24692,"path":"Assets/TextMesh Pro/Resources/Fonts & Materials/LiberationSans SDF - Outline.mat","assetBundleId":-1,"data":["LiberationSans SDF - Outline",0,408,3000,0,[["_FaceDilate",0.100000001490116],["_OutlineWidth",0.100000001490116],["_OutlineSoftness",0],["_UnderlayOffsetX",0],["_UnderlayOffsetY",0],["_UnderlayDilate",0],["_UnderlaySoftness",0],["_WeightNormal",0],["_WeightBold",0.75],["_ShaderFlags",0],["_ScaleRatioA",0.899999976158142],["_ScaleRatioB",0.731249988079071],["_ScaleRatioC",0.641250014305115],["_TextureWidth",1024],["_TextureHeight",1024],["_GradientScale",10],["_ScaleX",1],["_ScaleY",1],["_PerspectiveFilter",0.875],["_Sharpness",0],["_VertexOffsetX",0],["_VertexOffsetY",0],["_MaskSoftnessX",0],["_MaskSoftnessY",0],["_StencilComp",8],["_Stencil",0],["_StencilOp",0],["_StencilWriteMask",255],["_StencilReadMask",255],["_CullMode",0],["_ColorMask",15]],[["_FaceColor",1,1,1,1],["_OutlineColor",0,0,0,1],["_UnderlayColor",0,0,0,0.5]],[["_MainTex_ST",1,1,0,0],["_ClipRect",-32767,-32767,32767,32767]],[["_MainTex",6,24630]],[["OUTLINE_ON",1]]]},{"id":24504,"path":"Assets/TextMesh Pro/Resources/Fonts & Materials/LiberationSans SDF.asset","assetBundleId":-1,"data":["LiberationSans SDF Material",0,408,3000,0,[["_FaceDilate",0],["_OutlineWidth",0],["_OutlineSoftness",0],["_UnderlayOffsetX",0],["_UnderlayOffsetY",0],["_UnderlayDilate",0],["_UnderlaySoftness",0],["_WeightNormal",0],["_WeightBold",0.75],["_ShaderFlags",0],["_ScaleRatioA",0.899999976158142],["_ScaleRatioB",1],["_ScaleRatioC",0.731249988079071],["_TextureWidth",1024],["_TextureHeight",1024],["_GradientScale",10],["_ScaleX",1],["_ScaleY",1],["_PerspectiveFilter",0.875],["_Sharpness",0],["_VertexOffsetX",0],["_VertexOffsetY",0],["_MaskSoftnessX",0],["_MaskSoftnessY",0],["_StencilComp",8],["_Stencil",0],["_StencilOp",0],["_StencilWriteMask",255],["_StencilReadMask",255],["_CullMode",0],["_ColorMask",15]],[["_FaceColor",1,1,1,1],["_OutlineColor",0,0,0,1],["_UnderlayColor",0,0,0,0.5]],[["_MainTex_ST",1,1,0,0],["_ClipRect",-32767,-32767,32767,32767]],[["_MainTex",6,24630]],[]]},{"id":24700,"path":"Assets/TextMesh Pro/Resources/Sprite Assets/EmojiOne.asset","assetBundleId":-1,"data":["TextMeshPro/Sprite",0,410,3000,0,[["_StencilComp",8],["_Stencil",0],["_StencilOp",0],["_StencilWriteMask",255],["_StencilReadMask",255],["_CullMode",0],["_ColorMask",15],["_UseUIAlphaClip",0]],[["_Color",1,1,1,1]],[["_MainTex_ST",1,1,0,0],["_ClipRect",-32767,-32767,32767,32767]],[["_MainTex",6,24702]],[["UNITY_UI_CLIP_RECT",1]]]}],"meshes":[{"id":572,"path":"Library/unity default resources\\Quad","assetBundleId":-1,"data":["Quad",true,0,4,[0,0,0,0.5,0.5,3.061617e-17],[1,1,1,0,0,0,1,0,0,0],[0,96],[[[96,12]]],[],[]]},{"id":24214,"path":"Assets/Content/Prefabs/Particles/SmokeMeshLowPoly.fbx","assetBundleId":-1,"data":["Smoke",true,0,62,[-0.03957561,0.004150331,0.08673717,0.3840256,0.2997021,0.3788332],[1,1,1,0,0,0,0,0,0,0],[108,1240],[[[1348,720]]],[],[]]}],"prefabs":[{"id":23868,"path":"Assets/Content/Prefabs/Tile.prefab","assetBundleId":-1,"components":[{"type":1,"id":23890,"data":[0,0,0,1,1,1,0,0,0,1]},{"type":8,"id":23878,"enabled":1,"class":17,"data":[0,0,18,23872,18,23870,18,23876,19,23888,1,1,1,20,1.5,0.300000011920929,0,0,0.300000011920929,0.200000002980232,0,null,null,0,0,0,0,[]]},{"type":20,"id":24028,"data":[0,0,0.699999988079071,0.800000011920929,0,1,1,0,1,0,0.0799999982118607,null,null]},{"type":21,"id":24030,"data":[1,null,null,1,0,1,0,0,0,0,1,0]}],"children":[{"id":24026,"path":"Assets/Content/Prefabs/Tile.prefab","assetBundleId":-1,"components":[{"type":1,"id":24018,"data":[0,0,0,1,1,1,0,0,0,1]},{"type":18,"id":23876,"data":[1,5,458,[5,458],0,0,0,0,-1,-1,1,1,0,0,1,1,1,1,1,1,15,24044,0,0,0,1,1,0,0.5,0,0]}],"children":[],"data":["Background",0,1,0,3]},{"id":24032,"path":"Assets/Content/Prefabs/Tile.prefab","assetBundleId":-1,"components":[{"type":1,"id":24020,"data":[0,0.100000001490116,0,0.899999976158142,0.899999976158142,0,0,0,0,1]},{"type":18,"id":23872,"data":[1,5,458,[5,458],0,0,0,0,-1,-1,1,1,0,0,1,1,1,1,1,1,null,null,0,0,0,1,1,0,0.5,0,0]}],"children":[],"data":["Icon",0,1,0,3]},{"id":24040,"path":"Assets/Content/Prefabs/Tile.prefab","assetBundleId":-1,"components":[{"type":1,"id":24022,"data":[0,0,0,1,1,1,0,0,0,1]},{"type":18,"id":23870,"data":[1,5,458,[5,458],0,0,0,0,-1,-1,1,1,0,0,1,1,0,0,0,0.294117659330368,15,24044,0,0,0,1,1,0,0.5,0,0]}],"children":[],"data":["Dark",0,0,0,3]},{"id":24038,"path":"Assets/Content/Prefabs/Tile.prefab","assetBundleId":-1,"components":[{"type":1,"id":24024,"data":[0,0,0,1,1,1,0,0,0,1]},{"type":19,"id":23888,"data":[1,5,458,[5,458],1,0,0,0,-1,-1,1,1,0,0,0,0,[],0,0.25,0.200000002980232,0,0.200000002980232,0,1,0,5,0.100000001490116,[[0,1,1,1,1,1,1,1,1,1],[0.02470436,0,0.1964752,1,0.601175,0.9162334,0.9988251,0.01568628],0],1,1,1,0,1,1,1,0.0156862754374743,0,0,1,[0,1,0,0,0,0,0,1,0,0,0,0,0,0]]}],"children":[],"data":["Trail",0,1,0,3]}],"data":["Tile",0,1,0,3]},{"id":24012,"path":"Assets/Content/Prefabs/Scene.prefab","assetBundleId":-1,"components":[{"type":1,"id":24010,"data":[0,0,0,1,1,1,0,0,0,1]}],"children":[{"id":24672,"path":"Assets/Content/Prefabs/Scene.prefab","assetBundleId":-1,"components":[{"type":1,"id":24664,"data":[0,0,-20,1,1,1,0,0,0,1]},{"type":23,"id":23920,"data":[1,0.473684221506119,1,8,0.192156866192818,0.301960796117783,0.474509805440903,0,0.300000011920929,5000,60,-1,2,-1,[0,0,1,1],null,null,0,50,36,24,0,0,2]},{"type":24,"id":24678,"data":[]}],"children":[],"data":["Camera",4,1,0,0]},{"id":24670,"path":"Assets/Content/Prefabs/Scene.prefab","assetBundleId":-1,"components":[{"type":1,"id":24666,"data":[0,0,0,1,1,1,0,0,0,1]},{"type":14,"id":24674,"enabled":1,"class":25,"data":[null,null,1,10]},{"type":14,"id":24676,"enabled":1,"class":26,"data":["Horizontal","Vertical","Submit","Cancel",10,0.5,0,1]}],"children":[],"data":["EventSystem",0,1,0,0]},{"id":24014,"path":"Assets/Content/Prefabs/Scene.prefab","assetBundleId":-1,"components":[{"type":1,"id":24668,"data":[0,0,0,1,1,1,0,0,0,1]},{"type":18,"id":24680,"data":[1,5,458,[5,458],0,0,0,-100,-1,-1,1,1,0,0,1,1,1,1,1,1,15,24682,0,0,0,1,1,0,0.5,0,0]}],"children":[],"data":["Background",0,1,0,0]}],"data":["Scene",0,1,0,0]},{"id":23968,"path":"Assets/Content/Prefabs/Bag.prefab","assetBundleId":-1,"components":[{"type":1,"id":23970,"data":[-3.95000004768372,-5.59000015258789,0,1,1,1,0,0,0,1]},{"type":8,"id":23942,"enabled":1,"class":30,"data":[[22,24234,22,24236,22,24238,22,24240,22,24242,22,24244,22,24246]]}],"children":[{"id":24252,"path":"Assets/Content/Prefabs/Bag.prefab","assetBundleId":-1,"components":[{"type":1,"id":24220,"data":[1,0,0,1,1,1,0,0,0,1]},{"type":8,"id":24234,"enabled":1,"class":22,"data":[0,null,null]}],"children":[{"id":24310,"path":"Assets/Content/Prefabs/Bag.prefab","assetBundleId":-1,"components":[{"type":1,"id":24254,"data":[0,0,0,1,1,1,0,0,0,1]},{"type":18,"id":24314,"data":[1,5,458,[5,458],0,0,0,0,-1,-1,1,1,0,0,1,1,1,1,1,1,15,24330,0,0,0,1,1,0,0.5,0,0]}],"children":[],"data":["TempBackground",0,1,0,0]}],"data":["BagSlot (1)",0,1,0,0]},{"id":24266,"path":"Assets/Content/Prefabs/Bag.prefab","assetBundleId":-1,"components":[{"type":1,"id":24222,"data":[2,0,0,1,1,1,0,0,0,1]},{"type":8,"id":24236,"enabled":1,"class":22,"data":[0,null,null]}],"children":[{"id":24300,"path":"Assets/Content/Prefabs/Bag.prefab","assetBundleId":-1,"components":[{"type":1,"id":24268,"data":[0,0,0,1,1,1,0,0,0,1]},{"type":18,"id":24318,"data":[1,5,458,[5,458],0,0,0,0,-1,-1,1,1,0,0,1,1,1,1,1,1,15,24330,0,0,0,1,1,0,0.5,0,0]}],"children":[],"data":["TempBackground",0,1,0,0]}],"data":["BagSlot (2)",0,1,0,0]},{"id":24260,"path":"Assets/Content/Prefabs/Bag.prefab","assetBundleId":-1,"components":[{"type":1,"id":24224,"data":[3,0,0,1,1,1,0,0,0,1]},{"type":8,"id":24238,"enabled":1,"class":22,"data":[0,null,null]}],"children":[{"id":24298,"path":"Assets/Content/Prefabs/Bag.prefab","assetBundleId":-1,"components":[{"type":1,"id":24262,"data":[0,0,0,1,1,1,0,0,0,1]},{"type":18,"id":24320,"data":[1,5,458,[5,458],0,0,0,0,-1,-1,1,1,0,0,1,1,1,1,1,1,15,24330,0,0,0,1,1,0,0.5,0,0]}],"children":[],"data":["TempBackground",0,1,0,0]}],"data":["BagSlot (3)",0,1,0,0]},{"id":24278,"path":"Assets/Content/Prefabs/Bag.prefab","assetBundleId":-1,"components":[{"type":1,"id":24226,"data":[4,0,0,1,1,1,0,0,0,1]},{"type":8,"id":24240,"enabled":1,"class":22,"data":[0,null,null]}],"children":[{"id":24304,"path":"Assets/Content/Prefabs/Bag.prefab","assetBundleId":-1,"components":[{"type":1,"id":24280,"data":[0,0,0,1,1,1,0,0,0,1]},{"type":18,"id":24326,"data":[1,5,458,[5,458],0,0,0,0,-1,-1,1,1,0,0,1,1,1,1,1,1,15,24330,0,0,0,1,1,0,0.5,0,0]}],"children":[],"data":["TempBackground",0,1,0,0]}],"data":["BagSlot (4)",0,1,0,0]},{"id":24272,"path":"Assets/Content/Prefabs/Bag.prefab","assetBundleId":-1,"components":[{"type":1,"id":24228,"data":[5,0,0,1,1,1,0,0,0,1]},{"type":8,"id":24242,"enabled":1,"class":22,"data":[0,null,null]}],"children":[{"id":24302,"path":"Assets/Content/Prefabs/Bag.prefab","assetBundleId":-1,"components":[{"type":1,"id":24274,"data":[0,0,0,1,1,1,0,0,0,1]},{"type":18,"id":24316,"data":[1,5,458,[5,458],0,0,0,0,-1,-1,1,1,0,0,1,1,1,1,1,1,15,24330,0,0,0,1,1,0,0.5,0,0]}],"children":[],"data":["TempBackground",0,1,0,0]}],"data":["BagSlot (5)",0,1,0,0]},{"id":24290,"path":"Assets/Content/Prefabs/Bag.prefab","assetBundleId":-1,"components":[{"type":1,"id":24230,"data":[6,0,0,1,1,1,0,0,0,1]},{"type":8,"id":24244,"enabled":1,"class":22,"data":[0,null,null]}],"children":[{"id":24308,"path":"Assets/Content/Prefabs/Bag.prefab","assetBundleId":-1,"components":[{"type":1,"id":24292,"data":[0,0,0,1,1,1,0,0,0,1]},{"type":18,"id":24322,"data":[1,5,458,[5,458],0,0,0,0,-1,-1,1,1,0,0,1,1,1,1,1,1,15,24330,0,0,0,1,1,0,0.5,0,0]}],"children":[],"data":["TempBackground",0,1,0,0]}],"data":["BagSlot (6)",0,1,0,0]},{"id":24284,"path":"Assets/Content/Prefabs/Bag.prefab","assetBundleId":-1,"components":[{"type":1,"id":24232,"data":[7,0,0,1,1,1,0,0,0,1]},{"type":8,"id":24246,"enabled":1,"class":22,"data":[0,null,null]}],"children":[{"id":24306,"path":"Assets/Content/Prefabs/Bag.prefab","assetBundleId":-1,"components":[{"type":1,"id":24286,"data":[0,0,0,1,1,1,0,0,0,1]},{"type":18,"id":24324,"data":[1,5,458,[5,458],0,0,0,0,-1,-1,1,1,0,0,1,1,1,1,1,1,15,24330,0,0,0,1,1,0,0.5,0,0]}],"children":[],"data":["TempBackground",0,1,0,0]}],"data":["BagSlot (7)",0,1,0,0]}],"data":["Bag",0,1,0,0]},{"id":23958,"path":"Assets/Content/Prefabs/GAME.prefab","assetBundleId":-1,"components":[{"type":1,"id":23956,"data":[0,0,0,1,1,1,0,0,0,1]},{"type":8,"id":23936,"enabled":1,"class":27,"data":[60,null,null,29,24074,53,23964,null,null,31,24076,32,24078,33,24080,34,24082,35,24084,36,23954,37,23952,0,38,24086,54,37,[]]}],"children":[{"id":24146,"path":"Assets/Content/Prefabs/GAME.prefab","assetBundleId":-1,"components":[{"type":1,"id":24088,"data":[0,0,-10,1,1,1,0,0,0,1]}],"children":[],"data":["__________________________________________",0,0,0,0]},{"id":24134,"path":"Assets/Content/Prefabs/GAME.prefab","assetBundleId":-1,"components":[{"type":1,"id":24090,"data":[0,0,0,1,1,1,0,0,0,1]},{"type":8,"id":24162,"enabled":1,"class":39,"data":[null,null,null,null,[],1,5000]}],"children":[],"data":["Tile Spawner",0,1,0,0]},{"id":24154,"path":"Assets/Content/Prefabs/GAME.prefab","assetBundleId":-1,"components":[{"type":1,"id":24092,"data":[0,0,0,1,1,1,0,0,0,1]},{"type":8,"id":24086,"enabled":1,"class":38,"data":[null,null,200,[]]}],"children":[],"data":["Tile Randomizer",0,1,0,0]},{"id":24144,"path":"Assets/Content/Prefabs/GAME.prefab","assetBundleId":-1,"components":[{"type":1,"id":24094,"data":[0,0,0,1,1,1,0,0,0,1]},{"type":8,"id":24076,"enabled":1,"class":31,"data":[null,null,0.100000001490116,0.00999999977648258,0.100000001490116]}],"children":[],"data":["Tile Spawn Animation",0,1,0,0]},{"id":24150,"path":"Assets/Content/Prefabs/GAME.prefab","assetBundleId":-1,"components":[{"type":1,"id":24096,"data":[0,0,0,1,1,1,0,0,0,1]},{"type":8,"id":24074,"enabled":1,"class":29,"data":[null,null]}],"children":[],"data":["Tile Actions",0,1,0,0]},{"id":24156,"path":"Assets/Content/Prefabs/GAME.prefab","assetBundleId":-1,"components":[{"type":1,"id":24098,"data":[0,0,0,1,1,1,0,0,0,1]},{"type":8,"id":23964,"enabled":1,"class":53,"data":[null,null,0,0.899999976158142]}],"children":[],"data":["Tile Locker",0,1,0,0]},{"id":24124,"path":"Assets/Content/Prefabs/GAME.prefab","assetBundleId":-1,"components":[{"type":1,"id":24100,"data":[0,0,0,1,1,1,0,0,0,1]},{"type":8,"id":24078,"enabled":1,"class":32,"data":[null,null,40,24126,[],[]]}],"children":[],"data":["Tile Matcher",0,1,0,0]},{"id":24148,"path":"Assets/Content/Prefabs/GAME.prefab","assetBundleId":-1,"components":[{"type":1,"id":24102,"data":[0,0,-10,1,1,1,0,0,0,1]}],"children":[],"data":["__________________________________________  ",0,0,0,0]},{"id":24136,"path":"Assets/Content/Prefabs/GAME.prefab","assetBundleId":-1,"components":[{"type":1,"id":24104,"data":[0,0,0,1,1,1,0,0,0,1]},{"type":8,"id":24080,"enabled":1,"class":33,"data":[null,null]}],"children":[],"data":["Lose Condition",0,1,0,0]},{"id":24158,"path":"Assets/Content/Prefabs/GAME.prefab","assetBundleId":-1,"components":[{"type":1,"id":24106,"data":[0,0,0,1,1,1,0,0,0,1]},{"type":8,"id":24082,"enabled":1,"class":34,"data":[null,null]}],"children":[],"data":["Win Condition",0,1,0,0]},{"id":24130,"path":"Assets/Content/Prefabs/GAME.prefab","assetBundleId":-1,"components":[{"type":1,"id":24108,"data":[0,0,0,1,1,1,0,0,0,1]},{"type":8,"id":23952,"enabled":1,"class":37,"data":[null,null,[null,null,null,null,null,null,null,null,null,null,null,null]]}],"children":[],"data":["Quest Condition",0,1,0,0]},{"id":24128,"path":"Assets/Content/Prefabs/GAME.prefab","assetBundleId":-1,"components":[{"type":1,"id":24110,"data":[0,0,-10,1,1,1,0,0,0,1]}],"children":[],"data":["__________________________________________    ",0,0,0,0]},{"id":24140,"path":"Assets/Content/Prefabs/GAME.prefab","assetBundleId":-1,"components":[{"type":1,"id":24112,"data":[0,0,0,1,1,1,0,0,0,1]},{"type":8,"id":24084,"enabled":1,"class":35,"data":[null,null,0.200000002980232,[],0.5]}],"children":[],"data":["Input - Touch",0,1,0,0]},{"id":24132,"path":"Assets/Content/Prefabs/GAME.prefab","assetBundleId":-1,"components":[{"type":1,"id":24114,"data":[0,0,0,1,1,1,0,0,0,1]},{"type":8,"id":24160,"enabled":1,"class":41,"data":[null,null,1,0.0500000007450581]}],"children":[],"data":["Bag Sorter",0,1,0,0]},{"id":24138,"path":"Assets/Content/Prefabs/GAME.prefab","assetBundleId":-1,"components":[{"type":1,"id":24116,"data":[0,0,0,1,1,1,0,0,0,1]},{"type":8,"id":23954,"enabled":1,"class":36,"data":[null,null,null,null]}],"children":[],"data":["End Card",0,1,0,0]},{"id":24152,"path":"Assets/Content/Prefabs/GAME.prefab","assetBundleId":-1,"components":[{"type":1,"id":24118,"data":[0,0,-10,1,1,1,0,0,0,1]}],"children":[],"data":["__________________________________________    ",0,0,0,0]},{"id":23962,"path":"Assets/Content/Prefabs/GAME.prefab","assetBundleId":-1,"components":[{"type":1,"id":24120,"data":[0,0,0,1,1,1,0,0,0,1]},{"type":8,"id":24164,"enabled":1,"class":43,"data":[null,null,44,24176,44,24178,44,24180,44,24182,45,23960]},{"type":45,"id":23960,"data":[null,null,null,null,1,0,0,1,1,1]}],"children":[],"data":["Sounds",0,1,0,0]},{"id":24142,"path":"Assets/Content/Prefabs/GAME.prefab","assetBundleId":-1,"components":[{"type":1,"id":24122,"data":[0,0,-10,1,1,1,0,0,0,1]}],"children":[],"data":["__________________________________________     ",0,0,0,0]}],"data":["GAME",0,1,0,0]},{"id":24126,"path":"Assets/Content/Prefabs/Particles/Slot Highlight.prefab","assetBundleId":-1,"components":[{"type":1,"id":24168,"data":[0,0,0,1,1,1,0,0,0,1]},{"type":2,"id":24170,"data":[[1,1,0,[0,null,null,1,0,0],[0,null,null,1,0,0.400000005960464],[0,null,null,1,0,0],0,[1,null,[0,1,0,0,0,0,0,0.5017921,0.7826087,0,0,0,0,0,1,1,0,0,0,0,0],0.5,0,0],[1,null,[0,1,0,0,0,0,0,1,1,0,0,0,0,0],1,0,0],[1,null,[0,1,0,0,0,0,0,1,1,0,0,0,0,0],1,0,0],0,[1,null,[0,-0.01086998,0,0,0,0,0,0.5053763,0.1195648,0,0,0,0,0,1,-0.01086998,0,0,0,0,0],6.28318500518799,0,0],[1,null,[0,0.456522,0,0,0,0,0,1,0.456522,0,0,0,0,0],6.28318500518799,0,0],[1,null,[0,0,1,1,0,1,1,1,1,1,1,0,1,1],6.28318500518799,0,0],[0,null,null,0.0130462348461151,9.10844001811131e-44,0.0130458995699883,9.10844001811131e-44,1,1,1,1],[0,null,null,1,0,0],0,null,null,0.300000011920929,0,0,1,1000,0,0],[0,[1,null,[0,[[1,1,1,1,0],[1,1,1,1,1]],[[1,0],[1,1]]],0.0130471214652061,9.10844001811131e-44,0.0130469426512718,9.10844001811131e-44,0.0130468904972076,9.10844001811131e-44,8.7023176875504e-22,4.59093402882097e-41],0,1],[0,[1,null,[0,[[1,1,1,1,0],[1,1,1,1,1]],[[0,0],[1,0.501457214355469],[0,1]]],0.0130471363663673,9.10844001811131e-44,0.013046957552433,9.10844001811131e-44,0.0130469053983688,9.10844001811131e-44,8.7023176875504e-22,4.59093402882097e-41]],[0,[0,null,null,1,0,6],[0,null,null,1,0,0],[]],[0,[0,null,null,1,0,1],[0,null,null,1,0,1],[0,null,null,1,0,0.785398185253143],0,0,1],[0,[1,null,[0,1,0,0,0,0,0,1,1,0,0,0,0,0],1,0,0],[1,null,[0,1,0,0,0,0,0,1,1,0,0,0,0,0],1,0,0],[1,null,[0,0.497406,1.118327,1.118327,0,0,0,1,1,0,0,0,0,0],1.30899691581726,0,0],0],[0,4,0,0,0,0,1,0,0,[0,null,null,1,0,1],1,25,5,0,0,0,0,null,null,null,null,null,null,0,0,1,0,360,0,0,[0,null,null,1,0,1],0.200000002980232,0,0,0,0,0,0,1,1,1],[0,[1,null,[0,1,0,0,0,0,0,1,1,0,0,0,0,0],1,0,0],[1,null,[0,0,0,1,0,0,0,1,1,1,0,0,0,0],1,0,0],[1,null,[0,0,0,1,0,0,0,1,1,1,0,0,0,0],1,0,0],0,0,1],[0,[1,null,[0,0.5492208,1.244553,1.244553,0,0,0,1,1,0,0,0,0,0],4,0,0],[1,null,[0,0,0,1,0,0,0,1,1,1,0,0,0,0],1,0,0],[1,null,[0,0,0,1,0,0,0,1,1,1,0,0,0,0],1,0,0],0],[0,0,0,1,1,1,[1,null,[0,0,0,1,0,0,0,1,1,1,0,0,0,0],0.999899983406067,0,0],[0,null,null,1,0,0],1,0,0,0,1,[null,null]],[0,[0,null,null,1,0,0],[0,null,null,1,0,0],[0,null,null,1,0,0],[0,null,null,1,0,0],[0,null,null,1,0,1],0,[0,null,null,1,0,0],[0,null,null,1,0,0],[0,null,null,1,0,0],[0,null,null,1,0,0],[0,null,null,1,0,0],[0,null,null,1,0,0]],[0,0,[0,null,null,1,0,1],[0,null,null,1,0,1],[0,null,null,1,0,1],0.5,1,1,0.5,2,2,[0,null,null,1,0,0],0,0,[1,null,[0,0,0,1,0,0,0,1,1,1,0,0,0,0],1,0,0],[1,null,[0,0,0,1,0,0,0,1,1,1,0,0,0,0],1,0,0],[1,null,[0,0,0,1,0,0,0,1,1,1,0,0,0,0],1,0,0],[0,null,null,1,0,1],[0,null,null,1,0,0],[0,null,null,1,0,0]],[0,0,[0,null,null,1,0,1]],[0,[0,null,null,1,0,0],[0,null,null,1,0,0],[0,null,null,1,0,0],0,0],[0,[0,null,null,1,0,1],[0,null,null,1,0,1],[0,null,null,1,0,1],[0,null,null,1,0,1],1,0,0,[0,null,null,1,0,0],1,1],1,0]},{"type":3,"id":24172,"data":[0,null,null,[null,null],1,1,0,0,-1,-1,1,1,0,0,1,1,4,572,1,4,3,4,2,2,0,0,1,0,0,0.5,0,0,0,null,null]}],"children":[{"id":24194,"path":"Assets/Content/Prefabs/Particles/Slot Highlight.prefab","assetBundleId":-1,"components":[{"type":1,"id":24184,"data":[0,0,0,1,1,1,0.707106828689575,0,0,0.707106828689575]},{"type":2,"id":24202,"data":[[0.600000023841858,0,0,[0,null,null,1,0,0],[3,null,null,1,0.200000002980232,0.600000023841858],[3,null,null,1,5,11],0,[3,null,null,1,0.200000002980232,0.5],[3,null,null,1,1,1],[3,null,null,1,1,1],0,[3,null,null,1,0,1],[3,null,null,1,0,1],[3,null,null,1,0,6.28318500518799],[0,null,null,0.0130460262298584,9.10844001811131e-44,0.0130456909537315,9.10844001811131e-44,1,0.782005965709686,0.117250561714172,1],[0,null,null,1,0,-2],0,null,null,1,0,0,1,1000,0,0],[0,[1,null,[0,[[1,0.807843148708344,0,1,0],[0.962264060974121,0.416248232126236,0.284010499715805,1,0.496635377407074]],[[1,0],[1,0.715129315853119],[0,1]]],0.0130469128489494,9.10844001811131e-44,0.0130467340350151,9.10844001811131e-44,0.0130466818809509,9.10844001811131e-44,8.7023176875504e-22,4.59093402882097e-41],0,1],[0,[1,null,[0,[[1,0.807843148708344,0,1,0],[1,1,1,1,0.594125270843506]],[[1,0],[1,0.715129315853119],[0,1]]],0.0130469277501106,9.10844001811131e-44,0.0130467489361763,9.10844001811131e-44,0.0130466967821121,9.10844001811131e-44,8.7023176875504e-22,4.59093402882097e-41]],[1,[0,null,null,1,0,0],[0,null,null,1,0,0],[[[0,null,null,1,0,20],1,0,20,0.00999999977648258,0]]],[0,[0,null,null,1,0,1],[0,null,null,1,0,1],[0,null,null,1,0,0.785398185253143],0,0,1],[1,[2,[0,0,0,0,0,0,0,1,0,0,0,0,0,0],[0,1,0,0,0,0,0,1,1,0,0,0,0,0],1,0,0],[2,[0,0,0,0,0,0,0,1,0,0,0,0,0,0],[0,1,0,0,0,0,0,1,1,0,0,0,0,0],1,0,0],[2,[0,-1,0,0,0,0,0,1,-0.4945055,0,0,0,0,0],[0,1,0,0,0,0,0,1,0.4065934,0,0,0,0,0],2.09439516067505,0,0],0],[1,10,0,0,0,0,0.200000002980232,0,0,[0,null,null,1,0,1],0,28.75,5,0,0,0,0,null,null,null,null,null,null,0,0,1,0,360,3,0,[0,null,null,1,0,1],0.200000002980232,0,-0.670000016689301,0,-90,0,0,1,1,1],[0,[1,null,[0,1,0,0,0,0,0,1,1,0,0,0,0,0],1,0,0],[1,null,[0,0,0,1,0,0,0,1,1,1,0,0,0,0],1,0,0],[1,null,[0,0,0,1,0,0,0,1,1,1,0,0,0,0],1,0,0],0,0,1],[1,[1,null,[0,0.47826,1.863361,1.863361,0,0,0,0.2713935,0.9681337,-0.449419,-0.449419,0,0,0,1,0,-2,-2,0,0,0],1.39999997615814,0,0],[1,null,[0,0,0,1,0,0,0,1,1,1,0,0,0,0],1,0,0],[1,null,[0,0,0,1,0,0,0,1,1,1,0,0,0,0],1,0,0],0],[0,0,0,2,2,1,[3,null,null,1,0,0.999899983406067],[0,null,null,1,0,0],1,0,0,0,1,[null,null]],[0,[0,null,null,1,0,0],[0,null,null,1,0,0],[0,null,null,1,0,0],[0,null,null,1,0,0],[0,null,null,1,0,1],0,[0,null,null,1,0,0],[0,null,null,1,0,0],[0,null,null,1,0,0],[0,null,null,1,0,0],[0,null,null,1,0,0],[0,null,null,1,0,0]],[0,0,[0,null,null,1,0,1],[0,null,null,1,0,1],[0,null,null,1,0,1],0.5,1,1,0.5,2,2,[0,null,null,1,0,0],0,0,[1,null,[0,0,0,1,0,0,0,1,1,1,0,0,0,0],1,0,0],[1,null,[0,0,0,1,0,0,0,1,1,1,0,0,0,0],1,0,0],[1,null,[0,0,0,1,0,0,0,1,1,1,0,0,0,0],1,0,0],[0,null,null,1,0,1],[0,null,null,1,0,0],[0,null,null,1,0,0]],[0,0,[0,null,null,1,0,1]],[0,[0,null,null,1,0,0],[0,null,null,1,0,0],[0,null,null,1,0,0],0,0],[1,[0,null,null,1,0,0.5],[0,null,null,1,0,1],[0,null,null,1,0,1],[0,null,null,1,0,1],0.419999986886978,0,0,[0,null,null,1,0,0],1,1],1,0]},{"type":3,"id":24204,"data":[1,5,24212,[5,24212],1,1,0,9999,-1,-1,1,1,0,0,1,1,4,24214,1,3,0,0,0,2,0,0,1,0,0,0.5,0,0,0,null,null]}],"children":[],"data":["Star Poof",0,1,0,1]},{"id":24198,"path":"Assets/Content/Prefabs/Particles/Slot Highlight.prefab","assetBundleId":-1,"components":[{"type":1,"id":24186,"data":[0,0,0,1,1,1,0.707106828689575,0,0,0.707106828689575]},{"type":2,"id":24206,"data":[[0.600000023841858,0,0,[0,null,null,1,0,0],[3,null,null,1,0.200000002980232,0.600000023841858],[3,null,null,1,5,11],0,[3,null,null,1,0.5,0.800000011920929],[3,null,null,1,1,1],[3,null,null,1,1,1],0,[3,null,null,1,0,1],[3,null,null,1,0,1],[3,null,null,1,0,6.28318500518799],[0,null,null,0.0130460262298584,9.10844001811131e-44,0.0130456909537315,9.10844001811131e-44,1,1,1,1],[0,null,null,1,0,0],0,null,null,1,0,0,1,1000,0,0],[0,[1,null,[0,[[1,0.807843148708344,0,1,0],[0.962264060974121,0.416248232126236,0.284010499715805,1,0.496635377407074]],[[1,0],[1,0.715129315853119],[0,1]]],0.0130469128489494,9.10844001811131e-44,0.0130467340350151,9.10844001811131e-44,0.0130466818809509,9.10844001811131e-44,8.7023176875504e-22,4.59093402882097e-41],0,1],[0,[1,null,[0,[[1,0.807843148708344,0,1,0],[1,1,1,1,0.594125270843506]],[[1,0],[1,0.715129315853119],[0,1]]],0.0130469277501106,9.10844001811131e-44,0.0130467489361763,9.10844001811131e-44,0.0130466967821121,9.10844001811131e-44,8.7023176875504e-22,4.59093402882097e-41]],[1,[0,null,null,1,0,0],[0,null,null,1,0,0],[[[0,null,null,1,0,10],1,0,10,0.00999999977648258,0]]],[0,[0,null,null,1,0,1],[0,null,null,1,0,1],[0,null,null,1,0,0.785398185253143],0,0,1],[1,[2,[0,0,0,0,0,0,0,1,0,0,0,0,0,0],[0,1,0,0,0,0,0,1,1,0,0,0,0,0],1,0,0],[2,[0,0,0,0,0,0,0,1,0,0,0,0,0,0],[0,1,0,0,0,0,0,1,1,0,0,0,0,0],1,0,0],[2,[0,-1,0,0,0,0,0,1,-0.4945055,0,0,0,0,0],[0,1,0,0,0,0,0,1,0.4065934,0,0,0,0,0],2.09439516067505,0,0],0],[1,4,0,0,0,0,0.100000001490116,0,0,[0,null,null,1,0,1],0,12,5,0,0,0,0,null,null,null,null,null,null,0,0,1,0,360,3,0,[0,null,null,1,0,1],0.200000002980232,0,-0.670000016689301,0,-90,0,0,1,1,1],[0,[1,null,[0,1,0,0,0,0,0,1,1,0,0,0,0,0],1,0,0],[1,null,[0,0,0,1,0,0,0,1,1,1,0,0,0,0],1,0,0],[1,null,[0,0,0,1,0,0,0,1,1,1,0,0,0,0],1,0,0],0,0,1],[1,[1,null,[0,0.47826,1.863361,1.863361,0,0,0,0.2713935,0.9681337,-0.449419,-0.449419,0,0,0,1,0,-2,-2,0,0,0],1.39999997615814,0,0],[1,null,[0,0,0,1,0,0,0,1,1,1,0,0,0,0],1,0,0],[1,null,[0,0,0,1,0,0,0,1,1,1,0,0,0,0],1,0,0],0],[0,0,0,2,2,1,[3,null,null,1,0,0.999899983406067],[0,null,null,1,0,0],1,0,0,0,1,[null,null]],[0,[0,null,null,1,0,0],[0,null,null,1,0,0],[0,null,null,1,0,0],[0,null,null,1,0,0],[0,null,null,1,0,1],0,[0,null,null,1,0,0],[0,null,null,1,0,0],[0,null,null,1,0,0],[0,null,null,1,0,0],[0,null,null,1,0,0],[0,null,null,1,0,0]],[0,0,[0,null,null,1,0,1],[0,null,null,1,0,1],[0,null,null,1,0,1],0.5,1,1,0.5,2,2,[0,null,null,1,0,0],0,0,[1,null,[0,0,0,1,0,0,0,1,1,1,0,0,0,0],1,0,0],[1,null,[0,0,0,1,0,0,0,1,1,1,0,0,0,0],1,0,0],[1,null,[0,0,0,1,0,0,0,1,1,1,0,0,0,0],1,0,0],[0,null,null,1,0,1],[0,null,null,1,0,0],[0,null,null,1,0,0]],[0,0,[0,null,null,1,0,1]],[0,[0,null,null,1,0,0],[0,null,null,1,0,0],[0,null,null,1,0,0],0,0],[1,[0,null,null,1,0,0.5],[0,null,null,1,0,1],[0,null,null,1,0,1],[0,null,null,1,0,1],0.419999986886978,0,0,[0,null,null,1,0,0],1,1],1,0]},{"type":3,"id":24208,"data":[1,5,24218,[5,24218],1,1,0,10000,-1,-1,1,1,0,0,1,1,4,24214,1,5,0,4,0,2,0,0,1,0,0,0.5,0,0,0,null,null]}],"children":[],"data":["Poof",0,1,0,1]}],"data":["Slot Highlight",0,1,0,1]},{"id":24042,"path":"Assets/Content/Prefabs/Particles/Block Trail.prefab","assetBundleId":-1,"components":[{"type":1,"id":24034,"data":[0,0,0,1,1,1,0,0,0,1]},{"type":19,"id":24046,"data":[1,5,458,[5,458],1,0,0,0,-1,-1,1,1,0,0,0,0,[],0,0.100000001490116,0.5,0,0.5,0,1,0,5,0.100000001490116,[[0,1,1,1,1,1,1,1,1,1],[0,0,0.1852903,1,0.3499962,1,1,0],0],1,1,1,0,1,1,1,0,0,0,1,[0,1,0,0,0,0,0,1,0,0,0,0,0,0]]}],"children":[],"data":["Block Trail",0,1,0,1]},{"id":28862,"path":"Assets/Content/Prefabs/Particles/SmokeMeshLowPoly.fbx","assetBundleId":-1,"components":[{"type":1,"id":30862,"data":[0,0,0,1,1,1,0,0,0,1]},{"type":54,"id":30864,"data":[4,24214]},{"type":55,"id":30866,"data":[null,null,1,null,null,[null,null],1,1,0,0,-1,-1,1,1,0,0,1,1]}],"children":[],"data":["SmokeMeshLowPoly",0,1,0,0]},{"id":24518,"path":"Assets/Content/Prefabs/Quest - Slot.prefab","assetBundleId":-1,"components":[{"type":7,"id":24438,"data":[0.5,0.5,0,0,0,0,0,0,0,0,0,0,0,0,1,1,1,1]},{"type":8,"id":24600,"enabled":1,"class":9,"data":[1,1,1,1.5,1.5,1.5,1,1,1,1,0.699999988079071,10,23910,0,0,11,24640,12,24634]},{"type":13,"id":24606,"data":[1]},{"type":14,"id":24596,"enabled":1,"class":11,"data":[15,24598,0,1,1,4,1,1,0,0,1,null,null,1,1,1,1,1,1,0,0,0,0]}],"children":[{"id":24586,"path":"Assets/Content/Prefabs/Quest - Slot.prefab","assetBundleId":-1,"components":[{"type":7,"id":24512,"data":[0.5,0.5,0,0,1,1,0,0,0,0,0,0,0,0,1,1,1,1]},{"type":13,"id":24638,"data":[1]},{"type":14,"id":24640,"enabled":1,"class":11,"data":[15,23908,0,0,1,4,1,1,0,0,1,null,null,1,1,1,1,1,1,0,0,0,0]}],"children":[],"data":["Icon",0,1,0,5]},{"id":24556,"path":"Assets/Content/Prefabs/Quest - Slot.prefab","assetBundleId":-1,"components":[{"type":7,"id":24488,"data":[0.5,1,0.100000001490116,0,0.899999976158142,0,0,20,0,-10,0,0,0,0,1,1,1,1]},{"type":13,"id":24636,"data":[1]},{"type":14,"id":24634,"enabled":1,"class":12,"data":[0,null,null,0,0,0,0,"Leaves 0",0,16,24502,5,24504,[],null,null,[],0,0,0,255,0,0,0,1,0,3,[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1],null,null,null,null,0,null,null,-1183493901,0,255,255,255,255,18,18,400,0,18,72,1,2,256,65535,0,0,0,0,0,0,0,0.400000005960464,0,null,null,null,null,1,0,0,1,1,1,0,0,0,0,0,0,0,1,1,0,0,0,0,0,0,null,null,1,1,1,1,1,1,0,0,0,0]}],"children":[],"data":["Amount",0,1,0,5]}],"data":["Quest - Slot",0,1,0,5]},{"id":23988,"path":"Assets/Content/Prefabs/UI.prefab","assetBundleId":-1,"components":[{"type":1,"id":23990,"data":[0,0,0,1,1,1,0,0,0,1]}],"children":[{"id":23976,"path":"Assets/Content/Prefabs/UI.prefab","assetBundleId":-1,"components":[{"type":7,"id":24334,"data":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0]},{"type":42,"id":23974,"data":[1,100,100,1,0,3,"Default",-100,1,null,null,0,0,0,0]},{"type":14,"id":24354,"enabled":1,"class":46,"data":[1,100,1,1080,1920,0,0,3,96,96,1,0]},{"type":14,"id":24356,"enabled":1,"class":47,"data":[1,0,-1]}],"children":[{"id":24344,"path":"Assets/Content/Prefabs/UI.prefab","assetBundleId":-1,"components":[{"type":7,"id":24340,"data":[0.5,0.5,0,0,1,1,0,0,0,0,0,0,0,0,1,1,1,1]},{"type":8,"id":24370,"enabled":1,"class":48,"data":[]}],"children":[{"id":24374,"path":"Assets/Content/Prefabs/UI.prefab","assetBundleId":-1,"components":[{"type":7,"id":24346,"data":[0.5,0.5,0,0,1,1,0,0,0,0,0,0,0,0,1,0.999599874019623,0.999599874019623,0.999599874019623]},{"type":13,"id":24388,"data":[1]},{"type":14,"id":24390,"enabled":1,"class":11,"data":[15,24412,0,0,1,4,1,1,0,0,1,null,null,1,1,1,1,1,1,0,0,0,0]}],"children":[],"data":["Background",0,1,0,5]}],"data":["offset",0,1,0,5]}],"data":["[Canvas] Background",0,1,0,5]},{"id":23982,"path":"Assets/Content/Prefabs/UI.prefab","assetBundleId":-1,"components":[{"type":7,"id":24336,"data":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0]},{"type":42,"id":23980,"data":[1,100,100,1,0,3,"Default",22222,1,null,null,0,0,0,0]},{"type":14,"id":24362,"enabled":1,"class":46,"data":[1,100,1,1080,1920,0,0,3,96,96,1,0]},{"type":14,"id":24364,"enabled":1,"class":47,"data":[1,0,-1]}],"children":[{"id":24348,"path":"Assets/Content/Prefabs/UI.prefab","assetBundleId":-1,"components":[{"type":7,"id":24342,"data":[0.5,0.5,0,0,1,1,0,0,0,0,0,0,0,0,1,1,1,1]},{"type":8,"id":24372,"enabled":1,"class":48,"data":[]}],"children":[{"id":24376,"path":"Assets/Content/Prefabs/UI.prefab","assetBundleId":-1,"components":[{"type":7,"id":24350,"data":[0.5,1,0,1,1,1,0,500,0,0,0,0,0,0,1,1,1,1]},{"type":14,"id":24392,"enabled":0,"class":11,"data":[null,null,0,0,1,4,1,1,0,0,1,null,null,1,0.599999904632568,0.599999904632568,0.599999904632568,1,1,0,0,0,0]},{"type":14,"id":24394,"enabled":1,"class":49,"data":[0,1,1,0,1,0,0,0,0,0,0,0,0]},{"type":13,"id":24396,"data":[1]}],"children":[{"id":24406,"path":"Assets/Content/Prefabs/UI.prefab","assetBundleId":-1,"components":[{"type":7,"id":23992,"data":[0.5,0.5,0,0,0,0,450,0,0,0,0,0,0,0,1,1,1,1]},{"type":14,"id":24430,"enabled":0,"class":11,"data":[null,null,0,0,1,4,1,1,0,0,1,null,null,1,1,0.888257026672363,0,1,1,0,0,0,0]},{"type":13,"id":24432,"data":[1]}],"children":[{"id":24426,"path":"Assets/Content/Prefabs/UI.prefab","assetBundleId":-1,"components":[{"type":7,"id":24408,"data":[0.5,0.5,0,1,0,1,450,450,225,-250,0,0,0,0,1,1,1,1]},{"type":13,"id":24508,"data":[1]},{"type":14,"id":24510,"enabled":1,"class":11,"data":[15,23944,0,1,1,4,1,1,0,0,1,null,null,1,1,1,1,1,1,0,0,0,0]}],"children":[{"id":24506,"path":"Assets/Content/Prefabs/UI.prefab","assetBundleId":-1,"components":[{"type":7,"id":24428,"data":[0.5,0,0.5,0,0.5,0,431.050048828125,0,0,30,0,0,0,0,1,1,1,1]},{"type":13,"id":24582,"data":[1]},{"type":14,"id":24584,"enabled":1,"class":12,"data":[0,null,null,0,0,0,0,"Salmon: 0",0,16,24502,5,24504,[],null,null,[],255,0,0,255,1,0,0,1,0,3,[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1],null,null,null,null,0,null,null,-1183493901,0,255,255,255,255,60,60,400,0,18,72,1,2,1024,65535,-5,0,0,0,0,0,0,0.400000005960464,0,null,null,null,null,1,0,0,1,1,1,0,0,0,0,0,0,0,1,1,0,0,0,0,0,0,null,null,1,1,1,1,1,1,0,0,0,0]}],"children":[],"data":["Quest - Txt",0,1,0,5]}],"data":["Quest - Icon",0,1,0,5]}],"data":["Quest - Goal",0,1,0,5]},{"id":24400,"path":"Assets/Content/Prefabs/UI.prefab","assetBundleId":-1,"components":[{"type":7,"id":23984,"data":[0.5,0.5,0,0,0,0,560,0,0,0,0,0,0,0,1,1,1,1]},{"type":14,"id":24418,"enabled":1,"class":50,"data":[0,0,150,150,20,50,1,3,0,0,0,0,4]},{"type":14,"id":24420,"enabled":0,"class":11,"data":[null,null,0,0,1,4,1,1,0,0,1,null,null,1,0.359031826257706,0.879245281219482,0.031519990414381,1,1,0,0,0,0]},{"type":13,"id":24422,"data":[1]}],"children":[{"id":24458,"path":"Assets/Content/Prefabs/UI.prefab","assetBundleId":-1,"components":[{"type":7,"id":24000,"data":[0.5,0.5,0,0,0,0,0,0,0,0,0,0,0,0,1,1,1,1]},{"type":8,"id":23924,"enabled":1,"class":9,"data":[1,1,1,1.5,1.5,1.5,1,1,1,1,0.699999988079071,10,23882,0,1,11,24610,12,24560]},{"type":13,"id":24534,"data":[1]},{"type":14,"id":24536,"enabled":1,"class":11,"data":[15,24598,0,1,1,4,1,1,0,0,1,null,null,1,1,1,1,1,1,0,0,0,0]}],"children":[{"id":24524,"path":"Assets/Content/Prefabs/UI.prefab","assetBundleId":-1,"components":[{"type":7,"id":24460,"data":[0.5,0.5,0,0,1,1,0,0,0,0,0,0,0,0,1,1,1,1]},{"type":13,"id":24608,"data":[1]},{"type":14,"id":24610,"enabled":1,"class":11,"data":[15,23944,0,0,1,4,1,1,0,0,1,null,null,1,0,0,0,1,1,0,0,0,0]}],"children":[],"data":["Icon",0,1,0,5]},{"id":24498,"path":"Assets/Content/Prefabs/UI.prefab","assetBundleId":-1,"components":[{"type":7,"id":24462,"data":[0.5,1,0.100000001490116,0,0.899999976158142,0,0,20,0,-10,0,0,0,0,1,1,1,1]},{"type":13,"id":24558,"data":[1]},{"type":14,"id":24560,"enabled":1,"class":12,"data":[0,null,null,0,0,0,0,"Salmon 0",0,16,24502,5,24504,[],null,null,[],0,0,0,255,0,0,0,1,0,3,[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1],null,null,null,null,0,null,null,-1183493901,0,255,255,255,255,18,18,400,0,18,72,1,2,256,65535,0,0,0,0,0,0,0,0.400000005960464,0,null,null,null,null,1,0,0,1,1,1,0,0,0,0,0,0,0,1,1,0,0,0,0,0,0,null,null,1,1,1,1,1,1,0,0,0,0]}],"children":[],"data":["Amount",0,1,0,5]}],"data":["Quest - Slot (1)",0,1,0,5]},{"id":24442,"path":"Assets/Content/Prefabs/UI.prefab","assetBundleId":-1,"components":[{"type":7,"id":23996,"data":[0.5,0.5,0,0,0,0,0,0,0,0,0,0,0,0,1,1,1,1]},{"type":8,"id":23934,"enabled":1,"class":9,"data":[1,1,1,1.5,1.5,1.5,1,1,1,1,0.699999988079071,10,24602,2,0,11,24604,12,24580]},{"type":13,"id":24520,"data":[1]},{"type":14,"id":24522,"enabled":1,"class":11,"data":[15,24598,0,1,1,4,1,1,0,0,1,null,null,1,1,1,1,1,1,0,0,0,0]}],"children":[{"id":24532,"path":"Assets/Content/Prefabs/UI.prefab","assetBundleId":-1,"components":[{"type":7,"id":24444,"data":[0.5,0.5,0,0,1,1,0,0,0,0,0,0,0,0,1,1,1,1]},{"type":13,"id":24620,"data":[1]},{"type":14,"id":24604,"enabled":1,"class":11,"data":[15,24646,0,0,1,4,1,1,0,0,1,null,null,1,1,1,1,1,1,0,0,0,0]}],"children":[],"data":["Icon",0,1,0,5]},{"id":24492,"path":"Assets/Content/Prefabs/UI.prefab","assetBundleId":-1,"components":[{"type":7,"id":24446,"data":[0.5,1,0.100000001490116,0,0.899999976158142,0,0,20,0,-10,0,0,0,0,1,1,1,1]},{"type":13,"id":24578,"data":[1]},{"type":14,"id":24580,"enabled":1,"class":12,"data":[0,null,null,0,0,0,0,"OliveOil 2",0,16,24502,5,24504,[],null,null,[],0,0,0,255,0,0,0,1,0,3,[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1],null,null,null,null,0,null,null,-1183493901,0,255,255,255,255,18,18,400,0,18,72,1,2,256,65535,0,0,0,0,0,0,0,0.400000005960464,0,null,null,null,null,1,0,0,1,1,1,0,0,0,0,0,0,0,1,1,0,0,0,0,0,0,null,null,1,1,1,1,1,1,0,0,0,0]}],"children":[],"data":["Amount",0,1,0,5]}],"data":["Quest - Slot (2)",0,1,0,5]},{"id":24450,"path":"Assets/Content/Prefabs/UI.prefab","assetBundleId":-1,"components":[{"type":7,"id":23998,"data":[0.5,0.5,0,0,0,0,0,0,0,0,0,0,0,0,1,1,1,1]},{"type":8,"id":23946,"enabled":1,"class":9,"data":[1,1,1,1.5,1.5,1.5,1,1,1,1,0.699999988079071,10,24616,1,0,11,24618,12,24576]},{"type":13,"id":24528,"data":[1]},{"type":14,"id":24530,"enabled":1,"class":11,"data":[15,24598,0,1,1,4,1,1,0,0,1,null,null,1,1,1,1,1,1,0,0,0,0]}],"children":[{"id":24542,"path":"Assets/Content/Prefabs/UI.prefab","assetBundleId":-1,"components":[{"type":7,"id":24452,"data":[0.5,0.5,0,0,1,1,0,0,0,0,0,0,0,0,1,1,1,1]},{"type":13,"id":24624,"data":[1]},{"type":14,"id":24618,"enabled":1,"class":11,"data":[15,24648,0,0,1,4,1,1,0,0,1,null,null,1,1,1,1,1,1,0,0,0,0]}],"children":[],"data":["Icon",0,1,0,5]},{"id":24490,"path":"Assets/Content/Prefabs/UI.prefab","assetBundleId":-1,"components":[{"type":7,"id":24454,"data":[0.5,1,0.100000001490116,0,0.899999976158142,0,0,20,0,-10,0,0,0,0,1,1,1,1]},{"type":13,"id":24574,"data":[1]},{"type":14,"id":24576,"enabled":1,"class":12,"data":[0,null,null,0,0,0,0,"Lemon 1",0,16,24502,5,24504,[],null,null,[],0,0,0,255,0,0,0,1,0,3,[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1],null,null,null,null,0,null,null,-1183493901,0,255,255,255,255,18,18,400,0,18,72,1,2,256,65535,0,0,0,0,0,0,0,0.400000005960464,0,null,null,null,null,1,0,0,1,1,1,0,0,0,0,0,0,0,1,1,0,0,0,0,0,0,null,null,1,1,1,1,1,1,0,0,0,0]}],"children":[],"data":["Amount",0,1,0,5]}],"data":["Quest - Slot (3)",0,1,0,5]},{"id":24466,"path":"Assets/Content/Prefabs/UI.prefab","assetBundleId":-1,"components":[{"type":7,"id":24002,"data":[0.5,0.5,0,0,0,0,0,0,0,0,0,0,0,0,1,1,1,1]},{"type":8,"id":23922,"enabled":1,"class":9,"data":[1,1,1,1.5,1.5,1.5,1,1,1,1,0.699999988079071,10,24622,1,0,11,24614,12,24564]},{"type":13,"id":24538,"data":[1]},{"type":14,"id":24540,"enabled":1,"class":11,"data":[15,24598,0,1,1,4,1,1,0,0,1,null,null,1,1,1,1,1,1,0,0,0,0]}],"children":[{"id":24526,"path":"Assets/Content/Prefabs/UI.prefab","assetBundleId":-1,"components":[{"type":7,"id":24468,"data":[0.5,0.5,0,0,1,1,0,0,0,0,0,0,0,0,1,1,1,1]},{"type":13,"id":24612,"data":[1]},{"type":14,"id":24614,"enabled":1,"class":11,"data":[15,24644,0,0,1,4,1,1,0,0,1,null,null,1,1,1,1,1,1,0,0,0,0]}],"children":[],"data":["Icon",0,1,0,5]},{"id":24500,"path":"Assets/Content/Prefabs/UI.prefab","assetBundleId":-1,"components":[{"type":7,"id":24470,"data":[0.5,1,0.100000001490116,0,0.899999976158142,0,0,20,0,-10,0,0,0,0,1,1,1,1]},{"type":13,"id":24562,"data":[1]},{"type":14,"id":24564,"enabled":1,"class":12,"data":[0,null,null,0,0,0,0,"Dill 1",0,16,24502,5,24504,[],null,null,[],0,0,0,255,0,0,0,1,0,3,[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1],null,null,null,null,0,null,null,-1183493901,0,255,255,255,255,18,18,400,0,18,72,1,2,256,65535,0,0,0,0,0,0,0,0.400000005960464,0,null,null,null,null,1,0,0,1,1,1,0,0,0,0,0,0,0,1,1,0,0,0,0,0,0,null,null,1,1,1,1,1,1,0,0,0,0]}],"children":[],"data":["Amount",0,1,0,5]}],"data":["Quest - Slot (4)",0,1,0,5]},{"id":24474,"path":"Assets/Content/Prefabs/UI.prefab","assetBundleId":-1,"components":[{"type":7,"id":24004,"data":[0.5,0.5,0,0,0,0,0,0,0,0,0,0,0,0,1,1,1,1]},{"type":8,"id":23918,"enabled":1,"class":9,"data":[1,1,1,1.5,1.5,1.5,1,1,1,1,0.699999988079071,10,24626,3,0,11,24594,12,24568]},{"type":13,"id":24544,"data":[1]},{"type":14,"id":24546,"enabled":1,"class":11,"data":[15,24598,0,1,1,4,1,1,0,0,1,null,null,1,1,1,1,1,1,0,0,0,0]}],"children":[{"id":24516,"path":"Assets/Content/Prefabs/UI.prefab","assetBundleId":-1,"components":[{"type":7,"id":24476,"data":[0.5,0.5,0,0,1,1,0,0,0,0,0,0,0,0,1,1,1,1]},{"type":13,"id":24592,"data":[1]},{"type":14,"id":24594,"enabled":1,"class":11,"data":[15,24642,0,0,1,4,1,1,0,0,1,null,null,1,1,1,1,1,1,0,0,0,0]}],"children":[],"data":["Icon",0,1,0,5]},{"id":24494,"path":"Assets/Content/Prefabs/UI.prefab","assetBundleId":-1,"components":[{"type":7,"id":24478,"data":[0.5,1,0.100000001490116,0,0.899999976158142,0,0,20,0,-10,0,0,0,0,1,1,1,1]},{"type":13,"id":24566,"data":[1]},{"type":14,"id":24568,"enabled":1,"class":12,"data":[0,null,null,0,0,0,0,"Garlic 3",0,16,24502,5,24504,[],null,null,[],0,0,0,255,0,0,0,1,0,3,[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1],null,null,null,null,0,null,null,-1183493901,0,255,255,255,255,18,18,400,0,18,72,1,2,256,65535,0,0,0,0,0,0,0,0.400000005960464,0,null,null,null,null,1,0,0,1,1,1,0,0,0,0,0,0,0,1,1,0,0,0,0,0,0,null,null,1,1,1,1,1,1,0,0,0,0]}],"children":[],"data":["Amount",0,1,0,5]}],"data":["Quest - Slot (5)",0,1,0,5]},{"id":24482,"path":"Assets/Content/Prefabs/UI.prefab","assetBundleId":-1,"components":[{"type":7,"id":24006,"data":[0.5,0.5,0,0,0,0,0,0,0,0,0,0,0,0,1,1,1,1]},{"type":8,"id":23912,"enabled":1,"class":9,"data":[1,1,1,1.5,1.5,1.5,1,1,1,1,0.699999988079071,10,24628,1,0,11,24590,12,24572]},{"type":13,"id":24548,"data":[1]},{"type":14,"id":24550,"enabled":1,"class":11,"data":[15,24598,0,1,1,4,1,1,0,0,1,null,null,1,1,1,1,1,1,0,0,0,0]}],"children":[{"id":24514,"path":"Assets/Content/Prefabs/UI.prefab","assetBundleId":-1,"components":[{"type":7,"id":24484,"data":[0.5,0.5,0,0,1,1,0,0,0,0,0,0,0,0,1,1,1,1]},{"type":13,"id":24588,"data":[1]},{"type":14,"id":24590,"enabled":1,"class":11,"data":[15,23908,0,0,1,4,1,1,0,0,1,null,null,1,1,1,1,1,1,0,0,0,0]}],"children":[],"data":["Icon",0,1,0,5]},{"id":24496,"path":"Assets/Content/Prefabs/UI.prefab","assetBundleId":-1,"components":[{"type":7,"id":24486,"data":[0.5,1,0.100000001490116,0,0.899999976158142,0,0,20,0,-10,0,0,0,0,1,1,1,1]},{"type":13,"id":24570,"data":[1]},{"type":14,"id":24572,"enabled":1,"class":12,"data":[0,null,null,0,0,0,0,"Salt 1",0,16,24502,5,24504,[],null,null,[],0,0,0,255,0,0,0,1,0,3,[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1],null,null,null,null,0,null,null,-1183493901,0,255,255,255,255,18,18,400,0,18,72,1,2,256,65535,0,0,0,0,0,0,0,0.400000005960464,0,null,null,null,null,1,0,0,1,1,1,0,0,0,0,0,0,0,1,1,0,0,0,0,0,0,null,null,1,1,1,1,1,1,0,0,0,0]}],"children":[],"data":["Amount",0,1,0,5]}],"data":["Quest - Slot (6)",0,1,0,5]}],"data":["Quest - Inventory",0,1,0,5]}],"data":["TOP",0,1,0,5]},{"id":24378,"path":"Assets/Content/Prefabs/UI.prefab","assetBundleId":-1,"components":[{"type":7,"id":24352,"data":[0.5,0,0,0,1,0,0,100,0,0,0,0,0,0,1,1,1,1]}],"children":[{"id":24398,"path":"Assets/Content/Prefabs/UI.prefab","assetBundleId":-1,"components":[{"type":7,"id":24380,"data":[0.5,0,0.5,0,0.5,0,431.050048828125,100,0,374,0,0,0,0,1,0.999599874019623,0.999599874019623,0.999599874019623]},{"type":13,"id":24414,"data":[1]},{"type":14,"id":24416,"enabled":1,"class":12,"data":[0,null,null,0,0,0,0,"Match 3 Salmon!",0,16,24502,5,24504,[],null,null,[],255,0,0,255,1,0,0,1,0,3,[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1],null,null,null,null,0,null,null,-1183493901,0,255,255,255,255,60,60,400,0,18,72,17,2,1024,65535,-5,0,0,0,0,0,0,0.400000005960464,0,null,null,null,null,1,0,0,1,1,1,0,0,0,0,0,0,0,1,1,0,0,0,0,0,0,null,null,1,1,1,1,1,1,0,0,0,0]}],"children":[],"data":["Quest - Txt",0,1,0,5]}],"data":["BOTTOM",0,1,0,5]}],"data":["offset",0,1,0,5]}],"data":["[Canvas] Quest",0,1,0,5]},{"id":23986,"path":"Assets/Content/Prefabs/UI.prefab","assetBundleId":-1,"components":[{"type":7,"id":24338,"data":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0]},{"type":42,"id":23938,"data":[1,100,100,1,0,3,"Default",22222,1,null,null,0,0,0,0]},{"type":14,"id":24366,"enabled":1,"class":46,"data":[1,100,1,800,600,0,0,3,96,96,1,0]},{"type":14,"id":24368,"enabled":1,"class":47,"data":[1,0,-1]}],"children":[{"id":24358,"path":"Assets/Content/Prefabs/UI.prefab","assetBundleId":-1,"components":[{"type":7,"id":23978,"data":[0.5,0.5,0,0,1,1,0,0,1934,-25,0,0,0,0,1,1,1,1]},{"type":8,"id":24382,"enabled":1,"class":48,"data":[]}],"children":[{"id":24384,"path":"Assets/Content/Prefabs/UI.prefab","assetBundleId":-1,"components":[{"type":7,"id":24360,"data":[0.5,0.5,0,0,1,1,0,0,0,0,0,0,0,0,1,1,1,1]},{"type":13,"id":24402,"data":[1]},{"type":14,"id":24404,"enabled":1,"class":11,"data":[15,24424,0,0,1,4,1,1,0,0,1,null,null,1,1,1,1,1,1,0,0,0,0]}],"children":[{"id":24410,"path":"Assets/Content/Prefabs/UI.prefab","assetBundleId":-1,"components":[{"type":7,"id":24386,"data":[0.5,0.5,0,0,1,1,0,0,0,0,0,0,0,0,1,1,1,1]},{"type":13,"id":24434,"data":[1]},{"type":14,"id":24436,"enabled":1,"class":11,"data":[15,738,1,0,1,4,1,1,0,0,1,null,null,1,1,1,1,0,1,0,0,0,0]},{"type":14,"id":23994,"enabled":1,"class":51,"data":[[[[[null,null,"Game, Assembly-CSharp","OpenURL",1,[null,null,"UnityEngine.Object, UnityEngine",0,0,"",0],2]]]],[3,0,null,null,null,null,null,null,null,null],1,[1,1,1,1,0.960784316062927,0.960784316062927,0.960784316062927,1,0.7843137383461,0.7843137383461,0.7843137383461,1,0.960784316062927,0.960784316062927,0.960784316062927,1,0.7843137383461,0.7843137383461,0.7843137383461,0.501960813999176,1,0.100000001490116],[null,null,null,null,null,null,null,null],["Normal","Highlighted","Pressed","Selected","Disabled"],1,11,24436]}],"children":[],"data":["Button - Open Game Page",0,1,0,5]}],"data":["End Image",0,1,0,5]}],"data":["offset",0,1,0,5]}],"data":["[Canvas] EndCard",0,1,0,5]}],"data":["UI",0,1,0,0]},{"id":24200,"path":"Assets/Content/Prefabs/Particles/Poof.prefab","assetBundleId":-1,"components":[{"type":1,"id":24190,"data":[0,0,0,1,1,1,0,0,0,1]},{"type":2,"id":24216,"data":[[0.600000023841858,0,0,[0,null,null,1,0,0],[3,null,null,1,0.200000002980232,0.600000023841858],[3,null,null,1,8,11],0,[3,null,null,1,0.400000005960464,0.800000011920929],[3,null,null,1,1,1],[3,null,null,1,1,1],0,[3,null,null,1,0,1],[3,null,null,1,0,1],[3,null,null,1,0,6.28318500518799],[0,null,null,0.0130423903465271,9.10844001811131e-44,0.0130420550704002,9.10844001811131e-44,1,1,1,1],[0,null,null,1,0,0],0,null,null,1,0,0,1,1000,0,0],[0,[1,null,[0,[[1,1,1,1,0],[1,1,1,1,1]],[[1,0],[1,1]]],0.0130432769656181,9.10844001811131e-44,0.0130430981516838,9.10844001811131e-44,0.0130430459976196,9.10844001811131e-44,8.7023176875504e-22,4.59093402882097e-41],0,1],[0,[1,null,[0,[[1,0.807843148708344,0,1,0],[0.243728399276733,0.271754592657089,0.338235318660736,1,0.593194484710693]],[[1,0],[1,0.900007605552673],[0,1]]],0.0130432918667793,9.10844001811131e-44,0.013043113052845,9.10844001811131e-44,0.0130430608987808,9.10844001811131e-44,8.7023176875504e-22,4.59093402882097e-41]],[1,[0,null,null,1,0,0],[0,null,null,1,0,0],[[[0,null,null,1,0,6],1,0,6,0.00999999977648258,0]]],[0,[0,null,null,1,0,1],[0,null,null,1,0,1],[0,null,null,1,0,0.785398185253143],0,0,1],[1,[2,[0,0,0,0,0,0,0,1,0,0,0,0,0,0],[0,1,0,0,0,0,0,1,1,0,0,0,0,0],1,0,0],[2,[0,0,0,0,0,0,0,1,0,0,0,0,0,0],[0,1,0,0,0,0,0,1,1,0,0,0,0,0],1,0,0],[2,[0,-1,0,0,0,0,0,1,-0.4945055,0,0,0,0,0],[0,1,0,0,0,0,0,1,0.4065934,0,0,0,0,0],2.09439516067505,0,0],0],[1,4,0,0,0,0,0.550000011920929,0,0,[0,null,null,1,0,1],0,14.3983993530273,5,0,0,0,0,null,null,null,null,null,null,0,0,1,0,360,3,0,[0,null,null,1,0,1],0.200000002980232,0,-0.670000016689301,0,-90,0,0,1,1,1],[0,[1,null,[0,1,0,0,0,0,0,1,1,0,0,0,0,0],1,0,0],[1,null,[0,0,0,1,0,0,0,1,1,1,0,0,0,0],1,0,0],[1,null,[0,0,0,1,0,0,0,1,1,1,0,0,0,0],1,0,0],0,0,1],[1,[1,null,[0,0.47826,1.863361,1.863361,0,0,0,0.2713935,0.9681337,-0.449419,-0.449419,0,0,0,1,0,-2,-2,0,0,0],1.39999997615814,0,0],[1,null,[0,0,0,1,0,0,0,1,1,1,0,0,0,0],1,0,0],[1,null,[0,0,0,1,0,0,0,1,1,1,0,0,0,0],1,0,0],0],[0,0,0,2,2,1,[3,null,null,1,0,0.999899983406067],[0,null,null,1,0,0],1,0,0,0,1,[null,null]],[0,[0,null,null,1,0,0],[0,null,null,1,0,0],[0,null,null,1,0,0],[0,null,null,1,0,0],[0,null,null,1,0,1],0,[0,null,null,1,0,0],[0,null,null,1,0,0],[0,null,null,1,0,0],[0,null,null,1,0,0],[0,null,null,1,0,0],[0,null,null,1,0,0]],[0,0,[0,null,null,1,0,1],[0,null,null,1,0,1],[0,null,null,1,0,1],0.5,1,1,0.5,2,2,[0,null,null,1,0,0],0,0,[1,null,[0,0,0,1,0,0,0,1,1,1,0,0,0,0],1,0,0],[1,null,[0,0,0,1,0,0,0,1,1,1,0,0,0,0],1,0,0],[1,null,[0,0,0,1,0,0,0,1,1,1,0,0,0,0],1,0,0],[0,null,null,1,0,1],[0,null,null,1,0,0],[0,null,null,1,0,0]],[0,0,[0,null,null,1,0,1]],[0,[0,null,null,1,0,0],[0,null,null,1,0,0],[0,null,null,1,0,0],0,0],[1,[0,null,null,1,0,0.5],[0,null,null,1,0,1],[0,null,null,1,0,1],[0,null,null,1,0,1],0.419999986886978,0,0,[0,null,null,1,0,0],1,1],1,0]},{"type":3,"id":24210,"data":[1,5,24218,[5,24218],1,1,0,0,-1,-1,1,1,0,0,1,1,4,24214,1,5,0,4,0,2,0,0,1,0,0,0.5,0,0,0,null,null]}],"children":[],"data":["Poof",0,1,0,1]},{"id":24294,"path":"Assets/Content/Prefabs/TileSlot.prefab","assetBundleId":-1,"components":[{"type":1,"id":24248,"data":[1,0,0,1,1,1,0,0,0,1]},{"type":8,"id":24256,"enabled":1,"class":22,"data":[0,null,null]}],"children":[{"id":24312,"path":"Assets/Content/Prefabs/TileSlot.prefab","assetBundleId":-1,"components":[{"type":1,"id":24296,"data":[0,0,0,1,1,1,0,0,0,1]},{"type":18,"id":24328,"data":[1,5,458,[5,458],0,0,0,0,-1,-1,1,1,0,0,1,1,1,1,1,1,15,24330,0,0,0,1,1,0,0.5,0,0]}],"children":[],"data":["TempBackground",0,1,0,0]}],"data":["TileSlot",0,1,0,0]}],"scenes":[{"id":0,"name":"RheanovBackup","path":"Assets/Scenes/RheanovBackup.unity","assetBundleId":-1,"data":["RheanovBackup",0,1],"objects":[{"id":113590,"path":"__________________________________________  ","assetBundleId":0,"components":[{"type":1,"id":113592,"data":[0,0,-10,1,1,1,0,0,0,1]}],"children":[],"data":["__________________________________________  ",0,1,0,0]},{"id":113242,"path":"Scene","assetBundleId":0,"components":[{"type":1,"id":113244,"data":[0,0,0,1,1,1,0,0,0,1]}],"children":[{"id":113294,"path":"Scene","assetBundleId":0,"components":[{"type":1,"id":113300,"data":[0,0,-20,1,1,1,0,0,0,1]},{"type":23,"id":113298,"data":[1,0.473684221506119,1,8,0.192156866192818,0.301960796117783,0.474509805440903,0,0.300000011920929,5000,60,-1,2,-1,[0,0,1,1],null,null,0,50,36,24,0,0,2]},{"type":24,"id":113296,"data":[]}],"children":[],"data":["Camera",4,1,0,0]},{"id":113180,"path":"Scene","assetBundleId":0,"components":[{"type":1,"id":113186,"data":[0,0,0,1,1,1,0,0,0,1]},{"type":14,"id":113184,"enabled":1,"class":25,"data":[null,null,1,10]},{"type":14,"id":113182,"enabled":1,"class":26,"data":["Horizontal","Vertical","Submit","Cancel",10,0.5,0,1]}],"children":[],"data":["EventSystem",0,1,0,0]},{"id":113480,"path":"Scene","assetBundleId":0,"components":[{"type":1,"id":113484,"data":[0,0,0,1,1,1,0,0,0,1]},{"type":18,"id":113482,"data":[1,5,458,[5,458],0,0,0,-100,-1,0,1,1,0,0,1,1,1,1,1,1,15,24682,0,0,0,1,1,0,0.5,0,0]}],"children":[],"data":["Background",0,0,0,0]}],"data":["Scene",0,1,0,0]},{"id":113314,"path":"__________________________________________  ","assetBundleId":0,"components":[{"type":1,"id":113316,"data":[0,0,-10,1,1,1,0,0,0,1]}],"children":[],"data":["__________________________________________  ",0,1,0,0]},{"id":113502,"path":"GAME","assetBundleId":0,"components":[{"type":1,"id":113506,"data":[0,0,0,1,1,1,0,0,0,1]},{"type":8,"id":113504,"enabled":1,"class":27,"data":[60,28,113548,29,113406,null,null,30,113570,31,113518,32,113614,33,113468,34,113280,35,113450,36,113456,37,113688,0,38,113306,54,37,[]]}],"children":[{"id":113542,"path":"GAME","assetBundleId":0,"components":[{"type":1,"id":113544,"data":[0,0,-10,1,1,1,0,0,0,1]}],"children":[],"data":["__________________________________________",0,0,0,0]},{"id":113470,"path":"GAME","assetBundleId":0,"components":[{"type":1,"id":113474,"data":[0,0,0,1,1,1,0,0,0,1]},{"type":8,"id":113472,"enabled":1,"class":39,"data":[null,null,null,null,[],1,5000]}],"children":[],"data":["Tile Spawner",0,1,0,0]},{"id":113302,"path":"GAME","assetBundleId":0,"components":[{"type":1,"id":113304,"data":[0,0,0,1,1,1,0,0,0,1]},{"type":8,"id":113306,"enabled":1,"class":38,"data":[null,null,200,[]]}],"children":[],"data":["Tile Randomizer",0,1,0,0]},{"id":113514,"path":"GAME","assetBundleId":0,"components":[{"type":1,"id":113516,"data":[0,0,0,1,1,1,0,0,0,1]},{"type":8,"id":113518,"enabled":1,"class":31,"data":[null,null,0.100000001490116,0.00999999977648258,0.100000001490116]}],"children":[],"data":["Tile Spawn Animation",0,1,0,0]},{"id":113404,"path":"GAME","assetBundleId":0,"components":[{"type":1,"id":113408,"data":[0,0,0,1,1,1,0,0,0,1]},{"type":8,"id":113406,"enabled":1,"class":29,"data":[null,null]}],"children":[],"data":["Tile Actions",0,1,0,0]},{"id":113610,"path":"GAME","assetBundleId":0,"components":[{"type":1,"id":113612,"data":[0,0,0,1,1,1,0,0,0,1]},{"type":8,"id":113614,"enabled":1,"class":32,"data":[null,null,40,24126,[],[]]}],"children":[],"data":["Tile Matcher",0,1,0,0]},{"id":113318,"path":"GAME","assetBundleId":0,"components":[{"type":1,"id":113320,"data":[0,0,-10,1,1,1,0,0,0,1]}],"children":[],"data":["__________________________________________  ",0,0,0,0]},{"id":113464,"path":"GAME","assetBundleId":0,"components":[{"type":1,"id":113466,"data":[0,0,0,1,1,1,0,0,0,1]},{"type":8,"id":113468,"enabled":1,"class":33,"data":[null,null]}],"children":[],"data":["Lose Condition",0,1,0,0]},{"id":113276,"path":"GAME","assetBundleId":0,"components":[{"type":1,"id":113278,"data":[0,0,0,1,1,1,0,0,0,1]},{"type":8,"id":113280,"enabled":1,"class":34,"data":[null,null]}],"children":[],"data":["Win Condition",0,1,0,0]},{"id":113684,"path":"GAME","assetBundleId":0,"components":[{"type":1,"id":113686,"data":[0,0,0,1,1,1,0,0,0,1]},{"type":8,"id":113688,"enabled":1,"class":37,"data":[null,null,[9,113342,9,113490,9,113588,9,113330,9,113286,9,113264]]}],"children":[],"data":["Quest Condition",0,1,0,0]},{"id":113696,"path":"GAME","assetBundleId":0,"components":[{"type":1,"id":113698,"data":[0,0,-10,1,1,1,0,0,0,1]}],"children":[],"data":["__________________________________________    ",0,0,0,0]},{"id":113446,"path":"GAME","assetBundleId":0,"components":[{"type":1,"id":113448,"data":[0,0,0,1,1,1,0,0,0,1]},{"type":8,"id":113450,"enabled":1,"class":35,"data":[null,null,0.200000002980232,[],0.699999988079071]}],"children":[],"data":["Input - Touch",0,1,0,0]},{"id":113458,"path":"GAME","assetBundleId":0,"components":[{"type":1,"id":113460,"data":[0,0,0,1,1,1,0,0,0,1]},{"type":8,"id":113462,"enabled":1,"class":41,"data":[null,null,1,0.0500000007450581]}],"children":[],"data":["Bag Sorter",0,1,0,0]},{"id":113452,"path":"GAME","assetBundleId":0,"components":[{"type":1,"id":113454,"data":[0,0,0,1,1,1,0,0,0,1]},{"type":8,"id":113456,"enabled":1,"class":36,"data":[42,113526,null,null]}],"children":[],"data":["End Card",0,1,0,0]},{"id":113166,"path":"GAME","assetBundleId":0,"components":[{"type":1,"id":113168,"data":[0,0,-10,1,1,1,0,0,0,1]}],"children":[],"data":["__________________________________________    ",0,0,0,0]},{"id":113170,"path":"GAME","assetBundleId":0,"components":[{"type":1,"id":113172,"data":[0,0,0,1,1,1,0,0,0,1]},{"type":8,"id":113176,"enabled":1,"class":43,"data":[null,null,44,24176,44,24178,44,24180,44,24182,45,113174]},{"type":45,"id":113174,"data":[null,null,null,null,1,0,0,1,1,1]}],"children":[],"data":["Sounds",0,1,0,0]},{"id":113438,"path":"GAME","assetBundleId":0,"components":[{"type":1,"id":113440,"data":[0,0,-10,1,1,1,0,0,0,1]}],"children":[],"data":["__________________________________________     ",0,0,0,0]}],"data":["GAME",0,1,0,0]},{"id":113508,"path":"__________________________________________  ","assetBundleId":0,"components":[{"type":1,"id":113510,"data":[0,0,-10,1,1,1,0,0,0,1]}],"children":[],"data":["__________________________________________  ",0,1,0,0]},{"id":113630,"path":"UI","assetBundleId":0,"components":[{"type":1,"id":113632,"data":[0,0,0,1,1,1,0,0,0,1]}],"children":[{"id":113204,"path":"UI","assetBundleId":0,"components":[{"type":7,"id":113206,"data":[0.5,0.5,0,0,0,0,1080,2279.99975585938,0,0,80,0,0,0,1,0.00701754447072744,0.00701754447072744,0.00701754447072744]},{"type":42,"id":113212,"data":[1,100,100,0,1,0,"Default",-100,1.33333337306976,23,113298,0,0,0,0]},{"type":14,"id":113210,"enabled":1,"class":46,"data":[1,100,1,1080,1920,0,0,3,96,96,1,0]},{"type":14,"id":113208,"enabled":1,"class":47,"data":[1,0,-1]}],"children":[{"id":113160,"path":"UI","assetBundleId":0,"components":[{"type":7,"id":113162,"data":[0.5,0.5,0,0,1,1,0,0,0,0,0,0,0,0,1,1,1,1]},{"type":8,"id":113164,"enabled":1,"class":48,"data":[]}],"children":[{"id":113230,"path":"UI","assetBundleId":0,"components":[{"type":7,"id":113232,"data":[0.5,0.5,0,0,1,1,0,0,0,0,0,0,0,0,1,0.999599874019623,0.999599874019623,0.999599874019623]},{"type":13,"id":113236,"data":[1]},{"type":14,"id":113234,"enabled":1,"class":11,"data":[15,24412,0,0,1,4,1,1,0,0,1,null,null,1,1,1,1,1,1,0,0,0,0]}],"children":[],"data":["Background",0,1,0,5]}],"data":["offset",0,1,0,5]}],"data":["[Canvas] Background",0,1,0,5]},{"id":113348,"path":"UI","assetBundleId":0,"components":[{"type":7,"id":113350,"data":[0.5,0.5,0,0,0,0,1080,2279.99975585938,0,0,80,0,0,0,1,0.00701754447072744,0.00701754447072744,0.00701754447072744]},{"type":42,"id":113356,"data":[1,100,100,0,1,1,"Default",22222,1.33333337306976,23,113298,0,0,0,0]},{"type":14,"id":113354,"enabled":1,"class":46,"data":[1,100,1,1080,1920,0,0,3,96,96,1,0]},{"type":14,"id":113352,"enabled":1,"class":47,"data":[1,0,-1]}],"children":[{"id":113214,"path":"UI","assetBundleId":0,"components":[{"type":7,"id":113216,"data":[0.5,0.5,0,0,1,1,0,0,0,0,0,0,0,0,1,1,1,1]},{"type":8,"id":113218,"enabled":1,"class":48,"data":[]}],"children":[{"id":113220,"path":"UI","assetBundleId":0,"components":[{"type":7,"id":113222,"data":[0.5,1,0,1,1,1,0,500,0,0,0,0,0,0,1,1,1,1]},{"type":14,"id":113228,"enabled":0,"class":11,"data":[null,null,0,0,1,4,1,1,0,0,1,null,null,1,0.599999904632568,0.599999904632568,0.599999904632568,1,1,0,0,0,0]},{"type":14,"id":113226,"enabled":1,"class":49,"data":[0,1,1,0,1,0,0,0,0,0,0,0,0]},{"type":13,"id":113224,"data":[1]}],"children":[{"id":113756,"path":"UI","assetBundleId":0,"components":[{"type":7,"id":113758,"data":[0.5,0.5,0,1,0,1,450,500,225,-250,0,0,0,0,1,1,1,1]},{"type":14,"id":113762,"enabled":0,"class":11,"data":[null,null,0,0,1,4,1,1,0,0,1,null,null,1,1,0.888257026672363,0,1,1,0,0,0,0]},{"type":13,"id":113760,"data":[1]}],"children":[{"id":113764,"path":"UI","assetBundleId":0,"components":[{"type":7,"id":113766,"data":[0.5,0.5,0,1,0,1,450,450,225,-250,0,0,0,0,1,1,1,1]},{"type":13,"id":113770,"data":[1]},{"type":14,"id":113768,"enabled":1,"class":11,"data":[15,23944,0,1,1,4,1,1,0,0,1,null,null,1,1,1,1,1,1,0,0,0,0]}],"children":[{"id":113558,"path":"UI","assetBundleId":0,"components":[{"type":7,"id":113560,"data":[0.5,0,0.5,0,0.5,0,431.050048828125,0,0,30,0,0,0,0,1,1,1,1]},{"type":13,"id":113564,"data":[1]},{"type":14,"id":113562,"enabled":1,"class":12,"data":[0,null,null,0,0,0,0,"Salmon: 0",0,16,24502,5,24504,[],null,null,[],255,0,0,255,1,0,0,1,0,3,[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1],null,null,null,null,0,null,null,-1183493901,0,255,255,255,255,60,60,400,0,18,72,1,2,1024,65535,-5,0,0,0,0,0,0,0.400000005960464,0,null,null,null,null,1,0,0,1,1,1,0,0,0,0,0,0,0,1,1,0,0,0,0,0,0,null,null,1,1,1,1,1,1,0,0,0,0]}],"children":[],"data":["Quest - Txt",0,1,0,5]}],"data":["Quest - Icon",0,1,0,5]}],"data":["Quest - Goal",0,1,0,5]},{"id":113530,"path":"UI","assetBundleId":0,"components":[{"type":7,"id":113532,"data":[0.5,0.5,0,1,0,1,560,500,765,-250,0,0,0,0,1,1,1,1]},{"type":14,"id":113538,"enabled":1,"class":50,"data":[0,0,150,150,20,50,1,3,0,0,0,0,4]},{"type":14,"id":113536,"enabled":0,"class":11,"data":[null,null,0,0,1,4,1,1,0,0,1,null,null,1,0.359031826257706,0.879245281219482,0.031519990414381,1,1,0,0,0,0]},{"type":13,"id":113534,"data":[1]}],"children":[{"id":-2629996,"path":"UI","assetBundleId":0,"components":[{"type":7,"id":113340,"data":[0.5,0.5,0,1,0,1,150,150,110,-150,0,0,0,0,1,1,1,1]},{"type":8,"id":113342,"enabled":1,"class":9,"data":[1,1,1,1.5,1.5,1.5,1,1,1,1,0.699999988079071,10,23882,0,1,11,-2630008,12,-2630016]},{"type":13,"id":-2629998,"data":[1]},{"type":14,"id":-2630000,"enabled":1,"class":11,"data":[15,24598,0,1,1,4,1,1,0,0,1,null,null,1,1,1,1,1,1,0,0,0,0]}],"children":[{"id":-2630002,"path":"UI","assetBundleId":0,"components":[{"type":7,"id":-2630004,"data":[0.5,0.5,0,0,1,1,0,0,0,0,0,0,0,0,1,1,1,1]},{"type":13,"id":-2630006,"data":[1]},{"type":14,"id":-2630008,"enabled":1,"class":11,"data":[15,23944,0,0,1,4,1,1,0,0,1,null,null,1,0,0,0,1,1,0,0,0,0]}],"children":[],"data":["Icon",0,1,0,5]},{"id":-2630010,"path":"UI","assetBundleId":0,"components":[{"type":7,"id":-2630012,"data":[0.5,1,0.100000001490116,0,0.899999976158142,0,0,20,0,-10,0,0,0,0,1,1,1,1]},{"type":13,"id":-2630014,"data":[1]},{"type":14,"id":-2630016,"enabled":1,"class":12,"data":[0,null,null,0,0,0,0,"Salmon 0",0,16,24502,5,24504,[],null,null,[],0,0,0,255,0,0,0,1,0,3,[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1],null,null,null,null,0,null,null,-1183493901,0,255,255,255,255,18,18,400,0,18,72,1,2,256,65535,0,0,0,0,0,0,0,0.400000005960464,0,null,null,null,null,1,0,0,1,1,1,0,0,0,0,0,0,0,1,1,0,0,0,0,0,0,null,null,1,1,1,1,1,1,0,0,0,0]}],"children":[],"data":["Amount",0,1,0,5]}],"data":["Quest - Slot (1)",0,1,0,5]},{"id":-2630252,"path":"UI","assetBundleId":0,"components":[{"type":7,"id":113488,"data":[0.5,0.5,0,1,0,1,150,150,280,-150,0,0,0,0,1,1,1,1]},{"type":8,"id":113490,"enabled":1,"class":9,"data":[1,1,1,1.5,1.5,1.5,1,1,1,1,0.699999988079071,10,24602,2,0,11,-2630264,12,-2630272]},{"type":13,"id":-2630254,"data":[1]},{"type":14,"id":-2630256,"enabled":1,"class":11,"data":[15,24598,0,1,1,4,1,1,0,0,1,null,null,1,1,1,1,1,1,0,0,0,0]}],"children":[{"id":-2630258,"path":"UI","assetBundleId":0,"components":[{"type":7,"id":-2630260,"data":[0.5,0.5,0,0,1,1,0,0,0,0,0,0,0,0,1,1,1,1]},{"type":13,"id":-2630262,"data":[1]},{"type":14,"id":-2630264,"enabled":1,"class":11,"data":[15,24646,0,0,1,4,1,1,0,0,1,null,null,1,1,1,1,1,1,0,0,0,0]}],"children":[],"data":["Icon",0,1,0,5]},{"id":-2630266,"path":"UI","assetBundleId":0,"components":[{"type":7,"id":-2630268,"data":[0.5,1,0.100000001490116,0,0.899999976158142,0,0,20,0,-10,0,0,0,0,1,1,1,1]},{"type":13,"id":-2630270,"data":[1]},{"type":14,"id":-2630272,"enabled":1,"class":12,"data":[0,null,null,0,0,0,0,"OliveOil 2",0,16,24502,5,24504,[],null,null,[],0,0,0,255,0,0,0,1,0,3,[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1],null,null,null,null,0,null,null,-1183493901,0,255,255,255,255,18,18,400,0,18,72,1,2,256,65535,0,0,0,0,0,0,0,0.400000005960464,0,null,null,null,null,1,0,0,1,1,1,0,0,0,0,0,0,0,1,1,0,0,0,0,0,0,null,null,1,1,1,1,1,1,0,0,0,0]}],"children":[],"data":["Amount",0,1,0,5]}],"data":["Quest - Slot (2)",0,1,0,5]},{"id":-2630394,"path":"UI","assetBundleId":0,"components":[{"type":7,"id":113586,"data":[0.5,0.5,0,1,0,1,150,150,450,-150,0,0,0,0,1,1,1,1]},{"type":8,"id":113588,"enabled":1,"class":9,"data":[1,1,1,1.5,1.5,1.5,1,1,1,1,0.699999988079071,10,24616,1,0,11,-2630406,12,-2630414]},{"type":13,"id":-2630396,"data":[1]},{"type":14,"id":-2630398,"enabled":1,"class":11,"data":[15,24598,0,1,1,4,1,1,0,0,1,null,null,1,1,1,1,1,1,0,0,0,0]}],"children":[{"id":-2630400,"path":"UI","assetBundleId":0,"components":[{"type":7,"id":-2630402,"data":[0.5,0.5,0,0,1,1,0,0,0,0,0,0,0,0,1,1,1,1]},{"type":13,"id":-2630404,"data":[1]},{"type":14,"id":-2630406,"enabled":1,"class":11,"data":[15,24648,0,0,1,4,1,1,0,0,1,null,null,1,1,1,1,1,1,0,0,0,0]}],"children":[],"data":["Icon",0,1,0,5]},{"id":-2630408,"path":"UI","assetBundleId":0,"components":[{"type":7,"id":-2630410,"data":[0.5,1,0.100000001490116,0,0.899999976158142,0,0,20,0,-10,0,0,0,0,1,1,1,1]},{"type":13,"id":-2630412,"data":[1]},{"type":14,"id":-2630414,"enabled":1,"class":12,"data":[0,null,null,0,0,0,0,"Lemon 1",0,16,24502,5,24504,[],null,null,[],0,0,0,255,0,0,0,1,0,3,[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1],null,null,null,null,0,null,null,-1183493901,0,255,255,255,255,18,18,400,0,18,72,1,2,256,65535,0,0,0,0,0,0,0,0.400000005960464,0,null,null,null,null,1,0,0,1,1,1,0,0,0,0,0,0,0,1,1,0,0,0,0,0,0,null,null,1,1,1,1,1,1,0,0,0,0]}],"children":[],"data":["Amount",0,1,0,5]}],"data":["Quest - Slot (3)",0,1,0,5]},{"id":-2629974,"path":"UI","assetBundleId":0,"components":[{"type":7,"id":113328,"data":[0.5,0.5,0,1,0,1,150,150,110,-350,0,0,0,0,1,1,1,1]},{"type":8,"id":113330,"enabled":1,"class":9,"data":[1,1,1,1.5,1.5,1.5,1,1,1,1,0.699999988079071,10,24622,1,0,11,-2629986,12,-2629994]},{"type":13,"id":-2629976,"data":[1]},{"type":14,"id":-2629978,"enabled":1,"class":11,"data":[15,24598,0,1,1,4,1,1,0,0,1,null,null,1,1,1,1,1,1,0,0,0,0]}],"children":[{"id":-2629980,"path":"UI","assetBundleId":0,"components":[{"type":7,"id":-2629982,"data":[0.5,0.5,0,0,1,1,0,0,0,0,0,0,0,0,1,1,1,1]},{"type":13,"id":-2629984,"data":[1]},{"type":14,"id":-2629986,"enabled":1,"class":11,"data":[15,24644,0,0,1,4,1,1,0,0,1,null,null,1,1,1,1,1,1,0,0,0,0]}],"children":[],"data":["Icon",0,1,0,5]},{"id":-2629988,"path":"UI","assetBundleId":0,"components":[{"type":7,"id":-2629990,"data":[0.5,1,0.100000001490116,0,0.899999976158142,0,0,20,0,-10,0,0,0,0,1,1,1,1]},{"type":13,"id":-2629992,"data":[1]},{"type":14,"id":-2629994,"enabled":1,"class":12,"data":[0,null,null,0,0,0,0,"Dill 1",0,16,24502,5,24504,[],null,null,[],0,0,0,255,0,0,0,1,0,3,[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1],null,null,null,null,0,null,null,-1183493901,0,255,255,255,255,18,18,400,0,18,72,1,2,256,65535,0,0,0,0,0,0,0,0.400000005960464,0,null,null,null,null,1,0,0,1,1,1,0,0,0,0,0,0,0,1,1,0,0,0,0,0,0,null,null,1,1,1,1,1,1,0,0,0,0]}],"children":[],"data":["Amount",0,1,0,5]}],"data":["Quest - Slot (4)",0,1,0,5]},{"id":-2629892,"path":"UI","assetBundleId":0,"components":[{"type":7,"id":113284,"data":[0.5,0.5,0,1,0,1,150,150,280,-350,0,0,0,0,1,1,1,1]},{"type":8,"id":113286,"enabled":1,"class":9,"data":[1,1,1,1.5,1.5,1.5,1,1,1,1,0.699999988079071,10,24626,3,0,11,-2629904,12,-2629912]},{"type":13,"id":-2629894,"data":[1]},{"type":14,"id":-2629896,"enabled":1,"class":11,"data":[15,24598,0,1,1,4,1,1,0,0,1,null,null,1,1,1,1,1,1,0,0,0,0]}],"children":[{"id":-2629898,"path":"UI","assetBundleId":0,"components":[{"type":7,"id":-2629900,"data":[0.5,0.5,0,0,1,1,0,0,0,0,0,0,0,0,1,1,1,1]},{"type":13,"id":-2629902,"data":[1]},{"type":14,"id":-2629904,"enabled":1,"class":11,"data":[15,24642,0,0,1,4,1,1,0,0,1,null,null,1,1,1,1,1,1,0,0,0,0]}],"children":[],"data":["Icon",0,1,0,5]},{"id":-2629906,"path":"UI","assetBundleId":0,"components":[{"type":7,"id":-2629908,"data":[0.5,1,0.100000001490116,0,0.899999976158142,0,0,20,0,-10,0,0,0,0,1,1,1,1]},{"type":13,"id":-2629910,"data":[1]},{"type":14,"id":-2629912,"enabled":1,"class":12,"data":[0,null,null,0,0,0,0,"Garlic 3",0,16,24502,5,24504,[],null,null,[],0,0,0,255,0,0,0,1,0,3,[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1],null,null,null,null,0,null,null,-1183493901,0,255,255,255,255,18,18,400,0,18,72,1,2,256,65535,0,0,0,0,0,0,0,0.400000005960464,0,null,null,null,null,1,0,0,1,1,1,0,0,0,0,0,0,0,1,1,0,0,0,0,0,0,null,null,1,1,1,1,1,1,0,0,0,0]}],"children":[],"data":["Amount",0,1,0,5]}],"data":["Quest - Slot (5)",0,1,0,5]},{"id":-2629810,"path":"UI","assetBundleId":0,"components":[{"type":7,"id":113262,"data":[0.5,0.5,0,1,0,1,150,150,450,-350,0,0,0,0,1,1,1,1]},{"type":8,"id":113264,"enabled":1,"class":9,"data":[1,1,1,1.5,1.5,1.5,1,1,1,1,0.699999988079071,10,24628,1,0,11,-2629822,12,-2629830]},{"type":13,"id":-2629812,"data":[1]},{"type":14,"id":-2629814,"enabled":1,"class":11,"data":[15,24598,0,1,1,4,1,1,0,0,1,null,null,1,1,1,1,1,1,0,0,0,0]}],"children":[{"id":-2629816,"path":"UI","assetBundleId":0,"components":[{"type":7,"id":-2629818,"data":[0.5,0.5,0,0,1,1,0,0,0,0,0,0,0,0,1,1,1,1]},{"type":13,"id":-2629820,"data":[1]},{"type":14,"id":-2629822,"enabled":1,"class":11,"data":[15,23908,0,0,1,4,1,1,0,0,1,null,null,1,1,1,1,1,1,0,0,0,0]}],"children":[],"data":["Icon",0,1,0,5]},{"id":-2629824,"path":"UI","assetBundleId":0,"components":[{"type":7,"id":-2629826,"data":[0.5,1,0.100000001490116,0,0.899999976158142,0,0,20,0,-10,0,0,0,0,1,1,1,1]},{"type":13,"id":-2629828,"data":[1]},{"type":14,"id":-2629830,"enabled":1,"class":12,"data":[0,null,null,0,0,0,0,"Salt 1",0,16,24502,5,24504,[],null,null,[],0,0,0,255,0,0,0,1,0,3,[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1],null,null,null,null,0,null,null,-1183493901,0,255,255,255,255,18,18,400,0,18,72,1,2,256,65535,0,0,0,0,0,0,0,0.400000005960464,0,null,null,null,null,1,0,0,1,1,1,0,0,0,0,0,0,0,1,1,0,0,0,0,0,0,null,null,1,1,1,1,1,1,0,0,0,0]}],"children":[],"data":["Amount",0,1,0,5]}],"data":["Quest - Slot (6)",0,1,0,5]}],"data":["Quest - Inventory",0,1,0,5]}],"data":["TOP",0,1,0,5]},{"id":113192,"path":"UI","assetBundleId":0,"components":[{"type":7,"id":113194,"data":[0.5,0,0,0,1,0,0,100,0,0,0,0,0,0,1,1,1,1]}],"children":[{"id":113196,"path":"UI","assetBundleId":0,"components":[{"type":7,"id":113198,"data":[0.5,0,0.5,0,0.5,0,431.050048828125,100,0,374,0,0,0,0,1,0.999599874019623,0.999599874019623,0.999599874019623]},{"type":13,"id":113202,"data":[1]},{"type":14,"id":113200,"enabled":1,"class":12,"data":[0,null,null,0,0,0,0,"Match 3 Salmon!",0,16,24502,5,24504,[],null,null,[],255,0,0,255,1,0,0,1,0,3,[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1],null,null,null,null,0,null,null,-1183493901,0,255,255,255,255,60,60,400,0,18,72,17,2,1024,65535,-5,0,0,0,0,0,0,0.400000005960464,0,null,null,null,null,1,0,0,1,1,1,0,0,0,0,0,0,0,1,1,0,0,0,0,0,0,null,null,1,1,1,1,1,1,0,0,0,0]}],"children":[],"data":["Quest - Txt",0,1,0,5]}],"data":["BOTTOM",0,1,0,5]}],"data":["offset",0,1,0,5]}],"data":["[Canvas] Quest",0,1,0,5]},{"id":113520,"path":"UI","assetBundleId":0,"components":[{"type":7,"id":113528,"data":[0.5,0.5,0,0,0,0,800,1688.88879394531,0,0,80,0,0,0,1,0.00947368424385786,0.00947368424385786,0.00947368424385786]},{"type":42,"id":113526,"data":[1,100,100,0,1,2,"Default",22222,1.79999995231628,23,113298,0,0,0,0]},{"type":14,"id":113524,"enabled":1,"class":46,"data":[1,100,1,800,600,0,0,3,96,96,1,0]},{"type":14,"id":113522,"enabled":1,"class":47,"data":[1,0,-1]}],"children":[{"id":113374,"path":"UI","assetBundleId":0,"components":[{"type":7,"id":113376,"data":[0.5,0.5,0,0,1,1,0,0,1003,9,0,0,0,0,1,1,1,1]},{"type":8,"id":113378,"enabled":1,"class":48,"data":[]}],"children":[{"id":113728,"path":"UI","assetBundleId":0,"components":[{"type":7,"id":113730,"data":[0.5,0.5,0,0,1,1,0,0,0,0,0,0,0,0,1,1,1,1]},{"type":13,"id":113734,"data":[1]},{"type":14,"id":113732,"enabled":1,"class":11,"data":[15,24424,0,0,1,4,1,1,0,0,1,null,null,1,1,1,1,1,1,0,0,0,0]}],"children":[{"id":113740,"path":"UI","assetBundleId":0,"components":[{"type":7,"id":113742,"data":[0.5,0.5,0,0,1,1,0,0,0,0,0,0,0,0,1,1,1,1]},{"type":13,"id":113748,"data":[1]},{"type":14,"id":113746,"enabled":1,"class":11,"data":[15,738,1,0,1,4,1,1,0,0,1,null,null,1,1,1,1,0,1,0,0,0,0]},{"type":14,"id":113744,"enabled":1,"class":51,"data":[[[[[27,113504,"Game, Assembly-CSharp","OpenURL",1,[null,null,"UnityEngine.Object, UnityEngine",0,0,"",0],2]]]],[3,0,null,null,null,null,null,null,null,null],1,[1,1,1,1,0.960784316062927,0.960784316062927,0.960784316062927,1,0.7843137383461,0.7843137383461,0.7843137383461,1,0.960784316062927,0.960784316062927,0.960784316062927,1,0.7843137383461,0.7843137383461,0.7843137383461,0.501960813999176,1,0.100000001490116],[null,null,null,null,null,null,null,null],["Normal","Highlighted","Pressed","Selected","Disabled"],1,11,113746]}],"children":[],"data":["Button - Open Game Page",0,1,0,5]}],"data":["End Image",0,1,0,5]}],"data":["offset",0,1,0,5]}],"data":["[Canvas] EndCard",0,1,0,5]}],"data":["UI",0,1,0,0]},{"id":113156,"path":"__________________________________________   ","assetBundleId":0,"components":[{"type":1,"id":113158,"data":[0,0,-10,1,1,1,0,0,0,1]}],"children":[],"data":["__________________________________________   ",0,1,0,0]},{"id":113566,"path":"Bag","assetBundleId":0,"components":[{"type":1,"id":113568,"data":[-3.95000004768372,-5.59000015258789,0,1,1,1,0,0,0,1]},{"type":8,"id":113570,"enabled":1,"class":30,"data":[[22,113786,22,113360,22,113414,22,113674,22,113382,22,113668,22,113724]]}],"children":[{"id":-2630920,"path":"Bag","assetBundleId":0,"components":[{"type":1,"id":113788,"data":[1,0,0,1,1,1,0,0,0,1]},{"type":8,"id":113786,"enabled":1,"class":22,"data":[0,null,null]}],"children":[{"id":-2630922,"path":"Bag","assetBundleId":0,"components":[{"type":1,"id":-2630924,"data":[0,0,0,1,1,1,0,0,0,1]},{"type":18,"id":-2630926,"data":[1,5,458,[5,458],0,0,0,0,-1,0,1,1,0,0,1,1,1,1,1,1,15,24330,0,0,0,1,1,0,0.5,0,0]}],"children":[],"data":["TempBackground",0,1,0,0]}],"data":["BagSlot (1)",0,1,0,0]},{"id":-2630048,"path":"Bag","assetBundleId":0,"components":[{"type":1,"id":113362,"data":[2,0,0,1,1,1,0,0,0,1]},{"type":8,"id":113360,"enabled":1,"class":22,"data":[0,null,null]}],"children":[{"id":-2630050,"path":"Bag","assetBundleId":0,"components":[{"type":1,"id":-2630052,"data":[0,0,0,1,1,1,0,0,0,1]},{"type":18,"id":-2630054,"data":[1,5,458,[5,458],0,0,0,0,-1,0,1,1,0,0,1,1,1,1,1,1,15,24330,0,0,0,1,1,0,0.5,0,0]}],"children":[],"data":["TempBackground",0,1,0,0]}],"data":["BagSlot (2)",0,1,0,0]},{"id":-2630124,"path":"Bag","assetBundleId":0,"components":[{"type":1,"id":113416,"data":[3,0,0,1,1,1,0,0,0,1]},{"type":8,"id":113414,"enabled":1,"class":22,"data":[0,null,null]}],"children":[{"id":-2630126,"path":"Bag","assetBundleId":0,"components":[{"type":1,"id":-2630128,"data":[0,0,0,1,1,1,0,0,0,1]},{"type":18,"id":-2630130,"data":[1,5,458,[5,458],0,0,0,0,-1,0,1,1,0,0,1,1,1,1,1,1,15,24330,0,0,0,1,1,0,0.5,0,0]}],"children":[],"data":["TempBackground",0,1,0,0]}],"data":["BagSlot (3)",0,1,0,0]},{"id":-2630694,"path":"Bag","assetBundleId":0,"components":[{"type":1,"id":113676,"data":[4,0,0,1,1,1,0,0,0,1]},{"type":8,"id":113674,"enabled":1,"class":22,"data":[0,null,null]}],"children":[{"id":-2630696,"path":"Bag","assetBundleId":0,"components":[{"type":1,"id":-2630698,"data":[0,0,0,1,1,1,0,0,0,1]},{"type":18,"id":-2630700,"data":[1,5,458,[5,458],0,0,0,0,-1,0,1,1,0,0,1,1,1,1,1,1,15,24330,0,0,0,1,1,0,0.5,0,0]}],"children":[],"data":["TempBackground",0,1,0,0]}],"data":["BagSlot (4)",0,1,0,0]},{"id":-2630086,"path":"Bag","assetBundleId":0,"components":[{"type":1,"id":113384,"data":[5,0,0,1,1,1,0,0,0,1]},{"type":8,"id":113382,"enabled":1,"class":22,"data":[0,null,null]}],"children":[{"id":-2630088,"path":"Bag","assetBundleId":0,"components":[{"type":1,"id":-2630090,"data":[0,0,0,1,1,1,0,0,0,1]},{"type":18,"id":-2630092,"data":[1,5,458,[5,458],0,0,0,0,-1,0,1,1,0,0,1,1,1,1,1,1,15,24330,0,0,0,1,1,0,0.5,0,0]}],"children":[],"data":["TempBackground",0,1,0,0]}],"data":["BagSlot (5)",0,1,0,0]},{"id":-2630686,"path":"Bag","assetBundleId":0,"components":[{"type":1,"id":113670,"data":[6,0,0,1,1,1,0,0,0,1]},{"type":8,"id":113668,"enabled":1,"class":22,"data":[0,null,null]}],"children":[{"id":-2630688,"path":"Bag","assetBundleId":0,"components":[{"type":1,"id":-2630690,"data":[0,0,0,1,1,1,0,0,0,1]},{"type":18,"id":-2630692,"data":[1,5,458,[5,458],0,0,0,0,-1,0,1,1,0,0,1,1,1,1,1,1,15,24330,0,0,0,1,1,0,0.5,0,0]}],"children":[],"data":["TempBackground",0,1,0,0]}],"data":["BagSlot (6)",0,1,0,0]},{"id":-2630852,"path":"Bag","assetBundleId":0,"components":[{"type":1,"id":113726,"data":[7,0,0,1,1,1,0,0,0,1]},{"type":8,"id":113724,"enabled":1,"class":22,"data":[0,null,null]}],"children":[{"id":-2630854,"path":"Bag","assetBundleId":0,"components":[{"type":1,"id":-2630856,"data":[0,0,0,1,1,1,0,0,0,1]},{"type":18,"id":-2630858,"data":[1,5,458,[5,458],0,0,0,0,-1,0,1,1,0,0,1,1,1,1,1,1,15,24330,0,0,0,1,1,0,0.5,0,0]}],"children":[],"data":["TempBackground",0,1,0,0]}],"data":["BagSlot (7)",0,1,0,0]}],"data":["Bag",0,1,0,0]},{"id":113546,"path":"DECK","assetBundleId":0,"components":[{"type":1,"id":113550,"data":[-4,1.35000002384186,0,1,1,1,0,0,0,1]},{"type":8,"id":113548,"enabled":1,"class":28,"data":[null,null]}],"children":[{"id":113772,"path":"DECK","assetBundleId":0,"components":[{"type":1,"id":113774,"data":[0,0,100,1,1,1,0,0,0,1]},{"type":8,"id":113776,"enabled":1,"class":52,"data":[0,[17,113496,17,113654,17,113700,17,113664,17,113714,17,113708,17,113706,17,113648,17,113598,17,113606,17,113410,17,113540,17,113736,17,113634,17,113782,17,113576,17,113556,17,113662,17,113372,17,113436,17,113430,17,113694,17,113178,17,113398,17,113582,17,113332,17,113738,17,113754,17,113682,17,113620,17,113512]]}],"children":[{"id":113148,"path":"DECK","assetBundleId":0,"components":[{"type":1,"id":113150,"data":[1,0,0,1,1,1,0,0,0,1]}],"children":[{"id":-2630274,"path":"DECK","assetBundleId":0,"components":[{"type":1,"id":113494,"data":[0,0,0,1,1,1,0,0,0,1]},{"type":8,"id":113496,"enabled":1,"class":17,"data":[0,0,18,-2630290,18,-2630296,18,-2630284,19,-2630302,1,1,1,20,1.5,0.300000011920929,0,0,0.300000011920929,0.200000002980232,0,10,23884,0,0,0,0,[]]},{"type":20,"id":-2630276,"data":[0,0,0.699999988079071,0.800000011920929,0,1,1,0,1,0,0.0799999982118607,null,null]},{"type":21,"id":-2630278,"data":[1,null,null,1,0,1,0,0,0,0,1,0]}],"children":[{"id":-2630280,"path":"DECK","assetBundleId":0,"components":[{"type":1,"id":-2630282,"data":[0,0,0,1,1,1,0,0,0,1]},{"type":18,"id":-2630284,"data":[1,5,458,[5,458],0,0,0,101,-1,0,1,1,0,0,1,1,1,1,1,1,15,24044,0,0,0,1,1,0,0.5,0,0]}],"children":[],"data":["Background",0,1,0,3]},{"id":-2630286,"path":"DECK","assetBundleId":0,"components":[{"type":1,"id":-2630288,"data":[0,0.100000001490116,0,0.899999976158142,0.899999976158142,0,0,0,0,1]},{"type":18,"id":-2630290,"data":[1,5,458,[5,458],0,0,0,102,-1,0,1,1,0,0,1,1,1,1,1,1,15,23894,0,0,0,1.13777780532837,1.13777780532837,0,0.5,0,0]}],"children":[],"data":["Icon",0,1,0,3]},{"id":-2630292,"path":"DECK","assetBundleId":0,"components":[{"type":1,"id":-2630294,"data":[0,0,0,1,1,1,0,0,0,1]},{"type":18,"id":-2630296,"data":[1,5,458,[5,458],0,0,0,103,-1,0,1,1,0,0,1,1,0,0,0,0.294117659330368,15,24044,0,0,0,1,1,0,0.5,0,0]}],"children":[],"data":["Dark",0,0,0,3]},{"id":-2630298,"path":"DECK","assetBundleId":0,"components":[{"type":1,"id":-2630300,"data":[0,0,0,1,1,1,0,0,0,1]},{"type":19,"id":-2630302,"data":[1,5,458,[5,458],1,0,0,100,-1,0,1,1,0,0,0,0,[],0,0.25,0.200000002980232,0,0.200000002980232,0,1,0,5,0.100000001490116,[[0,1,1,1,1,1,1,1,1,1],[0.02470436,0,0.1964752,1,0.601175,0.9162334,0.9988251,0.01568628],0],1,1,1,0,1,1,1,0.0156862754374743,0,0,1,[0,1,0,0,0,0,0,1,0,0,0,0,0,0]]}],"children":[],"data":["Trail",0,1,0,3]}],"data":["Tile - Bread",0,1,0,3]},{"id":-2630626,"path":"DECK","assetBundleId":0,"components":[{"type":1,"id":113652,"data":[0,-1,0,1,1,1,0,0,0,1]},{"type":8,"id":113654,"enabled":1,"class":17,"data":[0,0,18,-2630642,18,-2630648,18,-2630636,19,-2630654,1,1,1,20,1.5,0.300000011920929,0,0,0.300000011920929,0.200000002980232,0,10,23886,0,0,0,0,[]]},{"type":20,"id":-2630628,"data":[0,0,0.699999988079071,0.800000011920929,0,1,1,0,1,0,0.0799999982118607,null,null]},{"type":21,"id":-2630630,"data":[1,null,null,1,0,1,0,0,0,0,1,0]}],"children":[{"id":-2630632,"path":"DECK","assetBundleId":0,"components":[{"type":1,"id":-2630634,"data":[0,0,0,1,1,1,0,0,0,1]},{"type":18,"id":-2630636,"data":[1,5,458,[5,458],0,0,0,111,-1,0,1,1,0,0,1,1,1,1,1,1,15,24044,0,0,0,1,1,0,0.5,0,0]}],"children":[],"data":["Background",0,1,0,3]},{"id":-2630638,"path":"DECK","assetBundleId":0,"components":[{"type":1,"id":-2630640,"data":[0,0.100000001490116,0,0.899999976158142,0.899999976158142,0,0,0,0,1]},{"type":18,"id":-2630642,"data":[1,5,458,[5,458],0,0,0,112,-1,0,1,1,0,0,1,1,1,1,1,1,15,23940,0,0,0,1.13777780532837,1.13777780532837,0,0.5,0,0]}],"children":[],"data":["Icon",0,1,0,3]},{"id":-2630644,"path":"DECK","assetBundleId":0,"components":[{"type":1,"id":-2630646,"data":[0,0,0,1,1,1,0,0,0,1]},{"type":18,"id":-2630648,"data":[1,5,458,[5,458],0,0,0,113,-1,0,1,1,0,0,1,1,0,0,0,0.294117659330368,15,24044,0,0,0,1,1,0,0.5,0,0]}],"children":[],"data":["Dark",0,0,0,3]},{"id":-2630650,"path":"DECK","assetBundleId":0,"components":[{"type":1,"id":-2630652,"data":[0,0,0,1,1,1,0,0,0,1]},{"type":19,"id":-2630654,"data":[1,5,458,[5,458],1,0,0,110,-1,0,1,1,0,0,0,0,[],0,0.25,0.200000002980232,0,0.200000002980232,0,1,0,5,0.100000001490116,[[0,1,1,1,1,1,1,1,1,1],[0.02470436,0,0.1964752,1,0.601175,0.9162334,0.9988251,0.01568628],0],1,1,1,0,1,1,1,0.0156862754374743,0,0,1,[0,1,0,0,0,0,0,1,0,0,0,0,0,0]]}],"children":[],"data":["Trail",0,1,0,3]}],"data":["Tile - Eggs",0,1,0,3]},{"id":-2630192,"path":"DECK","assetBundleId":0,"components":[{"type":1,"id":113444,"data":[0,-2,0,1,1,1,0,0,0,1]},{"type":8,"id":113700,"enabled":1,"class":17,"data":[0,0,18,-2630208,18,-2630214,18,-2630202,19,-2630220,1,1,1,20,1.5,0.300000011920929,0,0,0.300000011920929,0.200000002980232,0,10,23884,0,0,0,0,[]]},{"type":20,"id":-2630194,"data":[0,0,0.699999988079071,0.800000011920929,0,1,1,0,1,0,0.0799999982118607,null,null]},{"type":21,"id":-2630196,"data":[1,null,null,1,0,1,0,0,0,0,1,0]}],"children":[{"id":-2630198,"path":"DECK","assetBundleId":0,"components":[{"type":1,"id":-2630200,"data":[0,0,0,1,1,1,0,0,0,1]},{"type":18,"id":-2630202,"data":[1,5,458,[5,458],0,0,0,121,-1,0,1,1,0,0,1,1,1,1,1,1,15,24044,0,0,0,1,1,0,0.5,0,0]}],"children":[],"data":["Background",0,1,0,3]},{"id":-2630204,"path":"DECK","assetBundleId":0,"components":[{"type":1,"id":-2630206,"data":[0,0.100000001490116,0,0.899999976158142,0.899999976158142,0,0,0,0,1]},{"type":18,"id":-2630208,"data":[1,5,458,[5,458],0,0,0,122,-1,0,1,1,0,0,1,1,1,1,1,1,15,23894,0,0,0,1.13777780532837,1.13777780532837,0,0.5,0,0]}],"children":[],"data":["Icon",0,1,0,3]},{"id":-2630210,"path":"DECK","assetBundleId":0,"components":[{"type":1,"id":-2630212,"data":[0,0,0,1,1,1,0,0,0,1]},{"type":18,"id":-2630214,"data":[1,5,458,[5,458],0,0,0,123,-1,0,1,1,0,0,1,1,0,0,0,0.294117659330368,15,24044,0,0,0,1,1,0,0.5,0,0]}],"children":[],"data":["Dark",0,0,0,3]},{"id":-2630216,"path":"DECK","assetBundleId":0,"components":[{"type":1,"id":-2630218,"data":[0,0,0,1,1,1,0,0,0,1]},{"type":19,"id":-2630220,"data":[1,5,458,[5,458],1,0,0,120,-1,0,1,1,0,0,0,0,[],0,0.25,0.200000002980232,0,0.200000002980232,0,1,0,5,0.100000001490116,[[0,1,1,1,1,1,1,1,1,1],[0.02470436,0,0.1964752,1,0.601175,0.9162334,0.9988251,0.01568628],0],1,1,1,0,1,1,1,0.0156862754374743,0,0,1,[0,1,0,0,0,0,0,1,0,0,0,0,0,0]]}],"children":[],"data":["Trail",0,1,0,3]}],"data":["Tile - Bread",0,1,0,3]}],"data":["Column - 1",0,1,0,0]},{"id":113626,"path":"DECK","assetBundleId":0,"components":[{"type":1,"id":113628,"data":[2,1.20000004768372,0,1,1,1,0,0,0,1]}],"children":[{"id":-2629780,"path":"DECK","assetBundleId":0,"components":[{"type":1,"id":113252,"data":[0,0,0,1,1,1,0,0,0,1]},{"type":8,"id":113664,"enabled":1,"class":17,"data":[0,0,18,-2629796,18,-2629802,18,-2629790,19,-2629808,1,1,1,20,1.5,0.300000011920929,0,0,0.300000011920929,0.200000002980232,0,10,23910,0,0,0,0,[]]},{"type":20,"id":-2629782,"data":[0,0,0.699999988079071,0.800000011920929,0,1,1,0,1,0,0.0799999982118607,null,null]},{"type":21,"id":-2629784,"data":[1,null,null,1,0,1,0,0,0,0,1,0]}],"children":[{"id":-2629786,"path":"DECK","assetBundleId":0,"components":[{"type":1,"id":-2629788,"data":[0,0,0,1,1,1,0,0,0,1]},{"type":18,"id":-2629790,"data":[1,5,458,[5,458],0,0,0,131,-1,0,1,1,0,0,1,1,1,1,1,1,15,24044,0,0,0,1,1,0,0.5,0,0]}],"children":[],"data":["Background",0,1,0,3]},{"id":-2629792,"path":"DECK","assetBundleId":0,"components":[{"type":1,"id":-2629794,"data":[0,0.100000001490116,0,0.899999976158142,0.899999976158142,0,0,0,0,1]},{"type":18,"id":-2629796,"data":[1,5,458,[5,458],0,0,0,132,-1,0,1,1,0,0,1,1,1,1,1,1,15,23908,0,0,0,1.13777780532837,1.13777780532837,0,0.5,0,0]}],"children":[],"data":["Icon",0,1,0,3]},{"id":-2629798,"path":"DECK","assetBundleId":0,"components":[{"type":1,"id":-2629800,"data":[0,0,0,1,1,1,0,0,0,1]},{"type":18,"id":-2629802,"data":[1,5,458,[5,458],0,0,0,133,-1,0,1,1,0,0,1,1,0,0,0,0.294117659330368,15,24044,0,0,0,1,1,0,0.5,0,0]}],"children":[],"data":["Dark",0,0,0,3]},{"id":-2629804,"path":"DECK","assetBundleId":0,"components":[{"type":1,"id":-2629806,"data":[0,0,0,1,1,1,0,0,0,1]},{"type":19,"id":-2629808,"data":[1,5,458,[5,458],1,0,0,130,-1,0,1,1,0,0,0,0,[],0,0.25,0.200000002980232,0,0.200000002980232,0,1,0,5,0.100000001490116,[[0,1,1,1,1,1,1,1,1,1],[0.02470436,0,0.1964752,1,0.601175,0.9162334,0.9988251,0.01568628],0],1,1,1,0,1,1,1,0.0156862754374743,0,0,1,[0,1,0,0,0,0,0,1,0,0,0,0,0,0]]}],"children":[],"data":["Trail",0,1,0,3]}],"data":["Tile - Leaves",0,1,0,3]},{"id":-2630792,"path":"DECK","assetBundleId":0,"components":[{"type":1,"id":113712,"data":[0,-1,0,1,1,1,0,0,0,1]},{"type":8,"id":113714,"enabled":1,"class":17,"data":[0,0,18,-2630808,18,-2630814,18,-2630802,19,-2630820,1,1,1,20,1.5,0.300000011920929,0,0,0.300000011920929,0.200000002980232,0,10,23906,0,0,0,0,[]]},{"type":20,"id":-2630794,"data":[0,0,0.699999988079071,0.800000011920929,0,1,1,0,1,0,0.0799999982118607,null,null]},{"type":21,"id":-2630796,"data":[1,null,null,1,0,1,0,0,0,0,1,0]}],"children":[{"id":-2630798,"path":"DECK","assetBundleId":0,"components":[{"type":1,"id":-2630800,"data":[0,0,0,1,1,1,0,0,0,1]},{"type":18,"id":-2630802,"data":[1,5,458,[5,458],0,0,0,141,-1,0,1,1,0,0,1,1,1,1,1,1,15,24044,0,0,0,1,1,0,0.5,0,0]}],"children":[],"data":["Background",0,1,0,3]},{"id":-2630804,"path":"DECK","assetBundleId":0,"components":[{"type":1,"id":-2630806,"data":[0,0.100000001490116,0,0.899999976158142,0.899999976158142,0,0,0,0,1]},{"type":18,"id":-2630808,"data":[1,5,458,[5,458],0,0,0,142,-1,0,1,1,0,0,1,1,1,1,1,1,15,23904,0,0,0,1.13777780532837,1.13777780532837,0,0.5,0,0]}],"children":[],"data":["Icon",0,1,0,3]},{"id":-2630810,"path":"DECK","assetBundleId":0,"components":[{"type":1,"id":-2630812,"data":[0,0,0,1,1,1,0,0,0,1]},{"type":18,"id":-2630814,"data":[1,5,458,[5,458],0,0,0,143,-1,0,1,1,0,0,1,1,0,0,0,0.294117659330368,15,24044,0,0,0,1,1,0,0.5,0,0]}],"children":[],"data":["Dark",0,0,0,3]},{"id":-2630816,"path":"DECK","assetBundleId":0,"components":[{"type":1,"id":-2630818,"data":[0,0,0,1,1,1,0,0,0,1]},{"type":19,"id":-2630820,"data":[1,5,458,[5,458],1,0,0,140,-1,0,1,1,0,0,0,0,[],0,0.25,0.200000002980232,0,0.200000002980232,0,1,0,5,0.100000001490116,[[0,1,1,1,1,1,1,1,1,1],[0.02470436,0,0.1964752,1,0.601175,0.9162334,0.9988251,0.01568628],0],1,1,1,0,1,1,1,0.0156862754374743,0,0,1,[0,1,0,0,0,0,0,1,0,0,0,0,0,0]]}],"children":[],"data":["Trail",0,1,0,3]}],"data":["Tile - Apples",0,1,0,3]},{"id":-2630506,"path":"DECK","assetBundleId":0,"components":[{"type":1,"id":113624,"data":[0,-2,0,1,1,1,0,0,0,1]},{"type":8,"id":113708,"enabled":1,"class":17,"data":[0,0,18,-2630522,18,-2630528,18,-2630516,19,-2630534,1,1,1,20,1.5,0.300000011920929,0,0,0.300000011920929,0.200000002980232,0,10,23902,0,0,0,0,[]]},{"type":20,"id":-2630508,"data":[0,0,0.699999988079071,0.800000011920929,0,1,1,0,1,0,0.0799999982118607,null,null]},{"type":21,"id":-2630510,"data":[1,null,null,1,0,1,0,0,0,0,1,0]}],"children":[{"id":-2630512,"path":"DECK","assetBundleId":0,"components":[{"type":1,"id":-2630514,"data":[0,0,0,1,1,1,0,0,0,1]},{"type":18,"id":-2630516,"data":[1,5,458,[5,458],0,0,0,151,-1,0,1,1,0,0,1,1,1,1,1,1,15,24044,0,0,0,1,1,0,0.5,0,0]}],"children":[],"data":["Background",0,1,0,3]},{"id":-2630518,"path":"DECK","assetBundleId":0,"components":[{"type":1,"id":-2630520,"data":[0,0.100000001490116,0,0.899999976158142,0.899999976158142,0,0,0,0,1]},{"type":18,"id":-2630522,"data":[1,5,458,[5,458],0,0,0,152,-1,0,1,1,0,0,1,1,1,1,1,1,15,23900,0,0,0,1.13777780532837,1.13777780532837,0,0.5,0,0]}],"children":[],"data":["Icon",0,1,0,3]},{"id":-2630524,"path":"DECK","assetBundleId":0,"components":[{"type":1,"id":-2630526,"data":[0,0,0,1,1,1,0,0,0,1]},{"type":18,"id":-2630528,"data":[1,5,458,[5,458],0,0,0,153,-1,0,1,1,0,0,1,1,0,0,0,0.294117659330368,15,24044,0,0,0,1,1,0,0.5,0,0]}],"children":[],"data":["Dark",0,0,0,3]},{"id":-2630530,"path":"DECK","assetBundleId":0,"components":[{"type":1,"id":-2630532,"data":[0,0,0,1,1,1,0,0,0,1]},{"type":19,"id":-2630534,"data":[1,5,458,[5,458],1,0,0,150,-1,0,1,1,0,0,0,0,[],0,0.25,0.200000002980232,0,0.200000002980232,0,1,0,5,0.100000001490116,[[0,1,1,1,1,1,1,1,1,1],[0.02470436,0,0.1964752,1,0.601175,0.9162334,0.9988251,0.01568628],0],1,1,1,0,1,1,1,0.0156862754374743,0,0,1,[0,1,0,0,0,0,0,1,0,0,0,0,0,0]]}],"children":[],"data":["Trail",0,1,0,3]}],"data":["Tile - Butter",0,1,0,3]},{"id":-2630762,"path":"DECK","assetBundleId":0,"components":[{"type":1,"id":113704,"data":[0,-3,0,1,1,1,0,0,0,1]},{"type":8,"id":113706,"enabled":1,"class":17,"data":[0,0,18,-2630778,18,-2630784,18,-2630772,19,-2630790,1,1,1,20,1.5,0.300000011920929,0,0,0.300000011920929,0.200000002980232,0,10,23950,0,0,0,0,[]]},{"type":20,"id":-2630764,"data":[0,0,0.699999988079071,0.800000011920929,0,1,1,0,1,0,0.0799999982118607,null,null]},{"type":21,"id":-2630766,"data":[1,null,null,1,0,1,0,0,0,0,1,0]}],"children":[{"id":-2630768,"path":"DECK","assetBundleId":0,"components":[{"type":1,"id":-2630770,"data":[0,0,0,1,1,1,0,0,0,1]},{"type":18,"id":-2630772,"data":[1,5,458,[5,458],0,0,0,161,-1,0,1,1,0,0,1,1,1,1,1,1,15,24044,0,0,0,1,1,0,0.5,0,0]}],"children":[],"data":["Background",0,1,0,3]},{"id":-2630774,"path":"DECK","assetBundleId":0,"components":[{"type":1,"id":-2630776,"data":[0,0.100000001490116,0,0.899999976158142,0.899999976158142,0,0,0,0,1]},{"type":18,"id":-2630778,"data":[1,5,458,[5,458],0,0,0,162,-1,0,1,1,0,0,1,1,1,1,1,1,15,23948,0,0,0,1.13777780532837,1.13777780532837,0,0.5,0,0]}],"children":[],"data":["Icon",0,1,0,3]},{"id":-2630780,"path":"DECK","assetBundleId":0,"components":[{"type":1,"id":-2630782,"data":[0,0,0,1,1,1,0,0,0,1]},{"type":18,"id":-2630784,"data":[1,5,458,[5,458],0,0,0,163,-1,0,1,1,0,0,1,1,0,0,0,0.294117659330368,15,24044,0,0,0,1,1,0,0.5,0,0]}],"children":[],"data":["Dark",0,0,0,3]},{"id":-2630786,"path":"DECK","assetBundleId":0,"components":[{"type":1,"id":-2630788,"data":[0,0,0,1,1,1,0,0,0,1]},{"type":19,"id":-2630790,"data":[1,5,458,[5,458],1,0,0,160,-1,0,1,1,0,0,0,0,[],0,0.25,0.200000002980232,0,0.200000002980232,0,1,0,5,0.100000001490116,[[0,1,1,1,1,1,1,1,1,1],[0.02470436,0,0.1964752,1,0.601175,0.9162334,0.9988251,0.01568628],0],1,1,1,0,1,1,1,0.0156862754374743,0,0,1,[0,1,0,0,0,0,0,1,0,0,0,0,0,0]]}],"children":[],"data":["Trail",0,1,0,3]}],"data":["Tile - Honey",0,1,0,3]},{"id":-2630596,"path":"DECK","assetBundleId":0,"components":[{"type":1,"id":113646,"data":[0,-4,0,1,1,1,0,0,0,1]},{"type":8,"id":113648,"enabled":1,"class":17,"data":[0,0,18,-2630612,18,-2630618,18,-2630606,19,-2630624,1,1,1,20,1.5,0.300000011920929,0,0,0.300000011920929,0.200000002980232,0,10,23898,0,0,0,0,[]]},{"type":20,"id":-2630598,"data":[0,0,0.699999988079071,0.800000011920929,0,1,1,0,1,0,0.0799999982118607,null,null]},{"type":21,"id":-2630600,"data":[1,null,null,1,0,1,0,0,0,0,1,0]}],"children":[{"id":-2630602,"path":"DECK","assetBundleId":0,"components":[{"type":1,"id":-2630604,"data":[0,0,0,1,1,1,0,0,0,1]},{"type":18,"id":-2630606,"data":[1,5,458,[5,458],0,0,0,171,-1,0,1,1,0,0,1,1,1,1,1,1,15,24044,0,0,0,1,1,0,0.5,0,0]}],"children":[],"data":["Background",0,1,0,3]},{"id":-2630608,"path":"DECK","assetBundleId":0,"components":[{"type":1,"id":-2630610,"data":[0,0.100000001490116,0,0.899999976158142,0.899999976158142,0,0,0,0,1]},{"type":18,"id":-2630612,"data":[1,5,458,[5,458],0,0,0,172,-1,0,1,1,0,0,1,1,1,1,1,1,15,23896,0,0,0,1.13777780532837,1.13777780532837,0,0.5,0,0]}],"children":[],"data":["Icon",0,1,0,3]},{"id":-2630614,"path":"DECK","assetBundleId":0,"components":[{"type":1,"id":-2630616,"data":[0,0,0,1,1,1,0,0,0,1]},{"type":18,"id":-2630618,"data":[1,5,458,[5,458],0,0,0,173,-1,0,1,1,0,0,1,1,0,0,0,0.294117659330368,15,24044,0,0,0,1,1,0,0.5,0,0]}],"children":[],"data":["Dark",0,0,0,3]},{"id":-2630620,"path":"DECK","assetBundleId":0,"components":[{"type":1,"id":-2630622,"data":[0,0,0,1,1,1,0,0,0,1]},{"type":19,"id":-2630624,"data":[1,5,458,[5,458],1,0,0,170,-1,0,1,1,0,0,0,0,[],0,0.25,0.200000002980232,0,0.200000002980232,0,1,0,5,0.100000001490116,[[0,1,1,1,1,1,1,1,1,1],[0.02470436,0,0.1964752,1,0.601175,0.9162334,0.9988251,0.01568628],0],1,1,1,0,1,1,1,0.0156862754374743,0,0,1,[0,1,0,0,0,0,0,1,0,0,0,0,0,0]]}],"children":[],"data":["Trail",0,1,0,3]}],"data":["Tile - Spinach",0,1,0,3]}],"data":["Column - 2",0,1,0,0]},{"id":113422,"path":"DECK","assetBundleId":0,"components":[{"type":1,"id":113424,"data":[3,0.800000011920929,0,1,1,1,0,0,0,1]}],"children":[{"id":-2630416,"path":"DECK","assetBundleId":0,"components":[{"type":1,"id":113596,"data":[0,0,0,1,1,1,0,0,0,1]},{"type":8,"id":113598,"enabled":1,"class":17,"data":[0,0,18,-2630432,18,-2630438,18,-2630426,19,-2630444,1,1,1,20,1.5,0.300000011920929,0,0,0.300000011920929,0.200000002980232,0,10,23898,0,0,0,0,[]]},{"type":20,"id":-2630418,"data":[0,0,0.699999988079071,0.800000011920929,0,1,1,0,1,0,0.0799999982118607,null,null]},{"type":21,"id":-2630420,"data":[1,null,null,1,0,1,0,0,0,0,1,0]}],"children":[{"id":-2630422,"path":"DECK","assetBundleId":0,"components":[{"type":1,"id":-2630424,"data":[0,0,0,1,1,1,0,0,0,1]},{"type":18,"id":-2630426,"data":[1,5,458,[5,458],0,0,0,181,-1,0,1,1,0,0,1,1,1,1,1,1,15,24044,0,0,0,1,1,0,0.5,0,0]}],"children":[],"data":["Background",0,1,0,3]},{"id":-2630428,"path":"DECK","assetBundleId":0,"components":[{"type":1,"id":-2630430,"data":[0,0.100000001490116,0,0.899999976158142,0.899999976158142,0,0,0,0,1]},{"type":18,"id":-2630432,"data":[1,5,458,[5,458],0,0,0,182,-1,0,1,1,0,0,1,1,1,1,1,1,15,23896,0,0,0,1.13777780532837,1.13777780532837,0,0.5,0,0]}],"children":[],"data":["Icon",0,1,0,3]},{"id":-2630434,"path":"DECK","assetBundleId":0,"components":[{"type":1,"id":-2630436,"data":[0,0,0,1,1,1,0,0,0,1]},{"type":18,"id":-2630438,"data":[1,5,458,[5,458],0,0,0,183,-1,0,1,1,0,0,1,1,0,0,0,0.294117659330368,15,24044,0,0,0,1,1,0,0.5,0,0]}],"children":[],"data":["Dark",0,0,0,3]},{"id":-2630440,"path":"DECK","assetBundleId":0,"components":[{"type":1,"id":-2630442,"data":[0,0,0,1,1,1,0,0,0,1]},{"type":19,"id":-2630444,"data":[1,5,458,[5,458],1,0,0,180,-1,0,1,1,0,0,0,0,[],0,0.25,0.200000002980232,0,0.200000002980232,0,1,0,5,0.100000001490116,[[0,1,1,1,1,1,1,1,1,1],[0.02470436,0,0.1964752,1,0.601175,0.9162334,0.9988251,0.01568628],0],1,1,1,0,1,1,1,0.0156862754374743,0,0,1,[0,1,0,0,0,0,0,1,0,0,0,0,0,0]]}],"children":[],"data":["Trail",0,1,0,3]}],"data":["Tile - Spinach",0,1,0,3]},{"id":-2629660,"path":"DECK","assetBundleId":0,"components":[{"type":1,"id":113154,"data":[0,-1,0,1,1,1,0,0,0,1]},{"type":8,"id":113606,"enabled":1,"class":17,"data":[0,0,18,-2629676,18,-2629682,18,-2629670,19,-2629688,1,1,1,20,1.5,0.300000011920929,0,0,0.300000011920929,0.200000002980232,0,10,23884,0,0,0,0,[]]},{"type":20,"id":-2629662,"data":[0,0,0.699999988079071,0.800000011920929,0,1,1,0,1,0,0.0799999982118607,null,null]},{"type":21,"id":-2629664,"data":[1,null,null,1,0,1,0,0,0,0,1,0]}],"children":[{"id":-2629666,"path":"DECK","assetBundleId":0,"components":[{"type":1,"id":-2629668,"data":[0,0,0,1,1,1,0,0,0,1]},{"type":18,"id":-2629670,"data":[1,5,458,[5,458],0,0,0,191,-1,0,1,1,0,0,1,1,1,1,1,1,15,24044,0,0,0,1,1,0,0.5,0,0]}],"children":[],"data":["Background",0,1,0,3]},{"id":-2629672,"path":"DECK","assetBundleId":0,"components":[{"type":1,"id":-2629674,"data":[0,0.100000001490116,0,0.899999976158142,0.899999976158142,0,0,0,0,1]},{"type":18,"id":-2629676,"data":[1,5,458,[5,458],0,0,0,192,-1,0,1,1,0,0,1,1,1,1,1,1,15,23894,0,0,0,1.13777780532837,1.13777780532837,0,0.5,0,0]}],"children":[],"data":["Icon",0,1,0,3]},{"id":-2629678,"path":"DECK","assetBundleId":0,"components":[{"type":1,"id":-2629680,"data":[0,0,0,1,1,1,0,0,0,1]},{"type":18,"id":-2629682,"data":[1,5,458,[5,458],0,0,0,193,-1,0,1,1,0,0,1,1,0,0,0,0.294117659330368,15,24044,0,0,0,1,1,0,0.5,0,0]}],"children":[],"data":["Dark",0,0,0,3]},{"id":-2629684,"path":"DECK","assetBundleId":0,"components":[{"type":1,"id":-2629686,"data":[0,0,0,1,1,1,0,0,0,1]},{"type":19,"id":-2629688,"data":[1,5,458,[5,458],1,0,0,190,-1,0,1,1,0,0,0,0,[],0,0.25,0.200000002980232,0,0.200000002980232,0,1,0,5,0.100000001490116,[[0,1,1,1,1,1,1,1,1,1],[0.02470436,0,0.1964752,1,0.601175,0.9162334,0.9988251,0.01568628],0],1,1,1,0,1,1,1,0.0156862754374743,0,0,1,[0,1,0,0,0,0,0,1,0,0,0,0,0,0]]}],"children":[],"data":["Trail",0,1,0,3]}],"data":["Tile - Bread",0,1,0,3]},{"id":-2630018,"path":"DECK","assetBundleId":0,"components":[{"type":1,"id":113346,"data":[0,-2,0,1,1,1,0,0,0,1]},{"type":8,"id":113410,"enabled":1,"class":17,"data":[0,0,18,-2630034,18,-2630040,18,-2630028,19,-2630046,1,1,1,20,1.5,0.300000011920929,0,0,0.300000011920929,0.200000002980232,0,10,23902,0,0,0,0,[]]},{"type":20,"id":-2630020,"data":[0,0,0.699999988079071,0.800000011920929,0,1,1,0,1,0,0.0799999982118607,null,null]},{"type":21,"id":-2630022,"data":[1,null,null,1,0,1,0,0,0,0,1,0]}],"children":[{"id":-2630024,"path":"DECK","assetBundleId":0,"components":[{"type":1,"id":-2630026,"data":[0,0,0,1,1,1,0,0,0,1]},{"type":18,"id":-2630028,"data":[1,5,458,[5,458],0,0,0,201,-1,0,1,1,0,0,1,1,1,1,1,1,15,24044,0,0,0,1,1,0,0.5,0,0]}],"children":[],"data":["Background",0,1,0,3]},{"id":-2630030,"path":"DECK","assetBundleId":0,"components":[{"type":1,"id":-2630032,"data":[0,0.100000001490116,0,0.899999976158142,0.899999976158142,0,0,0,0,1]},{"type":18,"id":-2630034,"data":[1,5,458,[5,458],0,0,0,202,-1,0,1,1,0,0,1,1,1,1,1,1,15,23900,0,0,0,1.13777780532837,1.13777780532837,0,0.5,0,0]}],"children":[],"data":["Icon",0,1,0,3]},{"id":-2630036,"path":"DECK","assetBundleId":0,"components":[{"type":1,"id":-2630038,"data":[0,0,0,1,1,1,0,0,0,1]},{"type":18,"id":-2630040,"data":[1,5,458,[5,458],0,0,0,203,-1,0,1,1,0,0,1,1,0,0,0,0.294117659330368,15,24044,0,0,0,1,1,0,0.5,0,0]}],"children":[],"data":["Dark",0,0,0,3]},{"id":-2630042,"path":"DECK","assetBundleId":0,"components":[{"type":1,"id":-2630044,"data":[0,0,0,1,1,1,0,0,0,1]},{"type":19,"id":-2630046,"data":[1,5,458,[5,458],1,0,0,200,-1,0,1,1,0,0,0,0,[],0,0.25,0.200000002980232,0,0.200000002980232,0,1,0,5,0.100000001490116,[[0,1,1,1,1,1,1,1,1,1],[0.02470436,0,0.1964752,1,0.601175,0.9162334,0.9988251,0.01568628],0],1,1,1,0,1,1,1,0.0156862754374743,0,0,1,[0,1,0,0,0,0,0,1,0,0,0,0,0,0]]}],"children":[],"data":["Trail",0,1,0,3]}],"data":["Tile - Butter",0,1,0,3]},{"id":-2629944,"path":"DECK","assetBundleId":0,"components":[{"type":1,"id":113324,"data":[0,-3,0,1,1,1,0,0,0,1]},{"type":8,"id":113540,"enabled":1,"class":17,"data":[0,0,18,-2629960,18,-2629966,18,-2629954,19,-2629972,1,1,1,20,1.5,0.300000011920929,0,0,0.300000011920929,0.200000002980232,0,10,23902,0,0,0,0,[]]},{"type":20,"id":-2629946,"data":[0,0,0.699999988079071,0.800000011920929,0,1,1,0,1,0,0.0799999982118607,null,null]},{"type":21,"id":-2629948,"data":[1,null,null,1,0,1,0,0,0,0,1,0]}],"children":[{"id":-2629950,"path":"DECK","assetBundleId":0,"components":[{"type":1,"id":-2629952,"data":[0,0,0,1,1,1,0,0,0,1]},{"type":18,"id":-2629954,"data":[1,5,458,[5,458],0,0,0,211,-1,0,1,1,0,0,1,1,1,1,1,1,15,24044,0,0,0,1,1,0,0.5,0,0]}],"children":[],"data":["Background",0,1,0,3]},{"id":-2629956,"path":"DECK","assetBundleId":0,"components":[{"type":1,"id":-2629958,"data":[0,0.100000001490116,0,0.899999976158142,0.899999976158142,0,0,0,0,1]},{"type":18,"id":-2629960,"data":[1,5,458,[5,458],0,0,0,212,-1,0,1,1,0,0,1,1,1,1,1,1,15,23900,0,0,0,1.13777780532837,1.13777780532837,0,0.5,0,0]}],"children":[],"data":["Icon",0,1,0,3]},{"id":-2629962,"path":"DECK","assetBundleId":0,"components":[{"type":1,"id":-2629964,"data":[0,0,0,1,1,1,0,0,0,1]},{"type":18,"id":-2629966,"data":[1,5,458,[5,458],0,0,0,213,-1,0,1,1,0,0,1,1,0,0,0,0.294117659330368,15,24044,0,0,0,1,1,0,0.5,0,0]}],"children":[],"data":["Dark",0,0,0,3]},{"id":-2629968,"path":"DECK","assetBundleId":0,"components":[{"type":1,"id":-2629970,"data":[0,0,0,1,1,1,0,0,0,1]},{"type":19,"id":-2629972,"data":[1,5,458,[5,458],1,0,0,210,-1,0,1,1,0,0,0,0,[],0,0.25,0.200000002980232,0,0.200000002980232,0,1,0,5,0.100000001490116,[[0,1,1,1,1,1,1,1,1,1],[0.02470436,0,0.1964752,1,0.601175,0.9162334,0.9988251,0.01568628],0],1,1,1,0,1,1,1,0.0156862754374743,0,0,1,[0,1,0,0,0,0,0,1,0,0,0,0,0,0]]}],"children":[],"data":["Trail",0,1,0,3]}],"data":["Tile - Butter",0,1,0,3]},{"id":-2630566,"path":"DECK","assetBundleId":0,"components":[{"type":1,"id":113642,"data":[0,-4,0,1,1,1,0,0,0,1]},{"type":8,"id":113736,"enabled":1,"class":17,"data":[0,0,18,-2630582,18,-2630588,18,-2630576,19,-2630594,1,1,1,20,1.5,0.300000011920929,0,0,0.300000011920929,0.200000002980232,0,10,23928,0,0,0,0,[]]},{"type":20,"id":-2630568,"data":[0,0,0.699999988079071,0.800000011920929,0,1,1,0,1,0,0.0799999982118607,null,null]},{"type":21,"id":-2630570,"data":[1,null,null,1,0,1,0,0,0,0,1,0]}],"children":[{"id":-2630572,"path":"DECK","assetBundleId":0,"components":[{"type":1,"id":-2630574,"data":[0,0,0,1,1,1,0,0,0,1]},{"type":18,"id":-2630576,"data":[1,5,458,[5,458],0,0,0,221,-1,0,1,1,0,0,1,1,1,1,1,1,15,24044,0,0,0,1,1,0,0.5,0,0]}],"children":[],"data":["Background",0,1,0,3]},{"id":-2630578,"path":"DECK","assetBundleId":0,"components":[{"type":1,"id":-2630580,"data":[0,0.100000001490116,0,0.899999976158142,0.899999976158142,0,0,0,0,1]},{"type":18,"id":-2630582,"data":[1,5,458,[5,458],0,0,0,222,-1,0,1,1,0,0,1,1,1,1,1,1,15,23926,0,0,0,1.13777780532837,1.13777780532837,0,0.5,0,0]}],"children":[],"data":["Icon",0,1,0,3]},{"id":-2630584,"path":"DECK","assetBundleId":0,"components":[{"type":1,"id":-2630586,"data":[0,0,0,1,1,1,0,0,0,1]},{"type":18,"id":-2630588,"data":[1,5,458,[5,458],0,0,0,223,-1,0,1,1,0,0,1,1,0,0,0,0.294117659330368,15,24044,0,0,0,1,1,0,0.5,0,0]}],"children":[],"data":["Dark",0,0,0,3]},{"id":-2630590,"path":"DECK","assetBundleId":0,"components":[{"type":1,"id":-2630592,"data":[0,0,0,1,1,1,0,0,0,1]},{"type":19,"id":-2630594,"data":[1,5,458,[5,458],1,0,0,220,-1,0,1,1,0,0,0,0,[],0,0.25,0.200000002980232,0,0.200000002980232,0,1,0,5,0.100000001490116,[[0,1,1,1,1,1,1,1,1,1],[0.02470436,0,0.1964752,1,0.601175,0.9162334,0.9988251,0.01568628],0],1,1,1,0,1,1,1,0.0156862754374743,0,0,1,[0,1,0,0,0,0,0,1,0,0,0,0,0,0]]}],"children":[],"data":["Trail",0,1,0,3]}],"data":["Tile - FetaChees",0,1,0,3]}],"data":["Column - 3",0,1,0,0]},{"id":113390,"path":"DECK","assetBundleId":0,"components":[{"type":1,"id":113392,"data":[4,0,0,1,1,1,0,0,0,1]}],"children":[{"id":-2630094,"path":"DECK","assetBundleId":0,"components":[{"type":1,"id":113402,"data":[0,0,0,1,1,1,0,0,0,1]},{"type":8,"id":113634,"enabled":1,"class":17,"data":[0,0,18,-2630110,18,-2630116,18,-2630104,19,-2630122,1,1,1,20,1.5,0.300000011920929,0,0,0.300000011920929,0.200000002980232,0,10,23906,0,0,0,0,[]]},{"type":20,"id":-2630096,"data":[0,0,0.699999988079071,0.800000011920929,0,1,1,0,1,0,0.0799999982118607,null,null]},{"type":21,"id":-2630098,"data":[1,null,null,1,0,1,0,0,0,0,1,0]}],"children":[{"id":-2630100,"path":"DECK","assetBundleId":0,"components":[{"type":1,"id":-2630102,"data":[0,0,0,1,1,1,0,0,0,1]},{"type":18,"id":-2630104,"data":[1,5,458,[5,458],0,0,0,101,-1,0,1,1,0,0,1,1,1,1,1,1,15,24044,0,0,0,1,1,0,0.5,0,0]}],"children":[],"data":["Background",0,1,0,3]},{"id":-2630106,"path":"DECK","assetBundleId":0,"components":[{"type":1,"id":-2630108,"data":[0,0.100000001490116,0,0.899999976158142,0.899999976158142,0,0,0,0,1]},{"type":18,"id":-2630110,"data":[1,5,458,[5,458],0,0,0,102,-1,0,1,1,0,0,1,1,1,1,1,1,15,23904,0,0,0,1.13777780532837,1.13777780532837,0,0.5,0,0]}],"children":[],"data":["Icon",0,1,0,3]},{"id":-2630112,"path":"DECK","assetBundleId":0,"components":[{"type":1,"id":-2630114,"data":[0,0,0,1,1,1,0,0,0,1]},{"type":18,"id":-2630116,"data":[1,5,458,[5,458],0,0,0,103,-1,0,1,1,0,0,1,1,0,0,0,0.294117659330368,15,24044,0,0,0,1,1,0,0.5,0,0]}],"children":[],"data":["Dark",0,0,0,3]},{"id":-2630118,"path":"DECK","assetBundleId":0,"components":[{"type":1,"id":-2630120,"data":[0,0,0,1,1,1,0,0,0,1]},{"type":19,"id":-2630122,"data":[1,5,458,[5,458],1,0,0,100,-1,0,1,1,0,0,0,0,[],0,0.25,0.200000002980232,0,0.200000002980232,0,1,0,5,0.100000001490116,[[0,1,1,1,1,1,1,1,1,1],[0.02470436,0,0.1964752,1,0.601175,0.9162334,0.9988251,0.01568628],0],1,1,1,0,1,1,1,0.0156862754374743,0,0,1,[0,1,0,0,0,0,0,1,0,0,0,0,0,0]]}],"children":[],"data":["Trail",0,1,0,3]}],"data":["Tile - Apples",0,1,0,3]},{"id":-2630890,"path":"DECK","assetBundleId":0,"components":[{"type":1,"id":113780,"data":[0,-1,0,1,1,1,0,0,0,1]},{"type":8,"id":113782,"enabled":1,"class":17,"data":[0,0,18,-2630906,18,-2630912,18,-2630900,19,-2630918,1,1,1,20,1.5,0.300000011920929,0,0,0.300000011920929,0.200000002980232,0,10,23884,0,0,0,0,[]]},{"type":20,"id":-2630892,"data":[0,0,0.699999988079071,0.800000011920929,0,1,1,0,1,0,0.0799999982118607,null,null]},{"type":21,"id":-2630894,"data":[1,null,null,1,0,1,0,0,0,0,1,0]}],"children":[{"id":-2630896,"path":"DECK","assetBundleId":0,"components":[{"type":1,"id":-2630898,"data":[0,0,0,1,1,1,0,0,0,1]},{"type":18,"id":-2630900,"data":[1,5,458,[5,458],0,0,0,111,-1,0,1,1,0,0,1,1,1,1,1,1,15,24044,0,0,0,1,1,0,0.5,0,0]}],"children":[],"data":["Background",0,1,0,3]},{"id":-2630902,"path":"DECK","assetBundleId":0,"components":[{"type":1,"id":-2630904,"data":[0,0.100000001490116,0,0.899999976158142,0.899999976158142,0,0,0,0,1]},{"type":18,"id":-2630906,"data":[1,5,458,[5,458],0,0,0,112,-1,0,1,1,0,0,1,1,1,1,1,1,15,23894,0,0,0,1.13777780532837,1.13777780532837,0,0.5,0,0]}],"children":[],"data":["Icon",0,1,0,3]},{"id":-2630908,"path":"DECK","assetBundleId":0,"components":[{"type":1,"id":-2630910,"data":[0,0,0,1,1,1,0,0,0,1]},{"type":18,"id":-2630912,"data":[1,5,458,[5,458],0,0,0,113,-1,0,1,1,0,0,1,1,0,0,0,0.294117659330368,15,24044,0,0,0,1,1,0,0.5,0,0]}],"children":[],"data":["Dark",0,0,0,3]},{"id":-2630914,"path":"DECK","assetBundleId":0,"components":[{"type":1,"id":-2630916,"data":[0,0,0,1,1,1,0,0,0,1]},{"type":19,"id":-2630918,"data":[1,5,458,[5,458],1,0,0,110,-1,0,1,1,0,0,0,0,[],0,0.25,0.200000002980232,0,0.200000002980232,0,1,0,5,0.100000001490116,[[0,1,1,1,1,1,1,1,1,1],[0.02470436,0,0.1964752,1,0.601175,0.9162334,0.9988251,0.01568628],0],1,1,1,0,1,1,1,0.0156862754374743,0,0,1,[0,1,0,0,0,0,0,1,0,0,0,0,0,0]]}],"children":[],"data":["Trail",0,1,0,3]}],"data":["Tile - Bread",0,1,0,3]},{"id":-2630334,"path":"DECK","assetBundleId":0,"components":[{"type":1,"id":113574,"data":[0,-2,0,1,1,1,0,0,0,1]},{"type":8,"id":113576,"enabled":1,"class":17,"data":[0,0,18,-2630350,18,-2630356,18,-2630344,19,-2630362,1,1,1,20,1.5,0.300000011920929,0,0,0.300000011920929,0.200000002980232,0,10,23882,0,0,0,0,[]]},{"type":20,"id":-2630336,"data":[0,0,0.699999988079071,0.800000011920929,0,1,1,0,1,0,0.0799999982118607,null,null]},{"type":21,"id":-2630338,"data":[1,null,null,1,0,1,0,0,0,0,1,0]}],"children":[{"id":-2630340,"path":"DECK","assetBundleId":0,"components":[{"type":1,"id":-2630342,"data":[0,0,0,1,1,1,0,0,0,1]},{"type":18,"id":-2630344,"data":[1,5,458,[5,458],0,0,0,121,-1,0,1,1,0,0,1,1,1,1,1,1,15,24044,0,0,0,1,1,0,0.5,0,0]}],"children":[],"data":["Background",0,1,0,3]},{"id":-2630346,"path":"DECK","assetBundleId":0,"components":[{"type":1,"id":-2630348,"data":[0,0.100000001490116,0,0.899999976158142,0.899999976158142,0,0,0,0,1]},{"type":18,"id":-2630350,"data":[1,5,458,[5,458],0,0,0,122,-1,0,1,1,0,0,1,1,1,1,1,1,15,23944,0,0,0,1.13777780532837,1.13777780532837,0,0.5,0,0]}],"children":[],"data":["Icon",0,1,0,3]},{"id":-2630352,"path":"DECK","assetBundleId":0,"components":[{"type":1,"id":-2630354,"data":[0,0,0,1,1,1,0,0,0,1]},{"type":18,"id":-2630356,"data":[1,5,458,[5,458],0,0,0,123,-1,0,1,1,0,0,1,1,0,0,0,0.294117659330368,15,24044,0,0,0,1,1,0,0.5,0,0]}],"children":[],"data":["Dark",0,0,0,3]},{"id":-2630358,"path":"DECK","assetBundleId":0,"components":[{"type":1,"id":-2630360,"data":[0,0,0,1,1,1,0,0,0,1]},{"type":19,"id":-2630362,"data":[1,5,458,[5,458],1,0,0,120,-1,0,1,1,0,0,0,0,[],0,0.25,0.200000002980232,0,0.200000002980232,0,1,0,5,0.100000001490116,[[0,1,1,1,1,1,1,1,1,1],[0.02470436,0,0.1964752,1,0.601175,0.9162334,0.9988251,0.01568628],0],1,1,1,0,1,1,1,0.0156862754374743,0,0,1,[0,1,0,0,0,0,0,1,0,0,0,0,0,0]]}],"children":[],"data":["Trail",0,1,0,3]}],"data":["Tile - Salmon",0,1,0,3]},{"id":-2630304,"path":"DECK","assetBundleId":0,"components":[{"type":1,"id":113554,"data":[0,-3,0,1,1,1,0,0,0,1]},{"type":8,"id":113556,"enabled":1,"class":17,"data":[0,0,18,-2630320,18,-2630326,18,-2630314,19,-2630332,1,1,1,20,1.5,0.300000011920929,0,0,0.300000011920929,0.200000002980232,0,10,23886,0,0,0,0,[]]},{"type":20,"id":-2630306,"data":[0,0,0.699999988079071,0.800000011920929,0,1,1,0,1,0,0.0799999982118607,null,null]},{"type":21,"id":-2630308,"data":[1,null,null,1,0,1,0,0,0,0,1,0]}],"children":[{"id":-2630310,"path":"DECK","assetBundleId":0,"components":[{"type":1,"id":-2630312,"data":[0,0,0,1,1,1,0,0,0,1]},{"type":18,"id":-2630314,"data":[1,5,458,[5,458],0,0,0,231,-1,0,1,1,0,0,1,1,1,1,1,1,15,24044,0,0,0,1,1,0,0.5,0,0]}],"children":[],"data":["Background",0,1,0,3]},{"id":-2630316,"path":"DECK","assetBundleId":0,"components":[{"type":1,"id":-2630318,"data":[0,0.100000001490116,0,0.899999976158142,0.899999976158142,0,0,0,0,1]},{"type":18,"id":-2630320,"data":[1,5,458,[5,458],0,0,0,232,-1,0,1,1,0,0,1,1,1,1,1,1,15,23940,0,0,0,1.13777780532837,1.13777780532837,0,0.5,0,0]}],"children":[],"data":["Icon",0,1,0,3]},{"id":-2630322,"path":"DECK","assetBundleId":0,"components":[{"type":1,"id":-2630324,"data":[0,0,0,1,1,1,0,0,0,1]},{"type":18,"id":-2630326,"data":[1,5,458,[5,458],0,0,0,233,-1,0,1,1,0,0,1,1,0,0,0,0.294117659330368,15,24044,0,0,0,1,1,0,0.5,0,0]}],"children":[],"data":["Dark",0,0,0,3]},{"id":-2630328,"path":"DECK","assetBundleId":0,"components":[{"type":1,"id":-2630330,"data":[0,0,0,1,1,1,0,0,0,1]},{"type":19,"id":-2630332,"data":[1,5,458,[5,458],1,0,0,230,-1,0,1,1,0,0,0,0,[],0,0.25,0.200000002980232,0,0.200000002980232,0,1,0,5,0.100000001490116,[[0,1,1,1,1,1,1,1,1,1],[0.02470436,0,0.1964752,1,0.601175,0.9162334,0.9988251,0.01568628],0],1,1,1,0,1,1,1,0.0156862754374743,0,0,1,[0,1,0,0,0,0,0,1,0,0,0,0,0,0]]}],"children":[],"data":["Trail",0,1,0,3]}],"data":["Tile - Eggs",0,1,0,3]},{"id":-2630656,"path":"DECK","assetBundleId":0,"components":[{"type":1,"id":113658,"data":[0,-4,0,1,1,1,0,0,0,1]},{"type":8,"id":113662,"enabled":1,"class":17,"data":[0,0,18,-2630672,18,-2630678,18,-2630666,19,-2630684,1,1,1,20,1.5,0.300000011920929,0,0,0.300000011920929,0.200000002980232,0,10,23916,0,0,0,0,[]]},{"type":20,"id":-2630658,"data":[0,0,0.699999988079071,0.800000011920929,0,1,1,0,1,0,0.0799999982118607,null,null]},{"type":21,"id":-2630660,"data":[1,null,null,1,0,1,0,0,0,0,1,0]}],"children":[{"id":-2630662,"path":"DECK","assetBundleId":0,"components":[{"type":1,"id":-2630664,"data":[0,0,0,1,1,1,0,0,0,1]},{"type":18,"id":-2630666,"data":[1,5,458,[5,458],0,0,0,241,-1,0,1,1,0,0,1,1,1,1,1,1,15,24044,0,0,0,1,1,0,0.5,0,0]}],"children":[],"data":["Background",0,1,0,3]},{"id":-2630668,"path":"DECK","assetBundleId":0,"components":[{"type":1,"id":-2630670,"data":[0,0.100000001490116,0,0.899999976158142,0.899999976158142,0,0,0,0,1]},{"type":18,"id":-2630672,"data":[1,5,458,[5,458],0,0,0,242,-1,0,1,1,0,0,1,1,1,1,1,1,15,23914,0,0,0,1.13777780532837,1.13777780532837,0,0.5,0,0]}],"children":[],"data":["Icon",0,1,0,3]},{"id":-2630674,"path":"DECK","assetBundleId":0,"components":[{"type":1,"id":-2630676,"data":[0,0,0,1,1,1,0,0,0,1]},{"type":18,"id":-2630678,"data":[1,5,458,[5,458],0,0,0,243,-1,0,1,1,0,0,1,1,0,0,0,0.294117659330368,15,24044,0,0,0,1,1,0,0.5,0,0]}],"children":[],"data":["Dark",0,0,0,3]},{"id":-2630680,"path":"DECK","assetBundleId":0,"components":[{"type":1,"id":-2630682,"data":[0,0,0,1,1,1,0,0,0,1]},{"type":19,"id":-2630684,"data":[1,5,458,[5,458],1,0,0,240,-1,0,1,1,0,0,0,0,[],0,0.25,0.200000002980232,0,0.200000002980232,0,1,0,5,0.100000001490116,[[0,1,1,1,1,1,1,1,1,1],[0.02470436,0,0.1964752,1,0.601175,0.9162334,0.9988251,0.01568628],0],1,1,1,0,1,1,1,0.0156862754374743,0,0,1,[0,1,0,0,0,0,0,1,0,0,0,0,0,0]]}],"children":[],"data":["Trail",0,1,0,3]}],"data":["Tile - Beacon",0,1,0,3]}],"data":["Column - 4",0,1,0,0]},{"id":113498,"path":"DECK","assetBundleId":0,"components":[{"type":1,"id":113500,"data":[5,0.800000011920929,0,1,1,1,0,0,0,1]}],"children":[{"id":-2630056,"path":"DECK","assetBundleId":0,"components":[{"type":1,"id":113370,"data":[0,0,0,1,1,1,0,0,0,1]},{"type":8,"id":113372,"enabled":1,"class":17,"data":[0,0,18,-2630072,18,-2630078,18,-2630066,19,-2630084,1,1,1,20,1.5,0.300000011920929,0,0,0.300000011920929,0.200000002980232,0,10,23928,0,0,0,0,[]]},{"type":20,"id":-2630058,"data":[0,0,0.699999988079071,0.800000011920929,0,1,1,0,1,0,0.0799999982118607,null,null]},{"type":21,"id":-2630060,"data":[1,null,null,1,0,1,0,0,0,0,1,0]}],"children":[{"id":-2630062,"path":"DECK","assetBundleId":0,"components":[{"type":1,"id":-2630064,"data":[0,0,0,1,1,1,0,0,0,1]},{"type":18,"id":-2630066,"data":[1,5,458,[5,458],0,0,0,181,-1,0,1,1,0,0,1,1,1,1,1,1,15,24044,0,0,0,1,1,0,0.5,0,0]}],"children":[],"data":["Background",0,1,0,3]},{"id":-2630068,"path":"DECK","assetBundleId":0,"components":[{"type":1,"id":-2630070,"data":[0,0.100000001490116,0,0.899999976158142,0.899999976158142,0,0,0,0,1]},{"type":18,"id":-2630072,"data":[1,5,458,[5,458],0,0,0,182,-1,0,1,1,0,0,1,1,1,1,1,1,15,23926,0,0,0,1.13777780532837,1.13777780532837,0,0.5,0,0]}],"children":[],"data":["Icon",0,1,0,3]},{"id":-2630074,"path":"DECK","assetBundleId":0,"components":[{"type":1,"id":-2630076,"data":[0,0,0,1,1,1,0,0,0,1]},{"type":18,"id":-2630078,"data":[1,5,458,[5,458],0,0,0,183,-1,0,1,1,0,0,1,1,0,0,0,0.294117659330368,15,24044,0,0,0,1,1,0,0.5,0,0]}],"children":[],"data":["Dark",0,0,0,3]},{"id":-2630080,"path":"DECK","assetBundleId":0,"components":[{"type":1,"id":-2630082,"data":[0,0,0,1,1,1,0,0,0,1]},{"type":19,"id":-2630084,"data":[1,5,458,[5,458],1,0,0,180,-1,0,1,1,0,0,0,0,[],0,0.25,0.200000002980232,0,0.200000002980232,0,1,0,5,0.100000001490116,[[0,1,1,1,1,1,1,1,1,1],[0.02470436,0,0.1964752,1,0.601175,0.9162334,0.9988251,0.01568628],0],1,1,1,0,1,1,1,0.0156862754374743,0,0,1,[0,1,0,0,0,0,0,1,0,0,0,0,0,0]]}],"children":[],"data":["Trail",0,1,0,3]}],"data":["Tile - FetaChees",0,1,0,3]},{"id":-2630162,"path":"DECK","assetBundleId":0,"components":[{"type":1,"id":113434,"data":[0,-1,0,1,1,1,0,0,0,1]},{"type":8,"id":113436,"enabled":1,"class":17,"data":[0,0,18,-2630178,18,-2630184,18,-2630172,19,-2630190,1,1,1,20,1.5,0.300000011920929,0,0,0.300000011920929,0.200000002980232,0,10,23932,0,0,0,0,[]]},{"type":20,"id":-2630164,"data":[0,0,0.699999988079071,0.800000011920929,0,1,1,0,1,0,0.0799999982118607,null,null]},{"type":21,"id":-2630166,"data":[1,null,null,1,0,1,0,0,0,0,1,0]}],"children":[{"id":-2630168,"path":"DECK","assetBundleId":0,"components":[{"type":1,"id":-2630170,"data":[0,0,0,1,1,1,0,0,0,1]},{"type":18,"id":-2630172,"data":[1,5,458,[5,458],0,0,0,191,-1,0,1,1,0,0,1,1,1,1,1,1,15,24044,0,0,0,1,1,0,0.5,0,0]}],"children":[],"data":["Background",0,1,0,3]},{"id":-2630174,"path":"DECK","assetBundleId":0,"components":[{"type":1,"id":-2630176,"data":[0,0.100000001490116,0,0.899999976158142,0.899999976158142,0,0,0,0,1]},{"type":18,"id":-2630178,"data":[1,5,458,[5,458],0,0,0,192,-1,0,1,1,0,0,1,1,1,1,1,1,15,23930,0,0,0,1.13777780532837,1.13777780532837,0,0.5,0,0]}],"children":[],"data":["Icon",0,1,0,3]},{"id":-2630180,"path":"DECK","assetBundleId":0,"components":[{"type":1,"id":-2630182,"data":[0,0,0,1,1,1,0,0,0,1]},{"type":18,"id":-2630184,"data":[1,5,458,[5,458],0,0,0,193,-1,0,1,1,0,0,1,1,0,0,0,0.294117659330368,15,24044,0,0,0,1,1,0,0.5,0,0]}],"children":[],"data":["Dark",0,0,0,3]},{"id":-2630186,"path":"DECK","assetBundleId":0,"components":[{"type":1,"id":-2630188,"data":[0,0,0,1,1,1,0,0,0,1]},{"type":19,"id":-2630190,"data":[1,5,458,[5,458],1,0,0,190,-1,0,1,1,0,0,0,0,[],0,0.25,0.200000002980232,0,0.200000002980232,0,1,0,5,0.100000001490116,[[0,1,1,1,1,1,1,1,1,1],[0.02470436,0,0.1964752,1,0.601175,0.9162334,0.9988251,0.01568628],0],1,1,1,0,1,1,1,0.0156862754374743,0,0,1,[0,1,0,0,0,0,0,1,0,0,0,0,0,0]]}],"children":[],"data":["Trail",0,1,0,3]}],"data":["Tile - TofuChees",0,1,0,3]},{"id":-2629690,"path":"DECK","assetBundleId":0,"components":[{"type":1,"id":113190,"data":[0,-2,0,1,1,1,0,0,0,1]},{"type":8,"id":113430,"enabled":1,"class":17,"data":[0,0,18,-2629706,18,-2629712,18,-2629700,19,-2629718,1,1,1,20,1.5,0.300000011920929,0,0,0.300000011920929,0.200000002980232,0,10,23898,0,0,0,0,[]]},{"type":20,"id":-2629692,"data":[0,0,0.699999988079071,0.800000011920929,0,1,1,0,1,0,0.0799999982118607,null,null]},{"type":21,"id":-2629694,"data":[1,null,null,1,0,1,0,0,0,0,1,0]}],"children":[{"id":-2629696,"path":"DECK","assetBundleId":0,"components":[{"type":1,"id":-2629698,"data":[0,0,0,1,1,1,0,0,0,1]},{"type":18,"id":-2629700,"data":[1,5,458,[5,458],0,0,0,201,-1,0,1,1,0,0,1,1,1,1,1,1,15,24044,0,0,0,1,1,0,0.5,0,0]}],"children":[],"data":["Background",0,1,0,3]},{"id":-2629702,"path":"DECK","assetBundleId":0,"components":[{"type":1,"id":-2629704,"data":[0,0.100000001490116,0,0.899999976158142,0.899999976158142,0,0,0,0,1]},{"type":18,"id":-2629706,"data":[1,5,458,[5,458],0,0,0,202,-1,0,1,1,0,0,1,1,1,1,1,1,15,23896,0,0,0,1.13777780532837,1.13777780532837,0,0.5,0,0]}],"children":[],"data":["Icon",0,1,0,3]},{"id":-2629708,"path":"DECK","assetBundleId":0,"components":[{"type":1,"id":-2629710,"data":[0,0,0,1,1,1,0,0,0,1]},{"type":18,"id":-2629712,"data":[1,5,458,[5,458],0,0,0,203,-1,0,1,1,0,0,1,1,0,0,0,0.294117659330368,15,24044,0,0,0,1,1,0,0.5,0,0]}],"children":[],"data":["Dark",0,0,0,3]},{"id":-2629714,"path":"DECK","assetBundleId":0,"components":[{"type":1,"id":-2629716,"data":[0,0,0,1,1,1,0,0,0,1]},{"type":19,"id":-2629718,"data":[1,5,458,[5,458],1,0,0,200,-1,0,1,1,0,0,0,0,[],0,0.25,0.200000002980232,0,0.200000002980232,0,1,0,5,0.100000001490116,[[0,1,1,1,1,1,1,1,1,1],[0.02470436,0,0.1964752,1,0.601175,0.9162334,0.9988251,0.01568628],0],1,1,1,0,1,1,1,0.0156862754374743,0,0,1,[0,1,0,0,0,0,0,1,0,0,0,0,0,0]]}],"children":[],"data":["Trail",0,1,0,3]}],"data":["Tile - Spinach",0,1,0,3]},{"id":-2630732,"path":"DECK","assetBundleId":0,"components":[{"type":1,"id":113692,"data":[0,-3,0,1,1,1,0,0,0,1]},{"type":8,"id":113694,"enabled":1,"class":17,"data":[0,0,18,-2630748,18,-2630754,18,-2630742,19,-2630760,1,1,1,20,1.5,0.300000011920929,0,0,0.300000011920929,0.200000002980232,0,10,23932,0,0,0,0,[]]},{"type":20,"id":-2630734,"data":[0,0,0.699999988079071,0.800000011920929,0,1,1,0,1,0,0.0799999982118607,null,null]},{"type":21,"id":-2630736,"data":[1,null,null,1,0,1,0,0,0,0,1,0]}],"children":[{"id":-2630738,"path":"DECK","assetBundleId":0,"components":[{"type":1,"id":-2630740,"data":[0,0,0,1,1,1,0,0,0,1]},{"type":18,"id":-2630742,"data":[1,5,458,[5,458],0,0,0,211,-1,0,1,1,0,0,1,1,1,1,1,1,15,24044,0,0,0,1,1,0,0.5,0,0]}],"children":[],"data":["Background",0,1,0,3]},{"id":-2630744,"path":"DECK","assetBundleId":0,"components":[{"type":1,"id":-2630746,"data":[0,0.100000001490116,0,0.899999976158142,0.899999976158142,0,0,0,0,1]},{"type":18,"id":-2630748,"data":[1,5,458,[5,458],0,0,0,212,-1,0,1,1,0,0,1,1,1,1,1,1,15,23930,0,0,0,1.13777780532837,1.13777780532837,0,0.5,0,0]}],"children":[],"data":["Icon",0,1,0,3]},{"id":-2630750,"path":"DECK","assetBundleId":0,"components":[{"type":1,"id":-2630752,"data":[0,0,0,1,1,1,0,0,0,1]},{"type":18,"id":-2630754,"data":[1,5,458,[5,458],0,0,0,213,-1,0,1,1,0,0,1,1,0,0,0,0.294117659330368,15,24044,0,0,0,1,1,0,0.5,0,0]}],"children":[],"data":["Dark",0,0,0,3]},{"id":-2630756,"path":"DECK","assetBundleId":0,"components":[{"type":1,"id":-2630758,"data":[0,0,0,1,1,1,0,0,0,1]},{"type":19,"id":-2630760,"data":[1,5,458,[5,458],1,0,0,210,-1,0,1,1,0,0,0,0,[],0,0.25,0.200000002980232,0,0.200000002980232,0,1,0,5,0.100000001490116,[[0,1,1,1,1,1,1,1,1,1],[0.02470436,0,0.1964752,1,0.601175,0.9162334,0.9988251,0.01568628],0],1,1,1,0,1,1,1,0.0156862754374743,0,0,1,[0,1,0,0,0,0,0,1,0,0,0,0,0,0]]}],"children":[],"data":["Trail",0,1,0,3]}],"data":["Tile - TofuChees",0,1,0,3]},{"id":-2629630,"path":"DECK","assetBundleId":0,"components":[{"type":1,"id":113146,"data":[0,-4,0,1,1,1,0,0,0,1]},{"type":8,"id":113178,"enabled":1,"class":17,"data":[0,0,18,-2629646,18,-2629652,18,-2629640,19,-2629658,1,1,1,20,1.5,0.300000011920929,0,0,0.300000011920929,0.200000002980232,0,10,23880,0,0,0,0,[]]},{"type":20,"id":-2629632,"data":[0,0,0.699999988079071,0.800000011920929,0,1,1,0,1,0,0.0799999982118607,null,null]},{"type":21,"id":-2629634,"data":[1,null,null,1,0,1,0,0,0,0,1,0]}],"children":[{"id":-2629636,"path":"DECK","assetBundleId":0,"components":[{"type":1,"id":-2629638,"data":[0,0,0,1,1,1,0,0,0,1]},{"type":18,"id":-2629640,"data":[1,5,458,[5,458],0,0,0,221,-1,0,1,1,0,0,1,1,1,1,1,1,15,24044,0,0,0,1,1,0,0.5,0,0]}],"children":[],"data":["Background",0,1,0,3]},{"id":-2629642,"path":"DECK","assetBundleId":0,"components":[{"type":1,"id":-2629644,"data":[0,0.100000001490116,0,0.899999976158142,0.899999976158142,0,0,0,0,1]},{"type":18,"id":-2629646,"data":[1,5,458,[5,458],0,0,0,222,-1,0,1,1,0,0,1,1,1,1,1,1,15,23874,0,0,0,1.13777780532837,1.13777780532837,0,0.5,0,0]}],"children":[],"data":["Icon",0,1,0,3]},{"id":-2629648,"path":"DECK","assetBundleId":0,"components":[{"type":1,"id":-2629650,"data":[0,0,0,1,1,1,0,0,0,1]},{"type":18,"id":-2629652,"data":[1,5,458,[5,458],0,0,0,223,-1,0,1,1,0,0,1,1,0,0,0,0.294117659330368,15,24044,0,0,0,1,1,0,0.5,0,0]}],"children":[],"data":["Dark",0,0,0,3]},{"id":-2629654,"path":"DECK","assetBundleId":0,"components":[{"type":1,"id":-2629656,"data":[0,0,0,1,1,1,0,0,0,1]},{"type":19,"id":-2629658,"data":[1,5,458,[5,458],1,0,0,220,-1,0,1,1,0,0,0,0,[],0,0.25,0.200000002980232,0,0.200000002980232,0,1,0,5,0.100000001490116,[[0,1,1,1,1,1,1,1,1,1],[0.02470436,0,0.1964752,1,0.601175,0.9162334,0.9988251,0.01568628],0],1,1,1,0,1,1,1,0.0156862754374743,0,0,1,[0,1,0,0,0,0,0,1,0,0,0,0,0,0]]}],"children":[],"data":["Trail",0,1,0,3]}],"data":["Tile - Cinamon",0,1,0,3]}],"data":["Column - 5",0,1,0,0]},{"id":113418,"path":"DECK","assetBundleId":0,"components":[{"type":1,"id":113420,"data":[6,1.20000004768372,0,1,1,1,0,0,0,1]}],"children":[{"id":-2629720,"path":"DECK","assetBundleId":0,"components":[{"type":1,"id":113240,"data":[0,0,0,1,1,1,0,0,0,1]},{"type":8,"id":113398,"enabled":1,"class":17,"data":[0,0,18,-2629736,18,-2629742,18,-2629730,19,-2629748,1,1,1,20,1.5,0.300000011920929,0,0,0.300000011920929,0.200000002980232,0,10,23902,0,0,0,0,[]]},{"type":20,"id":-2629722,"data":[0,0,0.699999988079071,0.800000011920929,0,1,1,0,1,0,0.0799999982118607,null,null]},{"type":21,"id":-2629724,"data":[1,null,null,1,0,1,0,0,0,0,1,0]}],"children":[{"id":-2629726,"path":"DECK","assetBundleId":0,"components":[{"type":1,"id":-2629728,"data":[0,0,0,1,1,1,0,0,0,1]},{"type":18,"id":-2629730,"data":[1,5,458,[5,458],0,0,0,131,-1,0,1,1,0,0,1,1,1,1,1,1,15,24044,0,0,0,1,1,0,0.5,0,0]}],"children":[],"data":["Background",0,1,0,3]},{"id":-2629732,"path":"DECK","assetBundleId":0,"components":[{"type":1,"id":-2629734,"data":[0,0.100000001490116,0,0.899999976158142,0.899999976158142,0,0,0,0,1]},{"type":18,"id":-2629736,"data":[1,5,458,[5,458],0,0,0,132,-1,0,1,1,0,0,1,1,1,1,1,1,15,23900,0,0,0,1.13777780532837,1.13777780532837,0,0.5,0,0]}],"children":[],"data":["Icon",0,1,0,3]},{"id":-2629738,"path":"DECK","assetBundleId":0,"components":[{"type":1,"id":-2629740,"data":[0,0,0,1,1,1,0,0,0,1]},{"type":18,"id":-2629742,"data":[1,5,458,[5,458],0,0,0,133,-1,0,1,1,0,0,1,1,0,0,0,0.294117659330368,15,24044,0,0,0,1,1,0,0.5,0,0]}],"children":[],"data":["Dark",0,0,0,3]},{"id":-2629744,"path":"DECK","assetBundleId":0,"components":[{"type":1,"id":-2629746,"data":[0,0,0,1,1,1,0,0,0,1]},{"type":19,"id":-2629748,"data":[1,5,458,[5,458],1,0,0,130,-1,0,1,1,0,0,0,0,[],0,0.25,0.200000002980232,0,0.200000002980232,0,1,0,5,0.100000001490116,[[0,1,1,1,1,1,1,1,1,1],[0.02470436,0,0.1964752,1,0.601175,0.9162334,0.9988251,0.01568628],0],1,1,1,0,1,1,1,0.0156862754374743,0,0,1,[0,1,0,0,0,0,0,1,0,0,0,0,0,0]]}],"children":[],"data":["Trail",0,1,0,3]}],"data":["Tile - Butter",0,1,0,3]},{"id":-2630364,"path":"DECK","assetBundleId":0,"components":[{"type":1,"id":113580,"data":[0,-1,0,1,1,1,0,0,0,1]},{"type":8,"id":113582,"enabled":1,"class":17,"data":[0,0,18,-2630380,18,-2630386,18,-2630374,19,-2630392,1,1,1,20,1.5,0.300000011920929,0,0,0.300000011920929,0.200000002980232,0,10,23910,0,0,0,0,[]]},{"type":20,"id":-2630366,"data":[0,0,0.699999988079071,0.800000011920929,0,1,1,0,1,0,0.0799999982118607,null,null]},{"type":21,"id":-2630368,"data":[1,null,null,1,0,1,0,0,0,0,1,0]}],"children":[{"id":-2630370,"path":"DECK","assetBundleId":0,"components":[{"type":1,"id":-2630372,"data":[0,0,0,1,1,1,0,0,0,1]},{"type":18,"id":-2630374,"data":[1,5,458,[5,458],0,0,0,141,-1,0,1,1,0,0,1,1,1,1,1,1,15,24044,0,0,0,1,1,0,0.5,0,0]}],"children":[],"data":["Background",0,1,0,3]},{"id":-2630376,"path":"DECK","assetBundleId":0,"components":[{"type":1,"id":-2630378,"data":[0,0.100000001490116,0,0.899999976158142,0.899999976158142,0,0,0,0,1]},{"type":18,"id":-2630380,"data":[1,5,458,[5,458],0,0,0,142,-1,0,1,1,0,0,1,1,1,1,1,1,15,23908,0,0,0,1.13777780532837,1.13777780532837,0,0.5,0,0]}],"children":[],"data":["Icon",0,1,0,3]},{"id":-2630382,"path":"DECK","assetBundleId":0,"components":[{"type":1,"id":-2630384,"data":[0,0,0,1,1,1,0,0,0,1]},{"type":18,"id":-2630386,"data":[1,5,458,[5,458],0,0,0,143,-1,0,1,1,0,0,1,1,0,0,0,0.294117659330368,15,24044,0,0,0,1,1,0,0.5,0,0]}],"children":[],"data":["Dark",0,0,0,3]},{"id":-2630388,"path":"DECK","assetBundleId":0,"components":[{"type":1,"id":-2630390,"data":[0,0,0,1,1,1,0,0,0,1]},{"type":19,"id":-2630392,"data":[1,5,458,[5,458],1,0,0,140,-1,0,1,1,0,0,0,0,[],0,0.25,0.200000002980232,0,0.200000002980232,0,1,0,5,0.100000001490116,[[0,1,1,1,1,1,1,1,1,1],[0.02470436,0,0.1964752,1,0.601175,0.9162334,0.9988251,0.01568628],0],1,1,1,0,1,1,1,0.0156862754374743,0,0,1,[0,1,0,0,0,0,0,1,0,0,0,0,0,0]]}],"children":[],"data":["Trail",0,1,0,3]}],"data":["Tile - Leaves",0,1,0,3]},{"id":-2629750,"path":"DECK","assetBundleId":0,"components":[{"type":1,"id":113248,"data":[0,-2,0,1,1,1,0,0,0,1]},{"type":8,"id":113332,"enabled":1,"class":17,"data":[0,0,18,-2629766,18,-2629772,18,-2629760,19,-2629778,1,1,1,20,1.5,0.300000011920929,0,0,0.300000011920929,0.200000002980232,0,10,23906,0,0,0,0,[]]},{"type":20,"id":-2629752,"data":[0,0,0.699999988079071,0.800000011920929,0,1,1,0,1,0,0.0799999982118607,null,null]},{"type":21,"id":-2629754,"data":[1,null,null,1,0,1,0,0,0,0,1,0]}],"children":[{"id":-2629756,"path":"DECK","assetBundleId":0,"components":[{"type":1,"id":-2629758,"data":[0,0,0,1,1,1,0,0,0,1]},{"type":18,"id":-2629760,"data":[1,5,458,[5,458],0,0,0,151,-1,0,1,1,0,0,1,1,1,1,1,1,15,24044,0,0,0,1,1,0,0.5,0,0]}],"children":[],"data":["Background",0,1,0,3]},{"id":-2629762,"path":"DECK","assetBundleId":0,"components":[{"type":1,"id":-2629764,"data":[0,0.100000001490116,0,0.899999976158142,0.899999976158142,0,0,0,0,1]},{"type":18,"id":-2629766,"data":[1,5,458,[5,458],0,0,0,152,-1,0,1,1,0,0,1,1,1,1,1,1,15,23904,0,0,0,1.13777780532837,1.13777780532837,0,0.5,0,0]}],"children":[],"data":["Icon",0,1,0,3]},{"id":-2629768,"path":"DECK","assetBundleId":0,"components":[{"type":1,"id":-2629770,"data":[0,0,0,1,1,1,0,0,0,1]},{"type":18,"id":-2629772,"data":[1,5,458,[5,458],0,0,0,153,-1,0,1,1,0,0,1,1,0,0,0,0.294117659330368,15,24044,0,0,0,1,1,0,0.5,0,0]}],"children":[],"data":["Dark",0,0,0,3]},{"id":-2629774,"path":"DECK","assetBundleId":0,"components":[{"type":1,"id":-2629776,"data":[0,0,0,1,1,1,0,0,0,1]},{"type":19,"id":-2629778,"data":[1,5,458,[5,458],1,0,0,150,-1,0,1,1,0,0,0,0,[],0,0.25,0.200000002980232,0,0.200000002980232,0,1,0,5,0.100000001490116,[[0,1,1,1,1,1,1,1,1,1],[0.02470436,0,0.1964752,1,0.601175,0.9162334,0.9988251,0.01568628],0],1,1,1,0,1,1,1,0.0156862754374743,0,0,1,[0,1,0,0,0,0,0,1,0,0,0,0,0,0]]}],"children":[],"data":["Trail",0,1,0,3]}],"data":["Tile - Apples",0,1,0,3]},{"id":-2630132,"path":"DECK","assetBundleId":0,"components":[{"type":1,"id":113428,"data":[0,-3,0,1,1,1,0,0,0,1]},{"type":8,"id":113738,"enabled":1,"class":17,"data":[0,0,18,-2630148,18,-2630154,18,-2630142,19,-2630160,1,1,1,20,1.5,0.300000011920929,0,0,0.300000011920929,0.200000002980232,0,10,23928,0,0,0,0,[]]},{"type":20,"id":-2630134,"data":[0,0,0.699999988079071,0.800000011920929,0,1,1,0,1,0,0.0799999982118607,null,null]},{"type":21,"id":-2630136,"data":[1,null,null,1,0,1,0,0,0,0,1,0]}],"children":[{"id":-2630138,"path":"DECK","assetBundleId":0,"components":[{"type":1,"id":-2630140,"data":[0,0,0,1,1,1,0,0,0,1]},{"type":18,"id":-2630142,"data":[1,5,458,[5,458],0,0,0,161,-1,0,1,1,0,0,1,1,1,1,1,1,15,24044,0,0,0,1,1,0,0.5,0,0]}],"children":[],"data":["Background",0,1,0,3]},{"id":-2630144,"path":"DECK","assetBundleId":0,"components":[{"type":1,"id":-2630146,"data":[0,0.100000001490116,0,0.899999976158142,0.899999976158142,0,0,0,0,1]},{"type":18,"id":-2630148,"data":[1,5,458,[5,458],0,0,0,162,-1,0,1,1,0,0,1,1,1,1,1,1,15,23926,0,0,0,1.13777780532837,1.13777780532837,0,0.5,0,0]}],"children":[],"data":["Icon",0,1,0,3]},{"id":-2630150,"path":"DECK","assetBundleId":0,"components":[{"type":1,"id":-2630152,"data":[0,0,0,1,1,1,0,0,0,1]},{"type":18,"id":-2630154,"data":[1,5,458,[5,458],0,0,0,163,-1,0,1,1,0,0,1,1,0,0,0,0.294117659330368,15,24044,0,0,0,1,1,0,0.5,0,0]}],"children":[],"data":["Dark",0,0,0,3]},{"id":-2630156,"path":"DECK","assetBundleId":0,"components":[{"type":1,"id":-2630158,"data":[0,0,0,1,1,1,0,0,0,1]},{"type":19,"id":-2630160,"data":[1,5,458,[5,458],1,0,0,160,-1,0,1,1,0,0,0,0,[],0,0.25,0.200000002980232,0,0.200000002980232,0,1,0,5,0.100000001490116,[[0,1,1,1,1,1,1,1,1,1],[0.02470436,0,0.1964752,1,0.601175,0.9162334,0.9988251,0.01568628],0],1,1,1,0,1,1,1,0.0156862754374743,0,0,1,[0,1,0,0,0,0,0,1,0,0,0,0,0,0]]}],"children":[],"data":["Trail",0,1,0,3]}],"data":["Tile - FetaChees",0,1,0,3]},{"id":-2630860,"path":"DECK","assetBundleId":0,"components":[{"type":1,"id":113752,"data":[0,-4,0,1,1,1,0,0,0,1]},{"type":8,"id":113754,"enabled":1,"class":17,"data":[0,0,18,-2630876,18,-2630882,18,-2630870,19,-2630888,1,1,1,20,1.5,0.300000011920929,0,0,0.300000011920929,0.200000002980232,0,10,23916,0,0,0,0,[]]},{"type":20,"id":-2630862,"data":[0,0,0.699999988079071,0.800000011920929,0,1,1,0,1,0,0.0799999982118607,null,null]},{"type":21,"id":-2630864,"data":[1,null,null,1,0,1,0,0,0,0,1,0]}],"children":[{"id":-2630866,"path":"DECK","assetBundleId":0,"components":[{"type":1,"id":-2630868,"data":[0,0,0,1,1,1,0,0,0,1]},{"type":18,"id":-2630870,"data":[1,5,458,[5,458],0,0,0,171,-1,0,1,1,0,0,1,1,1,1,1,1,15,24044,0,0,0,1,1,0,0.5,0,0]}],"children":[],"data":["Background",0,1,0,3]},{"id":-2630872,"path":"DECK","assetBundleId":0,"components":[{"type":1,"id":-2630874,"data":[0,0.100000001490116,0,0.899999976158142,0.899999976158142,0,0,0,0,1]},{"type":18,"id":-2630876,"data":[1,5,458,[5,458],0,0,0,172,-1,0,1,1,0,0,1,1,1,1,1,1,15,23914,0,0,0,1.13777780532837,1.13777780532837,0,0.5,0,0]}],"children":[],"data":["Icon",0,1,0,3]},{"id":-2630878,"path":"DECK","assetBundleId":0,"components":[{"type":1,"id":-2630880,"data":[0,0,0,1,1,1,0,0,0,1]},{"type":18,"id":-2630882,"data":[1,5,458,[5,458],0,0,0,173,-1,0,1,1,0,0,1,1,0,0,0,0.294117659330368,15,24044,0,0,0,1,1,0,0.5,0,0]}],"children":[],"data":["Dark",0,0,0,3]},{"id":-2630884,"path":"DECK","assetBundleId":0,"components":[{"type":1,"id":-2630886,"data":[0,0,0,1,1,1,0,0,0,1]},{"type":19,"id":-2630888,"data":[1,5,458,[5,458],1,0,0,170,-1,0,1,1,0,0,0,0,[],0,0.25,0.200000002980232,0,0.200000002980232,0,1,0,5,0.100000001490116,[[0,1,1,1,1,1,1,1,1,1],[0.02470436,0,0.1964752,1,0.601175,0.9162334,0.9988251,0.01568628],0],1,1,1,0,1,1,1,0.0156862754374743,0,0,1,[0,1,0,0,0,0,0,1,0,0,0,0,0,0]]}],"children":[],"data":["Trail",0,1,0,3]}],"data":["Tile - Beacon",0,1,0,3]}],"data":["Column - 6",0,1,0,0]},{"id":113386,"path":"DECK","assetBundleId":0,"components":[{"type":1,"id":113388,"data":[7,0,0,1,1,1,0,0,0,1]}],"children":[{"id":-2630702,"path":"DECK","assetBundleId":0,"components":[{"type":1,"id":113680,"data":[0,0,0,1,1,1,0,0,0,1]},{"type":8,"id":113682,"enabled":1,"class":17,"data":[0,0,18,-2630718,18,-2630724,18,-2630712,19,-2630730,1,1,1,20,1.5,0.300000011920929,0,0,0.300000011920929,0.200000002980232,0,10,23950,0,0,0,0,[]]},{"type":20,"id":-2630704,"data":[0,0,0.699999988079071,0.800000011920929,0,1,1,0,1,0,0.0799999982118607,null,null]},{"type":21,"id":-2630706,"data":[1,null,null,1,0,1,0,0,0,0,1,0]}],"children":[{"id":-2630708,"path":"DECK","assetBundleId":0,"components":[{"type":1,"id":-2630710,"data":[0,0,0,1,1,1,0,0,0,1]},{"type":18,"id":-2630712,"data":[1,5,458,[5,458],0,0,0,101,-1,0,1,1,0,0,1,1,1,1,1,1,15,24044,0,0,0,1,1,0,0.5,0,0]}],"children":[],"data":["Background",0,1,0,3]},{"id":-2630714,"path":"DECK","assetBundleId":0,"components":[{"type":1,"id":-2630716,"data":[0,0.100000001490116,0,0.899999976158142,0.899999976158142,0,0,0,0,1]},{"type":18,"id":-2630718,"data":[1,5,458,[5,458],0,0,0,102,-1,0,1,1,0,0,1,1,1,1,1,1,15,23948,0,0,0,1.13777780532837,1.13777780532837,0,0.5,0,0]}],"children":[],"data":["Icon",0,1,0,3]},{"id":-2630720,"path":"DECK","assetBundleId":0,"components":[{"type":1,"id":-2630722,"data":[0,0,0,1,1,1,0,0,0,1]},{"type":18,"id":-2630724,"data":[1,5,458,[5,458],0,0,0,103,-1,0,1,1,0,0,1,1,0,0,0,0.294117659330368,15,24044,0,0,0,1,1,0,0.5,0,0]}],"children":[],"data":["Dark",0,0,0,3]},{"id":-2630726,"path":"DECK","assetBundleId":0,"components":[{"type":1,"id":-2630728,"data":[0,0,0,1,1,1,0,0,0,1]},{"type":19,"id":-2630730,"data":[1,5,458,[5,458],1,0,0,100,-1,0,1,1,0,0,0,0,[],0,0.25,0.200000002980232,0,0.200000002980232,0,1,0,5,0.100000001490116,[[0,1,1,1,1,1,1,1,1,1],[0.02470436,0,0.1964752,1,0.601175,0.9162334,0.9988251,0.01568628],0],1,1,1,0,1,1,1,0.0156862754374743,0,0,1,[0,1,0,0,0,0,0,1,0,0,0,0,0,0]]}],"children":[],"data":["Trail",0,1,0,3]}],"data":["Tile - Honey",0,1,0,3]},{"id":-2630476,"path":"DECK","assetBundleId":0,"components":[{"type":1,"id":113618,"data":[0,-1,0,1,1,1,0,0,0,1]},{"type":8,"id":113620,"enabled":1,"class":17,"data":[0,0,18,-2630492,18,-2630498,18,-2630486,19,-2630504,1,1,1,20,1.5,0.300000011920929,0,0,0.300000011920929,0.200000002980232,0,10,23886,0,0,0,0,[]]},{"type":20,"id":-2630478,"data":[0,0,0.699999988079071,0.800000011920929,0,1,1,0,1,0,0.0799999982118607,null,null]},{"type":21,"id":-2630480,"data":[1,null,null,1,0,1,0,0,0,0,1,0]}],"children":[{"id":-2630482,"path":"DECK","assetBundleId":0,"components":[{"type":1,"id":-2630484,"data":[0,0,0,1,1,1,0,0,0,1]},{"type":18,"id":-2630486,"data":[1,5,458,[5,458],0,0,0,111,-1,0,1,1,0,0,1,1,1,1,1,1,15,24044,0,0,0,1,1,0,0.5,0,0]}],"children":[],"data":["Background",0,1,0,3]},{"id":-2630488,"path":"DECK","assetBundleId":0,"components":[{"type":1,"id":-2630490,"data":[0,0.100000001490116,0,0.899999976158142,0.899999976158142,0,0,0,0,1]},{"type":18,"id":-2630492,"data":[1,5,458,[5,458],0,0,0,112,-1,0,1,1,0,0,1,1,1,1,1,1,15,23940,0,0,0,1.13777780532837,1.13777780532837,0,0.5,0,0]}],"children":[],"data":["Icon",0,1,0,3]},{"id":-2630494,"path":"DECK","assetBundleId":0,"components":[{"type":1,"id":-2630496,"data":[0,0,0,1,1,1,0,0,0,1]},{"type":18,"id":-2630498,"data":[1,5,458,[5,458],0,0,0,113,-1,0,1,1,0,0,1,1,0,0,0,0.294117659330368,15,24044,0,0,0,1,1,0,0.5,0,0]}],"children":[],"data":["Dark",0,0,0,3]},{"id":-2630500,"path":"DECK","assetBundleId":0,"components":[{"type":1,"id":-2630502,"data":[0,0,0,1,1,1,0,0,0,1]},{"type":19,"id":-2630504,"data":[1,5,458,[5,458],1,0,0,110,-1,0,1,1,0,0,0,0,[],0,0.25,0.200000002980232,0,0.200000002980232,0,1,0,5,0.100000001490116,[[0,1,1,1,1,1,1,1,1,1],[0.02470436,0,0.1964752,1,0.601175,0.9162334,0.9988251,0.01568628],0],1,1,1,0,1,1,1,0.0156862754374743,0,0,1,[0,1,0,0,0,0,0,1,0,0,0,0,0,0]]}],"children":[],"data":["Trail",0,1,0,3]}],"data":["Tile - Eggs",0,1,0,3]},{"id":-2630222,"path":"DECK","assetBundleId":0,"components":[{"type":1,"id":113478,"data":[0,-2,0,1,1,1,0,0,0,1]},{"type":8,"id":113512,"enabled":1,"class":17,"data":[0,0,18,-2630238,18,-2630244,18,-2630232,19,-2630250,1,1,1,20,1.5,0.300000011920929,0,0,0.300000011920929,0.200000002980232,0,10,23932,0,0,0,0,[]]},{"type":20,"id":-2630224,"data":[0,0,0.699999988079071,0.800000011920929,0,1,1,0,1,0,0.0799999982118607,null,null]},{"type":21,"id":-2630226,"data":[1,null,null,1,0,1,0,0,0,0,1,0]}],"children":[{"id":-2630228,"path":"DECK","assetBundleId":0,"components":[{"type":1,"id":-2630230,"data":[0,0,0,1,1,1,0,0,0,1]},{"type":18,"id":-2630232,"data":[1,5,458,[5,458],0,0,0,121,-1,0,1,1,0,0,1,1,1,1,1,1,15,24044,0,0,0,1,1,0,0.5,0,0]}],"children":[],"data":["Background",0,1,0,3]},{"id":-2630234,"path":"DECK","assetBundleId":0,"components":[{"type":1,"id":-2630236,"data":[0,0.100000001490116,0,0.899999976158142,0.899999976158142,0,0,0,0,1]},{"type":18,"id":-2630238,"data":[1,5,458,[5,458],0,0,0,122,-1,0,1,1,0,0,1,1,1,1,1,1,15,23930,0,0,0,1.13777780532837,1.13777780532837,0,0.5,0,0]}],"children":[],"data":["Icon",0,1,0,3]},{"id":-2630240,"path":"DECK","assetBundleId":0,"components":[{"type":1,"id":-2630242,"data":[0,0,0,1,1,1,0,0,0,1]},{"type":18,"id":-2630244,"data":[1,5,458,[5,458],0,0,0,123,-1,0,1,1,0,0,1,1,0,0,0,0.294117659330368,15,24044,0,0,0,1,1,0,0.5,0,0]}],"children":[],"data":["Dark",0,0,0,3]},{"id":-2630246,"path":"DECK","assetBundleId":0,"components":[{"type":1,"id":-2630248,"data":[0,0,0,1,1,1,0,0,0,1]},{"type":19,"id":-2630250,"data":[1,5,458,[5,458],1,0,0,120,-1,0,1,1,0,0,0,0,[],0,0.25,0.200000002980232,0,0.200000002980232,0,1,0,5,0.100000001490116,[[0,1,1,1,1,1,1,1,1,1],[0.02470436,0,0.1964752,1,0.601175,0.9162334,0.9988251,0.01568628],0],1,1,1,0,1,1,1,0.0156862754374743,0,0,1,[0,1,0,0,0,0,0,1,0,0,0,0,0,0]]}],"children":[],"data":["Trail",0,1,0,3]}],"data":["Tile - TofuChees",0,1,0,3]}],"data":["Column - 7",0,1,0,0]}],"data":["Layer - 1",0,1,0,0]},{"id":113254,"path":"DECK","assetBundleId":0,"components":[{"type":1,"id":113256,"data":[0,0,200,1,1,1,0,0,0,1]},{"type":8,"id":113258,"enabled":1,"class":52,"data":[0,[17,113292,17,113604,17,113608,17,113720]]}],"children":[{"id":113394,"path":"DECK","assetBundleId":0,"components":[{"type":1,"id":113396,"data":[2.5,-1.21700000762939,0,1,1,1,0,0,0,1]}],"children":[{"id":-2629914,"path":"DECK","assetBundleId":0,"components":[{"type":1,"id":113290,"data":[0,0,0,1,1,1,0,0,0,1]},{"type":8,"id":113292,"enabled":1,"class":17,"data":[0,0,18,-2629930,18,-2629936,18,-2629924,19,-2629942,1,1,1,20,1.5,0.300000011920929,0,0,0.300000011920929,0.200000002980232,0,10,23880,0,0,0,0,[]]},{"type":20,"id":-2629916,"data":[0,0,0.699999988079071,0.800000011920929,0,1,1,0,1,0,0.0799999982118607,null,null]},{"type":21,"id":-2629918,"data":[1,null,null,1,0,1,0,0,0,0,1,0]}],"children":[{"id":-2629920,"path":"DECK","assetBundleId":0,"components":[{"type":1,"id":-2629922,"data":[0,0,0,1,1,1,0,0,0,1]},{"type":18,"id":-2629924,"data":[1,5,458,[5,458],0,0,0,201,-1,0,1,1,0,0,1,1,1,1,1,1,15,24044,0,0,0,1,1,0,0.5,0,0]}],"children":[],"data":["Background",0,1,0,3]},{"id":-2629926,"path":"DECK","assetBundleId":0,"components":[{"type":1,"id":-2629928,"data":[0,0.100000001490116,0,0.899999976158142,0.899999976158142,0,0,0,0,1]},{"type":18,"id":-2629930,"data":[1,5,458,[5,458],0,0,0,202,-1,0,1,1,0,0,1,1,1,1,1,1,15,23874,0,0,0,1.13777780532837,1.13777780532837,0,0.5,0,0]}],"children":[],"data":["Icon",0,1,0,3]},{"id":-2629932,"path":"DECK","assetBundleId":0,"components":[{"type":1,"id":-2629934,"data":[0,0,0,1,1,1,0,0,0,1]},{"type":18,"id":-2629936,"data":[1,5,458,[5,458],0,0,0,203,-1,0,1,1,0,0,1,1,0,0,0,0.294117659330368,15,24044,0,0,0,1,1,0,0.5,0,0]}],"children":[],"data":["Dark",0,0,0,3]},{"id":-2629938,"path":"DECK","assetBundleId":0,"components":[{"type":1,"id":-2629940,"data":[0,0,0,1,1,1,0,0,0,1]},{"type":19,"id":-2629942,"data":[1,5,458,[5,458],1,0,0,200,-1,0,1,1,0,0,0,0,[],0,0.25,0.200000002980232,0,0.200000002980232,0,1,0,5,0.100000001490116,[[0,1,1,1,1,1,1,1,1,1],[0.02470436,0,0.1964752,1,0.601175,0.9162334,0.9988251,0.01568628],0],1,1,1,0,1,1,1,0.0156862754374743,0,0,1,[0,1,0,0,0,0,0,1,0,0,0,0,0,0]]}],"children":[],"data":["Trail",0,1,0,3]}],"data":["Tile - Cinamon",0,1,0,3]},{"id":-2630446,"path":"DECK","assetBundleId":0,"components":[{"type":1,"id":113602,"data":[1,0,0,1,1,1,0,0,0,1]},{"type":8,"id":113604,"enabled":1,"class":17,"data":[0,0,18,-2630462,18,-2630468,18,-2630456,19,-2630474,1,1,1,20,1.5,0.300000011920929,0,0,0.300000011920929,0.200000002980232,0,10,23950,0,0,0,0,[]]},{"type":20,"id":-2630448,"data":[0,0,0.699999988079071,0.800000011920929,0,1,1,0,1,0,0.0799999982118607,null,null]},{"type":21,"id":-2630450,"data":[1,null,null,1,0,1,0,0,0,0,1,0]}],"children":[{"id":-2630452,"path":"DECK","assetBundleId":0,"components":[{"type":1,"id":-2630454,"data":[0,0,0,1,1,1,0,0,0,1]},{"type":18,"id":-2630456,"data":[1,5,458,[5,458],0,0,0,201,-1,0,1,1,0,0,1,1,1,1,1,1,15,24044,0,0,0,1,1,0,0.5,0,0]}],"children":[],"data":["Background",0,1,0,3]},{"id":-2630458,"path":"DECK","assetBundleId":0,"components":[{"type":1,"id":-2630460,"data":[0,0.100000001490116,0,0.899999976158142,0.899999976158142,0,0,0,0,1]},{"type":18,"id":-2630462,"data":[1,5,458,[5,458],0,0,0,202,-1,0,1,1,0,0,1,1,1,1,1,1,15,23948,0,0,0,1.13777780532837,1.13777780532837,0,0.5,0,0]}],"children":[],"data":["Icon",0,1,0,3]},{"id":-2630464,"path":"DECK","assetBundleId":0,"components":[{"type":1,"id":-2630466,"data":[0,0,0,1,1,1,0,0,0,1]},{"type":18,"id":-2630468,"data":[1,5,458,[5,458],0,0,0,203,-1,0,1,1,0,0,1,1,0,0,0,0.294117659330368,15,24044,0,0,0,1,1,0,0.5,0,0]}],"children":[],"data":["Dark",0,0,0,3]},{"id":-2630470,"path":"DECK","assetBundleId":0,"components":[{"type":1,"id":-2630472,"data":[0,0,0,1,1,1,0,0,0,1]},{"type":19,"id":-2630474,"data":[1,5,458,[5,458],1,0,0,200,-1,0,1,1,0,0,0,0,[],0,0.25,0.200000002980232,0,0.200000002980232,0,1,0,5,0.100000001490116,[[0,1,1,1,1,1,1,1,1,1],[0.02470436,0,0.1964752,1,0.601175,0.9162334,0.9988251,0.01568628],0],1,1,1,0,1,1,1,0.0156862754374743,0,0,1,[0,1,0,0,0,0,0,1,0,0,0,0,0,0]]}],"children":[],"data":["Trail",0,1,0,3]}],"data":["Tile - Honey",0,1,0,3]},{"id":-2629832,"path":"DECK","assetBundleId":0,"components":[{"type":1,"id":113268,"data":[2,0,0,1,1,1,0,0,0,1]},{"type":8,"id":113608,"enabled":1,"class":17,"data":[0,0,18,-2629848,18,-2629854,18,-2629842,19,-2629860,1,1,1,20,1.5,0.300000011920929,0,0,0.300000011920929,0.200000002980232,0,10,23916,0,0,0,0,[]]},{"type":20,"id":-2629834,"data":[0,0,0.699999988079071,0.800000011920929,0,1,1,0,1,0,0.0799999982118607,null,null]},{"type":21,"id":-2629836,"data":[1,null,null,1,0,1,0,0,0,0,1,0]}],"children":[{"id":-2629838,"path":"DECK","assetBundleId":0,"components":[{"type":1,"id":-2629840,"data":[0,0,0,1,1,1,0,0,0,1]},{"type":18,"id":-2629842,"data":[1,5,458,[5,458],0,0,0,201,-1,0,1,1,0,0,1,1,1,1,1,1,15,24044,0,0,0,1,1,0,0.5,0,0]}],"children":[],"data":["Background",0,1,0,3]},{"id":-2629844,"path":"DECK","assetBundleId":0,"components":[{"type":1,"id":-2629846,"data":[0,0.100000001490116,0,0.899999976158142,0.899999976158142,0,0,0,0,1]},{"type":18,"id":-2629848,"data":[1,5,458,[5,458],0,0,0,202,-1,0,1,1,0,0,1,1,1,1,1,1,15,23914,0,0,0,1.13777780532837,1.13777780532837,0,0.5,0,0]}],"children":[],"data":["Icon",0,1,0,3]},{"id":-2629850,"path":"DECK","assetBundleId":0,"components":[{"type":1,"id":-2629852,"data":[0,0,0,1,1,1,0,0,0,1]},{"type":18,"id":-2629854,"data":[1,5,458,[5,458],0,0,0,203,-1,0,1,1,0,0,1,1,0,0,0,0.294117659330368,15,24044,0,0,0,1,1,0,0.5,0,0]}],"children":[],"data":["Dark",0,0,0,3]},{"id":-2629856,"path":"DECK","assetBundleId":0,"components":[{"type":1,"id":-2629858,"data":[0,0,0,1,1,1,0,0,0,1]},{"type":19,"id":-2629860,"data":[1,5,458,[5,458],1,0,0,200,-1,0,1,1,0,0,0,0,[],0,0.25,0.200000002980232,0,0.200000002980232,0,1,0,5,0.100000001490116,[[0,1,1,1,1,1,1,1,1,1],[0.02470436,0,0.1964752,1,0.601175,0.9162334,0.9988251,0.01568628],0],1,1,1,0,1,1,1,0.0156862754374743,0,0,1,[0,1,0,0,0,0,0,1,0,0,0,0,0,0]]}],"children":[],"data":["Trail",0,1,0,3]}],"data":["Tile - Beacon",0,1,0,3]},{"id":-2630822,"path":"DECK","assetBundleId":0,"components":[{"type":1,"id":113718,"data":[3,0,0,1,1,1,0,0,0,1]},{"type":8,"id":113720,"enabled":1,"class":17,"data":[0,0,18,-2630838,18,-2630844,18,-2630832,19,-2630850,1,1,1,20,1.5,0.300000011920929,0,0,0.300000011920929,0.200000002980232,0,10,23882,0,0,0,0,[]]},{"type":20,"id":-2630824,"data":[0,0,0.699999988079071,0.800000011920929,0,1,1,0,1,0,0.0799999982118607,null,null]},{"type":21,"id":-2630826,"data":[1,null,null,1,0,1,0,0,0,0,1,0]}],"children":[{"id":-2630828,"path":"DECK","assetBundleId":0,"components":[{"type":1,"id":-2630830,"data":[0,0,0,1,1,1,0,0,0,1]},{"type":18,"id":-2630832,"data":[1,5,458,[5,458],0,0,0,201,-1,0,1,1,0,0,1,1,1,1,1,1,15,24044,0,0,0,1,1,0,0.5,0,0]}],"children":[],"data":["Background",0,1,0,3]},{"id":-2630834,"path":"DECK","assetBundleId":0,"components":[{"type":1,"id":-2630836,"data":[0,0.100000001490116,0,0.899999976158142,0.899999976158142,0,0,0,0,1]},{"type":18,"id":-2630838,"data":[1,5,458,[5,458],0,0,0,202,-1,0,1,1,0,0,1,1,1,1,1,1,15,23944,0,0,0,1.13777780532837,1.13777780532837,0,0.5,0,0]}],"children":[],"data":["Icon",0,1,0,3]},{"id":-2630840,"path":"DECK","assetBundleId":0,"components":[{"type":1,"id":-2630842,"data":[0,0,0,1,1,1,0,0,0,1]},{"type":18,"id":-2630844,"data":[1,5,458,[5,458],0,0,0,203,-1,0,1,1,0,0,1,1,0,0,0,0.294117659330368,15,24044,0,0,0,1,1,0,0.5,0,0]}],"children":[],"data":["Dark",0,0,0,3]},{"id":-2630846,"path":"DECK","assetBundleId":0,"components":[{"type":1,"id":-2630848,"data":[0,0,0,1,1,1,0,0,0,1]},{"type":19,"id":-2630850,"data":[1,5,458,[5,458],1,0,0,200,-1,0,1,1,0,0,0,0,[],0,0.25,0.200000002980232,0,0.200000002980232,0,1,0,5,0.100000001490116,[[0,1,1,1,1,1,1,1,1,1],[0.02470436,0,0.1964752,1,0.601175,0.9162334,0.9988251,0.01568628],0],1,1,1,0,1,1,1,0.0156862754374743,0,0,1,[0,1,0,0,0,0,0,1,0,0,0,0,0,0]]}],"children":[],"data":["Trail",0,1,0,3]}],"data":["Tile - Salmon",0,1,0,3]}],"data":["Line - 1",0,1,0,0]}],"data":["Layer - 2",0,1,0,0]},{"id":113308,"path":"DECK","assetBundleId":0,"components":[{"type":1,"id":113310,"data":[0,-0.13100004196167,300,1,1,1,0,0,0,1]},{"type":8,"id":113312,"enabled":1,"class":52,"data":[0,[17,113274,17,113660]]}],"children":[{"id":113364,"path":"DECK","assetBundleId":0,"components":[{"type":1,"id":113366,"data":[3.5,-0.585999965667725,0,1,1,1,0,0,0,1]}],"children":[{"id":-2629862,"path":"DECK","assetBundleId":0,"components":[{"type":1,"id":113272,"data":[0,0,0,1,1,1,0,0,0,1]},{"type":8,"id":113274,"enabled":1,"class":17,"data":[0,0,18,-2629878,18,-2629884,18,-2629872,19,-2629890,1,1,1,20,1.5,0.300000011920929,0,0,0.300000011920929,0.200000002980232,1,10,23880,0,0,0,0,[]]},{"type":20,"id":-2629864,"data":[0,0,0.699999988079071,0.800000011920929,0,1,1,0,1,0,0.0799999982118607,null,null]},{"type":21,"id":-2629866,"data":[1,null,null,1,0,1,0,0,0,0,1,0]}],"children":[{"id":-2629868,"path":"DECK","assetBundleId":0,"components":[{"type":1,"id":-2629870,"data":[0,0,0,1,1,1,0,0,0,1]},{"type":18,"id":-2629872,"data":[1,5,458,[5,458],0,0,0,301,-1,0,1,1,0,0,1,1,1,1,1,1,15,24044,0,0,0,1,1,0,0.5,0,0]}],"children":[],"data":["Background",0,1,0,3]},{"id":-2629874,"path":"DECK","assetBundleId":0,"components":[{"type":1,"id":-2629876,"data":[0,0.100000001490116,0,0.899999976158142,0.899999976158142,0,0,0,0,1]},{"type":18,"id":-2629878,"data":[1,5,458,[5,458],0,0,0,302,-1,0,1,1,0,0,1,1,1,1,1,1,15,23874,0,0,0,1.13777780532837,1.13777780532837,0,0.5,0,0]}],"children":[],"data":["Icon",0,1,0,3]},{"id":-2629880,"path":"DECK","assetBundleId":0,"components":[{"type":1,"id":-2629882,"data":[0,0,0,1,1,1,0,0,0,1]},{"type":18,"id":-2629884,"data":[1,5,458,[5,458],0,0,0,303,-1,0,1,1,0,0,1,1,0,0,0,0.294117659330368,15,24044,0,0,0,1,1,0,0.5,0,0]}],"children":[],"data":["Dark",0,0,0,3]},{"id":-2629886,"path":"DECK","assetBundleId":0,"components":[{"type":1,"id":-2629888,"data":[0,0,0,1,1,1,0,0,0,1]},{"type":19,"id":-2629890,"data":[1,5,458,[5,458],1,0,0,300,-1,0,1,1,0,0,0,0,[],0,0.25,0.200000002980232,0,0.200000002980232,0,1,0,5,0.100000001490116,[[0,1,1,1,1,1,1,1,1,1],[0.02470436,0,0.1964752,1,0.601175,0.9162334,0.9988251,0.01568628],0],1,1,1,0,1,1,1,0.0156862754374743,0,0,1,[0,1,0,0,0,0,0,1,0,0,0,0,0,0]]}],"children":[],"data":["Trail",0,1,0,3]}],"data":["Tile - Cinamon",0,1,0,3]},{"id":-2630536,"path":"DECK","assetBundleId":0,"components":[{"type":1,"id":113638,"data":[1,0,0,1,1,1,0,0,0,1]},{"type":8,"id":113660,"enabled":1,"class":17,"data":[0,0,18,-2630552,18,-2630558,18,-2630546,19,-2630564,1,1,1,20,1.5,0.300000011920929,0,0,0.300000011920929,0.200000002980232,0,10,23882,0,0,0,0,[]]},{"type":20,"id":-2630538,"data":[0,0,0.699999988079071,0.800000011920929,0,1,1,0,1,0,0.0799999982118607,null,null]},{"type":21,"id":-2630540,"data":[1,null,null,1,0,1,0,0,0,0,1,0]}],"children":[{"id":-2630542,"path":"DECK","assetBundleId":0,"components":[{"type":1,"id":-2630544,"data":[0,0,0,1,1,1,0,0,0,1]},{"type":18,"id":-2630546,"data":[1,5,458,[5,458],0,0,0,301,-1,0,1,1,0,0,1,1,1,1,1,1,15,24044,0,0,0,1,1,0,0.5,0,0]}],"children":[],"data":["Background",0,1,0,3]},{"id":-2630548,"path":"DECK","assetBundleId":0,"components":[{"type":1,"id":-2630550,"data":[0,0.100000001490116,0,0.899999976158142,0.899999976158142,0,0,0,0,1]},{"type":18,"id":-2630552,"data":[1,5,458,[5,458],0,0,0,302,-1,0,1,1,0,0,1,1,1,1,1,1,15,23944,0,0,0,1.13777780532837,1.13777780532837,0,0.5,0,0]}],"children":[],"data":["Icon",0,1,0,3]},{"id":-2630554,"path":"DECK","assetBundleId":0,"components":[{"type":1,"id":-2630556,"data":[0,0,0,1,1,1,0,0,0,1]},{"type":18,"id":-2630558,"data":[1,5,458,[5,458],0,0,0,303,-1,0,1,1,0,0,1,1,0,0,0,0.294117659330368,15,24044,0,0,0,1,1,0,0.5,0,0]}],"children":[],"data":["Dark",0,0,0,3]},{"id":-2630560,"path":"DECK","assetBundleId":0,"components":[{"type":1,"id":-2630562,"data":[0,0,0,1,1,1,0,0,0,1]},{"type":19,"id":-2630564,"data":[1,5,458,[5,458],1,0,0,300,-1,0,1,1,0,0,0,0,[],0,0.25,0.200000002980232,0,0.200000002980232,0,1,0,5,0.100000001490116,[[0,1,1,1,1,1,1,1,1,1],[0.02470436,0,0.1964752,1,0.601175,0.9162334,0.9988251,0.01568628],0],1,1,1,0,1,1,1,0.0156862754374743,0,0,1,[0,1,0,0,0,0,0,1,0,0,0,0,0,0]]}],"children":[],"data":["Trail",0,1,0,3]}],"data":["Tile - Salmon",0,1,0,3]}],"data":["Line - 1",0,1,0,0]}],"data":["Layer - 3",0,1,0,0]}],"data":["DECK",0,1,0,0]},{"id":113334,"path":"__________________________________________  ","assetBundleId":0,"components":[{"type":1,"id":113336,"data":[0,0,-10,1,1,1,0,0,0,1]}],"children":[],"data":["__________________________________________  ",0,1,0,0]}],"render_settings":{"data":[1,1,3,0.211999997496605,0.226999998092651,0.25900000333786,1,0.211999997496605,0.226999998092651,0.25900000333786,1,0.0469999983906746,0.0430000014603138,0.0350000001490116,1,0.114000000059605,0.125,0.133000001311302,1,0.5,0.5,0.5,1,300,0,0.00999999977648258,0,null,null,3,[],[[2068,0],[2068,0],[2068,0],[2068,0],[2068,0],[2068,0]],1,2,1,[0.03696759,0,0,0,0,0,0,0,0,0.04214946,0,0,0,0,0,0,0,0,0.05455384,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],0,null,null,null,null,0,128,0,0,0,0,1]},"shaders":[50,34,28,66,70,176,408,30,410,420,426,424,412,414,418,428,430,422,432,416]}],"scriptable-objects":[{"id":23880,"path":"Assets/Tiles/Cinamon.asset","name":"Cinamon","assetBundleId":-1,"class":10,"data":[15,23874]},{"id":23882,"path":"Assets/Tiles/Salmon.asset","name":"Salmon","assetBundleId":-1,"class":10,"data":[15,23944]},{"id":23910,"path":"Assets/Tiles/Leaves.asset","name":"Leaves","assetBundleId":-1,"class":10,"data":[15,23908]},{"id":23898,"path":"Assets/Tiles/Spinach.asset","name":"Spinach","assetBundleId":-1,"class":10,"data":[15,23896]},{"id":23902,"path":"Assets/Tiles/Butter.asset","name":"Butter","assetBundleId":-1,"class":10,"data":[15,23900]},{"id":23928,"path":"Assets/Tiles/FetaChees.asset","name":"FetaChees","assetBundleId":-1,"class":10,"data":[15,23926]},{"id":23932,"path":"Assets/Tiles/TofuChees.asset","name":"TofuChees","assetBundleId":-1,"class":10,"data":[15,23930]},{"id":23916,"path":"Assets/Tiles/Beacon.asset","name":"Beacon","assetBundleId":-1,"class":10,"data":[15,23914]},{"id":23950,"path":"Assets/Tiles/Honey.asset","name":"Honey","assetBundleId":-1,"class":10,"data":[15,23948]},{"id":23906,"path":"Assets/Tiles/Apples.asset","name":"Apples","assetBundleId":-1,"class":10,"data":[15,23904]},{"id":24602,"path":"Assets/Tiles/OliveOil.asset","name":"OliveOil","assetBundleId":-1,"class":10,"data":[15,24646]},{"id":23886,"path":"Assets/Tiles/Eggs.asset","name":"Eggs","assetBundleId":-1,"class":10,"data":[15,23940]},{"id":24616,"path":"Assets/Tiles/Lemon.asset","name":"Lemon","assetBundleId":-1,"class":10,"data":[15,24648]},{"id":24622,"path":"Assets/Tiles/Dill.asset","name":"Dill","assetBundleId":-1,"class":10,"data":[15,24644]},{"id":24628,"path":"Assets/Tiles/Salt.asset","name":"Salt","assetBundleId":-1,"class":10,"data":[15,23908]},{"id":23884,"path":"Assets/Tiles/Bread.asset","name":"Bread","assetBundleId":-1,"class":10,"data":[15,23894]},{"id":24688,"path":"Assets/TextMesh Pro/Resources/Sprite Assets/EmojiOne.asset","name":"EmojiOne","assetBundleId":-1,"class":56,"data":[-1836805472,5,24700,0,6,24702,[["Smiling face with smiling eyes",-1318250903,128522,0.5,0.5,null,null,0,0,384,128,128,0,115.599998474121,128,1],["1f60b",57188339,128523,0.5,0.5,null,null,1,128,384,128,128,0,115.599998474121,128,1],["1f60d",57188341,128525,0.5,0.5,null,null,2,256,384,128,128,0,115.599998474121,128,1],["1f60e",57188340,128526,0.5,0.5,null,null,3,384,384,128,128,0,115.599998474121,128,1],["Grinning face",-95541379,128512,0.5,0.5,null,null,4,0,256,128,128,0,115.599998474121,128,1],["1f601",57188256,128513,0.5,0.5,null,null,5,128,256,128,128,0,115.599998474121,128,1],["Face with tears of joy",239522663,128514,0.5,0.5,null,null,6,256,256,128,128,0,115.599998474121,128,1],["1f603",57188258,128515,0.5,0.5,null,null,7,384,256,128,128,0,115.599998474121,128,1],["1f604",57188261,128516,0.5,0.5,null,null,8,0,128,128,128,0,115.599998474121,128,1],["1f605",57188260,128517,0.5,0.5,null,null,9,128,128,128,128,0,115.599998474121,128,1],["1f606",57188263,128518,0.5,0.5,null,null,10,256,128,128,128,0,115.599998474121,128,1],["1f609",57188264,128521,0.5,0.5,null,null,11,384,128,128,128,0,115.599998474121,128,1],["1f618",57188168,128536,0.5,0.5,null,null,12,0,0,128,128,0,115.599998474121,128,1],["1f923",57200239,129315,0.5,0.5,null,null,13,128,0,128,128,0,115.599998474121,128,1],["263a",1748406,9786,0.5,0.5,null,null,14,256,0,128,128,0,115.599998474121,128,1],["2639",1748462,9785,0.5,0.5,null,null,15,384,0,128,128,0,115.599998474121,128,1]],[],"1.1.0",[0,"","",0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],[["Smiling face with smiling eyes",-1318250903,2,128522,0,1],["1f60b",57188339,2,128523,1,1],["1f60d",57188341,2,128525,2,1],["1f60e",57188340,2,128526,3,1],["Grinning face",-95541379,2,128512,4,1],["1f601",57188256,2,128513,5,1],["Face with tears of joy",239522663,2,128514,6,1],["1f603",57188258,2,128515,7,1],["1f604",57188261,2,128516,8,1],["1f605",57188260,2,128517,9,1],["1f606",57188263,2,128518,10,1],["1f609",57188264,2,128521,11,1],[".notdef",-600915428,2,0,12,1],["1f923",57200239,2,129315,13,1],["263a",1748406,2,9786,14,1],["2639",1748462,2,9785,15,1]],[[null,null,0,[128,128,0,115.599998474121,128],[0,384,128,128],1,0,0],[null,null,1,[128,128,0,115.599998474121,128],[128,384,128,128],1,0,0],[null,null,2,[128,128,0,115.599998474121,128],[256,384,128,128],1,0,0],[null,null,3,[128,128,0,115.599998474121,128],[384,384,128,128],1,0,0],[null,null,4,[128,128,0,115.599998474121,128],[0,256,128,128],1,0,0],[null,null,5,[128,128,0,115.599998474121,128],[128,256,128,128],1,0,0],[null,null,6,[128,128,0,115.599998474121,128],[256,256,128,128],1,0,0],[null,null,7,[128,128,0,115.599998474121,128],[384,256,128,128],1,0,0],[null,null,8,[128,128,0,115.599998474121,128],[0,128,128,128],1,0,0],[null,null,9,[128,128,0,115.599998474121,128],[128,128,128,128],1,0,0],[null,null,10,[128,128,0,115.599998474121,128],[256,128,128,128],1,0,0],[null,null,11,[128,128,0,115.599998474121,128],[384,128,128,128],1,0,0],[null,null,12,[128,128,0,115.599998474121,128],[0,0,128,128],1,0,0],[null,null,13,[128,128,0,115.599998474121,128],[128,0,128,128],1,0,0],[null,null,14,[128,128,0,115.599998474121,128],[256,0,128,128],1,0,0],[null,null,15,[128,128,0,115.599998474121,128],[384,0,128,128],1,0,0]]]},{"id":24626,"path":"Assets/Tiles/Garlic.asset","name":"Garlic","assetBundleId":-1,"class":10,"data":[15,24642]},{"id":24690,"path":"Assets/TextMesh Pro/Resources/TMP Settings.asset","name":"TMP Settings","assetBundleId":-1,"class":58,"data":[1,1,0,0,1,1,1,0,0,16,24502,"Fonts & Materials/",36,0.5,2,20,5,200,50,0,0,[],1,56,24688,"Sprite Assets/",1,0,"Color Gradient Presets/",57,24694,"",59,24696,59,24698,0]},{"id":24502,"path":"Assets/TextMesh Pro/Resources/Fonts & Materials/LiberationSans SDF.asset","name":"LiberationSans SDF","assetBundleId":-1,"class":16,"data":[231247347,5,24504,198912371,null,null,0,0,0.75,7,35,10,"1.1.0","e3265ab4bf004d28a9537516768c1c75",null,null,null,null,0,[0,"Liberation Sans","Regular",86,1,0,98.8916015625,77.853515625,59,45,0,-18.224609375,77.853515625,0.5,-18.224609375,0.5,-12.26171875,6.298828125,18,6.298828125,24],[[3,[0,0,0,0,24],[0,0,0,0],1,0,0],[4,[9,59,9,59,28],[555,816,9,59],1,0,0],[5,[25,19,3,59,31],[775,922,25,19],1,0,0],[6,[48,59,0,59,48],[471,170,48,59],1,0,0],[7,[47,70,0,64,48],[161,212,47,70],1,0,0],[8,[70,61,3,60,76],[409,10,70,61],1,0,0],[9,[53,61,3,60,57],[437,90,53,61],1,0,0],[10,[8,19,4,59,16],[975,961,8,19],1,0,0],[11,[24,80,5,62,29],[146,673,24,80],1,0,0],[12,[24,80,0,62,29],[189,671,24,80],1,0,0],[13,[31,30,1,59,33],[495,984,31,30],1,0,0],[14,[42,43,4,50,50],[972,330,42,43],1,0,0],[15,[10,20,7,9,24],[583,992,10,20],1,0,0],[16,[23,7,3,26,29],[399,925,23,7],1,0,0],[17,[10,9,7,9,24],[657,958,10,9],1,0,0],[18,[24,63,0,62,24],[695,409,24,63],1,0,0],[19,[42,61,3,60,48],[532,249,42,61],1,0,0],[20,[38,59,6,59,48],[915,501,38,59],1,0,0],[21,[40,60,4,60,48],[596,329,40,60],1,0,0],[22,[42,61,3,60,48],[417,503,42,61],1,0,0],[23,[45,59,1,59,48],[725,252,45,59],1,0,0],[24,[42,60,3,59,48],[724,330,42,60],1,0,0],[25,[41,61,4,60,48],[912,262,41,61],1,0,0],[26,[40,59,4,59,48],[438,830,40,59],1,0,0],[27,[42,61,3,60,48],[733,648,42,61],1,0,0],[28,[40,61,4,60,48],[856,484,40,61],1,0,0],[29,[10,45,7,45,24],[897,819,10,45],1,0,0],[30,[10,57,7,45,24],[429,287,10,57],1,0,0],[31,[42,43,4,50,50],[846,341,42,43],1,0,0],[32,[42,29,4,42,50],[227,281,42,29],1,0,0],[33,[42,43,4,50,50],[972,392,42,43],1,0,0],[34,[42,60,3,60,48],[733,728,42,60],1,0,0],[35,[74,74,6,62,87],[10,10,74,74],1,0,0],[36,[57,59,0,59,57],[828,103,57,59],1,0,0],[37,[46,59,7,59,57],[542,486,46,59],1,0,0],[38,[55,61,4,60,62],[509,88,55,61],1,0,0],[39,[51,59,7,59,62],[655,252,51,59],1,0,0],[40,[47,59,7,59,57],[629,409,47,59],1,0,0],[41,[43,59,7,59,53],[789,259,43,59],1,0,0],[42,[57,61,4,60,67],[904,103,57,61],1,0,0],[43,[48,59,7,59,62],[495,407,48,59],1,0,0],[44,[9,59,7,59,24],[552,919,9,59],1,0,0],[45,[36,60,1,59,43],[797,569,36,60],1,0,0],[46,[50,59,7,59,57],[458,326,50,59],1,0,0],[47,[39,59,7,59,48],[497,816,39,59],1,0,0],[48,[59,59,6,59,71],[97,955,59,59],1,0,0],[49,[48,59,7,59,62],[562,408,48,59],1,0,0],[50,[59,61,4,60,67],[583,89,59,61],1,0,0],[51,[46,59,7,59,57],[669,491,46,59],1,0,0],[52,[59,76,4,60,67],[10,103,59,76],1,0,0],[53,[52,59,7,59,62],[461,248,52,59],1,0,0],[54,[51,61,3,60,57],[288,273,51,61],1,0,0],[55,[50,59,1,59,52],[527,329,50,59],1,0,0],[56,[50,60,6,59,62],[655,330,50,60],1,0,0],[57,[57,59,0,59,57],[273,195,57,59],1,0,0],[58,[85,59,0,59,85],[103,10,85,59],1,0,0],[59,[56,59,1,59,58],[175,955,56,59],1,0,0],[60,[54,59,1,59,56],[582,169,54,59],1,0,0],[61,[49,59,2,59,53],[427,404,49,59],1,0,0],[62,[18,80,6,62,24],[232,671,18,80],1,0,0],[63,[24,63,0,62,24],[375,951,24,63],1,0,0],[64,[18,80,0,62,24],[223,393,18,80],1,0,0],[65,[38,31,0,59,38],[630,870,38,31],1,0,0],[66,[51,6,-2,-12,48],[497,894,51,6],1,0,0],[67,[19,13,4,63,29],[456,997,19,13],1,0,0],[68,[45,47,3,46,48],[669,648,45,47],1,0,0],[69,[40,63,5,62,48],[738,409,40,63],1,0,0],[70,[38,47,3,46,43],[908,579,38,47],1,0,0],[71,[40,63,3,62,48],[797,403,40,63],1,0,0],[72,[42,47,3,46,48],[785,337,42,47],1,0,0],[73,[25,62,1,62,25],[538,168,25,62],1,0,0],[74,[40,64,3,46,48],[86,872,40,64],1,0,0],[75,[38,62,5,62,48],[430,666,38,62],1,0,0],[76,[9,62,5,62,19],[852,567,9,62],1,0,0],[77,[17,80,-3,62,20],[145,773,17,80],1,0,0],[78,[40,62,5,62,44],[856,403,40,62],1,0,0],[79,[9,62,5,62,19],[880,564,9,62],1,0,0],[80,[64,46,5,46,74],[378,222,64,46],1,0,0],[81,[38,46,5,46,48],[630,805,38,46],1,0,0],[82,[42,47,3,46,48],[972,264,42,47],1,0,0],[83,[40,64,5,46,48],[145,872,40,64],1,0,0],[84,[40,64,3,46,48],[329,666,40,64],1,0,0],[85,[23,46,5,46,29],[926,816,23,46],1,0,0],[86,[38,47,2,46,43],[956,740,38,47],1,0,0],[87,[23,56,1,55,24],[388,672,23,56],1,0,0],[88,[38,46,5,45,48],[495,919,38,46],1,0,0],[89,[43,45,0,45,43],[226,329,43,45],1,0,0],[90,[63,45,-1,45,61],[655,188,63,45],1,0,0],[91,[43,45,0,45,43],[737,188,43,45],1,0,0],[92,[41,63,0,45,41],[609,640,41,63],1,0,0],[93,[35,45,3,45,42],[968,806,35,45],1,0,0],[94,[27,80,1,62,29],[164,113,27,80],1,0,0],[95,[8,80,7,62,22],[181,772,8,80],1,0,0],[96,[27,80,1,62,29],[227,182,27,80],1,0,0],[97,[44,11,3,34,50],[333,832,44,11],1,0,0],[98,[0,0,0,0,24],[0,0,0,0],1,0,0],[99,[10,59,9,45,28],[349,195,10,59],1,0,0],[100,[38,60,5,59,48],[915,422,38,60],1,0,0],[101,[45,60,2,60,48],[669,569,45,60],1,0,0],[102,[40,40,4,48,48],[733,807,40,40],1,0,0],[103,[50,59,-1,59,48],[358,357,50,59],1,0,0],[104,[8,80,7,62,22],[306,766,8,80],1,0,0],[105,[40,69,4,62,48],[223,492,40,69],1,0,0],[106,[25,8,1,59,29],[931,961,25,8],1,0,0],[107,[61,61,1,60,63],[277,90,61,61],1,0,0],[108,[32,33,1,60,32],[784,870,32,33],1,0,0],[109,[42,34,3,39,48],[972,454,42,34],1,0,0],[110,[42,24,4,32,50],[972,560,42,24],1,0,0],[111,[23,7,3,26,29],[583,890,23,7],1,0,0],[112,[61,61,1,60,63],[357,90,61,61],1,0,0],[113,[50,4,-1,65,48],[862,961,50,4],1,0,0],[114,[24,24,5,60,34],[687,906,24,24],1,0,0],[115,[43,52,2,52,47],[607,487,43,52],1,0,0],[116,[27,36,1,60,29],[792,815,27,36],1,0,0],[117,[27,37,1,60,29],[687,796,27,37],1,0,0],[118,[19,13,3,63,29],[545,997,19,13],1,0,0],[119,[43,63,5,45,50],[593,247,43,63],1,0,0],[120,[40,70,3,59,46],[208,770,40,70],1,0,0],[121,[10,10,9,28,29],[996,932,10,10],1,0,0],[122,[16,18,5,0,29],[622,958,16,18],1,0,0],[123,[24,35,3,59,29],[687,852,24,35],1,0,0],[124,[29,33,1,60,31],[835,877,29,33],1,0,0],[125,[42,34,3,39,48],[972,507,42,34],1,0,0],[126,[67,59,2,59,72],[498,10,67,59],1,0,0],[127,[68,59,2,59,72],[10,955,68,59],1,0,0],[128,[66,60,3,60,72],[584,10,66,60],1,0,0],[129,[43,60,5,45,53],[903,183,43,60],1,0,0],[130,[57,74,0,74,57],[829,10,57,74],1,0,0],[131,[57,74,0,74,57],[905,10,57,74],1,0,0],[132,[57,75,0,75,57],[10,673,57,75],1,0,0],[133,[57,75,0,75,57],[10,767,57,75],1,0,0],[134,[57,72,0,72,57],[88,113,57,72],1,0,0],[135,[57,75,0,75,57],[10,861,57,75],1,0,0],[136,[82,59,1,59,86],[207,10,82,59],1,0,0],[137,[55,78,4,60,62],[10,576,55,78],1,0,0],[138,[47,74,7,74,57],[84,580,47,74],1,0,0],[139,[47,74,7,74,57],[157,487,47,74],1,0,0],[140,[47,75,7,75,57],[157,393,47,75],1,0,0],[141,[47,72,7,72,57],[150,580,47,72],1,0,0],[142,[19,74,0,74,24],[227,859,19,74],1,0,0],[143,[19,74,5,74,24],[265,859,19,74],1,0,0],[144,[28,75,-2,75,24],[981,10,28,75],1,0,0],[145,[25,72,0,72,24],[216,580,25,72],1,0,0],[146,[58,59,0,59,62],[751,102,58,59],1,0,0],[147,[48,75,7,75,62],[210,88,48,75],1,0,0],[148,[59,75,4,74,67],[10,388,59,75],1,0,0],[149,[59,75,4,74,67],[10,482,59,75],1,0,0],[150,[59,76,4,75,67],[10,198,59,76],1,0,0],[151,[59,76,4,75,67],[10,293,59,76],1,0,0],[152,[59,73,4,72,67],[751,10,59,73],1,0,0],[153,[40,39,5,48,50],[838,819,40,39],1,0,0],[154,[63,65,2,62,67],[669,10,63,65],1,0,0],[155,[50,75,6,74,62],[88,392,50,75],1,0,0],[156,[50,75,6,74,62],[88,486,50,75],1,0,0],[157,[50,76,6,75,62],[88,297,50,76],1,0,0],[158,[50,73,6,72,62],[157,301,50,73],1,0,0],[159,[54,74,1,74,56],[88,204,54,74],1,0,0],[160,[46,59,7,59,57],[734,491,46,59],1,0,0],[161,[44,63,6,62,53],[545,564,44,63],1,0,0],[162,[45,64,3,63,48],[324,583,45,64],1,0,0],[163,[45,64,3,63,48],[333,749,45,64],1,0,0],[164,[45,63,3,62,48],[478,485,45,63],1,0,0],[165,[45,62,3,61,48],[250,952,45,62],1,0,0],[166,[45,60,3,59,48],[733,569,45,60],1,0,0],[167,[45,71,3,70,48],[260,580,45,71],1,0,0],[168,[71,47,2,46,76],[661,94,71,47],1,0,0],[169,[38,64,3,46,43],[427,583,38,64],1,0,0],[170,[42,64,3,63,48],[436,747,42,64],1,0,0],[171,[42,64,3,63,48],[484,567,42,64],1,0,0],[172,[42,63,3,62,48],[608,558,42,63],1,0,0],[173,[42,60,3,59,48],[851,262,42,60],1,0,0],[174,[19,63,0,63,24],[838,737,19,63],1,0,0],[175,[19,63,6,63,24],[418,951,19,63],1,0,0],[176,[29,62,-2,62,24],[980,104,29,62],1,0,0],[177,[25,59,0,59,24],[794,737,25,59],1,0,0],[178,[42,64,3,63,48],[487,650,42,64],1,0,0],[179,[38,61,5,61,48],[915,342,38,61],1,0,0],[180,[42,64,3,63,48],[548,646,42,64],1,0,0],[181,[42,64,3,63,48],[497,733,42,64],1,0,0],[182,[42,63,3,62,48],[672,714,42,63],1,0,0],[183,[42,62,3,61,48],[314,952,42,62],1,0,0],[184,[42,60,3,59,48],[972,185,42,60],1,0,0],[185,[43,39,2,48,47],[965,603,43,39],1,0,0],[186,[50,49,1,47,53],[357,435,50,49],1,0,0],[187,[38,64,5,63,48],[558,729,38,64],1,0,0],[188,[38,64,5,63,48],[615,722,38,64],1,0,0],[189,[38,63,5,62,48],[799,485,38,63],1,0,0],[190,[38,60,5,59,48],[956,661,38,60],1,0,0],[191,[41,81,0,63,41],[86,673,41,81],1,0,0],[192,[40,80,5,62,48],[86,773,40,80],1,0,0],[193,[41,77,0,59,41],[269,670,41,77],1,0,0],[1997,[0,0,0,0,43],[0,0,0,0],1,0,0],[1998,[0,0,0,0,86],[0,0,0,0],1,0,0],[1999,[0,0,0,0,43],[0,0,0,0],1,0,0],[2000,[0,0,0,0,86],[0,0,0,0],1,0,0],[2001,[0,0,0,0,29],[0,0,0,0],1,0,0],[2002,[0,0,0,0,22],[0,0,0,0],1,0,0],[2003,[0,0,0,0,14],[0,0,0,0],1,0,0],[2004,[0,0,0,0,48],[0,0,0,0],1,0,0],[2005,[0,0,0,0,24],[0,0,0,0],1,0,0],[2006,[0,0,0,0,17],[0,0,0,0],1,0,0],[2007,[0,0,0,0,7],[0,0,0,0],1,0,0],[2008,[0,0,0,0,0],[0,0,0,0],1,0,0],[2009,[4,65,-2,54,0],[204,871,4,65],1,0,0],[2010,[20,70,-10,59,0],[267,770,20,70],1,0,0],[2011,[21,70,-2,59,0],[260,393,21,70],1,0,0],[2012,[21,70,-19,59,0],[282,482,21,70],1,0,0],[2013,[48,6,0,25,48],[862,936,48,6],1,0,0],[2014,[48,6,0,25,48],[929,936,48,6],1,0,0],[2015,[86,6,0,25,86],[103,88,86,6],1,0,0],[2016,[86,6,0,25,86],[277,170,86,6],1,0,0],[2017,[22,62,7,62,36],[862,181,22,62],1,0,0],[2018,[51,15,-2,-4,48],[288,353,51,15],1,0,0],[2019,[9,19,5,59,19],[612,995,9,19],1,0,0],[2020,[9,19,5,59,19],[640,995,9,19],1,0,0],[2021,[9,19,5,8,19],[1002,961,9,19],1,0,0],[2022,[9,19,5,59,19],[686,949,9,19],1,0,0],[2023,[23,19,3,59,29],[967,894,23,19],1,0,0],[2024,[23,19,3,59,29],[580,916,23,19],1,0,0],[2025,[23,19,3,8,29],[580,954,23,19],1,0,0],[2026,[22,19,3,59,29],[622,920,22,19],1,0,0],[2027,[38,68,5,62,48],[303,865,38,68],1,0,0],[2028,[38,68,5,62,48],[300,387,38,68],1,0,0],[2029,[24,23,3,40,30],[819,929,24,23],1,0,0],[2030,[64,9,11,9,86],[661,160,64,9],1,0,0],[2031,[21,63,-2,52,0],[876,737,21,63],1,0,0],[2032,[21,63,-19,52,0],[916,734,21,63],1,0,0],[2033,[20,70,-10,59,0],[388,583,20,70],1,0,0],[2034,[20,70,-10,59,0],[397,747,20,70],1,0,0],[2035,[20,70,-10,59,0],[360,862,20,70],1,0,0],[2036,[0,0,0,0,17],[0,0,0,0],1,0,0],[2037,[82,61,2,60,86],[308,10,82,61],1,0,0],[2038,[12,22,3,59,16],[427,363,12,22],1,0,0],[2039,[26,22,3,59,30],[730,907,26,22],1,0,0],[2040,[35,22,-4,59,30],[730,866,35,22],1,0,0],[2041,[23,34,3,39,29],[883,883,23,34],1,0,0],[2042,[23,34,3,39,29],[925,883,23,34],1,0,0],[2043,[28,59,9,59,43],[583,812,28,59],1,0,0],[2044,[35,5,-3,68,29],[968,870,35,5],1,0,0],[2045,[44,59,-18,59,14],[799,181,44,59],1,0,0],[2046,[10,62,7,62,24],[322,474,10,62],1,0,0],[2047,[20,70,-10,59,0],[399,836,20,70],1,0,0],[2048,[20,70,-10,59,0],[794,648,20,70],1,0,0],[2049,[22,70,-11,59,0],[833,648,22,70],1,0,0],[2050,[22,70,-11,59,0],[874,648,22,70],1,0,0],[2051,[22,70,-11,59,0],[915,645,22,70],1,0,0],[2052,[20,70,-10,59,0],[456,908,20,70],1,0,0],[2075,[47,61,0,60,48],[351,503,47,61],1,0,0],[2090,[70,33,7,59,86],[382,170,70,33],1,0,0],[2179,[52,51,0,51,52],[358,287,52,51],1,0,0]],[[1,32,3,1],[1,33,4,1],[1,34,5,1],[1,35,6,1],[1,36,7,1],[1,37,8,1],[1,38,9,1],[1,39,10,1],[1,40,11,1],[1,41,12,1],[1,42,13,1],[1,43,14,1],[1,44,15,1],[1,45,16,1],[1,46,17,1],[1,47,18,1],[1,48,19,1],[1,49,20,1],[1,50,21,1],[1,51,22,1],[1,52,23,1],[1,53,24,1],[1,54,25,1],[1,55,26,1],[1,56,27,1],[1,57,28,1],[1,58,29,1],[1,59,30,1],[1,60,31,1],[1,61,32,1],[1,62,33,1],[1,63,34,1],[1,64,35,1],[1,65,36,1],[1,66,37,1],[1,67,38,1],[1,68,39,1],[1,69,40,1],[1,70,41,1],[1,71,42,1],[1,72,43,1],[1,73,44,1],[1,74,45,1],[1,75,46,1],[1,76,47,1],[1,77,48,1],[1,78,49,1],[1,79,50,1],[1,80,51,1],[1,81,52,1],[1,82,53,1],[1,83,54,1],[1,84,55,1],[1,85,56,1],[1,86,57,1],[1,87,58,1],[1,88,59,1],[1,89,60,1],[1,90,61,1],[1,91,62,1],[1,92,63,1],[1,93,64,1],[1,94,65,1],[1,95,66,1],[1,96,67,1],[1,97,68,1],[1,98,69,1],[1,99,70,1],[1,100,71,1],[1,101,72,1],[1,102,73,1],[1,103,74,1],[1,104,75,1],[1,105,76,1],[1,106,77,1],[1,107,78,1],[1,108,79,1],[1,109,80,1],[1,110,81,1],[1,111,82,1],[1,112,83,1],[1,113,84,1],[1,114,85,1],[1,115,86,1],[1,116,87,1],[1,117,88,1],[1,118,89,1],[1,119,90,1],[1,120,91,1],[1,121,92,1],[1,122,93,1],[1,123,94,1],[1,124,95,1],[1,125,96,1],[1,126,97,1],[1,160,98,1],[1,161,99,1],[1,162,100,1],[1,163,101,1],[1,164,102,1],[1,165,103,1],[1,166,104,1],[1,167,105,1],[1,168,106,1],[1,169,107,1],[1,170,108,1],[1,171,109,1],[1,172,110,1],[1,173,111,1],[1,174,112,1],[1,175,113,1],[1,176,114,1],[1,177,115,1],[1,178,116,1],[1,179,117,1],[1,180,118,1],[1,181,119,1],[1,182,120,1],[1,183,121,1],[1,184,122,1],[1,185,123,1],[1,186,124,1],[1,187,125,1],[1,188,126,1],[1,189,127,1],[1,190,128,1],[1,191,129,1],[1,192,130,1],[1,193,131,1],[1,194,132,1],[1,195,133,1],[1,196,134,1],[1,197,135,1],[1,198,136,1],[1,199,137,1],[1,200,138,1],[1,201,139,1],[1,202,140,1],[1,203,141,1],[1,204,142,1],[1,205,143,1],[1,206,144,1],[1,207,145,1],[1,208,146,1],[1,209,147,1],[1,210,148,1],[1,211,149,1],[1,212,150,1],[1,213,151,1],[1,214,152,1],[1,215,153,1],[1,216,154,1],[1,217,155,1],[1,218,156,1],[1,219,157,1],[1,220,158,1],[1,221,159,1],[1,222,160,1],[1,223,161,1],[1,224,162,1],[1,225,163,1],[1,226,164,1],[1,227,165,1],[1,228,166,1],[1,229,167,1],[1,230,168,1],[1,231,169,1],[1,232,170,1],[1,233,171,1],[1,234,172,1],[1,235,173,1],[1,236,174,1],[1,237,175,1],[1,238,176,1],[1,239,177,1],[1,240,178,1],[1,241,179,1],[1,242,180,1],[1,243,181,1],[1,244,182,1],[1,245,183,1],[1,246,184,1],[1,247,185,1],[1,248,186,1],[1,249,187,1],[1,250,188,1],[1,251,189,1],[1,252,190,1],[1,253,191,1],[1,254,192,1],[1,255,193,1],[1,8192,1997,1],[1,8193,1998,1],[1,8194,1999,1],[1,8195,2000,1],[1,8196,2001,1],[1,8197,2002,1],[1,8198,2003,1],[1,8199,2004,1],[1,8200,2005,1],[1,8201,2006,1],[1,8202,2007,1],[1,8203,2008,1],[1,8204,2009,1],[1,8205,2010,1],[1,8206,2011,1],[1,8207,2012,1],[1,8210,2013,1],[1,8211,2014,1],[1,8212,2015,1],[1,8213,2016,1],[1,8214,2017,1],[1,8215,2018,1],[1,8216,2019,1],[1,8217,2020,1],[1,8218,2021,1],[1,8219,2022,1],[1,8220,2023,1],[1,8221,2024,1],[1,8222,2025,1],[1,8223,2026,1],[1,8224,2027,1],[1,8225,2028,1],[1,8226,2029,1],[1,8230,2030,1],[1,8234,2031,1],[1,8235,2032,1],[1,8236,2033,1],[1,8237,2034,1],[1,8238,2035,1],[1,8239,2036,1],[1,8240,2037,1],[1,8242,2038,1],[1,8243,2039,1],[1,8244,2040,1],[1,8249,2041,1],[1,8250,2042,1],[1,8252,2043,1],[1,8254,2044,1],[1,8260,2045,1],[1,8286,2046,1],[1,8298,2047,1],[1,8299,2048,1],[1,8300,2049,1],[1,8301,2050,1],[1,8302,2051,1],[1,8303,2052,1],[1,8364,2075,1],[1,8482,2090,1],[1,9633,2179,1]],[6,24630],0,0,0,[[0,0,93,93],[93,0,104,78],[197,0,101,78],[298,0,101,80],[0,93,78,95],[0,188,78,95],[0,283,78,95],[0,378,78,94],[0,472,78,94],[0,566,74,97],[399,0,89,80],[0,663,76,94],[0,757,76,94],[0,851,76,94],[0,945,87,78],[488,0,86,78],[574,0,85,79],[659,0,82,84],[741,0,78,92],[819,0,76,93],[895,0,76,93],[971,0,47,94],[93,78,105,25],[78,103,76,91],[78,194,73,93],[78,287,69,95],[78,382,69,94],[78,476,69,94],[74,570,66,93],[76,663,60,100],[76,763,59,99],[76,862,59,83],[87,945,78,78],[154,103,46,99],[200,78,67,94],[151,202,66,89],[147,291,69,92],[147,383,66,94],[147,477,66,93],[140,570,66,91],[267,80,80,80],[347,80,80,80],[427,80,72,80],[499,78,74,80],[573,79,78,80],[651,84,90,66],[741,92,77,78],[818,93,76,78],[894,93,76,80],[970,94,48,81],[267,160,105,25],[217,172,46,99],[263,185,76,78],[372,160,89,52],[339,185,29,78],[368,212,83,65],[136,663,43,99],[179,661,43,99],[206,570,44,91],[222,661,37,99],[213,383,37,99],[213,482,59,88],[250,570,64,90],[259,660,60,96],[135,763,36,99],[135,862,59,83],[165,945,75,78],[171,762,27,99],[198,760,59,89],[194,861,23,84],[217,849,38,93],[240,942,64,81],[255,849,38,93],[257,760,39,89],[296,756,27,99],[293,855,57,87],[304,942,61,81],[651,150,83,28],[461,160,67,78],[528,158,44,81],[572,159,73,78],[645,178,82,64],[451,238,71,78],[522,239,61,80],[583,237,62,82],[645,242,70,78],[216,319,62,64],[217,271,61,48],[278,263,70,80],[250,383,40,89],[348,277,71,70],[278,343,70,34],[290,377,57,87],[419,277,29,76],[448,316,69,78],[517,319,69,78],[586,319,59,79],[645,320,69,79],[348,347,69,78],[417,353,31,41],[347,425,69,68],[417,394,68,78],[485,397,67,78],[552,398,67,78],[619,399,66,78],[685,399,43,82],[272,472,40,89],[312,464,29,81],[341,493,66,80],[314,573,64,83],[319,656,59,83],[323,739,64,83],[378,573,39,89],[378,662,42,75],[387,737,39,89],[407,493,61,80],[417,573,57,83],[420,656,57,81],[426,737,61,83],[468,475,64,82],[474,557,61,83],[477,640,61,83],[532,476,65,78],[535,554,63,82],[538,636,61,83],[487,723,61,83],[548,719,57,83],[597,477,62,71],[598,548,61,82],[599,630,60,82],[605,712,57,83],[659,481,65,78],[659,559,64,79],[659,638,64,66],[662,704,61,82],[714,320,61,79],[715,242,64,78],[728,399,59,82],[724,481,65,78],[723,559,64,79],[723,638,61,80],[723,718,61,79],[727,178,62,64],[789,171,63,78],[779,249,62,78],[775,327,61,66],[787,393,59,82],[789,475,57,82],[852,171,41,81],[893,173,62,79],[841,252,61,79],[902,252,60,80],[962,175,61,79],[962,254,61,66],[962,320,61,62],[836,331,61,62],[846,393,59,81],[846,474,59,80],[905,332,57,80],[962,382,61,62],[905,412,57,79],[962,444,61,53],[905,491,57,78],[962,497,61,53],[962,550,61,43],[323,822,63,30],[350,852,39,89],[365,941,43,82],[389,826,39,89],[428,820,59,78],[487,806,58,78],[784,638,39,89],[787,559,55,79],[784,727,44,78],[823,638,41,89],[828,727,38,82],[842,557,28,81],[870,554,28,81],[898,569,57,66],[955,593,62,58],[864,638,41,89],[905,635,41,89],[946,651,57,79],[866,727,40,82],[906,724,40,82],[946,730,57,66],[389,915,42,26],[408,941,38,82],[446,898,39,89],[545,806,28,78],[573,802,47,78],[620,795,57,65],[677,786,46,56],[723,797,59,59],[782,805,46,55],[828,809,59,58],[487,884,70,25],[485,909,57,65],[485,974,50,49],[542,909,28,78],[887,809,29,64],[916,806,42,65],[958,796,54,64],[620,860,57,50],[677,842,43,54],[720,856,54,41],[774,860,51,52],[825,867,48,52],[873,873,42,53],[446,987,38,32],[958,860,54,24],[535,987,38,32],[677,896,43,43],[720,897,45,41],[765,912,44,38],[809,919,43,42],[852,926,67,25],[852,951,69,23],[915,873,42,53],[957,884,42,38],[919,926,67,25],[921,951,44,27],[965,951,27,38],[573,880,42,26],[570,906,42,38],[570,944,42,38],[612,910,41,38],[612,948,35,37],[573,982,29,39],[602,985,28,38],[630,985,28,38],[986,922,29,29],[992,951,28,38],[647,948,29,28],[676,939,28,38]],[[78,93,15,10],[74,566,4,4],[198,78,2,25],[151,194,3,8],[147,287,4,4],[267,78,31,2],[488,78,11,2],[573,78,1,1],[651,79,8,5],[818,92,1,1],[970,93,1,1],[200,172,17,30],[263,172,4,13],[368,185,4,27],[140,661,39,2],[250,660,9,1],[136,762,35,1],[179,760,19,2],[171,861,23,1],[198,849,19,12],[217,942,23,3],[259,756,37,4],[293,849,3,6],[499,158,29,2],[572,158,1,1],[645,159,6,19],[451,212,10,26],[522,238,6,1],[572,237,11,2],[216,291,1,28],[263,263,15,8],[348,263,20,14],[278,377,12,6],[448,277,3,39],[517,316,5,3],[417,347,2,6],[347,377,1,48],[485,394,32,3],[552,397,34,1],[619,398,26,1],[250,472,22,10],[290,464,22,8],[272,561,69,9],[341,464,6,29],[312,545,29,25],[314,545,27,28],[314,656,5,4],[319,739,4,17],[378,737,9,2],[416,425,1,68],[417,656,3,6],[416,472,69,3],[416,472,52,21],[468,557,6,16],[474,640,3,16],[532,475,20,1],[532,554,3,3],[535,636,3,4],[477,723,10,14],[538,719,10,4],[597,476,22,1],[597,548,1,6],[598,630,1,6],[599,712,6,7],[659,477,26,4],[659,704,3,8],[734,150,7,28],[734,170,84,1],[734,170,55,8],[779,242,10,7],[775,320,4,7],[775,393,12,6],[787,475,2,6],[893,171,1,2],[841,249,11,3],[1018,0,5,175],[955,173,15,2],[955,173,7,79],[836,327,5,4],[897,331,5,62],[897,332,8,61],[386,822,1,30],[323,852,27,3],[350,941,15,1],[386,826,3,26],[426,820,2,6],[789,557,53,2],[846,554,24,3],[898,554,7,15],[955,569,7,24],[870,635,35,3],[946,635,9,16],[905,724,1,3],[428,898,18,17],[431,898,15,43],[548,802,25,4],[605,795,15,7],[662,786,15,9],[782,797,2,8],[485,898,2,11],[906,806,10,3],[1003,651,20,145],[946,796,12,10],[720,842,3,14],[774,856,8,4],[825,860,3,7],[873,867,14,6],[446,1019,39,4],[484,987,1,36],[535,974,7,13],[765,897,9,15],[720,938,45,85],[809,912,16,7],[852,919,21,7],[916,871,42,2],[957,871,1,13],[557,884,16,22],[557,884,13,25],[615,880,5,30],[612,906,8,4],[535,1019,38,4],[570,982,3,5],[535,1021,67,2],[602,982,10,3],[647,978,318,7],[658,978,307,45],[658,989,365,34],[1012,651,11,271],[999,884,24,38],[957,922,29,4],[1017,593,6,358],[1020,593,3,430],[1015,651,8,300],[653,910,24,29],[653,910,23,38],[704,939,61,84],[704,950,105,73],[704,961,148,62],[647,977,274,8],[647,976,29,9],[658,977,263,46],[658,976,18,47],[704,974,217,49]],["Liberation Sans",86,1,250,98.90625,0,77.84375,59.1875,-18.21875,0,77.84375,-12.26171875,0.5,-12.26171875,6.298828125,23.6749992370605,0,239.0625,9,1024,1024],1024,1024,9,4169,[],[[]],[[[[3,[0,0,-4.75,0]],[36,[0,0,0,0]],0],[[3,[0,0,-1.546875,0]],[55,[0,0,0,0]],0],[[3,[0,0,-1.546875,0]],[60,[0,0,0,0]],0],[[20,[0,0,-6.390625,0]],[20,[0,0,0,0]],0],[[36,[0,0,-4.75,0]],[3,[0,0,0,0]],0],[[36,[0,0,-6.390625,0]],[55,[0,0,0,0]],0],[[36,[0,0,-6.390625,0]],[57,[0,0,0,0]],0],[[36,[0,0,-3.1875,0]],[58,[0,0,0,0]],0],[[36,[0,0,-6.390625,0]],[60,[0,0,0,0]],0],[[36,[0,0,-1.546875,0]],[89,[0,0,0,0]],0],[[36,[0,0,-1.546875,0]],[90,[0,0,0,0]],0],[[36,[0,0,-1.546875,0]],[92,[0,0,0,0]],0],[[36,[0,0,-6.390625,0]],[2020,[0,0,0,0]],0],[[41,[0,0,-9.53125,0]],[15,[0,0,0,0]],0],[[41,[0,0,-9.53125,0]],[17,[0,0,0,0]],0],[[41,[0,0,-4.75,0]],[36,[0,0,0,0]],0],[[47,[0,0,-3.1875,0]],[3,[0,0,0,0]],0],[[47,[0,0,-6.390625,0]],[55,[0,0,0,0]],0],[[47,[0,0,-6.390625,0]],[57,[0,0,0,0]],0],[[47,[0,0,-6.390625,0]],[58,[0,0,0,0]],0],[[47,[0,0,-6.390625,0]],[60,[0,0,0,0]],0],[[47,[0,0,-3.1875,0]],[92,[0,0,0,0]],0],[[47,[0,0,-4.75,0]],[2020,[0,0,0,0]],0],[[51,[0,0,-1.546875,0]],[3,[0,0,0,0]],0],[[51,[0,0,-11.09375,0]],[15,[0,0,0,0]],0],[[51,[0,0,-11.09375,0]],[17,[0,0,0,0]],0],[[51,[0,0,-6.390625,0]],[36,[0,0,0,0]],0],[[53,[0,0,-1.546875,0]],[55,[0,0,0,0]],0],[[53,[0,0,-1.546875,0]],[57,[0,0,0,0]],0],[[53,[0,0,-1.546875,0]],[58,[0,0,0,0]],0],[[53,[0,0,-1.546875,0]],[60,[0,0,0,0]],0],[[55,[0,0,-1.546875,0]],[3,[0,0,0,0]],0],[[55,[0,0,-9.53125,0]],[15,[0,0,0,0]],0],[[55,[0,0,-4.75,0]],[16,[0,0,0,0]],0],[[55,[0,0,-9.53125,0]],[17,[0,0,0,0]],0],[[55,[0,0,-9.53125,0]],[29,[0,0,0,0]],0],[[55,[0,0,-9.53125,0]],[30,[0,0,0,0]],0],[[55,[0,0,-6.390625,0]],[36,[0,0,0,0]],0],[[55,[0,0,-1.546875,0]],[50,[0,0,0,0]],0],[[55,[0,0,-9.53125,0]],[68,[0,0,0,0]],0],[[55,[0,0,-9.53125,0]],[70,[0,0,0,0]],0],[[55,[0,0,-9.53125,0]],[72,[0,0,0,0]],0],[[55,[0,0,-3.1875,0]],[76,[0,0,0,0]],0],[[55,[0,0,-9.53125,0]],[82,[0,0,0,0]],0],[[55,[0,0,-3.1875,0]],[85,[0,0,0,0]],0],[[55,[0,0,-9.53125,0]],[86,[0,0,0,0]],0],[[55,[0,0,-3.1875,0]],[88,[0,0,0,0]],0],[[55,[0,0,-4.75,0]],[90,[0,0,0,0]],0],[[55,[0,0,-4.75,0]],[92,[0,0,0,0]],0],[[57,[0,0,-7.890625,0]],[15,[0,0,0,0]],0],[[57,[0,0,-4.75,0]],[16,[0,0,0,0]],0],[[57,[0,0,-7.890625,0]],[17,[0,0,0,0]],0],[[57,[0,0,-3.1875,0]],[29,[0,0,0,0]],0],[[57,[0,0,-3.1875,0]],[30,[0,0,0,0]],0],[[57,[0,0,-6.390625,0]],[36,[0,0,0,0]],0],[[57,[0,0,-6.390625,0]],[68,[0,0,0,0]],0],[[57,[0,0,-4.75,0]],[72,[0,0,0,0]],0],[[57,[0,0,-1.546875,0]],[76,[0,0,0,0]],0],[[57,[0,0,-4.75,0]],[82,[0,0,0,0]],0],[[57,[0,0,-3.1875,0]],[85,[0,0,0,0]],0],[[57,[0,0,-3.1875,0]],[88,[0,0,0,0]],0],[[57,[0,0,-3.1875,0]],[92,[0,0,0,0]],0],[[58,[0,0,-4.75,0]],[15,[0,0,0,0]],0],[[58,[0,0,-1.546875,0]],[16,[0,0,0,0]],0],[[58,[0,0,-4.75,0]],[17,[0,0,0,0]],0],[[58,[0,0,-1.546875,0]],[29,[0,0,0,0]],0],[[58,[0,0,-1.546875,0]],[30,[0,0,0,0]],0],[[58,[0,0,-3.1875,0]],[36,[0,0,0,0]],0],[[58,[0,0,-3.1875,0]],[68,[0,0,0,0]],0],[[58,[0,0,-1.546875,0]],[72,[0,0,0,0]],0],[[58,[0,0,-1.546875,0]],[82,[0,0,0,0]],0],[[58,[0,0,-1.546875,0]],[85,[0,0,0,0]],0],[[58,[0,0,-1.546875,0]],[88,[0,0,0,0]],0],[[58,[0,0,-0.75,0]],[92,[0,0,0,0]],0],[[60,[0,0,-1.546875,0]],[3,[0,0,0,0]],0],[[60,[0,0,-11.09375,0]],[15,[0,0,0,0]],0],[[60,[0,0,-7.890625,0]],[16,[0,0,0,0]],0],[[60,[0,0,-11.09375,0]],[17,[0,0,0,0]],0],[[60,[0,0,-4.75,0]],[29,[0,0,0,0]],0],[[60,[0,0,-5.578125,0]],[30,[0,0,0,0]],0],[[60,[0,0,-6.390625,0]],[36,[0,0,0,0]],0],[[60,[0,0,-6.390625,0]],[68,[0,0,0,0]],0],[[60,[0,0,-7.890625,0]],[72,[0,0,0,0]],0],[[60,[0,0,-3.1875,0]],[76,[0,0,0,0]],0],[[60,[0,0,-7.890625,0]],[82,[0,0,0,0]],0],[[60,[0,0,-6.390625,0]],[83,[0,0,0,0]],0],[[60,[0,0,-7.890625,0]],[84,[0,0,0,0]],0],[[60,[0,0,-4.75,0]],[88,[0,0,0,0]],0],[[60,[0,0,-4.75,0]],[89,[0,0,0,0]],0],[[73,[0,0,-1.546875,0]],[73,[0,0,0,0]],0],[[73,[0,0,1.546875,0]],[2020,[0,0,0,0]],0],[[85,[0,0,-4.75,0]],[15,[0,0,0,0]],0],[[85,[0,0,-4.75,0]],[17,[0,0,0,0]],0],[[85,[0,0,3.1875,0]],[2020,[0,0,0,0]],0],[[89,[0,0,-6.390625,0]],[15,[0,0,0,0]],0],[[89,[0,0,-6.390625,0]],[17,[0,0,0,0]],0],[[90,[0,0,-4.75,0]],[15,[0,0,0,0]],0],[[90,[0,0,-4.75,0]],[17,[0,0,0,0]],0],[[92,[0,0,-6.390625,0]],[15,[0,0,0,0]],0],[[92,[0,0,-6.390625,0]],[17,[0,0,0,0]],0],[[2019,[0,0,-1.546875,0]],[2019,[0,0,0,0]],0],[[2020,[0,0,-3.1875,0]],[3,[0,0,0,0]],0],[[2020,[0,0,-1.546875,0]],[86,[0,0,0,0]],0],[[2020,[0,0,-1.546875,0]],[2020,[0,0,0,0]],0]]],[],[],["","e3265ab4bf004d28a9537516768c1c75",0,86,9,4,1024,1024,1,"32 - 126, 160 - 255, 8192 - 8303, 8364, 8482, 9633","8f586378b4e144a9851e7b34d9b748ee","",0,0,4169,1],[[null,null,null,null],[null,null,null,null],[null,null,null,null],[null,null,null,null],[null,null,null,null],[null,null,null,null],[null,null,null,null],[null,null,null,null],[null,null,null,null],[null,null,null,null]],[[null,null,null,null],[null,null,null,null],[null,null,null,null],[null,null,null,null],[null,null,null,null],[null,null,null,null],[null,null,null,null],[null,null,null,null],[null,null,null,null],[null,null,null,null]]]},{"id":24694,"path":"Assets/TextMesh Pro/Resources/Style Sheets/Default Style Sheet.asset","name":"Default Style Sheet","assetBundleId":-1,"class":57,"data":[[["H1",2425,"<size=2em><b><#40ff80>*","*</size></b></color>",[60,115,105,122,101,61,50,101,109,62,60,98,62,60,35,52,48,102,102,56,48,62,42],[42,60,47,115,105,122,101,62,60,47,98,62,60,47,99,111,108,111,114,62],[60,115,105,122,101,61,50,101,109,62,60,98,62,60,35,52,48,102,102,56,48,62,42],[42,60,47,115,105,122,101,62,60,47,98,62,60,47,99,111,108,111,114,62]],["Quote",93368250,"<i><size=75%><margin=10%>","</i></size></width></margin>",[60,105,62,60,115,105,122,101,61,55,53,37,62,60,109,97,114,103,105,110,61,49,48,37,62],[60,47,105,62,60,47,115,105,122,101,62,60,47,119,105,100,116,104,62,60,47,109,97,114,103,105,110,62],[60,105,62,60,115,105,122,101,61,55,53,37,62,60,109,97,114,103,105,110,61,49,48,37,62],[60,47,105,62,60,47,115,105,122,101,62,60,47,119,105,100,116,104,62,60,47,109,97,114,103,105,110,62]],["Link",2656128,"<u><#40a0ff><link=\"ID_01\">","</u></color></link>",[60,117,62,60,35,52,48,97,48,102,102,62,60,108,105,110,107,61,34,73,68,95,48,49,34,62],[60,47,117,62,60,47,99,111,108,111,114,62,60,47,108,105,110,107,62],[60,117,62,60,35,52,48,97,48,102,102,62,60,108,105,110,107,61,34,73,68,95,48,49,34,62],[60,47,117,62,60,47,99,111,108,111,114,62,60,47,108,105,110,107,62]],["Title",97690656,"<size=125%><b><align=center>","</size></b></align>",[60,115,105,122,101,61,49,50,53,37,62,60,98,62,60,97,108,105,103,110,61,99,101,110,116,101,114,62],[60,47,115,105,122,101,62,60,47,98,62,60,47,97,108,105,103,110,62],[60,115,105,122,101,61,49,50,53,37,62,60,98,62,60,97,108,105,103,110,61,99,101,110,116,101,114,62],[60,47,115,105,122,101,62,60,47,98,62,60,47,97,108,105,103,110,62]],["H2",2426,"<size=1.5em><b><#4080FF>","</size></b></color>",[60,115,105,122,101,61,49,46,53,101,109,62,60,98,62,60,35,52,48,56,48,70,70,62],[60,47,115,105,122,101,62,60,47,98,62,60,47,99,111,108,111,114,62],[60,115,105,122,101,61,49,46,53,101,109,62,60,98,62,60,35,52,48,56,48,70,70,62],[60,47,115,105,122,101,62,60,47,98,62,60,47,99,111,108,111,114,62]],["H3",2427,"<size=1.17em><b><#FF8040>","</size></b></color>",[60,115,105,122,101,61,49,46,49,55,101,109,62,60,98,62,60,35,70,70,56,48,52,48,62],[60,47,115,105,122,101,62,60,47,98,62,60,47,99,111,108,111,114,62],[60,115,105,122,101,61,49,46,49,55,101,109,62,60,98,62,60,35,70,70,56,48,52,48,62],[60,47,115,105,122,101,62,60,47,98,62,60,47,99,111,108,111,114,62]],["C1",2194,"<color=#ffff40>","</color>",[60,99,111,108,111,114,61,35,102,102,102,102,52,48,62],[60,47,99,111,108,111,114,62],[60,99,111,108,111,114,61,35,102,102,102,102,52,48,62],[60,47,99,111,108,111,114,62]],["C2",2193,"<color=#ff40FF><size=125%>","</color></size>",[60,99,111,108,111,114,61,35,102,102,52,48,70,70,62,60,115,105,122,101,61,49,50,53,37,62],[60,47,99,111,108,111,114,62,60,47,115,105,122,101,62],[60,99,111,108,111,114,61,35,102,102,52,48,70,70,62,60,115,105,122,101,61,49,50,53,37,62],[60,47,99,111,108,111,114,62,60,47,115,105,122,101,62]],["C3",2192,"<color=#80A0FF><b>","</color></b>",[60,99,111,108,111,114,61,35,56,48,65,48,70,70,62,60,98,62],[60,47,99,111,108,111,114,62,60,47,98,62],[60,99,111,108,111,114,61,35,56,48,65,48,70,70,62,60,98,62],[60,47,99,111,108,111,114,62,60,47,98,62]],["Normal",-1183493901,"","",[],[],[],[]]]]},{"id":26834,"path":"Assets/Tiles/Grass.asset","name":"Grass","assetBundleId":-1,"class":10,"data":[15,28942]},{"id":8694,"path":"Assets/SVC_Luna.asset","name":"SVC_Luna","assetBundleId":-1,"class":60,"data":[2,[[0,50,0,0,0,1,[]],[0,28,0,0,0,1,[]],[0,28,0,0,0,1,["PIXELSNAP_ON"]],[0,66,4,0,0,1,["DIRECTIONAL"]],[0,66,4,0,0,1,["DIRECTIONAL","LIGHTPROBE_SH"]],[0,66,4,0,0,1,["DIRECTIONAL","_EMISSION"]],[0,66,4,0,0,1,["DIRECTIONAL","LIGHTPROBE_SH","_EMISSION"]],[0,66,5,1,0,1,["DIRECTIONAL"]],[0,66,4,0,1,1,["DIRECTIONAL"]],[0,66,4,0,1,1,["DIRECTIONAL","LIGHTPROBE_SH"]],[0,66,4,0,1,1,["DIRECTIONAL","_EMISSION"]],[0,66,4,0,1,1,["DIRECTIONAL","LIGHTPROBE_SH","_EMISSION"]],[0,66,5,1,1,1,["DIRECTIONAL"]],[0,70,1,0,0,1,[]],[0,70,2,1,0,1,[]],[0,176,0,2,0,1,[]],[0,176,0,2,0,1,["_ALPHABLEND_ON","_COLORCOLOR_ON"]],[0,408,0,0,0,1,[]],[0,408,0,0,0,1,["UNITY_UI_ALPHACLIP"]],[0,408,0,0,0,1,["UNITY_UI_CLIP_RECT"]],[0,408,0,0,0,1,["UNITY_UI_ALPHACLIP","UNITY_UI_CLIP_RECT"]],[0,408,0,0,0,1,["OUTLINE_ON","UNDERLAY_ON"]],[0,408,0,0,0,1,["OUTLINE_ON"]],[0,408,0,0,0,1,["UNITY_UI_ALPHACLIP","OUTLINE_ON","UNDERLAY_ON"]],[0,408,0,0,0,1,["UNITY_UI_ALPHACLIP","OUTLINE_ON"]],[0,408,0,0,0,1,["UNITY_UI_CLIP_RECT","OUTLINE_ON","UNDERLAY_ON"]],[0,408,0,0,0,1,["UNITY_UI_CLIP_RECT","OUTLINE_ON"]],[0,408,0,0,0,1,["UNITY_UI_ALPHACLIP","UNITY_UI_CLIP_RECT","OUTLINE_ON","UNDERLAY_ON"]],[0,408,0,0,0,1,["UNITY_UI_ALPHACLIP","UNITY_UI_CLIP_RECT","OUTLINE_ON"]],[0,30,0,0,0,1,[]],[0,30,0,0,0,1,["UNITY_UI_ALPHACLIP"]],[0,30,0,0,0,1,["UNITY_UI_CLIP_RECT"]],[0,30,0,0,0,1,["UNITY_UI_ALPHACLIP","UNITY_UI_CLIP_RECT"]],[0,410,0,0,0,1,[]],[0,410,0,0,0,1,["UNITY_UI_ALPHACLIP"]],[0,410,0,0,0,1,["UNITY_UI_CLIP_RECT"]],[0,410,0,0,0,1,["UNITY_UI_ALPHACLIP","UNITY_UI_CLIP_RECT"]]],[[0,30,0,0,0,0,[]],[0,28,0,0,0,0,[]],[0,408,0,0,0,0,[]],[0,66,4,0,0,0,["DIRECTIONAL","LIGHTPROBE_SH","_EMISSION"]],[0,176,0,2,0,0,["_ALPHABLEND_ON","_COLORCOLOR_ON"]]],[],[],"625",[[[[0,[["Hidden/BlitCopy",[[0,"\n#version 100\n\nuniform \tvec4 hlslcc_mtx4x4unity_ObjectToWorld[4];\nuniform \tvec4 hlslcc_mtx4x4unity_MatrixVP[4];\nuniform \tvec4 _MainTex_ST;\nattribute highp vec4 in_POSITION0;\nattribute highp vec2 in_TEXCOORD0;\nvarying highp vec2 vs_TEXCOORD0;\nvec4 u_xlat0;\nvec4 u_xlat1;\nvoid main()\n{\n    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];\n    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;\n    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;\n    u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];\n    u_xlat1 = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];\n    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat0.xxxx + u_xlat1;\n    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat0.zzzz + u_xlat1;\n    gl_Position = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat0.wwww + u_xlat1;\n    vs_TEXCOORD0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;\n    return;\n}\n\n","\n#version 100\n\n#ifdef GL_FRAGMENT_PRECISION_HIGH\n    precision highp float;\n#else\n    precision mediump float;\n#endif\nprecision highp int;\nuniform \tvec4 _Color;\nuniform highp sampler2D _MainTex;\nvarying highp vec2 vs_TEXCOORD0;\n#define SV_Target0 gl_FragData[0]\nvec4 u_xlat0;\nvoid main()\n{\n    u_xlat0 = texture2D(_MainTex, vs_TEXCOORD0.xy);\n    u_xlat0 = u_xlat0 * _Color;\n    SV_Target0 = u_xlat0;\n    return;\n}\n\n",0,0,0,0,0,[],[]]],["STEREO_CUBEMAP_RENDER_ON","STEREO_INSTANCING_ON","STEREO_MULTIVIEW_ON","UNITY_SINGLE_PASS_STEREO"],[],0,0,5,0,0,0,0,[],[null,null],"",33,-1]],[],0]],0,50,"Resources/unity_builtin_extra",["STEREO_CUBEMAP_RENDER_ON","STEREO_INSTANCING_ON","STEREO_MULTIVIEW_ON","UNITY_SINGLE_PASS_STEREO"],null,null,[],5],[[[0,[["Hidden/InternalErrorShader",[],[],[],0,0,5,0,0,0,0,[],[null,null],"",227,32]],[],0]],0,34,"Library/unity default resources",[],null,null,[],5],[[[0,[["Legacy Shaders/VertexLit",[[0,"\n#version 100\n\nuniform \tmediump vec4 unity_LightColor[8];\nuniform \tvec4 unity_LightPosition[8];\nuniform \tvec4 hlslcc_mtx4x4unity_ObjectToWorld[4];\nuniform \tvec4 hlslcc_mtx4x4unity_WorldToObject[4];\nuniform \tmediump vec4 glstate_lightmodel_ambient;\nuniform \tvec4 hlslcc_mtx4x4unity_MatrixV[4];\nuniform \tvec4 hlslcc_mtx4x4unity_MatrixInvV[4];\nuniform \tvec4 hlslcc_mtx4x4unity_MatrixVP[4];\nuniform \tmediump vec4 _Color;\nuniform \tmediump vec4 _SpecColor;\nuniform \tmediump vec4 _Emission;\nuniform \tmediump float _Shininess;\nuniform \tvec4 _MainTex_ST;\nattribute highp vec3 in_POSITION0;\nattribute highp vec3 in_NORMAL0;\nattribute highp vec3 in_TEXCOORD0;\nvarying mediump vec4 vs_COLOR0;\nvarying mediump vec3 vs_COLOR1;\nvarying highp vec2 vs_TEXCOORD0;\nvec4 u_xlat0;\nvec4 u_xlat1;\nvec3 u_xlat2;\nbool u_xlatb2;\nvec3 u_xlat3;\nvec3 u_xlat4;\nvec3 u_xlat5;\nvec3 u_xlat6;\nmediump vec3 u_xlat16_7;\nmediump vec3 u_xlat16_8;\nmediump vec3 u_xlat16_9;\nmediump vec3 u_xlat16_10;\nmediump vec3 u_xlat16_11;\nfloat u_xlat36;\nint u_xlati37;\nmediump float u_xlat16_43;\nmediump float u_xlat16_44;\nvoid main()\n{\n    u_xlat0.xyz = hlslcc_mtx4x4unity_ObjectToWorld[0].yyy * hlslcc_mtx4x4unity_MatrixV[1].xyz;\n    u_xlat0.xyz = hlslcc_mtx4x4unity_MatrixV[0].xyz * hlslcc_mtx4x4unity_ObjectToWorld[0].xxx + u_xlat0.xyz;\n    u_xlat0.xyz = hlslcc_mtx4x4unity_MatrixV[2].xyz * hlslcc_mtx4x4unity_ObjectToWorld[0].zzz + u_xlat0.xyz;\n    u_xlat0.xyz = hlslcc_mtx4x4unity_MatrixV[3].xyz * hlslcc_mtx4x4unity_ObjectToWorld[0].www + u_xlat0.xyz;\n    u_xlat1.xyz = hlslcc_mtx4x4unity_ObjectToWorld[1].yyy * hlslcc_mtx4x4unity_MatrixV[1].xyz;\n    u_xlat1.xyz = hlslcc_mtx4x4unity_MatrixV[0].xyz * hlslcc_mtx4x4unity_ObjectToWorld[1].xxx + u_xlat1.xyz;\n    u_xlat1.xyz = hlslcc_mtx4x4unity_MatrixV[2].xyz * hlslcc_mtx4x4unity_ObjectToWorld[1].zzz + u_xlat1.xyz;\n    u_xlat1.xyz = hlslcc_mtx4x4unity_MatrixV[3].xyz * hlslcc_mtx4x4unity_ObjectToWorld[1].www + u_xlat1.xyz;\n    u_xlat2.xyz = hlslcc_mtx4x4unity_ObjectToWorld[2].yyy * hlslcc_mtx4x4unity_MatrixV[1].xyz;\n    u_xlat2.xyz = hlslcc_mtx4x4unity_MatrixV[0].xyz * hlslcc_mtx4x4unity_ObjectToWorld[2].xxx + u_xlat2.xyz;\n    u_xlat2.xyz = hlslcc_mtx4x4unity_MatrixV[2].xyz * hlslcc_mtx4x4unity_ObjectToWorld[2].zzz + u_xlat2.xyz;\n    u_xlat2.xyz = hlslcc_mtx4x4unity_MatrixV[3].xyz * hlslcc_mtx4x4unity_ObjectToWorld[2].www + u_xlat2.xyz;\n    u_xlat3.xyz = hlslcc_mtx4x4unity_ObjectToWorld[3].yyy * hlslcc_mtx4x4unity_MatrixV[1].xyz;\n    u_xlat3.xyz = hlslcc_mtx4x4unity_MatrixV[0].xyz * hlslcc_mtx4x4unity_ObjectToWorld[3].xxx + u_xlat3.xyz;\n    u_xlat3.xyz = hlslcc_mtx4x4unity_MatrixV[2].xyz * hlslcc_mtx4x4unity_ObjectToWorld[3].zzz + u_xlat3.xyz;\n    u_xlat3.xyz = hlslcc_mtx4x4unity_MatrixV[3].xyz * hlslcc_mtx4x4unity_ObjectToWorld[3].www + u_xlat3.xyz;\n    u_xlat4.xyz = hlslcc_mtx4x4unity_WorldToObject[1].xyz * hlslcc_mtx4x4unity_MatrixInvV[0].yyy;\n    u_xlat4.xyz = hlslcc_mtx4x4unity_WorldToObject[0].xyz * hlslcc_mtx4x4unity_MatrixInvV[0].xxx + u_xlat4.xyz;\n    u_xlat4.xyz = hlslcc_mtx4x4unity_WorldToObject[2].xyz * hlslcc_mtx4x4unity_MatrixInvV[0].zzz + u_xlat4.xyz;\n    u_xlat4.xyz = hlslcc_mtx4x4unity_WorldToObject[3].xyz * hlslcc_mtx4x4unity_MatrixInvV[0].www + u_xlat4.xyz;\n    u_xlat5.xyz = hlslcc_mtx4x4unity_WorldToObject[1].xyz * hlslcc_mtx4x4unity_MatrixInvV[1].yyy;\n    u_xlat5.xyz = hlslcc_mtx4x4unity_WorldToObject[0].xyz * hlslcc_mtx4x4unity_MatrixInvV[1].xxx + u_xlat5.xyz;\n    u_xlat5.xyz = hlslcc_mtx4x4unity_WorldToObject[2].xyz * hlslcc_mtx4x4unity_MatrixInvV[1].zzz + u_xlat5.xyz;\n    u_xlat5.xyz = hlslcc_mtx4x4unity_WorldToObject[3].xyz * hlslcc_mtx4x4unity_MatrixInvV[1].www + u_xlat5.xyz;\n    u_xlat6.xyz = hlslcc_mtx4x4unity_WorldToObject[1].xyz * hlslcc_mtx4x4unity_MatrixInvV[2].yyy;\n    u_xlat6.xyz = hlslcc_mtx4x4unity_WorldToObject[0].xyz * hlslcc_mtx4x4unity_MatrixInvV[2].xxx + u_xlat6.xyz;\n    u_xlat6.xyz = hlslcc_mtx4x4unity_WorldToObject[2].xyz * hlslcc_mtx4x4unity_MatrixInvV[2].zzz + u_xlat6.xyz;\n    u_xlat6.xyz = hlslcc_mtx4x4unity_WorldToObject[3].xyz * hlslcc_mtx4x4unity_MatrixInvV[2].www + u_xlat6.xyz;\n    u_xlat1.xyz = u_xlat1.xyz * in_POSITION0.yyy;\n    u_xlat0.xyz = u_xlat0.xyz * in_POSITION0.xxx + u_xlat1.xyz;\n    u_xlat0.xyz = u_xlat2.xyz * in_POSITION0.zzz + u_xlat0.xyz;\n    u_xlat0.xyz = u_xlat3.xyz + u_xlat0.xyz;\n    u_xlat1.x = dot(u_xlat4.xyz, in_NORMAL0.xyz);\n    u_xlat1.y = dot(u_xlat5.xyz, in_NORMAL0.xyz);\n    u_xlat1.z = dot(u_xlat6.xyz, in_NORMAL0.xyz);\n    u_xlat36 = dot(u_xlat1.xyz, u_xlat1.xyz);\n    u_xlat36 = inversesqrt(u_xlat36);\n    u_xlat1.xyz = vec3(u_xlat36) * u_xlat1.xyz;\n    u_xlat36 = dot(u_xlat0.xyz, u_xlat0.xyz);\n    u_xlat36 = inversesqrt(u_xlat36);\n    u_xlat16_7.xyz = _Color.xyz * glstate_lightmodel_ambient.xyz + _Emission.xyz;\n    u_xlat16_43 = _Shininess * 128.0;\n    u_xlat16_8.xyz = u_xlat16_7.xyz;\n    u_xlat16_9.x = float(0.0);\n    u_xlat16_9.y = float(0.0);\n    u_xlat16_9.z = float(0.0);\n    for(int u_xlati_loop_1 = 0 ; u_xlati_loop_1<8 ; u_xlati_loop_1++)\n    {\n        u_xlat16_44 = dot(u_xlat1.xyz, unity_LightPosition[u_xlati_loop_1].xyz);\n        u_xlat16_44 = max(u_xlat16_44, 0.0);\n        u_xlat16_10.xyz = vec3(u_xlat16_44) * _Color.xyz;\n        u_xlat16_10.xyz = u_xlat16_10.xyz * unity_LightColor[u_xlati_loop_1].xyz;\n        u_xlatb2 = 0.0<u_xlat16_44;\n        if(u_xlatb2){\n            u_xlat16_11.xyz = (-u_xlat0.xyz) * vec3(u_xlat36) + unity_LightPosition[u_xlati_loop_1].xyz;\n            u_xlat16_44 = dot(u_xlat16_11.xyz, u_xlat16_11.xyz);\n            u_xlat16_44 = inversesqrt(u_xlat16_44);\n            u_xlat16_11.xyz = vec3(u_xlat16_44) * u_xlat16_11.xyz;\n            u_xlat16_44 = dot(u_xlat1.xyz, u_xlat16_11.xyz);\n            u_xlat16_44 = max(u_xlat16_44, 0.0);\n            u_xlat16_44 = log2(u_xlat16_44);\n            u_xlat16_44 = u_xlat16_43 * u_xlat16_44;\n            u_xlat16_44 = exp2(u_xlat16_44);\n            u_xlat16_44 = min(u_xlat16_44, 1.0);\n            u_xlat16_44 = u_xlat16_44 * 0.5;\n            u_xlat16_9.xyz = vec3(u_xlat16_44) * unity_LightColor[u_xlati_loop_1].xyz + u_xlat16_9.xyz;\n        }\n        u_xlat16_10.xyz = u_xlat16_10.xyz * vec3(0.5, 0.5, 0.5);\n        u_xlat16_10.xyz = min(u_xlat16_10.xyz, vec3(1.0, 1.0, 1.0));\n        u_xlat16_8.xyz = u_xlat16_8.xyz + u_xlat16_10.xyz;\n    }\n    vs_COLOR1.xyz = u_xlat16_9.xyz * _SpecColor.xyz;\n    vs_COLOR1.xyz = clamp(vs_COLOR1.xyz, 0.0, 1.0);\n    vs_COLOR0.xyz = u_xlat16_8.xyz;\n    vs_COLOR0.xyz = clamp(vs_COLOR0.xyz, 0.0, 1.0);\n    vs_COLOR0.w = _Color.w;\n    vs_COLOR0.w = clamp(vs_COLOR0.w, 0.0, 1.0);\n    vs_TEXCOORD0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;\n    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];\n    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;\n    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;\n    u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];\n    u_xlat1 = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];\n    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat0.xxxx + u_xlat1;\n    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat0.zzzz + u_xlat1;\n    gl_Position = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat0.wwww + u_xlat1;\n    return;\n}\n\n","\n#version 100\n\n#ifdef GL_FRAGMENT_PRECISION_HIGH\n    precision highp float;\n#else\n    precision mediump float;\n#endif\nprecision highp int;\nuniform lowp sampler2D _MainTex;\nvarying mediump vec4 vs_COLOR0;\nvarying mediump vec3 vs_COLOR1;\nvarying highp vec2 vs_TEXCOORD0;\n#define SV_Target0 gl_FragData[0]\nlowp vec3 u_xlat10_0;\nmediump vec3 u_xlat16_1;\nvoid main()\n{\n    u_xlat10_0.xyz = texture2D(_MainTex, vs_TEXCOORD0.xy).xyz;\n    u_xlat16_1.xyz = u_xlat10_0.xyz * vs_COLOR0.xyz;\n    SV_Target0.xyz = u_xlat16_1.xyz * vec3(2.0, 2.0, 2.0) + vs_COLOR1.xyz;\n    SV_Target0.w = 1.0;\n    return;\n}\n\n",0,0,0,0,0,[],[["LIGHTMODE","Vertex"],["RenderType","Opaque"]]]],["FOG_EXP","FOG_EXP2","FOG_LINEAR","POINT","SPOT","STEREO_CUBEMAP_RENDER_ON","STEREO_INSTANCING_ON","STEREO_MULTIVIEW_ON","UNITY_SINGLE_PASS_STEREO","_"],[[["_","FOG_LINEAR","FOG_EXP","FOG_EXP2"]],[["_","POINT","SPOT"]]],0,0,5,0,0,0,0,[["LIGHTMODE","Vertex"],["RenderType","Opaque"]],[null,null],"",1,-1],["Legacy Shaders/VertexLit",[[0,"\n#version 100\n\nuniform \tvec4 hlslcc_mtx4x4unity_ObjectToWorld[4];\nuniform \tvec4 hlslcc_mtx4x4unity_MatrixVP[4];\nuniform \tvec4 unity_LightmapST;\nuniform \tvec4 unity_Lightmap_ST;\nuniform \tvec4 _MainTex_ST;\nattribute highp vec3 in_POSITION0;\nattribute highp vec3 in_TEXCOORD1;\nattribute highp vec3 in_TEXCOORD0;\nvarying highp vec2 vs_TEXCOORD0;\nvarying highp vec2 vs_TEXCOORD1;\nvarying highp vec2 vs_TEXCOORD2;\nvec4 u_xlat0;\nvec4 u_xlat1;\nvoid main()\n{\n    vs_TEXCOORD0.xy = in_TEXCOORD1.xy * unity_LightmapST.xy + unity_LightmapST.zw;\n    vs_TEXCOORD1.xy = in_TEXCOORD1.xy * unity_Lightmap_ST.xy + unity_Lightmap_ST.zw;\n    vs_TEXCOORD2.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;\n    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];\n    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;\n    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;\n    u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];\n    u_xlat1 = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];\n    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat0.xxxx + u_xlat1;\n    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat0.zzzz + u_xlat1;\n    gl_Position = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat0.wwww + u_xlat1;\n    return;\n}\n\n","\n#version 100\n\n#ifdef GL_FRAGMENT_PRECISION_HIGH\n    precision highp float;\n#else\n    precision mediump float;\n#endif\nprecision highp int;\nuniform \tmediump vec4 unity_Lightmap_HDR;\nuniform \tmediump vec4 _Color;\nuniform lowp sampler2D _MainTex;\nuniform mediump sampler2D unity_Lightmap;\nvarying highp vec2 vs_TEXCOORD0;\nvarying highp vec2 vs_TEXCOORD2;\n#define SV_Target0 gl_FragData[0]\nmediump vec4 u_xlat16_0;\nlowp vec3 u_xlat10_0;\nmediump vec3 u_xlat16_1;\nvoid main()\n{\n    u_xlat16_0 = texture2D(unity_Lightmap, vs_TEXCOORD0.xy);\n    u_xlat16_1.x = u_xlat16_0.w * unity_Lightmap_HDR.x;\n    u_xlat16_1.xyz = u_xlat16_0.xyz * u_xlat16_1.xxx;\n    u_xlat16_1.xyz = u_xlat16_1.xyz * _Color.xyz;\n    u_xlat10_0.xyz = texture2D(_MainTex, vs_TEXCOORD2.xy).xyz;\n    SV_Target0.xyz = u_xlat16_1.xyz * u_xlat10_0.xyz;\n    SV_Target0.w = 1.0;\n    return;\n}\n\n",0,0,0,1,0,[],[["LIGHTMODE","VertexLM"],["RenderType","Opaque"]]]],["FOG_EXP","FOG_EXP2","FOG_LINEAR","STEREO_CUBEMAP_RENDER_ON","STEREO_INSTANCING_ON","STEREO_MULTIVIEW_ON","UNITY_SINGLE_PASS_STEREO","__"],[[["__","FOG_LINEAR","FOG_EXP","FOG_EXP2"]]],0,0,5,0,1,0,1,[["LIGHTMODE","VertexLM"],["RenderType","Opaque"]],[null,null],"",1,-1],["Legacy Shaders/VertexLit",[],["INSTANCING_ON","SHADOWS_CUBE","SHADOWS_DEPTH","STEREO_CUBEMAP_RENDER_ON","STEREO_INSTANCING_ON","STEREO_MULTIVIEW_ON","UNITY_SINGLE_PASS_STEREO","__"],[[["__","INSTANCING_ON"]],[["SHADOWS_DEPTH"]],[["SHADOWS_CUBE"]]],2,0,5,0,2,0,2,[["LIGHTMODE","SHADOWCASTER"],["RenderType","Opaque"],["SHADOWSUPPORT","true"]],[null,null],"",1,-1]],[["RenderType","Opaque"]],0]],0,70,"Resources/unity_builtin_extra",["FOG_EXP","FOG_EXP2","FOG_LINEAR","POINT","SPOT","SHADOWS_DEPTH","STEREO_CUBEMAP_RENDER_ON","STEREO_INSTANCING_ON","STEREO_MULTIVIEW_ON","UNITY_SINGLE_PASS_STEREO","_","__","INSTANCING_ON","SHADOWS_CUBE"],null,null,[],5],[[[0,[["Particles/Standard Unlit",[],[],[],0,0,5,0,0,0,0,[["LIGHTMODE","GRABPASS"]],[null,null],"_GrabTexture",227,32],["Particles/Standard Unlit",[],["INSTANCING_ON","PROCEDURAL_INSTANCING_ON","SHADOWS_CUBE","SHADOWS_DEPTH","STEREO_CUBEMAP_RENDER_ON","STEREO_INSTANCING_ON","STEREO_MULTIVIEW_ON","UNITY_SINGLE_PASS_STEREO","_ALPHABLEND_ON","_ALPHAMODULATE_ON","_ALPHAPREMULTIPLY_ON","_ALPHATEST_ON","_COLORADDSUBDIFF_ON","_COLORCOLOR_ON","_COLOROVERLAY_ON","_REQUIRE_UV2","__","_"],[[["__","INSTANCING_ON","PROCEDURAL_INSTANCING_ON"]],[["_","_ALPHATEST_ON","_ALPHABLEND_ON","_ALPHAPREMULTIPLY_ON","_ALPHAMODULATE_ON"]],[["_","_REQUIRE_UV2"]],[["SHADOWS_DEPTH"]],[["SHADOWS_CUBE"]]],2,0,5,0,1,0,1,[["IGNOREPROJECTOR","true"],["LIGHTMODE","SHADOWCASTER"],["PerformanceChecks","False"],["PreviewType","Plane"],["RenderType","Opaque"],["SHADOWSUPPORT","true"]],[null,null],"",33,-1],["Particles/Standard Unlit",[[0,"\n#version 100\n\nuniform \tvec4 hlslcc_mtx4x4unity_ObjectToWorld[4];\nuniform \tvec4 hlslcc_mtx4x4unity_MatrixVP[4];\nuniform \tvec4 _MainTex_ST;\nattribute highp vec4 in_POSITION0;\nattribute mediump vec4 in_COLOR0;\nattribute highp vec2 in_TEXCOORD0;\nvarying highp vec4 vs_COLOR0;\nvarying highp vec2 vs_TEXCOORD1;\nvec4 u_xlat0;\nvec4 u_xlat1;\nvoid main()\n{\n    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];\n    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;\n    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;\n    u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];\n    u_xlat1 = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];\n    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat0.xxxx + u_xlat1;\n    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat0.zzzz + u_xlat1;\n    gl_Position = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat0.wwww + u_xlat1;\n    vs_COLOR0 = in_COLOR0;\n    vs_TEXCOORD1.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;\n    return;\n}\n\n","\n#version 100\n\n#ifdef GL_FRAGMENT_PRECISION_HIGH\n    precision highp float;\n#else\n    precision mediump float;\n#endif\nprecision highp int;\nuniform \tmediump vec4 _Color;\nuniform lowp sampler2D _MainTex;\nvarying highp vec4 vs_COLOR0;\nvarying highp vec2 vs_TEXCOORD1;\n#define SV_Target0 gl_FragData[0]\nvec3 u_xlat0;\nlowp vec3 u_xlat10_0;\nmediump vec3 u_xlat16_1;\nvoid main()\n{\n    u_xlat10_0.xyz = texture2D(_MainTex, vs_TEXCOORD1.xy).xyz;\n    u_xlat16_1.xyz = u_xlat10_0.xyz * _Color.xyz;\n    u_xlat0.xyz = u_xlat16_1.xyz * vs_COLOR0.xyz;\n    SV_Target0.xyz = u_xlat0.xyz;\n    SV_Target0.w = 1.0;\n    return;\n}\n\n",0,0,0,2,0,[],[["IGNOREPROJECTOR","true"],["PerformanceChecks","False"],["PreviewType","Plane"],["RenderType","Opaque"]]],[0,"\n#version 100\n\nuniform \tvec4 hlslcc_mtx4x4unity_ObjectToWorld[4];\nuniform \tvec4 hlslcc_mtx4x4unity_MatrixVP[4];\nuniform \tvec4 _MainTex_ST;\nattribute highp vec4 in_POSITION0;\nattribute mediump vec4 in_COLOR0;\nattribute highp vec2 in_TEXCOORD0;\nvarying highp vec4 vs_COLOR0;\nvarying highp vec2 vs_TEXCOORD1;\nvec4 u_xlat0;\nvec4 u_xlat1;\nvoid main()\n{\n    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];\n    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;\n    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;\n    u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];\n    u_xlat1 = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];\n    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat0.xxxx + u_xlat1;\n    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat0.zzzz + u_xlat1;\n    gl_Position = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat0.wwww + u_xlat1;\n    vs_COLOR0 = in_COLOR0;\n    vs_TEXCOORD1.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;\n    return;\n}\n\n","\n#version 100\n\n#ifdef GL_FRAGMENT_PRECISION_HIGH\n    precision highp float;\n#else\n    precision mediump float;\n#endif\nprecision highp int;\nuniform \tmediump vec4 _Color;\nuniform lowp sampler2D _MainTex;\nvarying highp vec4 vs_COLOR0;\nvarying highp vec2 vs_TEXCOORD1;\n#define SV_Target0 gl_FragData[0]\nmediump vec4 u_xlat16_0;\nmediump vec4 u_xlat16_1;\nlowp vec4 u_xlat10_1;\nbool u_xlatb1;\nmediump vec4 u_xlat16_2;\nbool u_xlatb3;\nmediump vec3 u_xlat16_4;\nmediump float u_xlat16_6;\nfloat u_xlat7;\nmediump float u_xlat16_12;\nvoid main()\n{\n    u_xlat16_0.w = (-vs_COLOR0.x);\n    u_xlatb1 = vs_COLOR0.y>=vs_COLOR0.z;\n    u_xlat16_2.xy = (-vs_COLOR0.zy) + vs_COLOR0.yz;\n    u_xlat16_2.z = float(1.0);\n    u_xlat16_2.w = float(-1.0);\n    u_xlat16_1 = (bool(u_xlatb1)) ? u_xlat16_2 : vec4(0.0, 0.0, 0.0, -0.0);\n    u_xlat16_2.zw = u_xlat16_1.zw + vec2(-1.0, 0.666666687);\n    u_xlat16_2.xy = u_xlat16_1.xy + vs_COLOR0.zy;\n    u_xlat16_0.xyz = (-u_xlat16_2.xyw);\n    u_xlat16_1.yzw = u_xlat16_0.yzw + u_xlat16_2.yzx;\n    u_xlat16_1.x = u_xlat16_0.x + vs_COLOR0.x;\n    u_xlatb3 = vs_COLOR0.x>=u_xlat16_2.x;\n    u_xlat16_0 = (bool(u_xlatb3)) ? u_xlat16_1 : vec4(0.0, 0.0, 0.0, 0.0);\n    u_xlat16_12 = u_xlat16_0.w + vs_COLOR0.x;\n    u_xlat16_0.xyz = u_xlat16_0.xyz + u_xlat16_2.xyw;\n    u_xlat16_2.x = min(u_xlat16_0.y, u_xlat16_12);\n    u_xlat16_4.x = (-u_xlat16_0.y) + u_xlat16_12;\n    u_xlat16_12 = u_xlat16_0.x + (-u_xlat16_2.x);\n    u_xlat16_2.x = u_xlat16_12 * 6.0 + 9.99999975e-05;\n    u_xlat16_4.x = u_xlat16_4.x / u_xlat16_2.x;\n    u_xlat16_4.x = u_xlat16_4.x + u_xlat16_0.z;\n    u_xlat16_0.x = u_xlat16_0.x + 9.99999975e-05;\n    u_xlat16_0.x = u_xlat16_12 / u_xlat16_0.x;\n    u_xlat16_4.xyz = abs(u_xlat16_4.xxx) + vec3(1.0, 0.666666687, 0.333333343);\n    u_xlat16_4.xyz = fract(u_xlat16_4.xyz);\n    u_xlat16_4.xyz = u_xlat16_4.xyz * vec3(6.0, 6.0, 6.0) + vec3(-3.0, -3.0, -3.0);\n    u_xlat16_4.xyz = abs(u_xlat16_4.xyz) + vec3(-1.0, -1.0, -1.0);\n    u_xlat16_4.xyz = clamp(u_xlat16_4.xyz, 0.0, 1.0);\n    u_xlat16_4.xyz = u_xlat16_4.xyz + vec3(-1.0, -1.0, -1.0);\n    u_xlat16_0.xyz = u_xlat16_0.xxx * u_xlat16_4.xyz + vec3(1.0, 1.0, 1.0);\n    u_xlat10_1 = texture2D(_MainTex, vs_TEXCOORD1.xy);\n    u_xlat16_2 = u_xlat10_1 * _Color;\n    u_xlatb3 = u_xlat16_2.y>=u_xlat16_2.z;\n    u_xlat16_12 = (u_xlatb3) ? 1.0 : 0.0;\n    u_xlat16_6 = u_xlat10_1.y * _Color.y + (-u_xlat16_2.z);\n    u_xlat16_12 = u_xlat16_12 * u_xlat16_6 + u_xlat16_2.z;\n    u_xlatb3 = u_xlat16_2.x>=u_xlat16_12;\n    u_xlat7 = u_xlat16_2.w * vs_COLOR0.w;\n    SV_Target0.w = u_xlat7;\n    u_xlat16_2.x = (u_xlatb3) ? 1.0 : 0.0;\n    u_xlat16_6 = u_xlat10_1.x * _Color.x + (-u_xlat16_12);\n    u_xlat16_12 = u_xlat16_2.x * u_xlat16_6 + u_xlat16_12;\n    SV_Target0.xyz = u_xlat16_0.xyz * vec3(u_xlat16_12);\n    return;\n}\n\n",0,0,0,2,0,["_ALPHABLEND_ON","_COLORCOLOR_ON"],[["IGNOREPROJECTOR","true"],["PerformanceChecks","False"],["PreviewType","Plane"],["RenderType","Opaque"]]]],["EFFECT_BUMP","FOG_EXP","FOG_EXP2","FOG_LINEAR","INSTANCING_ON","PROCEDURAL_INSTANCING_ON","SOFTPARTICLES_ON","STEREO_CUBEMAP_RENDER_ON","STEREO_INSTANCING_ON","STEREO_MULTIVIEW_ON","UNITY_SINGLE_PASS_STEREO","_ALPHABLEND_ON","_ALPHAMODULATE_ON","_ALPHAPREMULTIPLY_ON","_ALPHATEST_ON","_COLORADDSUBDIFF_ON","_COLORCOLOR_ON","_COLOROVERLAY_ON","_EMISSION","_FADING_ON","_NORMALMAP","_REQUIRE_UV2","__","_"],[[["__","INSTANCING_ON","PROCEDURAL_INSTANCING_ON"]],[["_","_REQUIRE_UV2"]]],0,0,5,0,2,0,4,[["IGNOREPROJECTOR","true"],["PerformanceChecks","False"],["PreviewType","Plane"],["RenderType","Opaque"]],[null,null],"",33,-1]],[["IGNOREPROJECTOR","true"],["PerformanceChecks","False"],["PreviewType","Plane"],["RenderType","Opaque"]],0]],0,176,"Resources/unity_builtin_extra",["SHADOWS_DEPTH","_ALPHABLEND_ON","_ALPHAMODULATE_ON","_ALPHAPREMULTIPLY_ON","_ALPHATEST_ON","_COLORADDSUBDIFF_ON","_COLORCOLOR_ON","_COLOROVERLAY_ON","_REQUIRE_UV2","FOG_EXP","FOG_EXP2","FOG_LINEAR","_EMISSION","_FADING_ON","_NORMALMAP","INSTANCING_ON","PROCEDURAL_INSTANCING_ON","SHADOWS_CUBE","STEREO_CUBEMAP_RENDER_ON","STEREO_INSTANCING_ON","STEREO_MULTIVIEW_ON","UNITY_SINGLE_PASS_STEREO","__","_","EFFECT_BUMP","SOFTPARTICLES_ON"],0,70,[],5],[[[0,[["Sprites/Default",[[0,"\n#version 100\n\nuniform \tvec4 hlslcc_mtx4x4unity_ObjectToWorld[4];\nuniform \tvec4 hlslcc_mtx4x4unity_MatrixVP[4];\nuniform \tmediump vec4 _RendererColor;\nuniform \tmediump vec2 _Flip;\nuniform \tmediump vec4 _Color;\nattribute highp vec4 in_POSITION0;\nattribute highp vec4 in_COLOR0;\nattribute highp vec2 in_TEXCOORD0;\nvarying mediump vec4 vs_COLOR0;\nvarying highp vec2 vs_TEXCOORD0;\nvec4 u_xlat0;\nvec4 u_xlat1;\nvoid main()\n{\n    u_xlat0.xy = in_POSITION0.xy * _Flip.xy;\n    u_xlat1 = u_xlat0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];\n    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * u_xlat0.xxxx + u_xlat1;\n    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;\n    u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];\n    u_xlat1 = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];\n    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat0.xxxx + u_xlat1;\n    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat0.zzzz + u_xlat1;\n    gl_Position = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat0.wwww + u_xlat1;\n    u_xlat0 = in_COLOR0 * _Color;\n    u_xlat0 = u_xlat0 * _RendererColor;\n    vs_COLOR0 = u_xlat0;\n    vs_TEXCOORD0.xy = in_TEXCOORD0.xy;\n    return;\n}\n\n","\n#version 100\n\n#ifdef GL_FRAGMENT_PRECISION_HIGH\n    precision highp float;\n#else\n    precision mediump float;\n#endif\nprecision highp int;\nuniform lowp sampler2D _MainTex;\nvarying mediump vec4 vs_COLOR0;\nvarying highp vec2 vs_TEXCOORD0;\n#define SV_Target0 gl_FragData[0]\nmediump vec4 u_xlat16_0;\nlowp vec4 u_xlat10_0;\nvoid main()\n{\n    u_xlat10_0 = texture2D(_MainTex, vs_TEXCOORD0.xy);\n    u_xlat16_0 = u_xlat10_0 * vs_COLOR0;\n    SV_Target0.xyz = u_xlat16_0.www * u_xlat16_0.xyz;\n    SV_Target0.w = u_xlat16_0.w;\n    return;\n}\n\n",0,0,0,0,0,[],[["CanUseSpriteAtlas","true"],["IGNOREPROJECTOR","true"],["PreviewType","Plane"],["QUEUE","Transparent"],["RenderType","Transparent"]]],[0,"\n#version 100\n\nuniform \tvec4 _ScreenParams;\nuniform \tvec4 hlslcc_mtx4x4unity_ObjectToWorld[4];\nuniform \tvec4 hlslcc_mtx4x4unity_MatrixVP[4];\nuniform \tmediump vec4 _RendererColor;\nuniform \tmediump vec2 _Flip;\nuniform \tmediump vec4 _Color;\nattribute highp vec4 in_POSITION0;\nattribute highp vec4 in_COLOR0;\nattribute highp vec2 in_TEXCOORD0;\nvarying mediump vec4 vs_COLOR0;\nvarying highp vec2 vs_TEXCOORD0;\nvec4 u_xlat0;\nvec4 u_xlat1;\nfloat unity_roundEven(float x) { float y = floor(x + 0.5); return (y - x == 0.5) ? floor(0.5*y) * 2.0 : y; }\nvec2 unity_roundEven(vec2 a) { a.x = unity_roundEven(a.x); a.y = unity_roundEven(a.y); return a; }\nvec3 unity_roundEven(vec3 a) { a.x = unity_roundEven(a.x); a.y = unity_roundEven(a.y); a.z = unity_roundEven(a.z); return a; }\nvec4 unity_roundEven(vec4 a) { a.x = unity_roundEven(a.x); a.y = unity_roundEven(a.y); a.z = unity_roundEven(a.z); a.w = unity_roundEven(a.w); return a; }\n\nvoid main()\n{\n    u_xlat0.xy = in_POSITION0.xy * _Flip.xy;\n    u_xlat1 = u_xlat0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];\n    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * u_xlat0.xxxx + u_xlat1;\n    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;\n    u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];\n    u_xlat1 = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];\n    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat0.xxxx + u_xlat1;\n    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat0.zzzz + u_xlat1;\n    u_xlat0 = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat0.wwww + u_xlat1;\n    u_xlat0.xy = u_xlat0.xy / u_xlat0.ww;\n    u_xlat1.xy = _ScreenParams.xy * vec2(0.5, 0.5);\n    u_xlat0.xy = u_xlat0.xy * u_xlat1.xy;\n    u_xlat0.xy = unity_roundEven(u_xlat0.xy);\n    u_xlat0.xy = u_xlat0.xy / u_xlat1.xy;\n    gl_Position.xy = u_xlat0.ww * u_xlat0.xy;\n    gl_Position.zw = u_xlat0.zw;\n    u_xlat0 = in_COLOR0 * _Color;\n    u_xlat0 = u_xlat0 * _RendererColor;\n    vs_COLOR0 = u_xlat0;\n    vs_TEXCOORD0.xy = in_TEXCOORD0.xy;\n    return;\n}\n\n","\n#version 100\n\n#ifdef GL_FRAGMENT_PRECISION_HIGH\n    precision highp float;\n#else\n    precision mediump float;\n#endif\nprecision highp int;\nuniform lowp sampler2D _MainTex;\nvarying mediump vec4 vs_COLOR0;\nvarying highp vec2 vs_TEXCOORD0;\n#define SV_Target0 gl_FragData[0]\nmediump vec4 u_xlat16_0;\nlowp vec4 u_xlat10_0;\nvoid main()\n{\n    u_xlat10_0 = texture2D(_MainTex, vs_TEXCOORD0.xy);\n    u_xlat16_0 = u_xlat10_0 * vs_COLOR0;\n    SV_Target0.xyz = u_xlat16_0.www * u_xlat16_0.xyz;\n    SV_Target0.w = u_xlat16_0.w;\n    return;\n}\n\n",0,0,1,0,0,["PIXELSNAP_ON"],[["CanUseSpriteAtlas","true"],["IGNOREPROJECTOR","true"],["PreviewType","Plane"],["QUEUE","Transparent"],["RenderType","Transparent"]]]],["ETC1_EXTERNAL_ALPHA","INSTANCING_ON","PIXELSNAP_ON","STEREO_CUBEMAP_RENDER_ON","STEREO_INSTANCING_ON","STEREO_MULTIVIEW_ON","UNITY_SINGLE_PASS_STEREO","_","__"],[[["_","ETC1_EXTERNAL_ALPHA"]],[["__","INSTANCING_ON"]],[["_","PIXELSNAP_ON"]]],0,0,5,0,0,0,0,[["CanUseSpriteAtlas","true"],["IGNOREPROJECTOR","true"],["PreviewType","Plane"],["QUEUE","Transparent"],["RenderType","Transparent"]],[null,null],"",1,-1]],[["CanUseSpriteAtlas","true"],["IGNOREPROJECTOR","true"],["PreviewType","Plane"],["QUEUE","Transparent"],["RenderType","Transparent"]],0]],0,28,"Resources/unity_builtin_extra",["PIXELSNAP_ON","ETC1_EXTERNAL_ALPHA","INSTANCING_ON","STEREO_CUBEMAP_RENDER_ON","STEREO_INSTANCING_ON","STEREO_MULTIVIEW_ON","UNITY_SINGLE_PASS_STEREO","_","__"],null,null,[],5],[[[0,[["Standard",[[0,"\n#version 100\n\nuniform \tvec3 _WorldSpaceCameraPos;\nuniform \tvec4 hlslcc_mtx4x4unity_ObjectToWorld[4];\nuniform \tvec4 hlslcc_mtx4x4unity_WorldToObject[4];\nuniform \tvec4 hlslcc_mtx4x4unity_MatrixVP[4];\nuniform \tvec4 _MainTex_ST;\nuniform \tvec4 _DetailAlbedoMap_ST;\nuniform \tmediump float _UVSec;\nattribute highp vec4 in_POSITION0;\nattribute mediump vec3 in_NORMAL0;\nattribute highp vec2 in_TEXCOORD0;\nattribute highp vec2 in_TEXCOORD1;\nvarying highp vec4 vs_TEXCOORD0;\nvarying highp vec4 vs_TEXCOORD1;\nvarying highp vec4 vs_TEXCOORD2;\nvarying highp vec4 vs_TEXCOORD3;\nvarying highp vec4 vs_TEXCOORD4;\nvarying mediump vec4 vs_TEXCOORD5;\nvarying highp vec4 vs_TEXCOORD7;\nvarying highp vec3 vs_TEXCOORD8;\nvec4 u_xlat0;\nbool u_xlatb0;\nvec4 u_xlat1;\nfloat u_xlat6;\nvoid main()\n{\n    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];\n    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;\n    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;\n    u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];\n    u_xlat1 = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];\n    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat0.xxxx + u_xlat1;\n    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat0.zzzz + u_xlat1;\n    gl_Position = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat0.wwww + u_xlat1;\n    u_xlatb0 = _UVSec==0.0;\n    u_xlat0.xy = (bool(u_xlatb0)) ? in_TEXCOORD0.xy : in_TEXCOORD1.xy;\n    vs_TEXCOORD0.zw = u_xlat0.xy * _DetailAlbedoMap_ST.xy + _DetailAlbedoMap_ST.zw;\n    vs_TEXCOORD0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;\n    u_xlat0.xyz = in_POSITION0.yyy * hlslcc_mtx4x4unity_ObjectToWorld[1].xyz;\n    u_xlat0.xyz = hlslcc_mtx4x4unity_ObjectToWorld[0].xyz * in_POSITION0.xxx + u_xlat0.xyz;\n    u_xlat0.xyz = hlslcc_mtx4x4unity_ObjectToWorld[2].xyz * in_POSITION0.zzz + u_xlat0.xyz;\n    u_xlat0.xyz = hlslcc_mtx4x4unity_ObjectToWorld[3].xyz * in_POSITION0.www + u_xlat0.xyz;\n    vs_TEXCOORD1.xyz = u_xlat0.xyz + (-_WorldSpaceCameraPos.xyz);\n    vs_TEXCOORD8.xyz = u_xlat0.xyz;\n    vs_TEXCOORD1.w = 0.0;\n    vs_TEXCOORD2 = vec4(0.0, 0.0, 0.0, 0.0);\n    vs_TEXCOORD3 = vec4(0.0, 0.0, 0.0, 0.0);\n    u_xlat0.x = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[0].xyz);\n    u_xlat0.y = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[1].xyz);\n    u_xlat0.z = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[2].xyz);\n    u_xlat6 = dot(u_xlat0.xyz, u_xlat0.xyz);\n    u_xlat6 = inversesqrt(u_xlat6);\n    vs_TEXCOORD4.xyz = vec3(u_xlat6) * u_xlat0.xyz;\n    vs_TEXCOORD4.w = 0.0;\n    vs_TEXCOORD5 = vec4(0.0, 0.0, 0.0, 0.0);\n    vs_TEXCOORD7 = vec4(0.0, 0.0, 0.0, 0.0);\n    return;\n}\n\n","\n#version 100\n#ifdef GL_EXT_shader_texture_lod\n#extension GL_EXT_shader_texture_lod : enable\n#endif\n#if !defined(GL_EXT_shader_texture_lod)\n#define texture1DLodEXT texture1D\n#define texture2DLodEXT texture2D\n#define texture2DProjLodEXT texture2DProj\n#define texture3DLodEXT texture3D\n#define textureCubeLodEXT textureCube\n#endif\n\n#ifdef GL_FRAGMENT_PRECISION_HIGH\n    precision highp float;\n#else\n    precision mediump float;\n#endif\nprecision highp int;\nuniform \tmediump vec4 _WorldSpaceLightPos0;\nuniform \tvec4 unity_SpecCube0_BoxMax;\nuniform \tvec4 unity_SpecCube0_BoxMin;\nuniform \tvec4 unity_SpecCube0_ProbePosition;\nuniform \tmediump vec4 unity_SpecCube0_HDR;\nuniform \tvec4 unity_SpecCube1_BoxMax;\nuniform \tvec4 unity_SpecCube1_BoxMin;\nuniform \tvec4 unity_SpecCube1_ProbePosition;\nuniform \tmediump vec4 unity_SpecCube1_HDR;\nuniform \tmediump vec4 _LightColor0;\nuniform \tmediump vec4 _Color;\nuniform \tmediump float _Metallic;\nuniform \tfloat _Glossiness;\nuniform \tmediump float _OcclusionStrength;\nuniform lowp sampler2D _MainTex;\nuniform lowp sampler2D _OcclusionMap;\nuniform lowp samplerCube unity_SpecCube0;\nuniform lowp samplerCube unity_SpecCube1;\nvarying highp vec4 vs_TEXCOORD0;\nvarying highp vec4 vs_TEXCOORD1;\nvarying highp vec4 vs_TEXCOORD4;\nvarying highp vec3 vs_TEXCOORD8;\n#define SV_Target0 gl_FragData[0]\nvec3 u_xlat0;\nlowp vec3 u_xlat10_0;\nvec3 u_xlat1;\nbool u_xlatb1;\nmediump vec3 u_xlat16_2;\nmediump vec3 u_xlat16_3;\nmediump vec3 u_xlat16_4;\nlowp vec4 u_xlat10_4;\nvec3 u_xlat5;\nlowp vec4 u_xlat10_5;\nbool u_xlatb5;\nvec3 u_xlat6;\nvec3 u_xlat7;\nvec3 u_xlat8;\nbvec3 u_xlatb8;\nmediump vec3 u_xlat16_9;\nbvec3 u_xlatb10;\nmediump vec3 u_xlat16_11;\nmediump vec3 u_xlat16_12;\nfloat u_xlat13;\nfloat u_xlat14;\nvec3 u_xlat22;\nmediump vec3 u_xlat16_22;\nmediump vec3 u_xlat16_24;\nfloat u_xlat26;\nfloat u_xlat27;\nfloat u_xlat39;\nfloat u_xlat40;\nlowp float u_xlat10_40;\nmediump float u_xlat16_41;\nmediump float u_xlat16_42;\nmediump float u_xlat16_43;\nfloat u_xlat44;\nbool u_xlatb44;\nmediump float u_xlat16_48;\nvoid main()\n{\n    u_xlat10_0.xyz = texture2D(_MainTex, vs_TEXCOORD0.xy).xyz;\n    u_xlat1.xyz = u_xlat10_0.xyz * _Color.xyz;\n    u_xlat16_2.xyz = _Color.xyz * u_xlat10_0.xyz + vec3(-0.220916301, -0.220916301, -0.220916301);\n    u_xlat16_2.xyz = vec3(vec3(_Metallic, _Metallic, _Metallic)) * u_xlat16_2.xyz + vec3(0.220916301, 0.220916301, 0.220916301);\n    u_xlat16_41 = (-_Metallic) * 0.779083729 + 0.779083729;\n    u_xlat16_3.xyz = u_xlat1.xyz * vec3(u_xlat16_41);\n    u_xlat0.x = dot(vs_TEXCOORD4.xyz, vs_TEXCOORD4.xyz);\n    u_xlat0.x = inversesqrt(u_xlat0.x);\n    u_xlat0.xyz = u_xlat0.xxx * vs_TEXCOORD4.xyz;\n    u_xlat39 = dot(vs_TEXCOORD1.xyz, vs_TEXCOORD1.xyz);\n    u_xlat39 = inversesqrt(u_xlat39);\n    u_xlat1.xyz = vec3(u_xlat39) * vs_TEXCOORD1.xyz;\n    u_xlat10_40 = texture2D(_OcclusionMap, vs_TEXCOORD0.xy).y;\n    u_xlat16_42 = (-_OcclusionStrength) + 1.0;\n    u_xlat16_42 = u_xlat10_40 * _OcclusionStrength + u_xlat16_42;\n    u_xlat40 = (-_Glossiness) + 1.0;\n    u_xlat16_4.x = dot(u_xlat1.xyz, u_xlat0.xyz);\n    u_xlat16_4.x = u_xlat16_4.x + u_xlat16_4.x;\n    u_xlat16_4.xyz = u_xlat0.xyz * (-u_xlat16_4.xxx) + u_xlat1.xyz;\n    u_xlatb5 = 0.0<unity_SpecCube0_ProbePosition.w;\n    if(u_xlatb5){\n        u_xlat5.x = dot(u_xlat16_4.xyz, u_xlat16_4.xyz);\n        u_xlat5.x = inversesqrt(u_xlat5.x);\n        u_xlat5.xyz = u_xlat16_4.xyz * u_xlat5.xxx;\n        u_xlat6.xyz = (-vs_TEXCOORD8.xyz) + unity_SpecCube0_BoxMax.xyz;\n        u_xlat6.xyz = u_xlat6.xyz / u_xlat5.xyz;\n        u_xlat7.xyz = (-vs_TEXCOORD8.xyz) + unity_SpecCube0_BoxMin.xyz;\n        u_xlat7.xyz = u_xlat7.xyz / u_xlat5.xyz;\n        u_xlatb8.xyz = lessThan(vec4(0.0, 0.0, 0.0, 0.0), u_xlat5.xyzx).xyz;\n        {\n            vec3 hlslcc_movcTemp = u_xlat6;\n            hlslcc_movcTemp.x = (u_xlatb8.x) ? u_xlat6.x : u_xlat7.x;\n            hlslcc_movcTemp.y = (u_xlatb8.y) ? u_xlat6.y : u_xlat7.y;\n            hlslcc_movcTemp.z = (u_xlatb8.z) ? u_xlat6.z : u_xlat7.z;\n            u_xlat6 = hlslcc_movcTemp;\n        }\n        u_xlat44 = min(u_xlat6.y, u_xlat6.x);\n        u_xlat44 = min(u_xlat6.z, u_xlat44);\n        u_xlat6.xyz = vs_TEXCOORD8.xyz + (-unity_SpecCube0_ProbePosition.xyz);\n        u_xlat5.xyz = u_xlat5.xyz * vec3(u_xlat44) + u_xlat6.xyz;\n    } else {\n        u_xlat5.xyz = u_xlat16_4.xyz;\n    }\n    u_xlat16_43 = (-u_xlat40) * 0.699999988 + 1.70000005;\n    u_xlat16_43 = u_xlat40 * u_xlat16_43;\n    u_xlat16_43 = u_xlat16_43 * 6.0;\n    u_xlat10_5 = textureCubeLodEXT(unity_SpecCube0, u_xlat5.xyz, u_xlat16_43);\n    u_xlat16_9.x = u_xlat10_5.w + -1.0;\n    u_xlat16_9.x = unity_SpecCube0_HDR.w * u_xlat16_9.x + 1.0;\n    u_xlat16_9.x = u_xlat16_9.x * unity_SpecCube0_HDR.x;\n    u_xlat16_22.xyz = u_xlat10_5.xyz * u_xlat16_9.xxx;\n    u_xlatb44 = unity_SpecCube0_BoxMin.w<0.999989986;\n    if(u_xlatb44){\n        u_xlatb44 = 0.0<unity_SpecCube1_ProbePosition.w;\n        if(u_xlatb44){\n            u_xlat44 = dot(u_xlat16_4.xyz, u_xlat16_4.xyz);\n            u_xlat44 = inversesqrt(u_xlat44);\n            u_xlat6.xyz = u_xlat16_4.xyz * vec3(u_xlat44);\n            u_xlat7.xyz = (-vs_TEXCOORD8.xyz) + unity_SpecCube1_BoxMax.xyz;\n            u_xlat7.xyz = u_xlat7.xyz / u_xlat6.xyz;\n            u_xlat8.xyz = (-vs_TEXCOORD8.xyz) + unity_SpecCube1_BoxMin.xyz;\n            u_xlat8.xyz = u_xlat8.xyz / u_xlat6.xyz;\n            u_xlatb10.xyz = lessThan(vec4(0.0, 0.0, 0.0, 0.0), u_xlat6.xyzx).xyz;\n            {\n                vec3 hlslcc_movcTemp = u_xlat7;\n                hlslcc_movcTemp.x = (u_xlatb10.x) ? u_xlat7.x : u_xlat8.x;\n                hlslcc_movcTemp.y = (u_xlatb10.y) ? u_xlat7.y : u_xlat8.y;\n                hlslcc_movcTemp.z = (u_xlatb10.z) ? u_xlat7.z : u_xlat8.z;\n                u_xlat7 = hlslcc_movcTemp;\n            }\n            u_xlat44 = min(u_xlat7.y, u_xlat7.x);\n            u_xlat44 = min(u_xlat7.z, u_xlat44);\n            u_xlat7.xyz = vs_TEXCOORD8.xyz + (-unity_SpecCube1_ProbePosition.xyz);\n            u_xlat6.xyz = u_xlat6.xyz * vec3(u_xlat44) + u_xlat7.xyz;\n        } else {\n            u_xlat6.xyz = u_xlat16_4.xyz;\n        }\n        u_xlat10_4 = textureCubeLodEXT(unity_SpecCube1, u_xlat6.xyz, u_xlat16_43);\n        u_xlat16_11.x = u_xlat10_4.w + -1.0;\n        u_xlat16_11.x = unity_SpecCube1_HDR.w * u_xlat16_11.x + 1.0;\n        u_xlat16_11.x = u_xlat16_11.x * unity_SpecCube1_HDR.x;\n        u_xlat16_11.xyz = u_xlat10_4.xyz * u_xlat16_11.xxx;\n        u_xlat5.xyz = u_xlat16_9.xxx * u_xlat10_5.xyz + (-u_xlat16_11.xyz);\n        u_xlat22.xyz = unity_SpecCube0_BoxMin.www * u_xlat5.xyz + u_xlat16_11.xyz;\n        u_xlat16_22.xyz = u_xlat22.xyz;\n    }\n    u_xlat16_9.xyz = vec3(u_xlat16_42) * u_xlat16_22.xyz;\n    u_xlat5.xyz = (-vs_TEXCOORD1.xyz) * vec3(u_xlat39) + _WorldSpaceLightPos0.xyz;\n    u_xlat39 = dot(u_xlat5.xyz, u_xlat5.xyz);\n    u_xlat39 = max(u_xlat39, 0.00100000005);\n    u_xlat39 = inversesqrt(u_xlat39);\n    u_xlat5.xyz = vec3(u_xlat39) * u_xlat5.xyz;\n    u_xlat39 = dot(u_xlat0.xyz, (-u_xlat1.xyz));\n    u_xlat1.x = dot(u_xlat0.xyz, _WorldSpaceLightPos0.xyz);\n    u_xlat1.x = clamp(u_xlat1.x, 0.0, 1.0);\n    u_xlat0.x = dot(u_xlat0.xyz, u_xlat5.xyz);\n    u_xlat0.x = clamp(u_xlat0.x, 0.0, 1.0);\n    u_xlat13 = dot(_WorldSpaceLightPos0.xyz, u_xlat5.xyz);\n    u_xlat13 = clamp(u_xlat13, 0.0, 1.0);\n    u_xlat16_42 = u_xlat13 + u_xlat13;\n    u_xlat16_42 = u_xlat13 * u_xlat16_42;\n    u_xlat16_42 = u_xlat16_42 * u_xlat40 + -0.5;\n    u_xlat16_48 = (-u_xlat1.x) + 1.0;\n    u_xlat16_11.x = u_xlat16_48 * u_xlat16_48;\n    u_xlat16_11.x = u_xlat16_11.x * u_xlat16_11.x;\n    u_xlat16_48 = u_xlat16_48 * u_xlat16_11.x;\n    u_xlat16_48 = u_xlat16_42 * u_xlat16_48 + 1.0;\n    u_xlat16_11.x = -abs(u_xlat39) + 1.0;\n    u_xlat16_24.x = u_xlat16_11.x * u_xlat16_11.x;\n    u_xlat16_24.x = u_xlat16_24.x * u_xlat16_24.x;\n    u_xlat16_11.x = u_xlat16_11.x * u_xlat16_24.x;\n    u_xlat16_42 = u_xlat16_42 * u_xlat16_11.x + 1.0;\n    u_xlat16_42 = u_xlat16_42 * u_xlat16_48;\n    u_xlat26 = u_xlat1.x * u_xlat16_42;\n    u_xlat14 = u_xlat40 * u_xlat40;\n    u_xlat14 = max(u_xlat14, 0.00200000009);\n    u_xlat27 = (-u_xlat14) + 1.0;\n    u_xlat5.x = abs(u_xlat39) * u_xlat27 + u_xlat14;\n    u_xlat27 = u_xlat1.x * u_xlat27 + u_xlat14;\n    u_xlat39 = abs(u_xlat39) * u_xlat27;\n    u_xlat39 = u_xlat1.x * u_xlat5.x + u_xlat39;\n    u_xlat39 = u_xlat39 + 9.99999975e-06;\n    u_xlat39 = 0.5 / u_xlat39;\n    u_xlat27 = u_xlat14 * u_xlat14;\n    u_xlat5.x = u_xlat0.x * u_xlat27 + (-u_xlat0.x);\n    u_xlat0.x = u_xlat5.x * u_xlat0.x + 1.0;\n    u_xlat27 = u_xlat27 * 0.318309873;\n    u_xlat0.x = u_xlat0.x * u_xlat0.x + 1.00000001e-07;\n    u_xlat0.x = u_xlat27 / u_xlat0.x;\n    u_xlat0.x = u_xlat0.x * u_xlat39;\n    u_xlat0.x = u_xlat0.x * 3.14159274;\n    u_xlat0.x = max(u_xlat0.x, 9.99999975e-05);\n    u_xlat0.x = sqrt(u_xlat0.x);\n    u_xlat0.x = u_xlat1.x * u_xlat0.x;\n    u_xlat39 = u_xlat14 * u_xlat40;\n    u_xlat39 = (-u_xlat39) * 0.280000001 + 1.0;\n    u_xlat16_42 = dot(u_xlat16_2.xyz, u_xlat16_2.xyz);\n    u_xlatb1 = u_xlat16_42!=0.0;\n    u_xlat1.x = u_xlatb1 ? 1.0 : float(0.0);\n    u_xlat0.x = u_xlat0.x * u_xlat1.x;\n    u_xlat16_41 = (-u_xlat16_41) + 1.0;\n    u_xlat16_41 = u_xlat16_41 + _Glossiness;\n    u_xlat16_41 = clamp(u_xlat16_41, 0.0, 1.0);\n    u_xlat16_24.xyz = vec3(u_xlat26) * _LightColor0.xyz;\n    u_xlat1.xyz = u_xlat0.xxx * _LightColor0.xyz;\n    u_xlat16_42 = (-u_xlat13) + 1.0;\n    u_xlat16_48 = u_xlat16_42 * u_xlat16_42;\n    u_xlat16_48 = u_xlat16_48 * u_xlat16_48;\n    u_xlat16_42 = u_xlat16_42 * u_xlat16_48;\n    u_xlat16_12.xyz = (-u_xlat16_2.xyz) + vec3(1.0, 1.0, 1.0);\n    u_xlat16_12.xyz = u_xlat16_12.xyz * vec3(u_xlat16_42) + u_xlat16_2.xyz;\n    u_xlat0.xyz = u_xlat1.xyz * u_xlat16_12.xyz;\n    u_xlat0.xyz = u_xlat16_3.xyz * u_xlat16_24.xyz + u_xlat0.xyz;\n    u_xlat16_3.xyz = u_xlat16_9.xyz * vec3(u_xlat39);\n    u_xlat16_9.xyz = (-u_xlat16_2.xyz) + vec3(u_xlat16_41);\n    u_xlat16_2.xyz = u_xlat16_11.xxx * u_xlat16_9.xyz + u_xlat16_2.xyz;\n    u_xlat0.xyz = u_xlat16_3.xyz * u_xlat16_2.xyz + u_xlat0.xyz;\n    SV_Target0.xyz = u_xlat0.xyz;\n    SV_Target0.w = 1.0;\n    return;\n}\n\n",0,0,0,0,0,["DIRECTIONAL"],[["LIGHTMODE","FORWARDBASE"],["PerformanceChecks","False"],["RenderType","Opaque"],["SHADOWSUPPORT","true"]]],[0,"\n#version 100\n\nuniform \tvec3 _WorldSpaceCameraPos;\nuniform \tmediump vec4 unity_SHBr;\nuniform \tmediump vec4 unity_SHBg;\nuniform \tmediump vec4 unity_SHBb;\nuniform \tmediump vec4 unity_SHC;\nuniform \tvec4 hlslcc_mtx4x4unity_ObjectToWorld[4];\nuniform \tvec4 hlslcc_mtx4x4unity_WorldToObject[4];\nuniform \tvec4 hlslcc_mtx4x4unity_MatrixVP[4];\nuniform \tvec4 _MainTex_ST;\nuniform \tvec4 _DetailAlbedoMap_ST;\nuniform \tmediump float _UVSec;\nattribute highp vec4 in_POSITION0;\nattribute mediump vec3 in_NORMAL0;\nattribute highp vec2 in_TEXCOORD0;\nattribute highp vec2 in_TEXCOORD1;\nvarying highp vec4 vs_TEXCOORD0;\nvarying highp vec4 vs_TEXCOORD1;\nvarying highp vec4 vs_TEXCOORD2;\nvarying highp vec4 vs_TEXCOORD3;\nvarying highp vec4 vs_TEXCOORD4;\nvarying mediump vec4 vs_TEXCOORD5;\nvarying highp vec4 vs_TEXCOORD7;\nvarying highp vec3 vs_TEXCOORD8;\nvec4 u_xlat0;\nmediump vec4 u_xlat16_0;\nbool u_xlatb0;\nvec4 u_xlat1;\nmediump float u_xlat16_2;\nmediump vec3 u_xlat16_3;\nfloat u_xlat12;\nvoid main()\n{\n    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];\n    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;\n    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;\n    u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];\n    u_xlat1 = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];\n    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat0.xxxx + u_xlat1;\n    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat0.zzzz + u_xlat1;\n    gl_Position = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat0.wwww + u_xlat1;\n    u_xlatb0 = _UVSec==0.0;\n    u_xlat0.xy = (bool(u_xlatb0)) ? in_TEXCOORD0.xy : in_TEXCOORD1.xy;\n    vs_TEXCOORD0.zw = u_xlat0.xy * _DetailAlbedoMap_ST.xy + _DetailAlbedoMap_ST.zw;\n    vs_TEXCOORD0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;\n    u_xlat0.xyz = in_POSITION0.yyy * hlslcc_mtx4x4unity_ObjectToWorld[1].xyz;\n    u_xlat0.xyz = hlslcc_mtx4x4unity_ObjectToWorld[0].xyz * in_POSITION0.xxx + u_xlat0.xyz;\n    u_xlat0.xyz = hlslcc_mtx4x4unity_ObjectToWorld[2].xyz * in_POSITION0.zzz + u_xlat0.xyz;\n    u_xlat0.xyz = hlslcc_mtx4x4unity_ObjectToWorld[3].xyz * in_POSITION0.www + u_xlat0.xyz;\n    vs_TEXCOORD1.xyz = u_xlat0.xyz + (-_WorldSpaceCameraPos.xyz);\n    vs_TEXCOORD8.xyz = u_xlat0.xyz;\n    vs_TEXCOORD1.w = 0.0;\n    vs_TEXCOORD2 = vec4(0.0, 0.0, 0.0, 0.0);\n    vs_TEXCOORD3 = vec4(0.0, 0.0, 0.0, 0.0);\n    u_xlat0.x = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[0].xyz);\n    u_xlat0.y = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[1].xyz);\n    u_xlat0.z = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[2].xyz);\n    u_xlat12 = dot(u_xlat0.xyz, u_xlat0.xyz);\n    u_xlat12 = inversesqrt(u_xlat12);\n    u_xlat0.xyz = vec3(u_xlat12) * u_xlat0.xyz;\n    vs_TEXCOORD4.xyz = u_xlat0.xyz;\n    vs_TEXCOORD4.w = 0.0;\n    u_xlat16_2 = u_xlat0.y * u_xlat0.y;\n    u_xlat16_2 = u_xlat0.x * u_xlat0.x + (-u_xlat16_2);\n    u_xlat16_0 = u_xlat0.yzzx * u_xlat0.xyzz;\n    u_xlat16_3.x = dot(unity_SHBr, u_xlat16_0);\n    u_xlat16_3.y = dot(unity_SHBg, u_xlat16_0);\n    u_xlat16_3.z = dot(unity_SHBb, u_xlat16_0);\n    vs_TEXCOORD5.xyz = unity_SHC.xyz * vec3(u_xlat16_2) + u_xlat16_3.xyz;\n    vs_TEXCOORD5.w = 0.0;\n    vs_TEXCOORD7 = vec4(0.0, 0.0, 0.0, 0.0);\n    return;\n}\n\n","\n#version 100\n#ifdef GL_EXT_shader_texture_lod\n#extension GL_EXT_shader_texture_lod : enable\n#endif\n#if !defined(GL_EXT_shader_texture_lod)\n#define texture1DLodEXT texture1D\n#define texture2DLodEXT texture2D\n#define texture2DProjLodEXT texture2DProj\n#define texture3DLodEXT texture3D\n#define textureCubeLodEXT textureCube\n#endif\n\n#ifdef GL_FRAGMENT_PRECISION_HIGH\n    precision highp float;\n#else\n    precision mediump float;\n#endif\nprecision highp int;\nuniform \tmediump vec4 _WorldSpaceLightPos0;\nuniform \tmediump vec4 unity_SHAr;\nuniform \tmediump vec4 unity_SHAg;\nuniform \tmediump vec4 unity_SHAb;\nuniform \tvec4 unity_SpecCube0_BoxMax;\nuniform \tvec4 unity_SpecCube0_BoxMin;\nuniform \tvec4 unity_SpecCube0_ProbePosition;\nuniform \tmediump vec4 unity_SpecCube0_HDR;\nuniform \tvec4 unity_SpecCube1_BoxMax;\nuniform \tvec4 unity_SpecCube1_BoxMin;\nuniform \tvec4 unity_SpecCube1_ProbePosition;\nuniform \tmediump vec4 unity_SpecCube1_HDR;\nuniform \tmediump vec4 _LightColor0;\nuniform \tmediump vec4 _Color;\nuniform \tmediump float _Metallic;\nuniform \tfloat _Glossiness;\nuniform \tmediump float _OcclusionStrength;\nuniform lowp sampler2D _MainTex;\nuniform lowp sampler2D _OcclusionMap;\nuniform lowp samplerCube unity_SpecCube0;\nuniform lowp samplerCube unity_SpecCube1;\nvarying highp vec4 vs_TEXCOORD0;\nvarying highp vec4 vs_TEXCOORD1;\nvarying highp vec4 vs_TEXCOORD4;\nvarying mediump vec4 vs_TEXCOORD5;\nvarying highp vec3 vs_TEXCOORD8;\n#define SV_Target0 gl_FragData[0]\nvec4 u_xlat0;\nlowp vec3 u_xlat10_0;\nvec3 u_xlat1;\nbool u_xlatb1;\nmediump vec3 u_xlat16_2;\nmediump vec3 u_xlat16_3;\nfloat u_xlat4;\nlowp float u_xlat10_4;\nmediump vec3 u_xlat16_5;\nlowp vec4 u_xlat10_5;\nmediump vec3 u_xlat16_6;\nlowp vec4 u_xlat10_6;\nvec3 u_xlat7;\nvec3 u_xlat8;\nvec3 u_xlat9;\nbvec3 u_xlatb10;\nmediump vec3 u_xlat16_11;\nmediump vec4 u_xlat16_12;\nmediump vec3 u_xlat16_13;\nfloat u_xlat14;\nvec3 u_xlat15;\nvec3 u_xlat18;\nvec3 u_xlat25;\nmediump vec3 u_xlat16_25;\nmediump float u_xlat16_26;\nfloat u_xlat28;\nfloat u_xlat29;\nmediump float u_xlat16_40;\nfloat u_xlat42;\nbool u_xlatb42;\nfloat u_xlat43;\nmediump float u_xlat16_44;\nmediump float u_xlat16_45;\nmediump float u_xlat16_47;\nmediump float u_xlat16_53;\nvoid main()\n{\n    u_xlat10_0.xyz = texture2D(_MainTex, vs_TEXCOORD0.xy).xyz;\n    u_xlat1.xyz = u_xlat10_0.xyz * _Color.xyz;\n    u_xlat16_2.xyz = _Color.xyz * u_xlat10_0.xyz + vec3(-0.220916301, -0.220916301, -0.220916301);\n    u_xlat16_2.xyz = vec3(vec3(_Metallic, _Metallic, _Metallic)) * u_xlat16_2.xyz + vec3(0.220916301, 0.220916301, 0.220916301);\n    u_xlat16_44 = (-_Metallic) * 0.779083729 + 0.779083729;\n    u_xlat16_3.xyz = u_xlat1.xyz * vec3(u_xlat16_44);\n    u_xlat0.x = dot(vs_TEXCOORD4.xyz, vs_TEXCOORD4.xyz);\n    u_xlat0.x = inversesqrt(u_xlat0.x);\n    u_xlat0.xyz = u_xlat0.xxx * vs_TEXCOORD4.xyz;\n    u_xlat1.x = dot(vs_TEXCOORD1.xyz, vs_TEXCOORD1.xyz);\n    u_xlat1.x = inversesqrt(u_xlat1.x);\n    u_xlat15.xyz = u_xlat1.xxx * vs_TEXCOORD1.xyz;\n    u_xlat10_4 = texture2D(_OcclusionMap, vs_TEXCOORD0.xy).y;\n    u_xlat16_45 = (-_OcclusionStrength) + 1.0;\n    u_xlat16_45 = u_xlat10_4 * _OcclusionStrength + u_xlat16_45;\n    u_xlat4 = (-_Glossiness) + 1.0;\n    u_xlat16_5.x = dot(u_xlat15.xyz, u_xlat0.xyz);\n    u_xlat16_5.x = u_xlat16_5.x + u_xlat16_5.x;\n    u_xlat16_5.xyz = u_xlat0.xyz * (-u_xlat16_5.xxx) + u_xlat15.xyz;\n    u_xlat0.w = 1.0;\n    u_xlat16_6.x = dot(unity_SHAr, u_xlat0);\n    u_xlat16_6.y = dot(unity_SHAg, u_xlat0);\n    u_xlat16_6.z = dot(unity_SHAb, u_xlat0);\n    u_xlat16_6.xyz = u_xlat16_6.xyz + vs_TEXCOORD5.xyz;\n    u_xlat16_6.xyz = max(u_xlat16_6.xyz, vec3(0.0, 0.0, 0.0));\n    u_xlat18.xyz = log2(u_xlat16_6.xyz);\n    u_xlat18.xyz = u_xlat18.xyz * vec3(0.416666657, 0.416666657, 0.416666657);\n    u_xlat18.xyz = exp2(u_xlat18.xyz);\n    u_xlat18.xyz = u_xlat18.xyz * vec3(1.05499995, 1.05499995, 1.05499995) + vec3(-0.0549999997, -0.0549999997, -0.0549999997);\n    u_xlat18.xyz = max(u_xlat18.xyz, vec3(0.0, 0.0, 0.0));\n    u_xlatb42 = 0.0<unity_SpecCube0_ProbePosition.w;\n    if(u_xlatb42){\n        u_xlat42 = dot(u_xlat16_5.xyz, u_xlat16_5.xyz);\n        u_xlat42 = inversesqrt(u_xlat42);\n        u_xlat7.xyz = vec3(u_xlat42) * u_xlat16_5.xyz;\n        u_xlat8.xyz = (-vs_TEXCOORD8.xyz) + unity_SpecCube0_BoxMax.xyz;\n        u_xlat8.xyz = u_xlat8.xyz / u_xlat7.xyz;\n        u_xlat9.xyz = (-vs_TEXCOORD8.xyz) + unity_SpecCube0_BoxMin.xyz;\n        u_xlat9.xyz = u_xlat9.xyz / u_xlat7.xyz;\n        u_xlatb10.xyz = lessThan(vec4(0.0, 0.0, 0.0, 0.0), u_xlat7.xyzx).xyz;\n        {\n            vec3 hlslcc_movcTemp = u_xlat8;\n            hlslcc_movcTemp.x = (u_xlatb10.x) ? u_xlat8.x : u_xlat9.x;\n            hlslcc_movcTemp.y = (u_xlatb10.y) ? u_xlat8.y : u_xlat9.y;\n            hlslcc_movcTemp.z = (u_xlatb10.z) ? u_xlat8.z : u_xlat9.z;\n            u_xlat8 = hlslcc_movcTemp;\n        }\n        u_xlat42 = min(u_xlat8.y, u_xlat8.x);\n        u_xlat42 = min(u_xlat8.z, u_xlat42);\n        u_xlat8.xyz = vs_TEXCOORD8.xyz + (-unity_SpecCube0_ProbePosition.xyz);\n        u_xlat7.xyz = u_xlat7.xyz * vec3(u_xlat42) + u_xlat8.xyz;\n    } else {\n        u_xlat7.xyz = u_xlat16_5.xyz;\n    }\n    u_xlat16_47 = (-u_xlat4) * 0.699999988 + 1.70000005;\n    u_xlat16_47 = u_xlat4 * u_xlat16_47;\n    u_xlat16_47 = u_xlat16_47 * 6.0;\n    u_xlat10_6 = textureCubeLodEXT(unity_SpecCube0, u_xlat7.xyz, u_xlat16_47);\n    u_xlat16_11.x = u_xlat10_6.w + -1.0;\n    u_xlat16_11.x = unity_SpecCube0_HDR.w * u_xlat16_11.x + 1.0;\n    u_xlat16_11.x = u_xlat16_11.x * unity_SpecCube0_HDR.x;\n    u_xlat16_25.xyz = u_xlat10_6.xyz * u_xlat16_11.xxx;\n    u_xlatb42 = unity_SpecCube0_BoxMin.w<0.999989986;\n    if(u_xlatb42){\n        u_xlatb42 = 0.0<unity_SpecCube1_ProbePosition.w;\n        if(u_xlatb42){\n            u_xlat42 = dot(u_xlat16_5.xyz, u_xlat16_5.xyz);\n            u_xlat42 = inversesqrt(u_xlat42);\n            u_xlat7.xyz = vec3(u_xlat42) * u_xlat16_5.xyz;\n            u_xlat8.xyz = (-vs_TEXCOORD8.xyz) + unity_SpecCube1_BoxMax.xyz;\n            u_xlat8.xyz = u_xlat8.xyz / u_xlat7.xyz;\n            u_xlat9.xyz = (-vs_TEXCOORD8.xyz) + unity_SpecCube1_BoxMin.xyz;\n            u_xlat9.xyz = u_xlat9.xyz / u_xlat7.xyz;\n            u_xlatb10.xyz = lessThan(vec4(0.0, 0.0, 0.0, 0.0), u_xlat7.xyzx).xyz;\n            {\n                vec3 hlslcc_movcTemp = u_xlat8;\n                hlslcc_movcTemp.x = (u_xlatb10.x) ? u_xlat8.x : u_xlat9.x;\n                hlslcc_movcTemp.y = (u_xlatb10.y) ? u_xlat8.y : u_xlat9.y;\n                hlslcc_movcTemp.z = (u_xlatb10.z) ? u_xlat8.z : u_xlat9.z;\n                u_xlat8 = hlslcc_movcTemp;\n            }\n            u_xlat42 = min(u_xlat8.y, u_xlat8.x);\n            u_xlat42 = min(u_xlat8.z, u_xlat42);\n            u_xlat8.xyz = vs_TEXCOORD8.xyz + (-unity_SpecCube1_ProbePosition.xyz);\n            u_xlat7.xyz = u_xlat7.xyz * vec3(u_xlat42) + u_xlat8.xyz;\n        } else {\n            u_xlat7.xyz = u_xlat16_5.xyz;\n        }\n        u_xlat10_5 = textureCubeLodEXT(unity_SpecCube1, u_xlat7.xyz, u_xlat16_47);\n        u_xlat16_12.x = u_xlat10_5.w + -1.0;\n        u_xlat16_12.x = unity_SpecCube1_HDR.w * u_xlat16_12.x + 1.0;\n        u_xlat16_12.x = u_xlat16_12.x * unity_SpecCube1_HDR.x;\n        u_xlat16_12.xyz = u_xlat10_5.xyz * u_xlat16_12.xxx;\n        u_xlat7.xyz = u_xlat16_11.xxx * u_xlat10_6.xyz + (-u_xlat16_12.xyz);\n        u_xlat25.xyz = unity_SpecCube0_BoxMin.www * u_xlat7.xyz + u_xlat16_12.xyz;\n        u_xlat16_25.xyz = u_xlat25.xyz;\n    }\n    u_xlat16_11.xyz = vec3(u_xlat16_45) * u_xlat16_25.xyz;\n    u_xlat7.xyz = (-vs_TEXCOORD1.xyz) * u_xlat1.xxx + _WorldSpaceLightPos0.xyz;\n    u_xlat42 = dot(u_xlat7.xyz, u_xlat7.xyz);\n    u_xlat42 = max(u_xlat42, 0.00100000005);\n    u_xlat42 = inversesqrt(u_xlat42);\n    u_xlat7.xyz = vec3(u_xlat42) * u_xlat7.xyz;\n    u_xlat42 = dot(u_xlat0.xyz, (-u_xlat15.xyz));\n    u_xlat1.x = dot(u_xlat0.xyz, _WorldSpaceLightPos0.xyz);\n    u_xlat1.x = clamp(u_xlat1.x, 0.0, 1.0);\n    u_xlat0.x = dot(u_xlat0.xyz, u_xlat7.xyz);\n    u_xlat0.x = clamp(u_xlat0.x, 0.0, 1.0);\n    u_xlat14 = dot(_WorldSpaceLightPos0.xyz, u_xlat7.xyz);\n    u_xlat14 = clamp(u_xlat14, 0.0, 1.0);\n    u_xlat16_53 = u_xlat14 + u_xlat14;\n    u_xlat16_53 = u_xlat14 * u_xlat16_53;\n    u_xlat16_53 = u_xlat16_53 * u_xlat4 + -0.5;\n    u_xlat16_12.x = (-u_xlat1.x) + 1.0;\n    u_xlat16_26 = u_xlat16_12.x * u_xlat16_12.x;\n    u_xlat16_26 = u_xlat16_26 * u_xlat16_26;\n    u_xlat16_12.x = u_xlat16_12.x * u_xlat16_26;\n    u_xlat16_12.x = u_xlat16_53 * u_xlat16_12.x + 1.0;\n    u_xlat16_26 = -abs(u_xlat42) + 1.0;\n    u_xlat16_40 = u_xlat16_26 * u_xlat16_26;\n    u_xlat16_40 = u_xlat16_40 * u_xlat16_40;\n    u_xlat16_26 = u_xlat16_26 * u_xlat16_40;\n    u_xlat16_53 = u_xlat16_53 * u_xlat16_26 + 1.0;\n    u_xlat16_53 = u_xlat16_53 * u_xlat16_12.x;\n    u_xlat28 = u_xlat1.x * u_xlat16_53;\n    u_xlat15.x = u_xlat4 * u_xlat4;\n    u_xlat15.x = max(u_xlat15.x, 0.00200000009);\n    u_xlat29 = (-u_xlat15.x) + 1.0;\n    u_xlat43 = abs(u_xlat42) * u_xlat29 + u_xlat15.x;\n    u_xlat29 = u_xlat1.x * u_xlat29 + u_xlat15.x;\n    u_xlat42 = abs(u_xlat42) * u_xlat29;\n    u_xlat42 = u_xlat1.x * u_xlat43 + u_xlat42;\n    u_xlat42 = u_xlat42 + 9.99999975e-06;\n    u_xlat42 = 0.5 / u_xlat42;\n    u_xlat29 = u_xlat15.x * u_xlat15.x;\n    u_xlat43 = u_xlat0.x * u_xlat29 + (-u_xlat0.x);\n    u_xlat0.x = u_xlat43 * u_xlat0.x + 1.0;\n    u_xlat29 = u_xlat29 * 0.318309873;\n    u_xlat0.x = u_xlat0.x * u_xlat0.x + 1.00000001e-07;\n    u_xlat0.x = u_xlat29 / u_xlat0.x;\n    u_xlat0.x = u_xlat0.x * u_xlat42;\n    u_xlat0.x = u_xlat0.x * 3.14159274;\n    u_xlat0.x = max(u_xlat0.x, 9.99999975e-05);\n    u_xlat0.x = sqrt(u_xlat0.x);\n    u_xlat0.x = u_xlat1.x * u_xlat0.x;\n    u_xlat42 = u_xlat15.x * u_xlat4;\n    u_xlat42 = (-u_xlat42) * 0.280000001 + 1.0;\n    u_xlat16_53 = dot(u_xlat16_2.xyz, u_xlat16_2.xyz);\n    u_xlatb1 = u_xlat16_53!=0.0;\n    u_xlat1.x = u_xlatb1 ? 1.0 : float(0.0);\n    u_xlat0.x = u_xlat0.x * u_xlat1.x;\n    u_xlat16_44 = (-u_xlat16_44) + 1.0;\n    u_xlat16_44 = u_xlat16_44 + _Glossiness;\n    u_xlat16_44 = clamp(u_xlat16_44, 0.0, 1.0);\n    u_xlat16_12.xzw = vec3(u_xlat28) * _LightColor0.xyz;\n    u_xlat16_12.xzw = u_xlat18.xyz * vec3(u_xlat16_45) + u_xlat16_12.xzw;\n    u_xlat1.xyz = u_xlat0.xxx * _LightColor0.xyz;\n    u_xlat16_45 = (-u_xlat14) + 1.0;\n    u_xlat16_53 = u_xlat16_45 * u_xlat16_45;\n    u_xlat16_53 = u_xlat16_53 * u_xlat16_53;\n    u_xlat16_45 = u_xlat16_45 * u_xlat16_53;\n    u_xlat16_13.xyz = (-u_xlat16_2.xyz) + vec3(1.0, 1.0, 1.0);\n    u_xlat16_13.xyz = u_xlat16_13.xyz * vec3(u_xlat16_45) + u_xlat16_2.xyz;\n    u_xlat0.xyz = u_xlat1.xyz * u_xlat16_13.xyz;\n    u_xlat0.xyz = u_xlat16_3.xyz * u_xlat16_12.xzw + u_xlat0.xyz;\n    u_xlat16_3.xyz = u_xlat16_11.xyz * vec3(u_xlat42);\n    u_xlat16_11.xyz = (-u_xlat16_2.xyz) + vec3(u_xlat16_44);\n    u_xlat16_2.xyz = vec3(u_xlat16_26) * u_xlat16_11.xyz + u_xlat16_2.xyz;\n    u_xlat0.xyz = u_xlat16_3.xyz * u_xlat16_2.xyz + u_xlat0.xyz;\n    SV_Target0.xyz = u_xlat0.xyz;\n    SV_Target0.w = 1.0;\n    return;\n}\n\n",0,0,1,0,0,["DIRECTIONAL","LIGHTPROBE_SH"],[["LIGHTMODE","FORWARDBASE"],["PerformanceChecks","False"],["RenderType","Opaque"],["SHADOWSUPPORT","true"]]],[0,"\n#version 100\n\nuniform \tvec3 _WorldSpaceCameraPos;\nuniform \tvec4 hlslcc_mtx4x4unity_ObjectToWorld[4];\nuniform \tvec4 hlslcc_mtx4x4unity_WorldToObject[4];\nuniform \tvec4 hlslcc_mtx4x4unity_MatrixVP[4];\nuniform \tvec4 _MainTex_ST;\nuniform \tvec4 _DetailAlbedoMap_ST;\nuniform \tmediump float _UVSec;\nattribute highp vec4 in_POSITION0;\nattribute mediump vec3 in_NORMAL0;\nattribute highp vec2 in_TEXCOORD0;\nattribute highp vec2 in_TEXCOORD1;\nvarying highp vec4 vs_TEXCOORD0;\nvarying highp vec4 vs_TEXCOORD1;\nvarying highp vec4 vs_TEXCOORD2;\nvarying highp vec4 vs_TEXCOORD3;\nvarying highp vec4 vs_TEXCOORD4;\nvarying mediump vec4 vs_TEXCOORD5;\nvarying highp vec4 vs_TEXCOORD7;\nvarying highp vec3 vs_TEXCOORD8;\nvec4 u_xlat0;\nbool u_xlatb0;\nvec4 u_xlat1;\nfloat u_xlat6;\nvoid main()\n{\n    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];\n    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;\n    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;\n    u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];\n    u_xlat1 = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];\n    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat0.xxxx + u_xlat1;\n    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat0.zzzz + u_xlat1;\n    gl_Position = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat0.wwww + u_xlat1;\n    u_xlatb0 = _UVSec==0.0;\n    u_xlat0.xy = (bool(u_xlatb0)) ? in_TEXCOORD0.xy : in_TEXCOORD1.xy;\n    vs_TEXCOORD0.zw = u_xlat0.xy * _DetailAlbedoMap_ST.xy + _DetailAlbedoMap_ST.zw;\n    vs_TEXCOORD0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;\n    u_xlat0.xyz = in_POSITION0.yyy * hlslcc_mtx4x4unity_ObjectToWorld[1].xyz;\n    u_xlat0.xyz = hlslcc_mtx4x4unity_ObjectToWorld[0].xyz * in_POSITION0.xxx + u_xlat0.xyz;\n    u_xlat0.xyz = hlslcc_mtx4x4unity_ObjectToWorld[2].xyz * in_POSITION0.zzz + u_xlat0.xyz;\n    u_xlat0.xyz = hlslcc_mtx4x4unity_ObjectToWorld[3].xyz * in_POSITION0.www + u_xlat0.xyz;\n    vs_TEXCOORD1.xyz = u_xlat0.xyz + (-_WorldSpaceCameraPos.xyz);\n    vs_TEXCOORD8.xyz = u_xlat0.xyz;\n    vs_TEXCOORD1.w = 0.0;\n    vs_TEXCOORD2 = vec4(0.0, 0.0, 0.0, 0.0);\n    vs_TEXCOORD3 = vec4(0.0, 0.0, 0.0, 0.0);\n    u_xlat0.x = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[0].xyz);\n    u_xlat0.y = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[1].xyz);\n    u_xlat0.z = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[2].xyz);\n    u_xlat6 = dot(u_xlat0.xyz, u_xlat0.xyz);\n    u_xlat6 = inversesqrt(u_xlat6);\n    vs_TEXCOORD4.xyz = vec3(u_xlat6) * u_xlat0.xyz;\n    vs_TEXCOORD4.w = 0.0;\n    vs_TEXCOORD5 = vec4(0.0, 0.0, 0.0, 0.0);\n    vs_TEXCOORD7 = vec4(0.0, 0.0, 0.0, 0.0);\n    return;\n}\n\n","\n#version 100\n#ifdef GL_EXT_shader_texture_lod\n#extension GL_EXT_shader_texture_lod : enable\n#endif\n#if !defined(GL_EXT_shader_texture_lod)\n#define texture1DLodEXT texture1D\n#define texture2DLodEXT texture2D\n#define texture2DProjLodEXT texture2DProj\n#define texture3DLodEXT texture3D\n#define textureCubeLodEXT textureCube\n#endif\n\n#ifdef GL_FRAGMENT_PRECISION_HIGH\n    precision highp float;\n#else\n    precision mediump float;\n#endif\nprecision highp int;\nuniform \tmediump vec4 _WorldSpaceLightPos0;\nuniform \tvec4 unity_SpecCube0_BoxMax;\nuniform \tvec4 unity_SpecCube0_BoxMin;\nuniform \tvec4 unity_SpecCube0_ProbePosition;\nuniform \tmediump vec4 unity_SpecCube0_HDR;\nuniform \tvec4 unity_SpecCube1_BoxMax;\nuniform \tvec4 unity_SpecCube1_BoxMin;\nuniform \tvec4 unity_SpecCube1_ProbePosition;\nuniform \tmediump vec4 unity_SpecCube1_HDR;\nuniform \tmediump vec4 _LightColor0;\nuniform \tmediump vec4 _Color;\nuniform \tmediump float _Metallic;\nuniform \tfloat _Glossiness;\nuniform \tmediump float _OcclusionStrength;\nuniform \tmediump vec4 _EmissionColor;\nuniform lowp sampler2D _MainTex;\nuniform lowp sampler2D _OcclusionMap;\nuniform lowp sampler2D _EmissionMap;\nuniform lowp samplerCube unity_SpecCube0;\nuniform lowp samplerCube unity_SpecCube1;\nvarying highp vec4 vs_TEXCOORD0;\nvarying highp vec4 vs_TEXCOORD1;\nvarying highp vec4 vs_TEXCOORD4;\nvarying highp vec3 vs_TEXCOORD8;\n#define SV_Target0 gl_FragData[0]\nvec3 u_xlat0;\nlowp vec3 u_xlat10_0;\nvec3 u_xlat1;\nlowp vec3 u_xlat10_1;\nbool u_xlatb1;\nmediump vec3 u_xlat16_2;\nmediump vec3 u_xlat16_3;\nmediump vec3 u_xlat16_4;\nlowp vec4 u_xlat10_4;\nvec3 u_xlat5;\nlowp vec4 u_xlat10_5;\nbool u_xlatb5;\nvec3 u_xlat6;\nvec3 u_xlat7;\nvec3 u_xlat8;\nbvec3 u_xlatb8;\nmediump vec3 u_xlat16_9;\nbvec3 u_xlatb10;\nmediump vec3 u_xlat16_11;\nmediump vec3 u_xlat16_12;\nfloat u_xlat13;\nfloat u_xlat14;\nvec3 u_xlat22;\nmediump vec3 u_xlat16_22;\nmediump vec3 u_xlat16_24;\nfloat u_xlat26;\nfloat u_xlat27;\nfloat u_xlat39;\nfloat u_xlat40;\nlowp float u_xlat10_40;\nmediump float u_xlat16_41;\nmediump float u_xlat16_42;\nmediump float u_xlat16_43;\nfloat u_xlat44;\nbool u_xlatb44;\nmediump float u_xlat16_48;\nvoid main()\n{\n    u_xlat10_0.xyz = texture2D(_MainTex, vs_TEXCOORD0.xy).xyz;\n    u_xlat1.xyz = u_xlat10_0.xyz * _Color.xyz;\n    u_xlat16_2.xyz = _Color.xyz * u_xlat10_0.xyz + vec3(-0.220916301, -0.220916301, -0.220916301);\n    u_xlat16_2.xyz = vec3(vec3(_Metallic, _Metallic, _Metallic)) * u_xlat16_2.xyz + vec3(0.220916301, 0.220916301, 0.220916301);\n    u_xlat16_41 = (-_Metallic) * 0.779083729 + 0.779083729;\n    u_xlat16_3.xyz = u_xlat1.xyz * vec3(u_xlat16_41);\n    u_xlat0.x = dot(vs_TEXCOORD4.xyz, vs_TEXCOORD4.xyz);\n    u_xlat0.x = inversesqrt(u_xlat0.x);\n    u_xlat0.xyz = u_xlat0.xxx * vs_TEXCOORD4.xyz;\n    u_xlat39 = dot(vs_TEXCOORD1.xyz, vs_TEXCOORD1.xyz);\n    u_xlat39 = inversesqrt(u_xlat39);\n    u_xlat1.xyz = vec3(u_xlat39) * vs_TEXCOORD1.xyz;\n    u_xlat10_40 = texture2D(_OcclusionMap, vs_TEXCOORD0.xy).y;\n    u_xlat16_42 = (-_OcclusionStrength) + 1.0;\n    u_xlat16_42 = u_xlat10_40 * _OcclusionStrength + u_xlat16_42;\n    u_xlat40 = (-_Glossiness) + 1.0;\n    u_xlat16_4.x = dot(u_xlat1.xyz, u_xlat0.xyz);\n    u_xlat16_4.x = u_xlat16_4.x + u_xlat16_4.x;\n    u_xlat16_4.xyz = u_xlat0.xyz * (-u_xlat16_4.xxx) + u_xlat1.xyz;\n    u_xlatb5 = 0.0<unity_SpecCube0_ProbePosition.w;\n    if(u_xlatb5){\n        u_xlat5.x = dot(u_xlat16_4.xyz, u_xlat16_4.xyz);\n        u_xlat5.x = inversesqrt(u_xlat5.x);\n        u_xlat5.xyz = u_xlat16_4.xyz * u_xlat5.xxx;\n        u_xlat6.xyz = (-vs_TEXCOORD8.xyz) + unity_SpecCube0_BoxMax.xyz;\n        u_xlat6.xyz = u_xlat6.xyz / u_xlat5.xyz;\n        u_xlat7.xyz = (-vs_TEXCOORD8.xyz) + unity_SpecCube0_BoxMin.xyz;\n        u_xlat7.xyz = u_xlat7.xyz / u_xlat5.xyz;\n        u_xlatb8.xyz = lessThan(vec4(0.0, 0.0, 0.0, 0.0), u_xlat5.xyzx).xyz;\n        {\n            vec3 hlslcc_movcTemp = u_xlat6;\n            hlslcc_movcTemp.x = (u_xlatb8.x) ? u_xlat6.x : u_xlat7.x;\n            hlslcc_movcTemp.y = (u_xlatb8.y) ? u_xlat6.y : u_xlat7.y;\n            hlslcc_movcTemp.z = (u_xlatb8.z) ? u_xlat6.z : u_xlat7.z;\n            u_xlat6 = hlslcc_movcTemp;\n        }\n        u_xlat44 = min(u_xlat6.y, u_xlat6.x);\n        u_xlat44 = min(u_xlat6.z, u_xlat44);\n        u_xlat6.xyz = vs_TEXCOORD8.xyz + (-unity_SpecCube0_ProbePosition.xyz);\n        u_xlat5.xyz = u_xlat5.xyz * vec3(u_xlat44) + u_xlat6.xyz;\n    } else {\n        u_xlat5.xyz = u_xlat16_4.xyz;\n    }\n    u_xlat16_43 = (-u_xlat40) * 0.699999988 + 1.70000005;\n    u_xlat16_43 = u_xlat40 * u_xlat16_43;\n    u_xlat16_43 = u_xlat16_43 * 6.0;\n    u_xlat10_5 = textureCubeLodEXT(unity_SpecCube0, u_xlat5.xyz, u_xlat16_43);\n    u_xlat16_9.x = u_xlat10_5.w + -1.0;\n    u_xlat16_9.x = unity_SpecCube0_HDR.w * u_xlat16_9.x + 1.0;\n    u_xlat16_9.x = u_xlat16_9.x * unity_SpecCube0_HDR.x;\n    u_xlat16_22.xyz = u_xlat10_5.xyz * u_xlat16_9.xxx;\n    u_xlatb44 = unity_SpecCube0_BoxMin.w<0.999989986;\n    if(u_xlatb44){\n        u_xlatb44 = 0.0<unity_SpecCube1_ProbePosition.w;\n        if(u_xlatb44){\n            u_xlat44 = dot(u_xlat16_4.xyz, u_xlat16_4.xyz);\n            u_xlat44 = inversesqrt(u_xlat44);\n            u_xlat6.xyz = u_xlat16_4.xyz * vec3(u_xlat44);\n            u_xlat7.xyz = (-vs_TEXCOORD8.xyz) + unity_SpecCube1_BoxMax.xyz;\n            u_xlat7.xyz = u_xlat7.xyz / u_xlat6.xyz;\n            u_xlat8.xyz = (-vs_TEXCOORD8.xyz) + unity_SpecCube1_BoxMin.xyz;\n            u_xlat8.xyz = u_xlat8.xyz / u_xlat6.xyz;\n            u_xlatb10.xyz = lessThan(vec4(0.0, 0.0, 0.0, 0.0), u_xlat6.xyzx).xyz;\n            {\n                vec3 hlslcc_movcTemp = u_xlat7;\n                hlslcc_movcTemp.x = (u_xlatb10.x) ? u_xlat7.x : u_xlat8.x;\n                hlslcc_movcTemp.y = (u_xlatb10.y) ? u_xlat7.y : u_xlat8.y;\n                hlslcc_movcTemp.z = (u_xlatb10.z) ? u_xlat7.z : u_xlat8.z;\n                u_xlat7 = hlslcc_movcTemp;\n            }\n            u_xlat44 = min(u_xlat7.y, u_xlat7.x);\n            u_xlat44 = min(u_xlat7.z, u_xlat44);\n            u_xlat7.xyz = vs_TEXCOORD8.xyz + (-unity_SpecCube1_ProbePosition.xyz);\n            u_xlat6.xyz = u_xlat6.xyz * vec3(u_xlat44) + u_xlat7.xyz;\n        } else {\n            u_xlat6.xyz = u_xlat16_4.xyz;\n        }\n        u_xlat10_4 = textureCubeLodEXT(unity_SpecCube1, u_xlat6.xyz, u_xlat16_43);\n        u_xlat16_11.x = u_xlat10_4.w + -1.0;\n        u_xlat16_11.x = unity_SpecCube1_HDR.w * u_xlat16_11.x + 1.0;\n        u_xlat16_11.x = u_xlat16_11.x * unity_SpecCube1_HDR.x;\n        u_xlat16_11.xyz = u_xlat10_4.xyz * u_xlat16_11.xxx;\n        u_xlat5.xyz = u_xlat16_9.xxx * u_xlat10_5.xyz + (-u_xlat16_11.xyz);\n        u_xlat22.xyz = unity_SpecCube0_BoxMin.www * u_xlat5.xyz + u_xlat16_11.xyz;\n        u_xlat16_22.xyz = u_xlat22.xyz;\n    }\n    u_xlat16_9.xyz = vec3(u_xlat16_42) * u_xlat16_22.xyz;\n    u_xlat5.xyz = (-vs_TEXCOORD1.xyz) * vec3(u_xlat39) + _WorldSpaceLightPos0.xyz;\n    u_xlat39 = dot(u_xlat5.xyz, u_xlat5.xyz);\n    u_xlat39 = max(u_xlat39, 0.00100000005);\n    u_xlat39 = inversesqrt(u_xlat39);\n    u_xlat5.xyz = vec3(u_xlat39) * u_xlat5.xyz;\n    u_xlat39 = dot(u_xlat0.xyz, (-u_xlat1.xyz));\n    u_xlat1.x = dot(u_xlat0.xyz, _WorldSpaceLightPos0.xyz);\n    u_xlat1.x = clamp(u_xlat1.x, 0.0, 1.0);\n    u_xlat0.x = dot(u_xlat0.xyz, u_xlat5.xyz);\n    u_xlat0.x = clamp(u_xlat0.x, 0.0, 1.0);\n    u_xlat13 = dot(_WorldSpaceLightPos0.xyz, u_xlat5.xyz);\n    u_xlat13 = clamp(u_xlat13, 0.0, 1.0);\n    u_xlat16_42 = u_xlat13 + u_xlat13;\n    u_xlat16_42 = u_xlat13 * u_xlat16_42;\n    u_xlat16_42 = u_xlat16_42 * u_xlat40 + -0.5;\n    u_xlat16_48 = (-u_xlat1.x) + 1.0;\n    u_xlat16_11.x = u_xlat16_48 * u_xlat16_48;\n    u_xlat16_11.x = u_xlat16_11.x * u_xlat16_11.x;\n    u_xlat16_48 = u_xlat16_48 * u_xlat16_11.x;\n    u_xlat16_48 = u_xlat16_42 * u_xlat16_48 + 1.0;\n    u_xlat16_11.x = -abs(u_xlat39) + 1.0;\n    u_xlat16_24.x = u_xlat16_11.x * u_xlat16_11.x;\n    u_xlat16_24.x = u_xlat16_24.x * u_xlat16_24.x;\n    u_xlat16_11.x = u_xlat16_11.x * u_xlat16_24.x;\n    u_xlat16_42 = u_xlat16_42 * u_xlat16_11.x + 1.0;\n    u_xlat16_42 = u_xlat16_42 * u_xlat16_48;\n    u_xlat26 = u_xlat1.x * u_xlat16_42;\n    u_xlat14 = u_xlat40 * u_xlat40;\n    u_xlat14 = max(u_xlat14, 0.00200000009);\n    u_xlat27 = (-u_xlat14) + 1.0;\n    u_xlat5.x = abs(u_xlat39) * u_xlat27 + u_xlat14;\n    u_xlat27 = u_xlat1.x * u_xlat27 + u_xlat14;\n    u_xlat39 = abs(u_xlat39) * u_xlat27;\n    u_xlat39 = u_xlat1.x * u_xlat5.x + u_xlat39;\n    u_xlat39 = u_xlat39 + 9.99999975e-06;\n    u_xlat39 = 0.5 / u_xlat39;\n    u_xlat27 = u_xlat14 * u_xlat14;\n    u_xlat5.x = u_xlat0.x * u_xlat27 + (-u_xlat0.x);\n    u_xlat0.x = u_xlat5.x * u_xlat0.x + 1.0;\n    u_xlat27 = u_xlat27 * 0.318309873;\n    u_xlat0.x = u_xlat0.x * u_xlat0.x + 1.00000001e-07;\n    u_xlat0.x = u_xlat27 / u_xlat0.x;\n    u_xlat0.x = u_xlat0.x * u_xlat39;\n    u_xlat0.x = u_xlat0.x * 3.14159274;\n    u_xlat0.x = max(u_xlat0.x, 9.99999975e-05);\n    u_xlat0.x = sqrt(u_xlat0.x);\n    u_xlat0.x = u_xlat1.x * u_xlat0.x;\n    u_xlat39 = u_xlat14 * u_xlat40;\n    u_xlat39 = (-u_xlat39) * 0.280000001 + 1.0;\n    u_xlat16_42 = dot(u_xlat16_2.xyz, u_xlat16_2.xyz);\n    u_xlatb1 = u_xlat16_42!=0.0;\n    u_xlat1.x = u_xlatb1 ? 1.0 : float(0.0);\n    u_xlat0.x = u_xlat0.x * u_xlat1.x;\n    u_xlat16_41 = (-u_xlat16_41) + 1.0;\n    u_xlat16_41 = u_xlat16_41 + _Glossiness;\n    u_xlat16_41 = clamp(u_xlat16_41, 0.0, 1.0);\n    u_xlat16_24.xyz = vec3(u_xlat26) * _LightColor0.xyz;\n    u_xlat1.xyz = u_xlat0.xxx * _LightColor0.xyz;\n    u_xlat16_42 = (-u_xlat13) + 1.0;\n    u_xlat16_48 = u_xlat16_42 * u_xlat16_42;\n    u_xlat16_48 = u_xlat16_48 * u_xlat16_48;\n    u_xlat16_42 = u_xlat16_42 * u_xlat16_48;\n    u_xlat16_12.xyz = (-u_xlat16_2.xyz) + vec3(1.0, 1.0, 1.0);\n    u_xlat16_12.xyz = u_xlat16_12.xyz * vec3(u_xlat16_42) + u_xlat16_2.xyz;\n    u_xlat0.xyz = u_xlat1.xyz * u_xlat16_12.xyz;\n    u_xlat0.xyz = u_xlat16_3.xyz * u_xlat16_24.xyz + u_xlat0.xyz;\n    u_xlat16_3.xyz = u_xlat16_9.xyz * vec3(u_xlat39);\n    u_xlat16_9.xyz = (-u_xlat16_2.xyz) + vec3(u_xlat16_41);\n    u_xlat16_2.xyz = u_xlat16_11.xxx * u_xlat16_9.xyz + u_xlat16_2.xyz;\n    u_xlat0.xyz = u_xlat16_3.xyz * u_xlat16_2.xyz + u_xlat0.xyz;\n    u_xlat10_1.xyz = texture2D(_EmissionMap, vs_TEXCOORD0.xy).xyz;\n    SV_Target0.xyz = u_xlat10_1.xyz * _EmissionColor.xyz + u_xlat0.xyz;\n    SV_Target0.w = 1.0;\n    return;\n}\n\n",0,0,0,0,0,["DIRECTIONAL","_EMISSION"],[["LIGHTMODE","FORWARDBASE"],["PerformanceChecks","False"],["RenderType","Opaque"],["SHADOWSUPPORT","true"]]],[0,"\n#version 100\n\nuniform \tvec3 _WorldSpaceCameraPos;\nuniform \tmediump vec4 unity_SHBr;\nuniform \tmediump vec4 unity_SHBg;\nuniform \tmediump vec4 unity_SHBb;\nuniform \tmediump vec4 unity_SHC;\nuniform \tvec4 hlslcc_mtx4x4unity_ObjectToWorld[4];\nuniform \tvec4 hlslcc_mtx4x4unity_WorldToObject[4];\nuniform \tvec4 hlslcc_mtx4x4unity_MatrixVP[4];\nuniform \tvec4 _MainTex_ST;\nuniform \tvec4 _DetailAlbedoMap_ST;\nuniform \tmediump float _UVSec;\nattribute highp vec4 in_POSITION0;\nattribute mediump vec3 in_NORMAL0;\nattribute highp vec2 in_TEXCOORD0;\nattribute highp vec2 in_TEXCOORD1;\nvarying highp vec4 vs_TEXCOORD0;\nvarying highp vec4 vs_TEXCOORD1;\nvarying highp vec4 vs_TEXCOORD2;\nvarying highp vec4 vs_TEXCOORD3;\nvarying highp vec4 vs_TEXCOORD4;\nvarying mediump vec4 vs_TEXCOORD5;\nvarying highp vec4 vs_TEXCOORD7;\nvarying highp vec3 vs_TEXCOORD8;\nvec4 u_xlat0;\nmediump vec4 u_xlat16_0;\nbool u_xlatb0;\nvec4 u_xlat1;\nmediump float u_xlat16_2;\nmediump vec3 u_xlat16_3;\nfloat u_xlat12;\nvoid main()\n{\n    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];\n    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;\n    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;\n    u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];\n    u_xlat1 = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];\n    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat0.xxxx + u_xlat1;\n    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat0.zzzz + u_xlat1;\n    gl_Position = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat0.wwww + u_xlat1;\n    u_xlatb0 = _UVSec==0.0;\n    u_xlat0.xy = (bool(u_xlatb0)) ? in_TEXCOORD0.xy : in_TEXCOORD1.xy;\n    vs_TEXCOORD0.zw = u_xlat0.xy * _DetailAlbedoMap_ST.xy + _DetailAlbedoMap_ST.zw;\n    vs_TEXCOORD0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;\n    u_xlat0.xyz = in_POSITION0.yyy * hlslcc_mtx4x4unity_ObjectToWorld[1].xyz;\n    u_xlat0.xyz = hlslcc_mtx4x4unity_ObjectToWorld[0].xyz * in_POSITION0.xxx + u_xlat0.xyz;\n    u_xlat0.xyz = hlslcc_mtx4x4unity_ObjectToWorld[2].xyz * in_POSITION0.zzz + u_xlat0.xyz;\n    u_xlat0.xyz = hlslcc_mtx4x4unity_ObjectToWorld[3].xyz * in_POSITION0.www + u_xlat0.xyz;\n    vs_TEXCOORD1.xyz = u_xlat0.xyz + (-_WorldSpaceCameraPos.xyz);\n    vs_TEXCOORD8.xyz = u_xlat0.xyz;\n    vs_TEXCOORD1.w = 0.0;\n    vs_TEXCOORD2 = vec4(0.0, 0.0, 0.0, 0.0);\n    vs_TEXCOORD3 = vec4(0.0, 0.0, 0.0, 0.0);\n    u_xlat0.x = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[0].xyz);\n    u_xlat0.y = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[1].xyz);\n    u_xlat0.z = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[2].xyz);\n    u_xlat12 = dot(u_xlat0.xyz, u_xlat0.xyz);\n    u_xlat12 = inversesqrt(u_xlat12);\n    u_xlat0.xyz = vec3(u_xlat12) * u_xlat0.xyz;\n    vs_TEXCOORD4.xyz = u_xlat0.xyz;\n    vs_TEXCOORD4.w = 0.0;\n    u_xlat16_2 = u_xlat0.y * u_xlat0.y;\n    u_xlat16_2 = u_xlat0.x * u_xlat0.x + (-u_xlat16_2);\n    u_xlat16_0 = u_xlat0.yzzx * u_xlat0.xyzz;\n    u_xlat16_3.x = dot(unity_SHBr, u_xlat16_0);\n    u_xlat16_3.y = dot(unity_SHBg, u_xlat16_0);\n    u_xlat16_3.z = dot(unity_SHBb, u_xlat16_0);\n    vs_TEXCOORD5.xyz = unity_SHC.xyz * vec3(u_xlat16_2) + u_xlat16_3.xyz;\n    vs_TEXCOORD5.w = 0.0;\n    vs_TEXCOORD7 = vec4(0.0, 0.0, 0.0, 0.0);\n    return;\n}\n\n","\n#version 100\n#ifdef GL_EXT_shader_texture_lod\n#extension GL_EXT_shader_texture_lod : enable\n#endif\n#if !defined(GL_EXT_shader_texture_lod)\n#define texture1DLodEXT texture1D\n#define texture2DLodEXT texture2D\n#define texture2DProjLodEXT texture2DProj\n#define texture3DLodEXT texture3D\n#define textureCubeLodEXT textureCube\n#endif\n\n#ifdef GL_FRAGMENT_PRECISION_HIGH\n    precision highp float;\n#else\n    precision mediump float;\n#endif\nprecision highp int;\nuniform \tmediump vec4 _WorldSpaceLightPos0;\nuniform \tmediump vec4 unity_SHAr;\nuniform \tmediump vec4 unity_SHAg;\nuniform \tmediump vec4 unity_SHAb;\nuniform \tvec4 unity_SpecCube0_BoxMax;\nuniform \tvec4 unity_SpecCube0_BoxMin;\nuniform \tvec4 unity_SpecCube0_ProbePosition;\nuniform \tmediump vec4 unity_SpecCube0_HDR;\nuniform \tvec4 unity_SpecCube1_BoxMax;\nuniform \tvec4 unity_SpecCube1_BoxMin;\nuniform \tvec4 unity_SpecCube1_ProbePosition;\nuniform \tmediump vec4 unity_SpecCube1_HDR;\nuniform \tmediump vec4 _LightColor0;\nuniform \tmediump vec4 _Color;\nuniform \tmediump float _Metallic;\nuniform \tfloat _Glossiness;\nuniform \tmediump float _OcclusionStrength;\nuniform \tmediump vec4 _EmissionColor;\nuniform lowp sampler2D _MainTex;\nuniform lowp sampler2D _OcclusionMap;\nuniform lowp sampler2D _EmissionMap;\nuniform lowp samplerCube unity_SpecCube0;\nuniform lowp samplerCube unity_SpecCube1;\nvarying highp vec4 vs_TEXCOORD0;\nvarying highp vec4 vs_TEXCOORD1;\nvarying highp vec4 vs_TEXCOORD4;\nvarying mediump vec4 vs_TEXCOORD5;\nvarying highp vec3 vs_TEXCOORD8;\n#define SV_Target0 gl_FragData[0]\nvec4 u_xlat0;\nlowp vec3 u_xlat10_0;\nvec3 u_xlat1;\nlowp vec3 u_xlat10_1;\nbool u_xlatb1;\nmediump vec3 u_xlat16_2;\nmediump vec3 u_xlat16_3;\nfloat u_xlat4;\nlowp float u_xlat10_4;\nmediump vec3 u_xlat16_5;\nlowp vec4 u_xlat10_5;\nmediump vec3 u_xlat16_6;\nlowp vec4 u_xlat10_6;\nvec3 u_xlat7;\nvec3 u_xlat8;\nvec3 u_xlat9;\nbvec3 u_xlatb10;\nmediump vec3 u_xlat16_11;\nmediump vec4 u_xlat16_12;\nmediump vec3 u_xlat16_13;\nfloat u_xlat14;\nvec3 u_xlat15;\nvec3 u_xlat18;\nvec3 u_xlat25;\nmediump vec3 u_xlat16_25;\nmediump float u_xlat16_26;\nfloat u_xlat28;\nfloat u_xlat29;\nmediump float u_xlat16_40;\nfloat u_xlat42;\nbool u_xlatb42;\nfloat u_xlat43;\nmediump float u_xlat16_44;\nmediump float u_xlat16_45;\nmediump float u_xlat16_47;\nmediump float u_xlat16_53;\nvoid main()\n{\n    u_xlat10_0.xyz = texture2D(_MainTex, vs_TEXCOORD0.xy).xyz;\n    u_xlat1.xyz = u_xlat10_0.xyz * _Color.xyz;\n    u_xlat16_2.xyz = _Color.xyz * u_xlat10_0.xyz + vec3(-0.220916301, -0.220916301, -0.220916301);\n    u_xlat16_2.xyz = vec3(vec3(_Metallic, _Metallic, _Metallic)) * u_xlat16_2.xyz + vec3(0.220916301, 0.220916301, 0.220916301);\n    u_xlat16_44 = (-_Metallic) * 0.779083729 + 0.779083729;\n    u_xlat16_3.xyz = u_xlat1.xyz * vec3(u_xlat16_44);\n    u_xlat0.x = dot(vs_TEXCOORD4.xyz, vs_TEXCOORD4.xyz);\n    u_xlat0.x = inversesqrt(u_xlat0.x);\n    u_xlat0.xyz = u_xlat0.xxx * vs_TEXCOORD4.xyz;\n    u_xlat1.x = dot(vs_TEXCOORD1.xyz, vs_TEXCOORD1.xyz);\n    u_xlat1.x = inversesqrt(u_xlat1.x);\n    u_xlat15.xyz = u_xlat1.xxx * vs_TEXCOORD1.xyz;\n    u_xlat10_4 = texture2D(_OcclusionMap, vs_TEXCOORD0.xy).y;\n    u_xlat16_45 = (-_OcclusionStrength) + 1.0;\n    u_xlat16_45 = u_xlat10_4 * _OcclusionStrength + u_xlat16_45;\n    u_xlat4 = (-_Glossiness) + 1.0;\n    u_xlat16_5.x = dot(u_xlat15.xyz, u_xlat0.xyz);\n    u_xlat16_5.x = u_xlat16_5.x + u_xlat16_5.x;\n    u_xlat16_5.xyz = u_xlat0.xyz * (-u_xlat16_5.xxx) + u_xlat15.xyz;\n    u_xlat0.w = 1.0;\n    u_xlat16_6.x = dot(unity_SHAr, u_xlat0);\n    u_xlat16_6.y = dot(unity_SHAg, u_xlat0);\n    u_xlat16_6.z = dot(unity_SHAb, u_xlat0);\n    u_xlat16_6.xyz = u_xlat16_6.xyz + vs_TEXCOORD5.xyz;\n    u_xlat16_6.xyz = max(u_xlat16_6.xyz, vec3(0.0, 0.0, 0.0));\n    u_xlat18.xyz = log2(u_xlat16_6.xyz);\n    u_xlat18.xyz = u_xlat18.xyz * vec3(0.416666657, 0.416666657, 0.416666657);\n    u_xlat18.xyz = exp2(u_xlat18.xyz);\n    u_xlat18.xyz = u_xlat18.xyz * vec3(1.05499995, 1.05499995, 1.05499995) + vec3(-0.0549999997, -0.0549999997, -0.0549999997);\n    u_xlat18.xyz = max(u_xlat18.xyz, vec3(0.0, 0.0, 0.0));\n    u_xlatb42 = 0.0<unity_SpecCube0_ProbePosition.w;\n    if(u_xlatb42){\n        u_xlat42 = dot(u_xlat16_5.xyz, u_xlat16_5.xyz);\n        u_xlat42 = inversesqrt(u_xlat42);\n        u_xlat7.xyz = vec3(u_xlat42) * u_xlat16_5.xyz;\n        u_xlat8.xyz = (-vs_TEXCOORD8.xyz) + unity_SpecCube0_BoxMax.xyz;\n        u_xlat8.xyz = u_xlat8.xyz / u_xlat7.xyz;\n        u_xlat9.xyz = (-vs_TEXCOORD8.xyz) + unity_SpecCube0_BoxMin.xyz;\n        u_xlat9.xyz = u_xlat9.xyz / u_xlat7.xyz;\n        u_xlatb10.xyz = lessThan(vec4(0.0, 0.0, 0.0, 0.0), u_xlat7.xyzx).xyz;\n        {\n            vec3 hlslcc_movcTemp = u_xlat8;\n            hlslcc_movcTemp.x = (u_xlatb10.x) ? u_xlat8.x : u_xlat9.x;\n            hlslcc_movcTemp.y = (u_xlatb10.y) ? u_xlat8.y : u_xlat9.y;\n            hlslcc_movcTemp.z = (u_xlatb10.z) ? u_xlat8.z : u_xlat9.z;\n            u_xlat8 = hlslcc_movcTemp;\n        }\n        u_xlat42 = min(u_xlat8.y, u_xlat8.x);\n        u_xlat42 = min(u_xlat8.z, u_xlat42);\n        u_xlat8.xyz = vs_TEXCOORD8.xyz + (-unity_SpecCube0_ProbePosition.xyz);\n        u_xlat7.xyz = u_xlat7.xyz * vec3(u_xlat42) + u_xlat8.xyz;\n    } else {\n        u_xlat7.xyz = u_xlat16_5.xyz;\n    }\n    u_xlat16_47 = (-u_xlat4) * 0.699999988 + 1.70000005;\n    u_xlat16_47 = u_xlat4 * u_xlat16_47;\n    u_xlat16_47 = u_xlat16_47 * 6.0;\n    u_xlat10_6 = textureCubeLodEXT(unity_SpecCube0, u_xlat7.xyz, u_xlat16_47);\n    u_xlat16_11.x = u_xlat10_6.w + -1.0;\n    u_xlat16_11.x = unity_SpecCube0_HDR.w * u_xlat16_11.x + 1.0;\n    u_xlat16_11.x = u_xlat16_11.x * unity_SpecCube0_HDR.x;\n    u_xlat16_25.xyz = u_xlat10_6.xyz * u_xlat16_11.xxx;\n    u_xlatb42 = unity_SpecCube0_BoxMin.w<0.999989986;\n    if(u_xlatb42){\n        u_xlatb42 = 0.0<unity_SpecCube1_ProbePosition.w;\n        if(u_xlatb42){\n            u_xlat42 = dot(u_xlat16_5.xyz, u_xlat16_5.xyz);\n            u_xlat42 = inversesqrt(u_xlat42);\n            u_xlat7.xyz = vec3(u_xlat42) * u_xlat16_5.xyz;\n            u_xlat8.xyz = (-vs_TEXCOORD8.xyz) + unity_SpecCube1_BoxMax.xyz;\n            u_xlat8.xyz = u_xlat8.xyz / u_xlat7.xyz;\n            u_xlat9.xyz = (-vs_TEXCOORD8.xyz) + unity_SpecCube1_BoxMin.xyz;\n            u_xlat9.xyz = u_xlat9.xyz / u_xlat7.xyz;\n            u_xlatb10.xyz = lessThan(vec4(0.0, 0.0, 0.0, 0.0), u_xlat7.xyzx).xyz;\n            {\n                vec3 hlslcc_movcTemp = u_xlat8;\n                hlslcc_movcTemp.x = (u_xlatb10.x) ? u_xlat8.x : u_xlat9.x;\n                hlslcc_movcTemp.y = (u_xlatb10.y) ? u_xlat8.y : u_xlat9.y;\n                hlslcc_movcTemp.z = (u_xlatb10.z) ? u_xlat8.z : u_xlat9.z;\n                u_xlat8 = hlslcc_movcTemp;\n            }\n            u_xlat42 = min(u_xlat8.y, u_xlat8.x);\n            u_xlat42 = min(u_xlat8.z, u_xlat42);\n            u_xlat8.xyz = vs_TEXCOORD8.xyz + (-unity_SpecCube1_ProbePosition.xyz);\n            u_xlat7.xyz = u_xlat7.xyz * vec3(u_xlat42) + u_xlat8.xyz;\n        } else {\n            u_xlat7.xyz = u_xlat16_5.xyz;\n        }\n        u_xlat10_5 = textureCubeLodEXT(unity_SpecCube1, u_xlat7.xyz, u_xlat16_47);\n        u_xlat16_12.x = u_xlat10_5.w + -1.0;\n        u_xlat16_12.x = unity_SpecCube1_HDR.w * u_xlat16_12.x + 1.0;\n        u_xlat16_12.x = u_xlat16_12.x * unity_SpecCube1_HDR.x;\n        u_xlat16_12.xyz = u_xlat10_5.xyz * u_xlat16_12.xxx;\n        u_xlat7.xyz = u_xlat16_11.xxx * u_xlat10_6.xyz + (-u_xlat16_12.xyz);\n        u_xlat25.xyz = unity_SpecCube0_BoxMin.www * u_xlat7.xyz + u_xlat16_12.xyz;\n        u_xlat16_25.xyz = u_xlat25.xyz;\n    }\n    u_xlat16_11.xyz = vec3(u_xlat16_45) * u_xlat16_25.xyz;\n    u_xlat7.xyz = (-vs_TEXCOORD1.xyz) * u_xlat1.xxx + _WorldSpaceLightPos0.xyz;\n    u_xlat42 = dot(u_xlat7.xyz, u_xlat7.xyz);\n    u_xlat42 = max(u_xlat42, 0.00100000005);\n    u_xlat42 = inversesqrt(u_xlat42);\n    u_xlat7.xyz = vec3(u_xlat42) * u_xlat7.xyz;\n    u_xlat42 = dot(u_xlat0.xyz, (-u_xlat15.xyz));\n    u_xlat1.x = dot(u_xlat0.xyz, _WorldSpaceLightPos0.xyz);\n    u_xlat1.x = clamp(u_xlat1.x, 0.0, 1.0);\n    u_xlat0.x = dot(u_xlat0.xyz, u_xlat7.xyz);\n    u_xlat0.x = clamp(u_xlat0.x, 0.0, 1.0);\n    u_xlat14 = dot(_WorldSpaceLightPos0.xyz, u_xlat7.xyz);\n    u_xlat14 = clamp(u_xlat14, 0.0, 1.0);\n    u_xlat16_53 = u_xlat14 + u_xlat14;\n    u_xlat16_53 = u_xlat14 * u_xlat16_53;\n    u_xlat16_53 = u_xlat16_53 * u_xlat4 + -0.5;\n    u_xlat16_12.x = (-u_xlat1.x) + 1.0;\n    u_xlat16_26 = u_xlat16_12.x * u_xlat16_12.x;\n    u_xlat16_26 = u_xlat16_26 * u_xlat16_26;\n    u_xlat16_12.x = u_xlat16_12.x * u_xlat16_26;\n    u_xlat16_12.x = u_xlat16_53 * u_xlat16_12.x + 1.0;\n    u_xlat16_26 = -abs(u_xlat42) + 1.0;\n    u_xlat16_40 = u_xlat16_26 * u_xlat16_26;\n    u_xlat16_40 = u_xlat16_40 * u_xlat16_40;\n    u_xlat16_26 = u_xlat16_26 * u_xlat16_40;\n    u_xlat16_53 = u_xlat16_53 * u_xlat16_26 + 1.0;\n    u_xlat16_53 = u_xlat16_53 * u_xlat16_12.x;\n    u_xlat28 = u_xlat1.x * u_xlat16_53;\n    u_xlat15.x = u_xlat4 * u_xlat4;\n    u_xlat15.x = max(u_xlat15.x, 0.00200000009);\n    u_xlat29 = (-u_xlat15.x) + 1.0;\n    u_xlat43 = abs(u_xlat42) * u_xlat29 + u_xlat15.x;\n    u_xlat29 = u_xlat1.x * u_xlat29 + u_xlat15.x;\n    u_xlat42 = abs(u_xlat42) * u_xlat29;\n    u_xlat42 = u_xlat1.x * u_xlat43 + u_xlat42;\n    u_xlat42 = u_xlat42 + 9.99999975e-06;\n    u_xlat42 = 0.5 / u_xlat42;\n    u_xlat29 = u_xlat15.x * u_xlat15.x;\n    u_xlat43 = u_xlat0.x * u_xlat29 + (-u_xlat0.x);\n    u_xlat0.x = u_xlat43 * u_xlat0.x + 1.0;\n    u_xlat29 = u_xlat29 * 0.318309873;\n    u_xlat0.x = u_xlat0.x * u_xlat0.x + 1.00000001e-07;\n    u_xlat0.x = u_xlat29 / u_xlat0.x;\n    u_xlat0.x = u_xlat0.x * u_xlat42;\n    u_xlat0.x = u_xlat0.x * 3.14159274;\n    u_xlat0.x = max(u_xlat0.x, 9.99999975e-05);\n    u_xlat0.x = sqrt(u_xlat0.x);\n    u_xlat0.x = u_xlat1.x * u_xlat0.x;\n    u_xlat42 = u_xlat15.x * u_xlat4;\n    u_xlat42 = (-u_xlat42) * 0.280000001 + 1.0;\n    u_xlat16_53 = dot(u_xlat16_2.xyz, u_xlat16_2.xyz);\n    u_xlatb1 = u_xlat16_53!=0.0;\n    u_xlat1.x = u_xlatb1 ? 1.0 : float(0.0);\n    u_xlat0.x = u_xlat0.x * u_xlat1.x;\n    u_xlat16_44 = (-u_xlat16_44) + 1.0;\n    u_xlat16_44 = u_xlat16_44 + _Glossiness;\n    u_xlat16_44 = clamp(u_xlat16_44, 0.0, 1.0);\n    u_xlat16_12.xzw = vec3(u_xlat28) * _LightColor0.xyz;\n    u_xlat16_12.xzw = u_xlat18.xyz * vec3(u_xlat16_45) + u_xlat16_12.xzw;\n    u_xlat1.xyz = u_xlat0.xxx * _LightColor0.xyz;\n    u_xlat16_45 = (-u_xlat14) + 1.0;\n    u_xlat16_53 = u_xlat16_45 * u_xlat16_45;\n    u_xlat16_53 = u_xlat16_53 * u_xlat16_53;\n    u_xlat16_45 = u_xlat16_45 * u_xlat16_53;\n    u_xlat16_13.xyz = (-u_xlat16_2.xyz) + vec3(1.0, 1.0, 1.0);\n    u_xlat16_13.xyz = u_xlat16_13.xyz * vec3(u_xlat16_45) + u_xlat16_2.xyz;\n    u_xlat0.xyz = u_xlat1.xyz * u_xlat16_13.xyz;\n    u_xlat0.xyz = u_xlat16_3.xyz * u_xlat16_12.xzw + u_xlat0.xyz;\n    u_xlat16_3.xyz = u_xlat16_11.xyz * vec3(u_xlat42);\n    u_xlat16_11.xyz = (-u_xlat16_2.xyz) + vec3(u_xlat16_44);\n    u_xlat16_2.xyz = vec3(u_xlat16_26) * u_xlat16_11.xyz + u_xlat16_2.xyz;\n    u_xlat0.xyz = u_xlat16_3.xyz * u_xlat16_2.xyz + u_xlat0.xyz;\n    u_xlat10_1.xyz = texture2D(_EmissionMap, vs_TEXCOORD0.xy).xyz;\n    SV_Target0.xyz = u_xlat10_1.xyz * _EmissionColor.xyz + u_xlat0.xyz;\n    SV_Target0.w = 1.0;\n    return;\n}\n\n",0,0,1,0,0,["DIRECTIONAL","LIGHTPROBE_SH","_EMISSION"],[["LIGHTMODE","FORWARDBASE"],["PerformanceChecks","False"],["RenderType","Opaque"],["SHADOWSUPPORT","true"]]]],["DIRECTIONAL","DIRLIGHTMAP_COMBINED","DYNAMICLIGHTMAP_ON","FOG_EXP","FOG_EXP2","FOG_LINEAR","INSTANCING_ON","LIGHTMAP_ON","LIGHTMAP_SHADOW_MIXING","LIGHTPROBE_SH","SHADOWS_SCREEN","SHADOWS_SHADOWMASK","STEREO_CUBEMAP_RENDER_ON","STEREO_INSTANCING_ON","STEREO_MULTIVIEW_ON","UNITY_SINGLE_PASS_STEREO","VERTEXLIGHT_ON","_ALPHABLEND_ON","_ALPHAPREMULTIPLY_ON","_ALPHATEST_ON","_DETAIL_MULX2","_EMISSION","_GLOSSYREFLECTIONS_OFF","_METALLICGLOSSMAP","_NORMALMAP","_PARALLAXMAP","_SMOOTHNESS_TEXTURE_ALBEDO_CHANNEL_A","_SPECULARHIGHLIGHTS_OFF","__","_"],[[["__","FOG_LINEAR","FOG_EXP","FOG_EXP2"]],[["__","INSTANCING_ON"]],[["_","_NORMALMAP"]],[["_","_ALPHATEST_ON","_ALPHABLEND_ON","_ALPHAPREMULTIPLY_ON"]],[["_","_METALLICGLOSSMAP"]],[["_","_PARALLAXMAP"]],[["DIRECTIONAL"]],[["DIRECTIONAL","LIGHTPROBE_SH"]],[["DIRECTIONAL","SHADOWS_SHADOWMASK","LIGHTPROBE_SH"]],[["DIRECTIONAL","DYNAMICLIGHTMAP_ON"]],[["DIRECTIONAL","LIGHTMAP_ON"]],[["DIRECTIONAL","LIGHTMAP_ON","DYNAMICLIGHTMAP_ON"]],[["DIRECTIONAL","LIGHTMAP_ON","LIGHTPROBE_SH"]],[["DIRECTIONAL","LIGHTMAP_ON","LIGHTMAP_SHADOW_MIXING"]],[["DIRECTIONAL","LIGHTMAP_ON","DYNAMICLIGHTMAP_ON","LIGHTMAP_SHADOW_MIXING"]],[["DIRECTIONAL","LIGHTMAP_ON","LIGHTMAP_SHADOW_MIXING","LIGHTPROBE_SH"]],[["DIRECTIONAL","DIRLIGHTMAP_COMBINED","DYNAMICLIGHTMAP_ON"]],[["DIRECTIONAL","LIGHTMAP_ON","DIRLIGHTMAP_COMBINED"]],[["DIRECTIONAL","LIGHTMAP_ON","DIRLIGHTMAP_COMBINED","LIGHTPROBE_SH"]],[["DIRECTIONAL","LIGHTMAP_ON","DIRLIGHTMAP_COMBINED","DYNAMICLIGHTMAP_ON"]],[["DIRECTIONAL","LIGHTMAP_ON","DIRLIGHTMAP_COMBINED","LIGHTMAP_SHADOW_MIXING"]],[["DIRECTIONAL","LIGHTMAP_ON","DIRLIGHTMAP_COMBINED","LIGHTMAP_SHADOW_MIXING","LIGHTPROBE_SH"]],[["DIRECTIONAL","LIGHTMAP_ON","DIRLIGHTMAP_COMBINED","DYNAMICLIGHTMAP_ON","LIGHTMAP_SHADOW_MIXING"]],[["DIRECTIONAL","LIGHTMAP_ON","SHADOWS_SHADOWMASK"]],[["DIRECTIONAL","LIGHTMAP_ON","DYNAMICLIGHTMAP_ON","SHADOWS_SHADOWMASK"]],[["DIRECTIONAL","LIGHTMAP_ON","SHADOWS_SHADOWMASK","LIGHTPROBE_SH"]],[["DIRECTIONAL","LIGHTMAP_ON","DIRLIGHTMAP_COMBINED","SHADOWS_SHADOWMASK"]],[["DIRECTIONAL","LIGHTMAP_ON","DIRLIGHTMAP_COMBINED","DYNAMICLIGHTMAP_ON","SHADOWS_SHADOWMASK"]],[["DIRECTIONAL","LIGHTMAP_ON","DIRLIGHTMAP_COMBINED","SHADOWS_SHADOWMASK","LIGHTPROBE_SH"]],[["DIRECTIONAL","LIGHTMAP_ON","SHADOWS_SHADOWMASK","LIGHTMAP_SHADOW_MIXING"]],[["DIRECTIONAL","LIGHTMAP_ON","DYNAMICLIGHTMAP_ON","SHADOWS_SHADOWMASK","LIGHTMAP_SHADOW_MIXING"]],[["DIRECTIONAL","LIGHTMAP_ON","SHADOWS_SHADOWMASK","LIGHTMAP_SHADOW_MIXING","LIGHTPROBE_SH"]],[["DIRECTIONAL","LIGHTMAP_ON","DIRLIGHTMAP_COMBINED","SHADOWS_SHADOWMASK","LIGHTMAP_SHADOW_MIXING"]],[["DIRECTIONAL","LIGHTMAP_ON","DIRLIGHTMAP_COMBINED","DYNAMICLIGHTMAP_ON","SHADOWS_SHADOWMASK","LIGHTMAP_SHADOW_MIXING"]],[["DIRECTIONAL","LIGHTMAP_ON","DIRLIGHTMAP_COMBINED","SHADOWS_SHADOWMASK","LIGHTMAP_SHADOW_MIXING","LIGHTPROBE_SH"]],[["DIRECTIONAL","SHADOWS_SCREEN"]],[["DIRECTIONAL","SHADOWS_SCREEN","LIGHTPROBE_SH"]],[["DIRECTIONAL","DYNAMICLIGHTMAP_ON","SHADOWS_SCREEN"]],[["DIRECTIONAL","SHADOWS_SCREEN","LIGHTMAP_SHADOW_MIXING","LIGHTPROBE_SH"]],[["DIRECTIONAL","DYNAMICLIGHTMAP_ON","SHADOWS_SCREEN","LIGHTMAP_SHADOW_MIXING"]],[["DIRECTIONAL","SHADOWS_SCREEN","SHADOWS_SHADOWMASK","LIGHTPROBE_SH"]],[["DIRECTIONAL","DYNAMICLIGHTMAP_ON","SHADOWS_SCREEN","SHADOWS_SHADOWMASK"]],[["DIRECTIONAL","SHADOWS_SCREEN","SHADOWS_SHADOWMASK","LIGHTMAP_SHADOW_MIXING","LIGHTPROBE_SH"]],[["DIRECTIONAL","DYNAMICLIGHTMAP_ON","SHADOWS_SCREEN","SHADOWS_SHADOWMASK","LIGHTMAP_SHADOW_MIXING"]],[["DIRECTIONAL","LIGHTMAP_ON","SHADOWS_SCREEN"]],[["DIRECTIONAL","LIGHTMAP_ON","DYNAMICLIGHTMAP_ON","SHADOWS_SCREEN"]],[["DIRECTIONAL","LIGHTMAP_ON","SHADOWS_SCREEN","LIGHTPROBE_SH"]],[["DIRECTIONAL","LIGHTMAP_ON","SHADOWS_SCREEN","LIGHTMAP_SHADOW_MIXING"]],[["DIRECTIONAL","LIGHTMAP_ON","DYNAMICLIGHTMAP_ON","SHADOWS_SCREEN","LIGHTMAP_SHADOW_MIXING"]],[["DIRECTIONAL","LIGHTMAP_ON","SHADOWS_SCREEN","LIGHTMAP_SHADOW_MIXING","LIGHTPROBE_SH"]],[["DIRECTIONAL","LIGHTMAP_ON","SHADOWS_SCREEN","SHADOWS_SHADOWMASK"]],[["DIRECTIONAL","LIGHTMAP_ON","DYNAMICLIGHTMAP_ON","SHADOWS_SCREEN","SHADOWS_SHADOWMASK"]],[["DIRECTIONAL","LIGHTMAP_ON","SHADOWS_SCREEN","SHADOWS_SHADOWMASK","LIGHTPROBE_SH"]],[["DIRECTIONAL","LIGHTMAP_ON","SHADOWS_SCREEN","SHADOWS_SHADOWMASK","LIGHTMAP_SHADOW_MIXING"]],[["DIRECTIONAL","LIGHTMAP_ON","DYNAMICLIGHTMAP_ON","SHADOWS_SCREEN","SHADOWS_SHADOWMASK","LIGHTMAP_SHADOW_MIXING"]],[["DIRECTIONAL","LIGHTMAP_ON","SHADOWS_SCREEN","SHADOWS_SHADOWMASK","LIGHTMAP_SHADOW_MIXING","LIGHTPROBE_SH"]],[["DIRECTIONAL","DIRLIGHTMAP_COMBINED","DYNAMICLIGHTMAP_ON","SHADOWS_SCREEN"]],[["DIRECTIONAL","LIGHTMAP_ON","DIRLIGHTMAP_COMBINED","SHADOWS_SCREEN"]],[["DIRECTIONAL","LIGHTMAP_ON","DIRLIGHTMAP_COMBINED","SHADOWS_SCREEN","LIGHTPROBE_SH"]],[["DIRECTIONAL","LIGHTMAP_ON","DIRLIGHTMAP_COMBINED","DYNAMICLIGHTMAP_ON","SHADOWS_SCREEN"]],[["DIRECTIONAL","LIGHTMAP_ON","DIRLIGHTMAP_COMBINED","SHADOWS_SCREEN","LIGHTMAP_SHADOW_MIXING"]],[["DIRECTIONAL","LIGHTMAP_ON","DIRLIGHTMAP_COMBINED","SHADOWS_SCREEN","LIGHTMAP_SHADOW_MIXING","LIGHTPROBE_SH"]],[["DIRECTIONAL","LIGHTMAP_ON","DIRLIGHTMAP_COMBINED","DYNAMICLIGHTMAP_ON","SHADOWS_SCREEN","LIGHTMAP_SHADOW_MIXING"]],[["DIRECTIONAL","LIGHTMAP_ON","DIRLIGHTMAP_COMBINED","SHADOWS_SCREEN","SHADOWS_SHADOWMASK"]],[["DIRECTIONAL","LIGHTMAP_ON","DIRLIGHTMAP_COMBINED","SHADOWS_SCREEN","SHADOWS_SHADOWMASK","LIGHTPROBE_SH"]],[["DIRECTIONAL","LIGHTMAP_ON","DIRLIGHTMAP_COMBINED","DYNAMICLIGHTMAP_ON","SHADOWS_SCREEN","SHADOWS_SHADOWMASK"]],[["DIRECTIONAL","LIGHTMAP_ON","DIRLIGHTMAP_COMBINED","SHADOWS_SCREEN","SHADOWS_SHADOWMASK","LIGHTMAP_SHADOW_MIXING"]],[["DIRECTIONAL","LIGHTMAP_ON","DIRLIGHTMAP_COMBINED","SHADOWS_SCREEN","SHADOWS_SHADOWMASK","LIGHTMAP_SHADOW_MIXING","LIGHTPROBE_SH"]],[["DIRECTIONAL","LIGHTMAP_ON","DIRLIGHTMAP_COMBINED","DYNAMICLIGHTMAP_ON","SHADOWS_SCREEN","SHADOWS_SHADOWMASK","LIGHTMAP_SHADOW_MIXING"]],[["DIRECTIONAL","VERTEXLIGHT_ON"]],[["DIRECTIONAL","VERTEXLIGHT_ON","LIGHTPROBE_SH"]],[["DIRECTIONAL","VERTEXLIGHT_ON","DYNAMICLIGHTMAP_ON"]],[["DIRECTIONAL","VERTEXLIGHT_ON","DIRLIGHTMAP_COMBINED","DYNAMICLIGHTMAP_ON"]],[["DIRECTIONAL","VERTEXLIGHT_ON","SHADOWS_SCREEN"]],[["DIRECTIONAL","VERTEXLIGHT_ON","SHADOWS_SCREEN","LIGHTPROBE_SH"]],[["DIRECTIONAL","VERTEXLIGHT_ON","DYNAMICLIGHTMAP_ON","SHADOWS_SCREEN"]],[["DIRECTIONAL","VERTEXLIGHT_ON","DIRLIGHTMAP_COMBINED","DYNAMICLIGHTMAP_ON","SHADOWS_SCREEN"]],[["DIRECTIONAL","VERTEXLIGHT_ON","SHADOWS_SCREEN","LIGHTMAP_SHADOW_MIXING"]],[["DIRECTIONAL","VERTEXLIGHT_ON","SHADOWS_SCREEN","LIGHTMAP_SHADOW_MIXING","LIGHTPROBE_SH"]],[["DIRECTIONAL","VERTEXLIGHT_ON","DYNAMICLIGHTMAP_ON","SHADOWS_SCREEN","LIGHTMAP_SHADOW_MIXING"]],[["DIRECTIONAL","VERTEXLIGHT_ON","DIRLIGHTMAP_COMBINED","DYNAMICLIGHTMAP_ON","SHADOWS_SCREEN","LIGHTMAP_SHADOW_MIXING"]],[["DIRECTIONAL","VERTEXLIGHT_ON","SHADOWS_SCREEN","SHADOWS_SHADOWMASK"]],[["DIRECTIONAL","VERTEXLIGHT_ON","SHADOWS_SCREEN","SHADOWS_SHADOWMASK","LIGHTPROBE_SH"]],[["DIRECTIONAL","VERTEXLIGHT_ON","DYNAMICLIGHTMAP_ON","SHADOWS_SCREEN","SHADOWS_SHADOWMASK"]],[["DIRECTIONAL","VERTEXLIGHT_ON","DIRLIGHTMAP_COMBINED","DYNAMICLIGHTMAP_ON","SHADOWS_SCREEN","SHADOWS_SHADOWMASK"]],[["DIRECTIONAL","VERTEXLIGHT_ON","SHADOWS_SCREEN","SHADOWS_SHADOWMASK","LIGHTMAP_SHADOW_MIXING"]],[["DIRECTIONAL","VERTEXLIGHT_ON","SHADOWS_SCREEN","SHADOWS_SHADOWMASK","LIGHTMAP_SHADOW_MIXING","LIGHTPROBE_SH"]],[["DIRECTIONAL","VERTEXLIGHT_ON","DYNAMICLIGHTMAP_ON","SHADOWS_SCREEN","SHADOWS_SHADOWMASK","LIGHTMAP_SHADOW_MIXING"]],[["DIRECTIONAL","VERTEXLIGHT_ON","DIRLIGHTMAP_COMBINED","DYNAMICLIGHTMAP_ON","SHADOWS_SCREEN","SHADOWS_SHADOWMASK","LIGHTMAP_SHADOW_MIXING"]]],83,0,5,0,0,0,0,[["LIGHTMODE","FORWARDBASE"],["PerformanceChecks","False"],["RenderType","Opaque"],["SHADOWSUPPORT","true"]],[null,null],"",227,-1],["Standard",[[0,"\n#version 100\n\nuniform \tvec3 _WorldSpaceCameraPos;\nuniform \tmediump vec4 _WorldSpaceLightPos0;\nuniform \tvec4 hlslcc_mtx4x4unity_ObjectToWorld[4];\nuniform \tvec4 hlslcc_mtx4x4unity_WorldToObject[4];\nuniform \tvec4 hlslcc_mtx4x4unity_MatrixVP[4];\nuniform \tvec4 _MainTex_ST;\nuniform \tvec4 _DetailAlbedoMap_ST;\nuniform \tmediump float _UVSec;\nattribute highp vec4 in_POSITION0;\nattribute mediump vec3 in_NORMAL0;\nattribute highp vec2 in_TEXCOORD0;\nattribute highp vec2 in_TEXCOORD1;\nvarying highp vec4 vs_TEXCOORD0;\nvarying highp vec4 vs_TEXCOORD1;\nvarying highp vec4 vs_TEXCOORD2;\nvarying highp vec4 vs_TEXCOORD3;\nvarying highp vec4 vs_TEXCOORD4;\nvarying highp vec3 vs_TEXCOORD5;\nvarying highp vec4 vs_TEXCOORD7;\nvec4 u_xlat0;\nbool u_xlatb0;\nvec4 u_xlat1;\nfloat u_xlat6;\nvoid main()\n{\n    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];\n    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;\n    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;\n    u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];\n    u_xlat1 = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];\n    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat0.xxxx + u_xlat1;\n    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat0.zzzz + u_xlat1;\n    gl_Position = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat0.wwww + u_xlat1;\n    u_xlatb0 = _UVSec==0.0;\n    u_xlat0.xy = (bool(u_xlatb0)) ? in_TEXCOORD0.xy : in_TEXCOORD1.xy;\n    vs_TEXCOORD0.zw = u_xlat0.xy * _DetailAlbedoMap_ST.xy + _DetailAlbedoMap_ST.zw;\n    vs_TEXCOORD0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;\n    u_xlat0.xyz = in_POSITION0.yyy * hlslcc_mtx4x4unity_ObjectToWorld[1].xyz;\n    u_xlat0.xyz = hlslcc_mtx4x4unity_ObjectToWorld[0].xyz * in_POSITION0.xxx + u_xlat0.xyz;\n    u_xlat0.xyz = hlslcc_mtx4x4unity_ObjectToWorld[2].xyz * in_POSITION0.zzz + u_xlat0.xyz;\n    u_xlat0.xyz = hlslcc_mtx4x4unity_ObjectToWorld[3].xyz * in_POSITION0.www + u_xlat0.xyz;\n    vs_TEXCOORD1.xyz = u_xlat0.xyz + (-_WorldSpaceCameraPos.xyz);\n    vs_TEXCOORD1.w = 0.0;\n    u_xlat1.xyz = (-u_xlat0.xyz) * _WorldSpaceLightPos0.www + _WorldSpaceLightPos0.xyz;\n    vs_TEXCOORD5.xyz = u_xlat0.xyz;\n    u_xlat1.w = 0.0;\n    vs_TEXCOORD2 = u_xlat1.wwwx;\n    vs_TEXCOORD3 = u_xlat1.wwwy;\n    vs_TEXCOORD4.w = u_xlat1.z;\n    u_xlat0.x = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[0].xyz);\n    u_xlat0.y = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[1].xyz);\n    u_xlat0.z = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[2].xyz);\n    u_xlat6 = dot(u_xlat0.xyz, u_xlat0.xyz);\n    u_xlat6 = inversesqrt(u_xlat6);\n    vs_TEXCOORD4.xyz = vec3(u_xlat6) * u_xlat0.xyz;\n    vs_TEXCOORD7 = vec4(0.0, 0.0, 0.0, 0.0);\n    return;\n}\n\n","\n#version 100\n\n#ifdef GL_FRAGMENT_PRECISION_HIGH\n    precision highp float;\n#else\n    precision mediump float;\n#endif\nprecision highp int;\nuniform \tmediump vec4 _LightColor0;\nuniform \tmediump vec4 _Color;\nuniform \tmediump float _Metallic;\nuniform \tfloat _Glossiness;\nuniform lowp sampler2D _MainTex;\nvarying highp vec4 vs_TEXCOORD0;\nvarying highp vec4 vs_TEXCOORD1;\nvarying highp vec4 vs_TEXCOORD2;\nvarying highp vec4 vs_TEXCOORD3;\nvarying highp vec4 vs_TEXCOORD4;\n#define SV_Target0 gl_FragData[0]\nvec3 u_xlat0;\nvec3 u_xlat1;\nlowp vec3 u_xlat10_1;\nvec3 u_xlat2;\nvec3 u_xlat3;\nmediump vec3 u_xlat16_4;\nmediump vec3 u_xlat16_5;\nfloat u_xlat6;\nfloat u_xlat7;\nmediump vec3 u_xlat16_10;\nmediump vec3 u_xlat16_11;\nfloat u_xlat12;\nfloat u_xlat13;\nmediump float u_xlat16_16;\nfloat u_xlat18;\nfloat u_xlat19;\nbool u_xlatb19;\nmediump float u_xlat16_22;\nvoid main()\n{\n    u_xlat0.x = dot(vs_TEXCOORD4.xyz, vs_TEXCOORD4.xyz);\n    u_xlat0.x = inversesqrt(u_xlat0.x);\n    u_xlat0.xyz = u_xlat0.xxx * vs_TEXCOORD4.xyz;\n    u_xlat18 = dot(vs_TEXCOORD1.xyz, vs_TEXCOORD1.xyz);\n    u_xlat18 = inversesqrt(u_xlat18);\n    u_xlat1.x = vs_TEXCOORD2.w;\n    u_xlat1.y = vs_TEXCOORD3.w;\n    u_xlat1.z = vs_TEXCOORD4.w;\n    u_xlat2.xyz = (-vs_TEXCOORD1.xyz) * vec3(u_xlat18) + u_xlat1.xyz;\n    u_xlat3.xyz = vec3(u_xlat18) * vs_TEXCOORD1.xyz;\n    u_xlat18 = dot(u_xlat0.xyz, (-u_xlat3.xyz));\n    u_xlat19 = dot(u_xlat2.xyz, u_xlat2.xyz);\n    u_xlat19 = max(u_xlat19, 0.00100000005);\n    u_xlat19 = inversesqrt(u_xlat19);\n    u_xlat2.xyz = vec3(u_xlat19) * u_xlat2.xyz;\n    u_xlat19 = dot(u_xlat0.xyz, u_xlat2.xyz);\n    u_xlat19 = clamp(u_xlat19, 0.0, 1.0);\n    u_xlat0.x = dot(u_xlat0.xyz, u_xlat1.xyz);\n    u_xlat0.x = clamp(u_xlat0.x, 0.0, 1.0);\n    u_xlat6 = dot(u_xlat1.xyz, u_xlat2.xyz);\n    u_xlat6 = clamp(u_xlat6, 0.0, 1.0);\n    u_xlat12 = (-_Glossiness) + 1.0;\n    u_xlat1.x = u_xlat12 * u_xlat12;\n    u_xlat1.x = max(u_xlat1.x, 0.00200000009);\n    u_xlat7 = u_xlat1.x * u_xlat1.x;\n    u_xlat13 = u_xlat19 * u_xlat7 + (-u_xlat19);\n    u_xlat13 = u_xlat13 * u_xlat19 + 1.0;\n    u_xlat13 = u_xlat13 * u_xlat13 + 1.00000001e-07;\n    u_xlat7 = u_xlat7 * 0.318309873;\n    u_xlat7 = u_xlat7 / u_xlat13;\n    u_xlat13 = (-u_xlat1.x) + 1.0;\n    u_xlat19 = abs(u_xlat18) * u_xlat13 + u_xlat1.x;\n    u_xlat1.x = u_xlat0.x * u_xlat13 + u_xlat1.x;\n    u_xlat1.x = abs(u_xlat18) * u_xlat1.x;\n    u_xlat16_4.x = -abs(u_xlat18) + 1.0;\n    u_xlat18 = u_xlat0.x * u_xlat19 + u_xlat1.x;\n    u_xlat18 = u_xlat18 + 9.99999975e-06;\n    u_xlat18 = 0.5 / u_xlat18;\n    u_xlat18 = u_xlat7 * u_xlat18;\n    u_xlat18 = u_xlat18 * 3.14159274;\n    u_xlat18 = max(u_xlat18, 9.99999975e-05);\n    u_xlat18 = sqrt(u_xlat18);\n    u_xlat18 = u_xlat0.x * u_xlat18;\n    u_xlat10_1.xyz = texture2D(_MainTex, vs_TEXCOORD0.xy).xyz;\n    u_xlat16_10.xyz = _Color.xyz * u_xlat10_1.xyz + vec3(-0.220916301, -0.220916301, -0.220916301);\n    u_xlat1.xyz = u_xlat10_1.xyz * _Color.xyz;\n    u_xlat16_10.xyz = vec3(vec3(_Metallic, _Metallic, _Metallic)) * u_xlat16_10.xyz + vec3(0.220916301, 0.220916301, 0.220916301);\n    u_xlat16_5.x = dot(u_xlat16_10.xyz, u_xlat16_10.xyz);\n    u_xlatb19 = u_xlat16_5.x!=0.0;\n    u_xlat19 = u_xlatb19 ? 1.0 : float(0.0);\n    u_xlat18 = u_xlat18 * u_xlat19;\n    u_xlat2.xyz = vec3(u_xlat18) * _LightColor0.xyz;\n    u_xlat16_5.x = (-u_xlat6) + 1.0;\n    u_xlat16_11.x = u_xlat16_5.x * u_xlat16_5.x;\n    u_xlat16_11.x = u_xlat16_11.x * u_xlat16_11.x;\n    u_xlat16_5.x = u_xlat16_5.x * u_xlat16_11.x;\n    u_xlat16_11.xyz = (-u_xlat16_10.xyz) + vec3(1.0, 1.0, 1.0);\n    u_xlat16_10.xyz = u_xlat16_11.xyz * u_xlat16_5.xxx + u_xlat16_10.xyz;\n    u_xlat2.xyz = u_xlat2.xyz * u_xlat16_10.xyz;\n    u_xlat16_10.x = u_xlat16_4.x * u_xlat16_4.x;\n    u_xlat16_10.x = u_xlat16_10.x * u_xlat16_10.x;\n    u_xlat16_4.x = u_xlat16_4.x * u_xlat16_10.x;\n    u_xlat16_10.x = u_xlat6 + u_xlat6;\n    u_xlat16_10.x = u_xlat6 * u_xlat16_10.x;\n    u_xlat16_10.x = u_xlat16_10.x * u_xlat12 + -0.5;\n    u_xlat16_4.x = u_xlat16_10.x * u_xlat16_4.x + 1.0;\n    u_xlat16_16 = (-u_xlat0.x) + 1.0;\n    u_xlat16_22 = u_xlat16_16 * u_xlat16_16;\n    u_xlat16_22 = u_xlat16_22 * u_xlat16_22;\n    u_xlat16_16 = u_xlat16_16 * u_xlat16_22;\n    u_xlat16_10.x = u_xlat16_10.x * u_xlat16_16 + 1.0;\n    u_xlat16_4.x = u_xlat16_4.x * u_xlat16_10.x;\n    u_xlat0.x = u_xlat0.x * u_xlat16_4.x;\n    u_xlat16_4.xyz = u_xlat0.xxx * _LightColor0.xyz;\n    u_xlat16_22 = (-_Metallic) * 0.779083729 + 0.779083729;\n    u_xlat16_5.xyz = u_xlat1.xyz * vec3(u_xlat16_22);\n    u_xlat0.xyz = u_xlat16_5.xyz * u_xlat16_4.xyz + u_xlat2.xyz;\n    SV_Target0.xyz = u_xlat0.xyz;\n    SV_Target0.w = 1.0;\n    return;\n}\n\n",0,0,1,1,0,["DIRECTIONAL"],[["LIGHTMODE","FORWARDADD"],["PerformanceChecks","False"],["RenderType","Opaque"],["SHADOWSUPPORT","true"]]]],["DIRECTIONAL","DIRECTIONAL_COOKIE","FOG_EXP","FOG_EXP2","FOG_LINEAR","LIGHTMAP_SHADOW_MIXING","POINT","POINT_COOKIE","SHADOWS_CUBE","SHADOWS_DEPTH","SHADOWS_SCREEN","SHADOWS_SHADOWMASK","SHADOWS_SOFT","SPOT","STEREO_CUBEMAP_RENDER_ON","STEREO_INSTANCING_ON","STEREO_MULTIVIEW_ON","UNITY_SINGLE_PASS_STEREO","_ALPHABLEND_ON","_ALPHAPREMULTIPLY_ON","_ALPHATEST_ON","_DETAIL_MULX2","_METALLICGLOSSMAP","_NORMALMAP","_PARALLAXMAP","_SMOOTHNESS_TEXTURE_ALBEDO_CHANNEL_A","_SPECULARHIGHLIGHTS_OFF","__","_"],[[["__","FOG_LINEAR","FOG_EXP","FOG_EXP2"]],[["_","_NORMALMAP"]],[["_","_ALPHATEST_ON","_ALPHABLEND_ON","_ALPHAPREMULTIPLY_ON"]],[["_","_METALLICGLOSSMAP"]],[["_","_PARALLAXMAP"]],[["POINT"]],[["DIRECTIONAL"]],[["SPOT"]],[["POINT_COOKIE"]],[["DIRECTIONAL_COOKIE"]],[["POINT","SHADOWS_SHADOWMASK"]],[["DIRECTIONAL","SHADOWS_SHADOWMASK"]],[["SPOT","SHADOWS_SHADOWMASK"]],[["POINT_COOKIE","SHADOWS_SHADOWMASK"]],[["DIRECTIONAL_COOKIE","SHADOWS_SHADOWMASK"]],[["POINT","SHADOWS_SHADOWMASK","LIGHTMAP_SHADOW_MIXING"]],[["DIRECTIONAL","SHADOWS_SHADOWMASK","LIGHTMAP_SHADOW_MIXING"]],[["SPOT","SHADOWS_SHADOWMASK","LIGHTMAP_SHADOW_MIXING"]],[["POINT_COOKIE","SHADOWS_SHADOWMASK","LIGHTMAP_SHADOW_MIXING"]],[["DIRECTIONAL_COOKIE","SHADOWS_SHADOWMASK","LIGHTMAP_SHADOW_MIXING"]],[["SPOT","SHADOWS_DEPTH"]],[["SPOT","SHADOWS_DEPTH","SHADOWS_SOFT"]],[["SPOT","SHADOWS_DEPTH","LIGHTMAP_SHADOW_MIXING"]],[["SPOT","SHADOWS_DEPTH","SHADOWS_SOFT","LIGHTMAP_SHADOW_MIXING"]],[["SPOT","SHADOWS_DEPTH","SHADOWS_SHADOWMASK"]],[["SPOT","SHADOWS_DEPTH","SHADOWS_SOFT","SHADOWS_SHADOWMASK"]],[["SPOT","SHADOWS_DEPTH","SHADOWS_SHADOWMASK","LIGHTMAP_SHADOW_MIXING"]],[["SPOT","SHADOWS_DEPTH","SHADOWS_SOFT","SHADOWS_SHADOWMASK","LIGHTMAP_SHADOW_MIXING"]],[["DIRECTIONAL","SHADOWS_SCREEN"]],[["DIRECTIONAL_COOKIE","SHADOWS_SCREEN"]],[["DIRECTIONAL","SHADOWS_SCREEN","LIGHTMAP_SHADOW_MIXING"]],[["DIRECTIONAL_COOKIE","SHADOWS_SCREEN","LIGHTMAP_SHADOW_MIXING"]],[["DIRECTIONAL","SHADOWS_SCREEN","SHADOWS_SHADOWMASK"]],[["DIRECTIONAL_COOKIE","SHADOWS_SCREEN","SHADOWS_SHADOWMASK"]],[["DIRECTIONAL","SHADOWS_SCREEN","SHADOWS_SHADOWMASK","LIGHTMAP_SHADOW_MIXING"]],[["DIRECTIONAL_COOKIE","SHADOWS_SCREEN","SHADOWS_SHADOWMASK","LIGHTMAP_SHADOW_MIXING"]],[["POINT","SHADOWS_CUBE"]],[["POINT","SHADOWS_CUBE","SHADOWS_SOFT"]],[["POINT","SHADOWS_CUBE","LIGHTMAP_SHADOW_MIXING"]],[["POINT","SHADOWS_CUBE","SHADOWS_SOFT","LIGHTMAP_SHADOW_MIXING"]],[["POINT","SHADOWS_CUBE","SHADOWS_SHADOWMASK"]],[["POINT","SHADOWS_CUBE","SHADOWS_SOFT","SHADOWS_SHADOWMASK"]],[["POINT","SHADOWS_CUBE","SHADOWS_SHADOWMASK","LIGHTMAP_SHADOW_MIXING"]],[["POINT","SHADOWS_CUBE","SHADOWS_SOFT","SHADOWS_SHADOWMASK","LIGHTMAP_SHADOW_MIXING"]],[["POINT_COOKIE","SHADOWS_CUBE"]],[["POINT_COOKIE","SHADOWS_CUBE","SHADOWS_SOFT"]],[["POINT_COOKIE","SHADOWS_CUBE","LIGHTMAP_SHADOW_MIXING"]],[["POINT_COOKIE","SHADOWS_CUBE","SHADOWS_SOFT","LIGHTMAP_SHADOW_MIXING"]],[["POINT_COOKIE","SHADOWS_CUBE","SHADOWS_SHADOWMASK"]],[["POINT_COOKIE","SHADOWS_CUBE","SHADOWS_SOFT","SHADOWS_SHADOWMASK"]],[["POINT_COOKIE","SHADOWS_CUBE","SHADOWS_SHADOWMASK","LIGHTMAP_SHADOW_MIXING"]],[["POINT_COOKIE","SHADOWS_CUBE","SHADOWS_SOFT","SHADOWS_SHADOWMASK","LIGHTMAP_SHADOW_MIXING"]]],47,0,5,0,1,0,1,[["LIGHTMODE","FORWARDADD"],["PerformanceChecks","False"],["RenderType","Opaque"],["SHADOWSUPPORT","true"]],[null,null],"",227,-1],["Standard",[],["INSTANCING_ON","SHADOWS_CUBE","SHADOWS_DEPTH","STEREO_CUBEMAP_RENDER_ON","STEREO_INSTANCING_ON","STEREO_MULTIVIEW_ON","UNITY_SINGLE_PASS_STEREO","_ALPHABLEND_ON","_ALPHAPREMULTIPLY_ON","_ALPHATEST_ON","_METALLICGLOSSMAP","_PARALLAXMAP","_SMOOTHNESS_TEXTURE_ALBEDO_CHANNEL_A","__","_"],[[["__","INSTANCING_ON"]],[["_","_ALPHATEST_ON","_ALPHABLEND_ON","_ALPHAPREMULTIPLY_ON"]],[["_","_METALLICGLOSSMAP"]],[["_","_PARALLAXMAP"]],[["SHADOWS_DEPTH"]],[["SHADOWS_CUBE"]]],2,0,5,0,2,0,2,[["LIGHTMODE","SHADOWCASTER"],["PerformanceChecks","False"],["RenderType","Opaque"],["SHADOWSUPPORT","true"]],[null,null],"",227,-1]],[["PerformanceChecks","False"],["RenderType","Opaque"]],0],[1,[["Standard",[[0,"\n#version 100\n\nuniform \tvec3 _WorldSpaceCameraPos;\nuniform \tvec4 hlslcc_mtx4x4unity_ObjectToWorld[4];\nuniform \tvec4 hlslcc_mtx4x4unity_WorldToObject[4];\nuniform \tvec4 hlslcc_mtx4x4unity_MatrixVP[4];\nuniform \tvec4 _MainTex_ST;\nuniform \tvec4 _DetailAlbedoMap_ST;\nuniform \tmediump float _UVSec;\nattribute highp vec4 in_POSITION0;\nattribute mediump vec3 in_NORMAL0;\nattribute highp vec2 in_TEXCOORD0;\nattribute highp vec2 in_TEXCOORD1;\nvarying highp vec4 vs_TEXCOORD0;\nvarying highp vec4 vs_TEXCOORD1;\nvarying highp vec4 vs_TEXCOORD2;\nvarying highp vec4 vs_TEXCOORD3;\nvarying highp vec4 vs_TEXCOORD4;\nvarying mediump vec4 vs_TEXCOORD5;\nvarying highp vec4 vs_TEXCOORD7;\nvarying highp vec3 vs_TEXCOORD8;\nvec4 u_xlat0;\nbool u_xlatb0;\nvec4 u_xlat1;\nfloat u_xlat6;\nvoid main()\n{\n    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];\n    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;\n    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;\n    u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];\n    u_xlat1 = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];\n    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat0.xxxx + u_xlat1;\n    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat0.zzzz + u_xlat1;\n    gl_Position = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat0.wwww + u_xlat1;\n    u_xlatb0 = _UVSec==0.0;\n    u_xlat0.xy = (bool(u_xlatb0)) ? in_TEXCOORD0.xy : in_TEXCOORD1.xy;\n    vs_TEXCOORD0.zw = u_xlat0.xy * _DetailAlbedoMap_ST.xy + _DetailAlbedoMap_ST.zw;\n    vs_TEXCOORD0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;\n    u_xlat0.xyz = in_POSITION0.yyy * hlslcc_mtx4x4unity_ObjectToWorld[1].xyz;\n    u_xlat0.xyz = hlslcc_mtx4x4unity_ObjectToWorld[0].xyz * in_POSITION0.xxx + u_xlat0.xyz;\n    u_xlat0.xyz = hlslcc_mtx4x4unity_ObjectToWorld[2].xyz * in_POSITION0.zzz + u_xlat0.xyz;\n    u_xlat0.xyz = hlslcc_mtx4x4unity_ObjectToWorld[3].xyz * in_POSITION0.www + u_xlat0.xyz;\n    u_xlat1.xyz = u_xlat0.xyz + (-_WorldSpaceCameraPos.xyz);\n    vs_TEXCOORD8.xyz = u_xlat0.xyz;\n    u_xlat0.x = dot(u_xlat1.xyz, u_xlat1.xyz);\n    u_xlat0.x = inversesqrt(u_xlat0.x);\n    vs_TEXCOORD1.xyz = u_xlat0.xxx * u_xlat1.xyz;\n    vs_TEXCOORD1.w = 0.0;\n    vs_TEXCOORD2 = vec4(0.0, 0.0, 0.0, 0.0);\n    vs_TEXCOORD3 = vec4(0.0, 0.0, 0.0, 0.0);\n    u_xlat0.x = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[0].xyz);\n    u_xlat0.y = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[1].xyz);\n    u_xlat0.z = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[2].xyz);\n    u_xlat6 = dot(u_xlat0.xyz, u_xlat0.xyz);\n    u_xlat6 = inversesqrt(u_xlat6);\n    vs_TEXCOORD4.xyz = vec3(u_xlat6) * u_xlat0.xyz;\n    vs_TEXCOORD4.w = 0.0;\n    vs_TEXCOORD5 = vec4(0.0, 0.0, 0.0, 0.0);\n    vs_TEXCOORD7 = vec4(0.0, 0.0, 0.0, 0.0);\n    return;\n}\n\n","\n#version 100\n#ifdef GL_EXT_shader_texture_lod\n#extension GL_EXT_shader_texture_lod : enable\n#endif\n#if !defined(GL_EXT_shader_texture_lod)\n#define texture1DLodEXT texture1D\n#define texture2DLodEXT texture2D\n#define texture2DProjLodEXT texture2DProj\n#define texture3DLodEXT texture3D\n#define textureCubeLodEXT textureCube\n#endif\n\n#ifdef GL_FRAGMENT_PRECISION_HIGH\n    precision highp float;\n#else\n    precision mediump float;\n#endif\nprecision highp int;\nuniform \tmediump vec4 _WorldSpaceLightPos0;\nuniform \tmediump vec4 unity_SpecCube0_HDR;\nuniform \tmediump vec4 _LightColor0;\nuniform \tmediump vec4 _Color;\nuniform \tmediump float _Metallic;\nuniform \tfloat _Glossiness;\nuniform lowp sampler2D _MainTex;\nuniform lowp sampler2D _OcclusionMap;\nuniform highp sampler2D unity_NHxRoughness;\nuniform lowp samplerCube unity_SpecCube0;\nvarying highp vec4 vs_TEXCOORD0;\nvarying highp vec4 vs_TEXCOORD1;\nvarying highp vec4 vs_TEXCOORD4;\n#define SV_Target0 gl_FragData[0]\nvec4 u_xlat0;\nlowp float u_xlat10_0;\nmediump float u_xlat16_1;\nlowp vec4 u_xlat10_1;\nvec3 u_xlat2;\nlowp vec3 u_xlat10_2;\nmediump vec3 u_xlat16_3;\nvec3 u_xlat4;\nmediump vec3 u_xlat16_5;\nmediump vec3 u_xlat16_6;\nmediump vec3 u_xlat16_7;\nfloat u_xlat8;\nmediump vec3 u_xlat16_9;\nfloat u_xlat16;\nmediump float u_xlat16_27;\nmediump float u_xlat16_29;\nvoid main()\n{\n    u_xlat0.xw = (-vec2(_Glossiness)) + vec2(1.0, 1.0);\n    u_xlat16_1 = (-u_xlat0.x) * 0.699999988 + 1.70000005;\n    u_xlat16_1 = u_xlat0.x * u_xlat16_1;\n    u_xlat16_1 = u_xlat16_1 * 6.0;\n    u_xlat0.x = dot(vs_TEXCOORD4.xyz, vs_TEXCOORD4.xyz);\n    u_xlat0.x = inversesqrt(u_xlat0.x);\n    u_xlat2.xyz = u_xlat0.xxx * vs_TEXCOORD4.xyz;\n    u_xlat16_9.x = dot(vs_TEXCOORD1.xyz, u_xlat2.xyz);\n    u_xlat16_9.x = u_xlat16_9.x + u_xlat16_9.x;\n    u_xlat16_9.xyz = u_xlat2.xyz * (-u_xlat16_9.xxx) + vs_TEXCOORD1.xyz;\n    u_xlat10_1 = textureCubeLodEXT(unity_SpecCube0, u_xlat16_9.xyz, u_xlat16_1);\n    u_xlat16_3.x = u_xlat10_1.w + -1.0;\n    u_xlat16_3.x = unity_SpecCube0_HDR.w * u_xlat16_3.x + 1.0;\n    u_xlat16_3.x = u_xlat16_3.x * unity_SpecCube0_HDR.x;\n    u_xlat16_3.xyz = u_xlat10_1.xyz * u_xlat16_3.xxx;\n    u_xlat10_0 = texture2D(_OcclusionMap, vs_TEXCOORD0.xy).y;\n    u_xlat16_3.xyz = vec3(u_xlat10_0) * u_xlat16_3.xyz;\n    u_xlat0.x = dot((-vs_TEXCOORD1.xyz), u_xlat2.xyz);\n    u_xlat16 = u_xlat0.x;\n    u_xlat16 = clamp(u_xlat16, 0.0, 1.0);\n    u_xlat0.x = u_xlat0.x + u_xlat0.x;\n    u_xlat4.xyz = u_xlat2.xyz * (-u_xlat0.xxx) + (-vs_TEXCOORD1.xyz);\n    u_xlat0.x = dot(u_xlat2.xyz, _WorldSpaceLightPos0.xyz);\n    u_xlat0.x = clamp(u_xlat0.x, 0.0, 1.0);\n    u_xlat16_5.xyz = u_xlat0.xxx * _LightColor0.xyz;\n    u_xlat0.x = dot(u_xlat4.xyz, _WorldSpaceLightPos0.xyz);\n    u_xlat0.x = u_xlat0.x * u_xlat0.x;\n    u_xlat0.y = u_xlat0.x * u_xlat0.x;\n    u_xlat0.x = texture2D(unity_NHxRoughness, u_xlat0.yw).x;\n    u_xlat0.x = u_xlat0.x * 16.0;\n    u_xlat16_27 = (-u_xlat16) + 1.0;\n    u_xlat8 = u_xlat16_27 * u_xlat16_27;\n    u_xlat8 = u_xlat16_27 * u_xlat8;\n    u_xlat8 = u_xlat16_27 * u_xlat8;\n    u_xlat16_27 = (-_Metallic) * 0.779083729 + 0.779083729;\n    u_xlat16_29 = (-u_xlat16_27) + 1.0;\n    u_xlat16_29 = u_xlat16_29 + _Glossiness;\n    u_xlat16_29 = clamp(u_xlat16_29, 0.0, 1.0);\n    u_xlat10_2.xyz = texture2D(_MainTex, vs_TEXCOORD0.xy).xyz;\n    u_xlat16_6.xyz = _Color.xyz * u_xlat10_2.xyz + vec3(-0.220916301, -0.220916301, -0.220916301);\n    u_xlat2.xyz = u_xlat10_2.xyz * _Color.xyz;\n    u_xlat16_6.xyz = vec3(vec3(_Metallic, _Metallic, _Metallic)) * u_xlat16_6.xyz + vec3(0.220916301, 0.220916301, 0.220916301);\n    u_xlat16_7.xyz = vec3(u_xlat16_29) + (-u_xlat16_6.xyz);\n    u_xlat16_7.xyz = vec3(u_xlat8) * u_xlat16_7.xyz + u_xlat16_6.xyz;\n    u_xlat16_6.xyz = u_xlat0.xxx * u_xlat16_6.xyz;\n    u_xlat16_6.xyz = u_xlat2.xyz * vec3(u_xlat16_27) + u_xlat16_6.xyz;\n    u_xlat16_3.xyz = u_xlat16_3.xyz * u_xlat16_7.xyz;\n    SV_Target0.xyz = u_xlat16_6.xyz * u_xlat16_5.xyz + u_xlat16_3.xyz;\n    SV_Target0.w = 1.0;\n    return;\n}\n\n",0,0,0,0,1,["DIRECTIONAL"],[["LIGHTMODE","FORWARDBASE"],["PerformanceChecks","False"],["RenderType","Opaque"],["SHADOWSUPPORT","true"]]],[0,"\n#version 100\n\nuniform \tvec3 _WorldSpaceCameraPos;\nuniform \tmediump vec4 unity_SHAr;\nuniform \tmediump vec4 unity_SHAg;\nuniform \tmediump vec4 unity_SHAb;\nuniform \tmediump vec4 unity_SHBr;\nuniform \tmediump vec4 unity_SHBg;\nuniform \tmediump vec4 unity_SHBb;\nuniform \tmediump vec4 unity_SHC;\nuniform \tvec4 hlslcc_mtx4x4unity_ObjectToWorld[4];\nuniform \tvec4 hlslcc_mtx4x4unity_WorldToObject[4];\nuniform \tvec4 hlslcc_mtx4x4unity_MatrixVP[4];\nuniform \tvec4 _MainTex_ST;\nuniform \tvec4 _DetailAlbedoMap_ST;\nuniform \tmediump float _UVSec;\nattribute highp vec4 in_POSITION0;\nattribute mediump vec3 in_NORMAL0;\nattribute highp vec2 in_TEXCOORD0;\nattribute highp vec2 in_TEXCOORD1;\nvarying highp vec4 vs_TEXCOORD0;\nvarying highp vec4 vs_TEXCOORD1;\nvarying highp vec4 vs_TEXCOORD2;\nvarying highp vec4 vs_TEXCOORD3;\nvarying highp vec4 vs_TEXCOORD4;\nvarying mediump vec4 vs_TEXCOORD5;\nvarying highp vec4 vs_TEXCOORD7;\nvarying highp vec3 vs_TEXCOORD8;\nvec4 u_xlat0;\nbool u_xlatb0;\nvec4 u_xlat1;\nmediump vec4 u_xlat16_1;\nmediump vec3 u_xlat16_2;\nmediump vec3 u_xlat16_3;\nfloat u_xlat12;\nvoid main()\n{\n    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];\n    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;\n    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;\n    u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];\n    u_xlat1 = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];\n    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat0.xxxx + u_xlat1;\n    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat0.zzzz + u_xlat1;\n    gl_Position = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat0.wwww + u_xlat1;\n    u_xlatb0 = _UVSec==0.0;\n    u_xlat0.xy = (bool(u_xlatb0)) ? in_TEXCOORD0.xy : in_TEXCOORD1.xy;\n    vs_TEXCOORD0.zw = u_xlat0.xy * _DetailAlbedoMap_ST.xy + _DetailAlbedoMap_ST.zw;\n    vs_TEXCOORD0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;\n    u_xlat0.xyz = in_POSITION0.yyy * hlslcc_mtx4x4unity_ObjectToWorld[1].xyz;\n    u_xlat0.xyz = hlslcc_mtx4x4unity_ObjectToWorld[0].xyz * in_POSITION0.xxx + u_xlat0.xyz;\n    u_xlat0.xyz = hlslcc_mtx4x4unity_ObjectToWorld[2].xyz * in_POSITION0.zzz + u_xlat0.xyz;\n    u_xlat0.xyz = hlslcc_mtx4x4unity_ObjectToWorld[3].xyz * in_POSITION0.www + u_xlat0.xyz;\n    u_xlat1.xyz = u_xlat0.xyz + (-_WorldSpaceCameraPos.xyz);\n    vs_TEXCOORD8.xyz = u_xlat0.xyz;\n    u_xlat0.x = dot(u_xlat1.xyz, u_xlat1.xyz);\n    u_xlat0.x = inversesqrt(u_xlat0.x);\n    vs_TEXCOORD1.xyz = u_xlat0.xxx * u_xlat1.xyz;\n    vs_TEXCOORD1.w = 0.0;\n    vs_TEXCOORD2 = vec4(0.0, 0.0, 0.0, 0.0);\n    vs_TEXCOORD3 = vec4(0.0, 0.0, 0.0, 0.0);\n    vs_TEXCOORD4.w = 0.0;\n    u_xlat0.x = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[0].xyz);\n    u_xlat0.y = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[1].xyz);\n    u_xlat0.z = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[2].xyz);\n    u_xlat12 = dot(u_xlat0.xyz, u_xlat0.xyz);\n    u_xlat12 = inversesqrt(u_xlat12);\n    u_xlat0.xyz = vec3(u_xlat12) * u_xlat0.xyz;\n    vs_TEXCOORD4.xyz = u_xlat0.xyz;\n    u_xlat16_2.x = u_xlat0.y * u_xlat0.y;\n    u_xlat16_2.x = u_xlat0.x * u_xlat0.x + (-u_xlat16_2.x);\n    u_xlat16_1 = u_xlat0.yzzx * u_xlat0.xyzz;\n    u_xlat16_3.x = dot(unity_SHBr, u_xlat16_1);\n    u_xlat16_3.y = dot(unity_SHBg, u_xlat16_1);\n    u_xlat16_3.z = dot(unity_SHBb, u_xlat16_1);\n    u_xlat16_2.xyz = unity_SHC.xyz * u_xlat16_2.xxx + u_xlat16_3.xyz;\n    u_xlat0.w = 1.0;\n    u_xlat16_3.x = dot(unity_SHAr, u_xlat0);\n    u_xlat16_3.y = dot(unity_SHAg, u_xlat0);\n    u_xlat16_3.z = dot(unity_SHAb, u_xlat0);\n    u_xlat16_2.xyz = u_xlat16_2.xyz + u_xlat16_3.xyz;\n    u_xlat16_2.xyz = max(u_xlat16_2.xyz, vec3(0.0, 0.0, 0.0));\n    u_xlat0.xyz = log2(u_xlat16_2.xyz);\n    u_xlat0.xyz = u_xlat0.xyz * vec3(0.416666657, 0.416666657, 0.416666657);\n    u_xlat0.xyz = exp2(u_xlat0.xyz);\n    u_xlat0.xyz = u_xlat0.xyz * vec3(1.05499995, 1.05499995, 1.05499995) + vec3(-0.0549999997, -0.0549999997, -0.0549999997);\n    u_xlat0.xyz = max(u_xlat0.xyz, vec3(0.0, 0.0, 0.0));\n    vs_TEXCOORD5.xyz = u_xlat0.xyz;\n    vs_TEXCOORD5.w = 0.0;\n    vs_TEXCOORD7 = vec4(0.0, 0.0, 0.0, 0.0);\n    return;\n}\n\n","\n#version 100\n#ifdef GL_EXT_shader_texture_lod\n#extension GL_EXT_shader_texture_lod : enable\n#endif\n#if !defined(GL_EXT_shader_texture_lod)\n#define texture1DLodEXT texture1D\n#define texture2DLodEXT texture2D\n#define texture2DProjLodEXT texture2DProj\n#define texture3DLodEXT texture3D\n#define textureCubeLodEXT textureCube\n#endif\n\n#ifdef GL_FRAGMENT_PRECISION_HIGH\n    precision highp float;\n#else\n    precision mediump float;\n#endif\nprecision highp int;\nuniform \tmediump vec4 _WorldSpaceLightPos0;\nuniform \tmediump vec4 unity_SpecCube0_HDR;\nuniform \tmediump vec4 _LightColor0;\nuniform \tmediump vec4 _Color;\nuniform \tmediump float _Metallic;\nuniform \tfloat _Glossiness;\nuniform lowp sampler2D _MainTex;\nuniform lowp sampler2D _OcclusionMap;\nuniform highp sampler2D unity_NHxRoughness;\nuniform lowp samplerCube unity_SpecCube0;\nvarying highp vec4 vs_TEXCOORD0;\nvarying highp vec4 vs_TEXCOORD1;\nvarying highp vec4 vs_TEXCOORD4;\nvarying mediump vec4 vs_TEXCOORD5;\n#define SV_Target0 gl_FragData[0]\nvec4 u_xlat0;\nlowp float u_xlat10_0;\nmediump float u_xlat16_1;\nlowp vec4 u_xlat10_1;\nvec3 u_xlat2;\nlowp vec3 u_xlat10_2;\nmediump vec3 u_xlat16_3;\nmediump vec3 u_xlat16_4;\nvec3 u_xlat5;\nmediump vec3 u_xlat16_6;\nmediump vec3 u_xlat16_7;\nmediump vec3 u_xlat16_8;\nmediump vec3 u_xlat16_9;\nfloat u_xlat10;\nmediump vec3 u_xlat16_11;\nfloat u_xlat20;\nmediump float u_xlat16_33;\nmediump float u_xlat16_34;\nvoid main()\n{\n    u_xlat0.xw = (-vec2(_Glossiness)) + vec2(1.0, 1.0);\n    u_xlat16_1 = (-u_xlat0.x) * 0.699999988 + 1.70000005;\n    u_xlat16_1 = u_xlat0.x * u_xlat16_1;\n    u_xlat16_1 = u_xlat16_1 * 6.0;\n    u_xlat0.x = dot(vs_TEXCOORD4.xyz, vs_TEXCOORD4.xyz);\n    u_xlat0.x = inversesqrt(u_xlat0.x);\n    u_xlat2.xyz = u_xlat0.xxx * vs_TEXCOORD4.xyz;\n    u_xlat16_11.x = dot(vs_TEXCOORD1.xyz, u_xlat2.xyz);\n    u_xlat16_11.x = u_xlat16_11.x + u_xlat16_11.x;\n    u_xlat16_11.xyz = u_xlat2.xyz * (-u_xlat16_11.xxx) + vs_TEXCOORD1.xyz;\n    u_xlat10_1 = textureCubeLodEXT(unity_SpecCube0, u_xlat16_11.xyz, u_xlat16_1);\n    u_xlat16_3.x = u_xlat10_1.w + -1.0;\n    u_xlat16_3.x = unity_SpecCube0_HDR.w * u_xlat16_3.x + 1.0;\n    u_xlat16_3.x = u_xlat16_3.x * unity_SpecCube0_HDR.x;\n    u_xlat16_3.xyz = u_xlat10_1.xyz * u_xlat16_3.xxx;\n    u_xlat10_0 = texture2D(_OcclusionMap, vs_TEXCOORD0.xy).y;\n    u_xlat16_3.xyz = vec3(u_xlat10_0) * u_xlat16_3.xyz;\n    u_xlat16_4.xyz = vec3(u_xlat10_0) * vs_TEXCOORD5.xyz;\n    u_xlat0.x = dot((-vs_TEXCOORD1.xyz), u_xlat2.xyz);\n    u_xlat20 = u_xlat0.x;\n    u_xlat20 = clamp(u_xlat20, 0.0, 1.0);\n    u_xlat0.x = u_xlat0.x + u_xlat0.x;\n    u_xlat5.xyz = u_xlat2.xyz * (-u_xlat0.xxx) + (-vs_TEXCOORD1.xyz);\n    u_xlat0.x = dot(u_xlat2.xyz, _WorldSpaceLightPos0.xyz);\n    u_xlat0.x = clamp(u_xlat0.x, 0.0, 1.0);\n    u_xlat16_6.xyz = u_xlat0.xxx * _LightColor0.xyz;\n    u_xlat0.x = dot(u_xlat5.xyz, _WorldSpaceLightPos0.xyz);\n    u_xlat0.x = u_xlat0.x * u_xlat0.x;\n    u_xlat0.y = u_xlat0.x * u_xlat0.x;\n    u_xlat0.x = texture2D(unity_NHxRoughness, u_xlat0.yw).x;\n    u_xlat0.x = u_xlat0.x * 16.0;\n    u_xlat16_33 = (-u_xlat20) + 1.0;\n    u_xlat10 = u_xlat16_33 * u_xlat16_33;\n    u_xlat10 = u_xlat16_33 * u_xlat10;\n    u_xlat10 = u_xlat16_33 * u_xlat10;\n    u_xlat16_33 = (-_Metallic) * 0.779083729 + 0.779083729;\n    u_xlat16_34 = (-u_xlat16_33) + 1.0;\n    u_xlat16_34 = u_xlat16_34 + _Glossiness;\n    u_xlat16_34 = clamp(u_xlat16_34, 0.0, 1.0);\n    u_xlat10_2.xyz = texture2D(_MainTex, vs_TEXCOORD0.xy).xyz;\n    u_xlat16_7.xyz = _Color.xyz * u_xlat10_2.xyz + vec3(-0.220916301, -0.220916301, -0.220916301);\n    u_xlat2.xyz = u_xlat10_2.xyz * _Color.xyz;\n    u_xlat16_8.xyz = vec3(u_xlat16_33) * u_xlat2.xyz;\n    u_xlat16_7.xyz = vec3(vec3(_Metallic, _Metallic, _Metallic)) * u_xlat16_7.xyz + vec3(0.220916301, 0.220916301, 0.220916301);\n    u_xlat16_9.xyz = vec3(u_xlat16_34) + (-u_xlat16_7.xyz);\n    u_xlat16_9.xyz = vec3(u_xlat10) * u_xlat16_9.xyz + u_xlat16_7.xyz;\n    u_xlat16_7.xyz = u_xlat0.xxx * u_xlat16_7.xyz + u_xlat16_8.xyz;\n    u_xlat16_3.xyz = u_xlat16_3.xyz * u_xlat16_9.xyz;\n    u_xlat16_3.xyz = u_xlat16_4.xyz * u_xlat16_8.xyz + u_xlat16_3.xyz;\n    SV_Target0.xyz = u_xlat16_7.xyz * u_xlat16_6.xyz + u_xlat16_3.xyz;\n    SV_Target0.w = 1.0;\n    return;\n}\n\n",0,0,1,0,1,["DIRECTIONAL","LIGHTPROBE_SH"],[["LIGHTMODE","FORWARDBASE"],["PerformanceChecks","False"],["RenderType","Opaque"],["SHADOWSUPPORT","true"]]],[0,"\n#version 100\n\nuniform \tvec3 _WorldSpaceCameraPos;\nuniform \tvec4 hlslcc_mtx4x4unity_ObjectToWorld[4];\nuniform \tvec4 hlslcc_mtx4x4unity_WorldToObject[4];\nuniform \tvec4 hlslcc_mtx4x4unity_MatrixVP[4];\nuniform \tvec4 _MainTex_ST;\nuniform \tvec4 _DetailAlbedoMap_ST;\nuniform \tmediump float _UVSec;\nattribute highp vec4 in_POSITION0;\nattribute mediump vec3 in_NORMAL0;\nattribute highp vec2 in_TEXCOORD0;\nattribute highp vec2 in_TEXCOORD1;\nvarying highp vec4 vs_TEXCOORD0;\nvarying highp vec4 vs_TEXCOORD1;\nvarying highp vec4 vs_TEXCOORD2;\nvarying highp vec4 vs_TEXCOORD3;\nvarying highp vec4 vs_TEXCOORD4;\nvarying mediump vec4 vs_TEXCOORD5;\nvarying highp vec4 vs_TEXCOORD7;\nvarying highp vec3 vs_TEXCOORD8;\nvec4 u_xlat0;\nbool u_xlatb0;\nvec4 u_xlat1;\nfloat u_xlat6;\nvoid main()\n{\n    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];\n    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;\n    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;\n    u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];\n    u_xlat1 = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];\n    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat0.xxxx + u_xlat1;\n    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat0.zzzz + u_xlat1;\n    gl_Position = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat0.wwww + u_xlat1;\n    u_xlatb0 = _UVSec==0.0;\n    u_xlat0.xy = (bool(u_xlatb0)) ? in_TEXCOORD0.xy : in_TEXCOORD1.xy;\n    vs_TEXCOORD0.zw = u_xlat0.xy * _DetailAlbedoMap_ST.xy + _DetailAlbedoMap_ST.zw;\n    vs_TEXCOORD0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;\n    u_xlat0.xyz = in_POSITION0.yyy * hlslcc_mtx4x4unity_ObjectToWorld[1].xyz;\n    u_xlat0.xyz = hlslcc_mtx4x4unity_ObjectToWorld[0].xyz * in_POSITION0.xxx + u_xlat0.xyz;\n    u_xlat0.xyz = hlslcc_mtx4x4unity_ObjectToWorld[2].xyz * in_POSITION0.zzz + u_xlat0.xyz;\n    u_xlat0.xyz = hlslcc_mtx4x4unity_ObjectToWorld[3].xyz * in_POSITION0.www + u_xlat0.xyz;\n    u_xlat1.xyz = u_xlat0.xyz + (-_WorldSpaceCameraPos.xyz);\n    vs_TEXCOORD8.xyz = u_xlat0.xyz;\n    u_xlat0.x = dot(u_xlat1.xyz, u_xlat1.xyz);\n    u_xlat0.x = inversesqrt(u_xlat0.x);\n    vs_TEXCOORD1.xyz = u_xlat0.xxx * u_xlat1.xyz;\n    vs_TEXCOORD1.w = 0.0;\n    vs_TEXCOORD2 = vec4(0.0, 0.0, 0.0, 0.0);\n    vs_TEXCOORD3 = vec4(0.0, 0.0, 0.0, 0.0);\n    u_xlat0.x = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[0].xyz);\n    u_xlat0.y = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[1].xyz);\n    u_xlat0.z = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[2].xyz);\n    u_xlat6 = dot(u_xlat0.xyz, u_xlat0.xyz);\n    u_xlat6 = inversesqrt(u_xlat6);\n    vs_TEXCOORD4.xyz = vec3(u_xlat6) * u_xlat0.xyz;\n    vs_TEXCOORD4.w = 0.0;\n    vs_TEXCOORD5 = vec4(0.0, 0.0, 0.0, 0.0);\n    vs_TEXCOORD7 = vec4(0.0, 0.0, 0.0, 0.0);\n    return;\n}\n\n","\n#version 100\n#ifdef GL_EXT_shader_texture_lod\n#extension GL_EXT_shader_texture_lod : enable\n#endif\n#if !defined(GL_EXT_shader_texture_lod)\n#define texture1DLodEXT texture1D\n#define texture2DLodEXT texture2D\n#define texture2DProjLodEXT texture2DProj\n#define texture3DLodEXT texture3D\n#define textureCubeLodEXT textureCube\n#endif\n\n#ifdef GL_FRAGMENT_PRECISION_HIGH\n    precision highp float;\n#else\n    precision mediump float;\n#endif\nprecision highp int;\nuniform \tmediump vec4 _WorldSpaceLightPos0;\nuniform \tmediump vec4 unity_SpecCube0_HDR;\nuniform \tmediump vec4 _LightColor0;\nuniform \tmediump vec4 _Color;\nuniform \tmediump float _Metallic;\nuniform \tfloat _Glossiness;\nuniform \tmediump vec4 _EmissionColor;\nuniform lowp sampler2D _MainTex;\nuniform lowp sampler2D _OcclusionMap;\nuniform highp sampler2D unity_NHxRoughness;\nuniform lowp sampler2D _EmissionMap;\nuniform lowp samplerCube unity_SpecCube0;\nvarying highp vec4 vs_TEXCOORD0;\nvarying highp vec4 vs_TEXCOORD1;\nvarying highp vec4 vs_TEXCOORD4;\n#define SV_Target0 gl_FragData[0]\nvec4 u_xlat0;\nlowp vec3 u_xlat10_0;\nmediump float u_xlat16_1;\nlowp vec4 u_xlat10_1;\nvec3 u_xlat2;\nlowp vec3 u_xlat10_2;\nmediump vec3 u_xlat16_3;\nvec3 u_xlat4;\nmediump vec3 u_xlat16_5;\nmediump vec3 u_xlat16_6;\nmediump vec3 u_xlat16_7;\nfloat u_xlat8;\nmediump vec3 u_xlat16_9;\nfloat u_xlat16;\nmediump float u_xlat16_27;\nmediump float u_xlat16_29;\nvoid main()\n{\n    u_xlat0.xw = (-vec2(_Glossiness)) + vec2(1.0, 1.0);\n    u_xlat16_1 = (-u_xlat0.x) * 0.699999988 + 1.70000005;\n    u_xlat16_1 = u_xlat0.x * u_xlat16_1;\n    u_xlat16_1 = u_xlat16_1 * 6.0;\n    u_xlat0.x = dot(vs_TEXCOORD4.xyz, vs_TEXCOORD4.xyz);\n    u_xlat0.x = inversesqrt(u_xlat0.x);\n    u_xlat2.xyz = u_xlat0.xxx * vs_TEXCOORD4.xyz;\n    u_xlat16_9.x = dot(vs_TEXCOORD1.xyz, u_xlat2.xyz);\n    u_xlat16_9.x = u_xlat16_9.x + u_xlat16_9.x;\n    u_xlat16_9.xyz = u_xlat2.xyz * (-u_xlat16_9.xxx) + vs_TEXCOORD1.xyz;\n    u_xlat10_1 = textureCubeLodEXT(unity_SpecCube0, u_xlat16_9.xyz, u_xlat16_1);\n    u_xlat16_3.x = u_xlat10_1.w + -1.0;\n    u_xlat16_3.x = unity_SpecCube0_HDR.w * u_xlat16_3.x + 1.0;\n    u_xlat16_3.x = u_xlat16_3.x * unity_SpecCube0_HDR.x;\n    u_xlat16_3.xyz = u_xlat10_1.xyz * u_xlat16_3.xxx;\n    u_xlat10_0.x = texture2D(_OcclusionMap, vs_TEXCOORD0.xy).y;\n    u_xlat16_3.xyz = u_xlat10_0.xxx * u_xlat16_3.xyz;\n    u_xlat0.x = dot((-vs_TEXCOORD1.xyz), u_xlat2.xyz);\n    u_xlat16 = u_xlat0.x;\n    u_xlat16 = clamp(u_xlat16, 0.0, 1.0);\n    u_xlat0.x = u_xlat0.x + u_xlat0.x;\n    u_xlat4.xyz = u_xlat2.xyz * (-u_xlat0.xxx) + (-vs_TEXCOORD1.xyz);\n    u_xlat0.x = dot(u_xlat2.xyz, _WorldSpaceLightPos0.xyz);\n    u_xlat0.x = clamp(u_xlat0.x, 0.0, 1.0);\n    u_xlat16_5.xyz = u_xlat0.xxx * _LightColor0.xyz;\n    u_xlat0.x = dot(u_xlat4.xyz, _WorldSpaceLightPos0.xyz);\n    u_xlat0.x = u_xlat0.x * u_xlat0.x;\n    u_xlat0.y = u_xlat0.x * u_xlat0.x;\n    u_xlat0.x = texture2D(unity_NHxRoughness, u_xlat0.yw).x;\n    u_xlat0.x = u_xlat0.x * 16.0;\n    u_xlat16_27 = (-u_xlat16) + 1.0;\n    u_xlat8 = u_xlat16_27 * u_xlat16_27;\n    u_xlat8 = u_xlat16_27 * u_xlat8;\n    u_xlat8 = u_xlat16_27 * u_xlat8;\n    u_xlat16_27 = (-_Metallic) * 0.779083729 + 0.779083729;\n    u_xlat16_29 = (-u_xlat16_27) + 1.0;\n    u_xlat16_29 = u_xlat16_29 + _Glossiness;\n    u_xlat16_29 = clamp(u_xlat16_29, 0.0, 1.0);\n    u_xlat10_2.xyz = texture2D(_MainTex, vs_TEXCOORD0.xy).xyz;\n    u_xlat16_6.xyz = _Color.xyz * u_xlat10_2.xyz + vec3(-0.220916301, -0.220916301, -0.220916301);\n    u_xlat2.xyz = u_xlat10_2.xyz * _Color.xyz;\n    u_xlat16_6.xyz = vec3(vec3(_Metallic, _Metallic, _Metallic)) * u_xlat16_6.xyz + vec3(0.220916301, 0.220916301, 0.220916301);\n    u_xlat16_7.xyz = vec3(u_xlat16_29) + (-u_xlat16_6.xyz);\n    u_xlat16_7.xyz = vec3(u_xlat8) * u_xlat16_7.xyz + u_xlat16_6.xyz;\n    u_xlat16_6.xyz = u_xlat0.xxx * u_xlat16_6.xyz;\n    u_xlat16_6.xyz = u_xlat2.xyz * vec3(u_xlat16_27) + u_xlat16_6.xyz;\n    u_xlat16_3.xyz = u_xlat16_3.xyz * u_xlat16_7.xyz;\n    u_xlat16_3.xyz = u_xlat16_6.xyz * u_xlat16_5.xyz + u_xlat16_3.xyz;\n    u_xlat10_0.xyz = texture2D(_EmissionMap, vs_TEXCOORD0.xy).xyz;\n    SV_Target0.xyz = u_xlat10_0.xyz * _EmissionColor.xyz + u_xlat16_3.xyz;\n    SV_Target0.w = 1.0;\n    return;\n}\n\n",0,0,0,0,1,["DIRECTIONAL","_EMISSION"],[["LIGHTMODE","FORWARDBASE"],["PerformanceChecks","False"],["RenderType","Opaque"],["SHADOWSUPPORT","true"]]],[0,"\n#version 100\n\nuniform \tvec3 _WorldSpaceCameraPos;\nuniform \tmediump vec4 unity_SHAr;\nuniform \tmediump vec4 unity_SHAg;\nuniform \tmediump vec4 unity_SHAb;\nuniform \tmediump vec4 unity_SHBr;\nuniform \tmediump vec4 unity_SHBg;\nuniform \tmediump vec4 unity_SHBb;\nuniform \tmediump vec4 unity_SHC;\nuniform \tvec4 hlslcc_mtx4x4unity_ObjectToWorld[4];\nuniform \tvec4 hlslcc_mtx4x4unity_WorldToObject[4];\nuniform \tvec4 hlslcc_mtx4x4unity_MatrixVP[4];\nuniform \tvec4 _MainTex_ST;\nuniform \tvec4 _DetailAlbedoMap_ST;\nuniform \tmediump float _UVSec;\nattribute highp vec4 in_POSITION0;\nattribute mediump vec3 in_NORMAL0;\nattribute highp vec2 in_TEXCOORD0;\nattribute highp vec2 in_TEXCOORD1;\nvarying highp vec4 vs_TEXCOORD0;\nvarying highp vec4 vs_TEXCOORD1;\nvarying highp vec4 vs_TEXCOORD2;\nvarying highp vec4 vs_TEXCOORD3;\nvarying highp vec4 vs_TEXCOORD4;\nvarying mediump vec4 vs_TEXCOORD5;\nvarying highp vec4 vs_TEXCOORD7;\nvarying highp vec3 vs_TEXCOORD8;\nvec4 u_xlat0;\nbool u_xlatb0;\nvec4 u_xlat1;\nmediump vec4 u_xlat16_1;\nmediump vec3 u_xlat16_2;\nmediump vec3 u_xlat16_3;\nfloat u_xlat12;\nvoid main()\n{\n    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];\n    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;\n    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;\n    u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];\n    u_xlat1 = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];\n    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat0.xxxx + u_xlat1;\n    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat0.zzzz + u_xlat1;\n    gl_Position = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat0.wwww + u_xlat1;\n    u_xlatb0 = _UVSec==0.0;\n    u_xlat0.xy = (bool(u_xlatb0)) ? in_TEXCOORD0.xy : in_TEXCOORD1.xy;\n    vs_TEXCOORD0.zw = u_xlat0.xy * _DetailAlbedoMap_ST.xy + _DetailAlbedoMap_ST.zw;\n    vs_TEXCOORD0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;\n    u_xlat0.xyz = in_POSITION0.yyy * hlslcc_mtx4x4unity_ObjectToWorld[1].xyz;\n    u_xlat0.xyz = hlslcc_mtx4x4unity_ObjectToWorld[0].xyz * in_POSITION0.xxx + u_xlat0.xyz;\n    u_xlat0.xyz = hlslcc_mtx4x4unity_ObjectToWorld[2].xyz * in_POSITION0.zzz + u_xlat0.xyz;\n    u_xlat0.xyz = hlslcc_mtx4x4unity_ObjectToWorld[3].xyz * in_POSITION0.www + u_xlat0.xyz;\n    u_xlat1.xyz = u_xlat0.xyz + (-_WorldSpaceCameraPos.xyz);\n    vs_TEXCOORD8.xyz = u_xlat0.xyz;\n    u_xlat0.x = dot(u_xlat1.xyz, u_xlat1.xyz);\n    u_xlat0.x = inversesqrt(u_xlat0.x);\n    vs_TEXCOORD1.xyz = u_xlat0.xxx * u_xlat1.xyz;\n    vs_TEXCOORD1.w = 0.0;\n    vs_TEXCOORD2 = vec4(0.0, 0.0, 0.0, 0.0);\n    vs_TEXCOORD3 = vec4(0.0, 0.0, 0.0, 0.0);\n    vs_TEXCOORD4.w = 0.0;\n    u_xlat0.x = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[0].xyz);\n    u_xlat0.y = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[1].xyz);\n    u_xlat0.z = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[2].xyz);\n    u_xlat12 = dot(u_xlat0.xyz, u_xlat0.xyz);\n    u_xlat12 = inversesqrt(u_xlat12);\n    u_xlat0.xyz = vec3(u_xlat12) * u_xlat0.xyz;\n    vs_TEXCOORD4.xyz = u_xlat0.xyz;\n    u_xlat16_2.x = u_xlat0.y * u_xlat0.y;\n    u_xlat16_2.x = u_xlat0.x * u_xlat0.x + (-u_xlat16_2.x);\n    u_xlat16_1 = u_xlat0.yzzx * u_xlat0.xyzz;\n    u_xlat16_3.x = dot(unity_SHBr, u_xlat16_1);\n    u_xlat16_3.y = dot(unity_SHBg, u_xlat16_1);\n    u_xlat16_3.z = dot(unity_SHBb, u_xlat16_1);\n    u_xlat16_2.xyz = unity_SHC.xyz * u_xlat16_2.xxx + u_xlat16_3.xyz;\n    u_xlat0.w = 1.0;\n    u_xlat16_3.x = dot(unity_SHAr, u_xlat0);\n    u_xlat16_3.y = dot(unity_SHAg, u_xlat0);\n    u_xlat16_3.z = dot(unity_SHAb, u_xlat0);\n    u_xlat16_2.xyz = u_xlat16_2.xyz + u_xlat16_3.xyz;\n    u_xlat16_2.xyz = max(u_xlat16_2.xyz, vec3(0.0, 0.0, 0.0));\n    u_xlat0.xyz = log2(u_xlat16_2.xyz);\n    u_xlat0.xyz = u_xlat0.xyz * vec3(0.416666657, 0.416666657, 0.416666657);\n    u_xlat0.xyz = exp2(u_xlat0.xyz);\n    u_xlat0.xyz = u_xlat0.xyz * vec3(1.05499995, 1.05499995, 1.05499995) + vec3(-0.0549999997, -0.0549999997, -0.0549999997);\n    u_xlat0.xyz = max(u_xlat0.xyz, vec3(0.0, 0.0, 0.0));\n    vs_TEXCOORD5.xyz = u_xlat0.xyz;\n    vs_TEXCOORD5.w = 0.0;\n    vs_TEXCOORD7 = vec4(0.0, 0.0, 0.0, 0.0);\n    return;\n}\n\n","\n#version 100\n#ifdef GL_EXT_shader_texture_lod\n#extension GL_EXT_shader_texture_lod : enable\n#endif\n#if !defined(GL_EXT_shader_texture_lod)\n#define texture1DLodEXT texture1D\n#define texture2DLodEXT texture2D\n#define texture2DProjLodEXT texture2DProj\n#define texture3DLodEXT texture3D\n#define textureCubeLodEXT textureCube\n#endif\n\n#ifdef GL_FRAGMENT_PRECISION_HIGH\n    precision highp float;\n#else\n    precision mediump float;\n#endif\nprecision highp int;\nuniform \tmediump vec4 _WorldSpaceLightPos0;\nuniform \tmediump vec4 unity_SpecCube0_HDR;\nuniform \tmediump vec4 _LightColor0;\nuniform \tmediump vec4 _Color;\nuniform \tmediump float _Metallic;\nuniform \tfloat _Glossiness;\nuniform \tmediump vec4 _EmissionColor;\nuniform lowp sampler2D _MainTex;\nuniform lowp sampler2D _OcclusionMap;\nuniform highp sampler2D unity_NHxRoughness;\nuniform lowp sampler2D _EmissionMap;\nuniform lowp samplerCube unity_SpecCube0;\nvarying highp vec4 vs_TEXCOORD0;\nvarying highp vec4 vs_TEXCOORD1;\nvarying highp vec4 vs_TEXCOORD4;\nvarying mediump vec4 vs_TEXCOORD5;\n#define SV_Target0 gl_FragData[0]\nvec4 u_xlat0;\nlowp vec3 u_xlat10_0;\nmediump float u_xlat16_1;\nlowp vec4 u_xlat10_1;\nvec3 u_xlat2;\nlowp vec3 u_xlat10_2;\nmediump vec3 u_xlat16_3;\nmediump vec3 u_xlat16_4;\nvec3 u_xlat5;\nmediump vec3 u_xlat16_6;\nmediump vec3 u_xlat16_7;\nmediump vec3 u_xlat16_8;\nmediump vec3 u_xlat16_9;\nfloat u_xlat10;\nmediump vec3 u_xlat16_11;\nfloat u_xlat20;\nmediump float u_xlat16_33;\nmediump float u_xlat16_34;\nvoid main()\n{\n    u_xlat0.xw = (-vec2(_Glossiness)) + vec2(1.0, 1.0);\n    u_xlat16_1 = (-u_xlat0.x) * 0.699999988 + 1.70000005;\n    u_xlat16_1 = u_xlat0.x * u_xlat16_1;\n    u_xlat16_1 = u_xlat16_1 * 6.0;\n    u_xlat0.x = dot(vs_TEXCOORD4.xyz, vs_TEXCOORD4.xyz);\n    u_xlat0.x = inversesqrt(u_xlat0.x);\n    u_xlat2.xyz = u_xlat0.xxx * vs_TEXCOORD4.xyz;\n    u_xlat16_11.x = dot(vs_TEXCOORD1.xyz, u_xlat2.xyz);\n    u_xlat16_11.x = u_xlat16_11.x + u_xlat16_11.x;\n    u_xlat16_11.xyz = u_xlat2.xyz * (-u_xlat16_11.xxx) + vs_TEXCOORD1.xyz;\n    u_xlat10_1 = textureCubeLodEXT(unity_SpecCube0, u_xlat16_11.xyz, u_xlat16_1);\n    u_xlat16_3.x = u_xlat10_1.w + -1.0;\n    u_xlat16_3.x = unity_SpecCube0_HDR.w * u_xlat16_3.x + 1.0;\n    u_xlat16_3.x = u_xlat16_3.x * unity_SpecCube0_HDR.x;\n    u_xlat16_3.xyz = u_xlat10_1.xyz * u_xlat16_3.xxx;\n    u_xlat10_0.x = texture2D(_OcclusionMap, vs_TEXCOORD0.xy).y;\n    u_xlat16_3.xyz = u_xlat10_0.xxx * u_xlat16_3.xyz;\n    u_xlat16_4.xyz = u_xlat10_0.xxx * vs_TEXCOORD5.xyz;\n    u_xlat0.x = dot((-vs_TEXCOORD1.xyz), u_xlat2.xyz);\n    u_xlat20 = u_xlat0.x;\n    u_xlat20 = clamp(u_xlat20, 0.0, 1.0);\n    u_xlat0.x = u_xlat0.x + u_xlat0.x;\n    u_xlat5.xyz = u_xlat2.xyz * (-u_xlat0.xxx) + (-vs_TEXCOORD1.xyz);\n    u_xlat0.x = dot(u_xlat2.xyz, _WorldSpaceLightPos0.xyz);\n    u_xlat0.x = clamp(u_xlat0.x, 0.0, 1.0);\n    u_xlat16_6.xyz = u_xlat0.xxx * _LightColor0.xyz;\n    u_xlat0.x = dot(u_xlat5.xyz, _WorldSpaceLightPos0.xyz);\n    u_xlat0.x = u_xlat0.x * u_xlat0.x;\n    u_xlat0.y = u_xlat0.x * u_xlat0.x;\n    u_xlat0.x = texture2D(unity_NHxRoughness, u_xlat0.yw).x;\n    u_xlat0.x = u_xlat0.x * 16.0;\n    u_xlat16_33 = (-u_xlat20) + 1.0;\n    u_xlat10 = u_xlat16_33 * u_xlat16_33;\n    u_xlat10 = u_xlat16_33 * u_xlat10;\n    u_xlat10 = u_xlat16_33 * u_xlat10;\n    u_xlat16_33 = (-_Metallic) * 0.779083729 + 0.779083729;\n    u_xlat16_34 = (-u_xlat16_33) + 1.0;\n    u_xlat16_34 = u_xlat16_34 + _Glossiness;\n    u_xlat16_34 = clamp(u_xlat16_34, 0.0, 1.0);\n    u_xlat10_2.xyz = texture2D(_MainTex, vs_TEXCOORD0.xy).xyz;\n    u_xlat16_7.xyz = _Color.xyz * u_xlat10_2.xyz + vec3(-0.220916301, -0.220916301, -0.220916301);\n    u_xlat2.xyz = u_xlat10_2.xyz * _Color.xyz;\n    u_xlat16_8.xyz = vec3(u_xlat16_33) * u_xlat2.xyz;\n    u_xlat16_7.xyz = vec3(vec3(_Metallic, _Metallic, _Metallic)) * u_xlat16_7.xyz + vec3(0.220916301, 0.220916301, 0.220916301);\n    u_xlat16_9.xyz = vec3(u_xlat16_34) + (-u_xlat16_7.xyz);\n    u_xlat16_9.xyz = vec3(u_xlat10) * u_xlat16_9.xyz + u_xlat16_7.xyz;\n    u_xlat16_7.xyz = u_xlat0.xxx * u_xlat16_7.xyz + u_xlat16_8.xyz;\n    u_xlat16_3.xyz = u_xlat16_3.xyz * u_xlat16_9.xyz;\n    u_xlat16_3.xyz = u_xlat16_4.xyz * u_xlat16_8.xyz + u_xlat16_3.xyz;\n    u_xlat16_3.xyz = u_xlat16_7.xyz * u_xlat16_6.xyz + u_xlat16_3.xyz;\n    u_xlat10_0.xyz = texture2D(_EmissionMap, vs_TEXCOORD0.xy).xyz;\n    SV_Target0.xyz = u_xlat10_0.xyz * _EmissionColor.xyz + u_xlat16_3.xyz;\n    SV_Target0.w = 1.0;\n    return;\n}\n\n",0,0,1,0,1,["DIRECTIONAL","LIGHTPROBE_SH","_EMISSION"],[["LIGHTMODE","FORWARDBASE"],["PerformanceChecks","False"],["RenderType","Opaque"],["SHADOWSUPPORT","true"]]]],["DIRECTIONAL","DYNAMICLIGHTMAP_ON","FOG_EXP","FOG_EXP2","FOG_LINEAR","LIGHTMAP_ON","LIGHTMAP_SHADOW_MIXING","LIGHTPROBE_SH","SHADOWS_SCREEN","SHADOWS_SHADOWMASK","STEREO_CUBEMAP_RENDER_ON","STEREO_INSTANCING_ON","STEREO_MULTIVIEW_ON","UNITY_SINGLE_PASS_STEREO","VERTEXLIGHT_ON","_ALPHABLEND_ON","_ALPHAPREMULTIPLY_ON","_ALPHATEST_ON","_EMISSION","_GLOSSYREFLECTIONS_OFF","_METALLICGLOSSMAP","_NORMALMAP","_SMOOTHNESS_TEXTURE_ALBEDO_CHANNEL_A","_SPECULARHIGHLIGHTS_OFF","__","_"],[[["__","FOG_LINEAR","FOG_EXP","FOG_EXP2"]],[["_","_NORMALMAP"]],[["_","_ALPHATEST_ON","_ALPHABLEND_ON","_ALPHAPREMULTIPLY_ON"]],[["_","_METALLICGLOSSMAP"]],[["DIRECTIONAL"]],[["DIRECTIONAL","LIGHTPROBE_SH"]],[["DIRECTIONAL","SHADOWS_SHADOWMASK","LIGHTPROBE_SH"]],[["DIRECTIONAL","DYNAMICLIGHTMAP_ON"]],[["DIRECTIONAL","LIGHTMAP_ON"]],[["DIRECTIONAL","LIGHTMAP_ON","DYNAMICLIGHTMAP_ON"]],[["DIRECTIONAL","LIGHTMAP_ON","LIGHTPROBE_SH"]],[["DIRECTIONAL","LIGHTMAP_ON","LIGHTMAP_SHADOW_MIXING"]],[["DIRECTIONAL","LIGHTMAP_ON","DYNAMICLIGHTMAP_ON","LIGHTMAP_SHADOW_MIXING"]],[["DIRECTIONAL","LIGHTMAP_ON","LIGHTMAP_SHADOW_MIXING","LIGHTPROBE_SH"]],[["DIRECTIONAL","LIGHTMAP_ON","SHADOWS_SHADOWMASK"]],[["DIRECTIONAL","LIGHTMAP_ON","DYNAMICLIGHTMAP_ON","SHADOWS_SHADOWMASK"]],[["DIRECTIONAL","LIGHTMAP_ON","SHADOWS_SHADOWMASK","LIGHTPROBE_SH"]],[["DIRECTIONAL","LIGHTMAP_ON","SHADOWS_SHADOWMASK","LIGHTMAP_SHADOW_MIXING"]],[["DIRECTIONAL","LIGHTMAP_ON","DYNAMICLIGHTMAP_ON","SHADOWS_SHADOWMASK","LIGHTMAP_SHADOW_MIXING"]],[["DIRECTIONAL","LIGHTMAP_ON","SHADOWS_SHADOWMASK","LIGHTMAP_SHADOW_MIXING","LIGHTPROBE_SH"]],[["DIRECTIONAL","SHADOWS_SCREEN"]],[["DIRECTIONAL","SHADOWS_SCREEN","LIGHTPROBE_SH"]],[["DIRECTIONAL","DYNAMICLIGHTMAP_ON","SHADOWS_SCREEN"]],[["DIRECTIONAL","SHADOWS_SCREEN","LIGHTMAP_SHADOW_MIXING","LIGHTPROBE_SH"]],[["DIRECTIONAL","DYNAMICLIGHTMAP_ON","SHADOWS_SCREEN","LIGHTMAP_SHADOW_MIXING"]],[["DIRECTIONAL","SHADOWS_SCREEN","SHADOWS_SHADOWMASK","LIGHTPROBE_SH"]],[["DIRECTIONAL","DYNAMICLIGHTMAP_ON","SHADOWS_SCREEN","SHADOWS_SHADOWMASK"]],[["DIRECTIONAL","SHADOWS_SCREEN","SHADOWS_SHADOWMASK","LIGHTMAP_SHADOW_MIXING","LIGHTPROBE_SH"]],[["DIRECTIONAL","DYNAMICLIGHTMAP_ON","SHADOWS_SCREEN","SHADOWS_SHADOWMASK","LIGHTMAP_SHADOW_MIXING"]],[["DIRECTIONAL","LIGHTMAP_ON","SHADOWS_SCREEN"]],[["DIRECTIONAL","LIGHTMAP_ON","DYNAMICLIGHTMAP_ON","SHADOWS_SCREEN"]],[["DIRECTIONAL","LIGHTMAP_ON","SHADOWS_SCREEN","LIGHTPROBE_SH"]],[["DIRECTIONAL","LIGHTMAP_ON","SHADOWS_SCREEN","LIGHTMAP_SHADOW_MIXING"]],[["DIRECTIONAL","LIGHTMAP_ON","DYNAMICLIGHTMAP_ON","SHADOWS_SCREEN","LIGHTMAP_SHADOW_MIXING"]],[["DIRECTIONAL","LIGHTMAP_ON","SHADOWS_SCREEN","LIGHTMAP_SHADOW_MIXING","LIGHTPROBE_SH"]],[["DIRECTIONAL","LIGHTMAP_ON","SHADOWS_SCREEN","SHADOWS_SHADOWMASK"]],[["DIRECTIONAL","LIGHTMAP_ON","DYNAMICLIGHTMAP_ON","SHADOWS_SCREEN","SHADOWS_SHADOWMASK"]],[["DIRECTIONAL","LIGHTMAP_ON","SHADOWS_SCREEN","SHADOWS_SHADOWMASK","LIGHTPROBE_SH"]],[["DIRECTIONAL","LIGHTMAP_ON","SHADOWS_SCREEN","SHADOWS_SHADOWMASK","LIGHTMAP_SHADOW_MIXING"]],[["DIRECTIONAL","LIGHTMAP_ON","DYNAMICLIGHTMAP_ON","SHADOWS_SCREEN","SHADOWS_SHADOWMASK","LIGHTMAP_SHADOW_MIXING"]],[["DIRECTIONAL","LIGHTMAP_ON","SHADOWS_SCREEN","SHADOWS_SHADOWMASK","LIGHTMAP_SHADOW_MIXING","LIGHTPROBE_SH"]],[["DIRECTIONAL","VERTEXLIGHT_ON"]],[["DIRECTIONAL","VERTEXLIGHT_ON","LIGHTPROBE_SH"]],[["DIRECTIONAL","VERTEXLIGHT_ON","DYNAMICLIGHTMAP_ON"]],[["DIRECTIONAL","VERTEXLIGHT_ON","SHADOWS_SCREEN"]],[["DIRECTIONAL","VERTEXLIGHT_ON","SHADOWS_SCREEN","LIGHTPROBE_SH"]],[["DIRECTIONAL","VERTEXLIGHT_ON","DYNAMICLIGHTMAP_ON","SHADOWS_SCREEN"]],[["DIRECTIONAL","VERTEXLIGHT_ON","SHADOWS_SCREEN","LIGHTMAP_SHADOW_MIXING"]],[["DIRECTIONAL","VERTEXLIGHT_ON","SHADOWS_SCREEN","LIGHTMAP_SHADOW_MIXING","LIGHTPROBE_SH"]],[["DIRECTIONAL","VERTEXLIGHT_ON","DYNAMICLIGHTMAP_ON","SHADOWS_SCREEN","LIGHTMAP_SHADOW_MIXING"]],[["DIRECTIONAL","VERTEXLIGHT_ON","SHADOWS_SCREEN","SHADOWS_SHADOWMASK"]],[["DIRECTIONAL","VERTEXLIGHT_ON","SHADOWS_SCREEN","SHADOWS_SHADOWMASK","LIGHTPROBE_SH"]],[["DIRECTIONAL","VERTEXLIGHT_ON","DYNAMICLIGHTMAP_ON","SHADOWS_SCREEN","SHADOWS_SHADOWMASK"]],[["DIRECTIONAL","VERTEXLIGHT_ON","SHADOWS_SCREEN","SHADOWS_SHADOWMASK","LIGHTMAP_SHADOW_MIXING"]],[["DIRECTIONAL","VERTEXLIGHT_ON","SHADOWS_SCREEN","SHADOWS_SHADOWMASK","LIGHTMAP_SHADOW_MIXING","LIGHTPROBE_SH"]],[["DIRECTIONAL","VERTEXLIGHT_ON","DYNAMICLIGHTMAP_ON","SHADOWS_SCREEN","SHADOWS_SHADOWMASK","LIGHTMAP_SHADOW_MIXING"]]],52,0,5,0,0,1,0,[["LIGHTMODE","FORWARDBASE"],["PerformanceChecks","False"],["RenderType","Opaque"],["SHADOWSUPPORT","true"]],[null,null],"",1,-1],["Standard",[[0,"\n#version 100\n\nuniform \tvec3 _WorldSpaceCameraPos;\nuniform \tmediump vec4 _WorldSpaceLightPos0;\nuniform \tvec4 hlslcc_mtx4x4unity_ObjectToWorld[4];\nuniform \tvec4 hlslcc_mtx4x4unity_WorldToObject[4];\nuniform \tvec4 hlslcc_mtx4x4unity_MatrixVP[4];\nuniform \tvec4 _MainTex_ST;\nuniform \tvec4 _DetailAlbedoMap_ST;\nuniform \tmediump float _UVSec;\nattribute highp vec4 in_POSITION0;\nattribute mediump vec3 in_NORMAL0;\nattribute highp vec2 in_TEXCOORD0;\nattribute highp vec2 in_TEXCOORD1;\nvarying highp vec4 vs_TEXCOORD0;\nvarying highp vec4 vs_TEXCOORD1;\nvarying highp vec4 vs_TEXCOORD2;\nvarying highp vec4 vs_TEXCOORD3;\nvarying highp vec4 vs_TEXCOORD4;\nvarying highp vec3 vs_TEXCOORD5;\nvarying highp vec4 vs_TEXCOORD7;\nvec4 u_xlat0;\nbool u_xlatb0;\nvec4 u_xlat1;\nfloat u_xlat6;\nvoid main()\n{\n    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];\n    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;\n    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;\n    u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];\n    u_xlat1 = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];\n    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat0.xxxx + u_xlat1;\n    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat0.zzzz + u_xlat1;\n    gl_Position = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat0.wwww + u_xlat1;\n    u_xlatb0 = _UVSec==0.0;\n    u_xlat0.xy = (bool(u_xlatb0)) ? in_TEXCOORD0.xy : in_TEXCOORD1.xy;\n    vs_TEXCOORD0.zw = u_xlat0.xy * _DetailAlbedoMap_ST.xy + _DetailAlbedoMap_ST.zw;\n    vs_TEXCOORD0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;\n    u_xlat0.xyz = in_POSITION0.yyy * hlslcc_mtx4x4unity_ObjectToWorld[1].xyz;\n    u_xlat0.xyz = hlslcc_mtx4x4unity_ObjectToWorld[0].xyz * in_POSITION0.xxx + u_xlat0.xyz;\n    u_xlat0.xyz = hlslcc_mtx4x4unity_ObjectToWorld[2].xyz * in_POSITION0.zzz + u_xlat0.xyz;\n    u_xlat0.xyz = hlslcc_mtx4x4unity_ObjectToWorld[3].xyz * in_POSITION0.www + u_xlat0.xyz;\n    u_xlat1.xyz = u_xlat0.xyz + (-_WorldSpaceCameraPos.xyz);\n    u_xlat6 = dot(u_xlat1.xyz, u_xlat1.xyz);\n    u_xlat6 = inversesqrt(u_xlat6);\n    vs_TEXCOORD1.xyz = vec3(u_xlat6) * u_xlat1.xyz;\n    vs_TEXCOORD1.w = 0.0;\n    u_xlat1.xyz = (-u_xlat0.xyz) * _WorldSpaceLightPos0.www + _WorldSpaceLightPos0.xyz;\n    vs_TEXCOORD5.xyz = u_xlat0.xyz;\n    u_xlat1.w = 0.0;\n    vs_TEXCOORD2 = u_xlat1.wwwx;\n    vs_TEXCOORD3 = u_xlat1.wwwy;\n    vs_TEXCOORD4.w = u_xlat1.z;\n    u_xlat0.x = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[0].xyz);\n    u_xlat0.y = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[1].xyz);\n    u_xlat0.z = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[2].xyz);\n    u_xlat6 = dot(u_xlat0.xyz, u_xlat0.xyz);\n    u_xlat6 = inversesqrt(u_xlat6);\n    vs_TEXCOORD4.xyz = vec3(u_xlat6) * u_xlat0.xyz;\n    vs_TEXCOORD7 = vec4(0.0, 0.0, 0.0, 0.0);\n    return;\n}\n\n","\n#version 100\n\n#ifdef GL_FRAGMENT_PRECISION_HIGH\n    precision highp float;\n#else\n    precision mediump float;\n#endif\nprecision highp int;\nuniform \tmediump vec4 _LightColor0;\nuniform \tmediump vec4 _Color;\nuniform \tmediump float _Metallic;\nuniform \tfloat _Glossiness;\nuniform lowp sampler2D _MainTex;\nuniform highp sampler2D unity_NHxRoughness;\nvarying highp vec4 vs_TEXCOORD0;\nvarying highp vec4 vs_TEXCOORD1;\nvarying highp vec4 vs_TEXCOORD2;\nvarying highp vec4 vs_TEXCOORD3;\nvarying highp vec4 vs_TEXCOORD4;\n#define SV_Target0 gl_FragData[0]\nvec3 u_xlat0;\nvec3 u_xlat1;\nvec3 u_xlat2;\nmediump vec3 u_xlat16_3;\nmediump vec3 u_xlat16_4;\nvec3 u_xlat5;\nlowp vec3 u_xlat10_5;\nfloat u_xlat15;\nmediump float u_xlat16_18;\nvoid main()\n{\n    u_xlat0.x = dot(vs_TEXCOORD4.xyz, vs_TEXCOORD4.xyz);\n    u_xlat0.x = inversesqrt(u_xlat0.x);\n    u_xlat0.xyz = u_xlat0.xxx * vs_TEXCOORD4.xyz;\n    u_xlat15 = dot((-vs_TEXCOORD1.xyz), u_xlat0.xyz);\n    u_xlat15 = u_xlat15 + u_xlat15;\n    u_xlat1.xyz = u_xlat0.xyz * (-vec3(u_xlat15)) + (-vs_TEXCOORD1.xyz);\n    u_xlat2.x = vs_TEXCOORD2.w;\n    u_xlat2.y = vs_TEXCOORD3.w;\n    u_xlat2.z = vs_TEXCOORD4.w;\n    u_xlat15 = dot(u_xlat1.xyz, u_xlat2.xyz);\n    u_xlat0.x = dot(u_xlat0.xyz, u_xlat2.xyz);\n    u_xlat0.x = clamp(u_xlat0.x, 0.0, 1.0);\n    u_xlat16_3.xyz = u_xlat0.xxx * _LightColor0.xyz;\n    u_xlat0.x = u_xlat15 * u_xlat15;\n    u_xlat0.x = u_xlat0.x * u_xlat0.x;\n    u_xlat0.y = (-_Glossiness) + 1.0;\n    u_xlat0.x = texture2D(unity_NHxRoughness, u_xlat0.xy).x;\n    u_xlat0.x = u_xlat0.x * 16.0;\n    u_xlat10_5.xyz = texture2D(_MainTex, vs_TEXCOORD0.xy).xyz;\n    u_xlat16_4.xyz = _Color.xyz * u_xlat10_5.xyz + vec3(-0.220916301, -0.220916301, -0.220916301);\n    u_xlat5.xyz = u_xlat10_5.xyz * _Color.xyz;\n    u_xlat16_4.xyz = vec3(vec3(_Metallic, _Metallic, _Metallic)) * u_xlat16_4.xyz + vec3(0.220916301, 0.220916301, 0.220916301);\n    u_xlat16_4.xyz = u_xlat0.xxx * u_xlat16_4.xyz;\n    u_xlat16_18 = (-_Metallic) * 0.779083729 + 0.779083729;\n    u_xlat16_4.xyz = u_xlat5.xyz * vec3(u_xlat16_18) + u_xlat16_4.xyz;\n    SV_Target0.xyz = u_xlat16_3.xyz * u_xlat16_4.xyz;\n    SV_Target0.w = 1.0;\n    return;\n}\n\n",0,0,1,1,1,["DIRECTIONAL"],[["LIGHTMODE","FORWARDADD"],["PerformanceChecks","False"],["RenderType","Opaque"],["SHADOWSUPPORT","true"]]]],["DIRECTIONAL","DIRECTIONAL_COOKIE","FOG_EXP","FOG_EXP2","FOG_LINEAR","LIGHTMAP_SHADOW_MIXING","POINT","POINT_COOKIE","SHADOWS_CUBE","SHADOWS_DEPTH","SHADOWS_SCREEN","SHADOWS_SHADOWMASK","SPOT","STEREO_CUBEMAP_RENDER_ON","STEREO_INSTANCING_ON","STEREO_MULTIVIEW_ON","UNITY_SINGLE_PASS_STEREO","_ALPHABLEND_ON","_ALPHAPREMULTIPLY_ON","_ALPHATEST_ON","_DETAIL_MULX2","_METALLICGLOSSMAP","_NORMALMAP","_SMOOTHNESS_TEXTURE_ALBEDO_CHANNEL_A","_SPECULARHIGHLIGHTS_OFF","__","_"],[[["__","FOG_LINEAR","FOG_EXP","FOG_EXP2"]],[["_","_NORMALMAP"]],[["_","_ALPHATEST_ON","_ALPHABLEND_ON","_ALPHAPREMULTIPLY_ON"]],[["_","_METALLICGLOSSMAP"]],[["POINT"]],[["DIRECTIONAL"]],[["SPOT"]],[["POINT_COOKIE"]],[["DIRECTIONAL_COOKIE"]],[["POINT","SHADOWS_SHADOWMASK"]],[["DIRECTIONAL","SHADOWS_SHADOWMASK"]],[["SPOT","SHADOWS_SHADOWMASK"]],[["POINT_COOKIE","SHADOWS_SHADOWMASK"]],[["DIRECTIONAL_COOKIE","SHADOWS_SHADOWMASK"]],[["POINT","SHADOWS_SHADOWMASK","LIGHTMAP_SHADOW_MIXING"]],[["DIRECTIONAL","SHADOWS_SHADOWMASK","LIGHTMAP_SHADOW_MIXING"]],[["SPOT","SHADOWS_SHADOWMASK","LIGHTMAP_SHADOW_MIXING"]],[["POINT_COOKIE","SHADOWS_SHADOWMASK","LIGHTMAP_SHADOW_MIXING"]],[["DIRECTIONAL_COOKIE","SHADOWS_SHADOWMASK","LIGHTMAP_SHADOW_MIXING"]],[["SPOT","SHADOWS_DEPTH"]],[["SPOT","SHADOWS_DEPTH","LIGHTMAP_SHADOW_MIXING"]],[["SPOT","SHADOWS_DEPTH","SHADOWS_SHADOWMASK"]],[["SPOT","SHADOWS_DEPTH","SHADOWS_SHADOWMASK","LIGHTMAP_SHADOW_MIXING"]],[["DIRECTIONAL","SHADOWS_SCREEN"]],[["DIRECTIONAL_COOKIE","SHADOWS_SCREEN"]],[["DIRECTIONAL","SHADOWS_SCREEN","LIGHTMAP_SHADOW_MIXING"]],[["DIRECTIONAL_COOKIE","SHADOWS_SCREEN","LIGHTMAP_SHADOW_MIXING"]],[["DIRECTIONAL","SHADOWS_SCREEN","SHADOWS_SHADOWMASK"]],[["DIRECTIONAL_COOKIE","SHADOWS_SCREEN","SHADOWS_SHADOWMASK"]],[["DIRECTIONAL","SHADOWS_SCREEN","SHADOWS_SHADOWMASK","LIGHTMAP_SHADOW_MIXING"]],[["DIRECTIONAL_COOKIE","SHADOWS_SCREEN","SHADOWS_SHADOWMASK","LIGHTMAP_SHADOW_MIXING"]],[["POINT","SHADOWS_CUBE"]],[["POINT","SHADOWS_CUBE","LIGHTMAP_SHADOW_MIXING"]],[["POINT","SHADOWS_CUBE","SHADOWS_SHADOWMASK"]],[["POINT","SHADOWS_CUBE","SHADOWS_SHADOWMASK","LIGHTMAP_SHADOW_MIXING"]],[["POINT_COOKIE","SHADOWS_CUBE"]],[["POINT_COOKIE","SHADOWS_CUBE","LIGHTMAP_SHADOW_MIXING"]],[["POINT_COOKIE","SHADOWS_CUBE","SHADOWS_SHADOWMASK"]],[["POINT_COOKIE","SHADOWS_CUBE","SHADOWS_SHADOWMASK","LIGHTMAP_SHADOW_MIXING"]]],35,0,5,0,1,1,1,[["LIGHTMODE","FORWARDADD"],["PerformanceChecks","False"],["RenderType","Opaque"],["SHADOWSUPPORT","true"]],[null,null],"",1,-1],["Standard",[],["SHADOWS_CUBE","SHADOWS_DEPTH","STEREO_CUBEMAP_RENDER_ON","STEREO_INSTANCING_ON","STEREO_MULTIVIEW_ON","UNITY_SINGLE_PASS_STEREO","_ALPHABLEND_ON","_ALPHAPREMULTIPLY_ON","_ALPHATEST_ON","_METALLICGLOSSMAP","_SMOOTHNESS_TEXTURE_ALBEDO_CHANNEL_A","_"],[[["_","_ALPHATEST_ON","_ALPHABLEND_ON","_ALPHAPREMULTIPLY_ON"]],[["_","_METALLICGLOSSMAP"]],[["SHADOWS_DEPTH"]],[["SHADOWS_CUBE"]]],2,0,5,0,2,1,2,[["LIGHTMODE","SHADOWCASTER"],["PerformanceChecks","False"],["RenderType","Opaque"],["SHADOWSUPPORT","true"]],[null,null],"",1,-1]],[["PerformanceChecks","False"],["RenderType","Opaque"]],0]],0,66,"Resources/unity_builtin_extra",["DIRECTIONAL","DIRLIGHTMAP_COMBINED","FOG_EXP","FOG_EXP2","FOG_LINEAR","LIGHTMAP_ON","LIGHTPROBE_SH","SHADOWS_SCREEN","SHADOWS_SHADOWMASK","VERTEXLIGHT_ON","_ALPHABLEND_ON","_ALPHAPREMULTIPLY_ON","_ALPHATEST_ON","_EMISSION","_GLOSSYREFLECTIONS_OFF","_METALLICGLOSSMAP","_NORMALMAP","_PARALLAXMAP","_SMOOTHNESS_TEXTURE_ALBEDO_CHANNEL_A","_SPECULARHIGHLIGHTS_OFF","DIRECTIONAL_COOKIE","POINT","POINT_COOKIE","SHADOWS_DEPTH","SPOT","DYNAMICLIGHTMAP_ON","INSTANCING_ON","LIGHTMAP_SHADOW_MIXING","STEREO_CUBEMAP_RENDER_ON","STEREO_INSTANCING_ON","STEREO_MULTIVIEW_ON","UNITY_SINGLE_PASS_STEREO","_DETAIL_MULX2","__","_","SHADOWS_CUBE","SHADOWS_SOFT"],0,70,[],5],[[[0,[["TextMeshPro/Bitmap",[[0,"\n#version 100\n\nuniform \tvec4 _ScreenParams;\nuniform \tvec4 hlslcc_mtx4x4unity_ObjectToWorld[4];\nuniform \tvec4 hlslcc_mtx4x4glstate_matrix_projection[4];\nuniform \tvec4 hlslcc_mtx4x4unity_MatrixVP[4];\nuniform \tvec4 _FaceTex_ST;\nuniform \tmediump vec4 _FaceColor;\nuniform \tfloat _VertexOffsetX;\nuniform \tfloat _VertexOffsetY;\nuniform \tvec4 _ClipRect;\nuniform \tfloat _MaskSoftnessX;\nuniform \tfloat _MaskSoftnessY;\nattribute highp vec4 in_POSITION0;\nattribute mediump vec4 in_COLOR0;\nattribute highp vec2 in_TEXCOORD0;\nattribute highp vec2 in_TEXCOORD1;\nvarying mediump vec4 vs_COLOR0;\nvarying highp vec2 vs_TEXCOORD0;\nvarying highp vec2 vs_TEXCOORD1;\nvarying highp vec4 vs_TEXCOORD2;\nvec2 u_xlat0;\nvec4 u_xlat1;\nvec4 u_xlat2;\nvec2 u_xlat6;\nfloat unity_roundEven(float x) { float y = floor(x + 0.5); return (y - x == 0.5) ? floor(0.5*y) * 2.0 : y; }\nvec2 unity_roundEven(vec2 a) { a.x = unity_roundEven(a.x); a.y = unity_roundEven(a.y); return a; }\nvec3 unity_roundEven(vec3 a) { a.x = unity_roundEven(a.x); a.y = unity_roundEven(a.y); a.z = unity_roundEven(a.z); return a; }\nvec4 unity_roundEven(vec4 a) { a.x = unity_roundEven(a.x); a.y = unity_roundEven(a.y); a.z = unity_roundEven(a.z); a.w = unity_roundEven(a.w); return a; }\n\nvoid main()\n{\n    u_xlat0.x = in_POSITION0.w * 0.5;\n    u_xlat0.xy = u_xlat0.xx / _ScreenParams.xy;\n    u_xlat6.xy = in_POSITION0.xy + vec2(_VertexOffsetX, _VertexOffsetY);\n    u_xlat0.xy = u_xlat0.xy + u_xlat6.xy;\n    u_xlat1 = u_xlat0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];\n    u_xlat1 = hlslcc_mtx4x4unity_ObjectToWorld[0] * u_xlat0.xxxx + u_xlat1;\n    u_xlat1 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat1;\n    u_xlat1 = u_xlat1 + hlslcc_mtx4x4unity_ObjectToWorld[3];\n    u_xlat2 = u_xlat1.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];\n    u_xlat2 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat1.xxxx + u_xlat2;\n    u_xlat2 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat1.zzzz + u_xlat2;\n    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat1.wwww + u_xlat2;\n    u_xlat6.xy = u_xlat1.xy / u_xlat1.ww;\n    u_xlat1.xy = _ScreenParams.xy * vec2(0.5, 0.5);\n    u_xlat6.xy = u_xlat6.xy * u_xlat1.xy;\n    u_xlat6.xy = unity_roundEven(u_xlat6.xy);\n    u_xlat6.xy = u_xlat6.xy / u_xlat1.xy;\n    gl_Position.xy = u_xlat1.ww * u_xlat6.xy;\n    gl_Position.zw = u_xlat1.zw;\n    vs_COLOR0 = in_COLOR0 * _FaceColor;\n    u_xlat6.x = in_TEXCOORD1.x * 0.000244140625;\n    u_xlat6.x = floor(u_xlat6.x);\n    u_xlat6.y = (-u_xlat6.x) * 4096.0 + in_TEXCOORD1.x;\n    u_xlat6.xy = u_xlat6.xy * _FaceTex_ST.xy;\n    vs_TEXCOORD1.xy = u_xlat6.xy * vec2(0.001953125, 0.001953125) + _FaceTex_ST.zw;\n    vs_TEXCOORD0.xy = in_TEXCOORD0.xy;\n    u_xlat2 = max(_ClipRect, vec4(-2e+10, -2e+10, -2e+10, -2e+10));\n    u_xlat2 = min(u_xlat2, vec4(2e+10, 2e+10, 2e+10, 2e+10));\n    u_xlat0.xy = u_xlat0.xy * vec2(2.0, 2.0) + (-u_xlat2.xy);\n    vs_TEXCOORD2.xy = (-u_xlat2.zw) + u_xlat0.xy;\n    u_xlat6.x = _ScreenParams.x * hlslcc_mtx4x4glstate_matrix_projection[0].x;\n    u_xlat6.y = _ScreenParams.y * hlslcc_mtx4x4glstate_matrix_projection[1].y;\n    u_xlat0.xy = u_xlat1.ww / abs(u_xlat6.xy);\n    u_xlat0.xy = vec2(_MaskSoftnessX, _MaskSoftnessY) * vec2(0.25, 0.25) + u_xlat0.xy;\n    vs_TEXCOORD2.zw = vec2(0.25, 0.25) / u_xlat0.xy;\n    return;\n}\n\n","\n#version 100\n\n#ifdef GL_FRAGMENT_PRECISION_HIGH\n    precision highp float;\n#else\n    precision mediump float;\n#endif\nprecision highp int;\nuniform lowp sampler2D _MainTex;\nuniform lowp sampler2D _FaceTex;\nvarying mediump vec4 vs_COLOR0;\nvarying highp vec2 vs_TEXCOORD0;\nvarying highp vec2 vs_TEXCOORD1;\n#define SV_Target0 gl_FragData[0]\nvec3 u_xlat0;\nlowp vec3 u_xlat10_0;\nvoid main()\n{\n    u_xlat10_0.xyz = texture2D(_FaceTex, vs_TEXCOORD1.xy).xyz;\n    u_xlat0.xyz = u_xlat10_0.xyz * vs_COLOR0.xyz;\n    SV_Target0.xyz = u_xlat0.xyz;\n    u_xlat10_0.x = texture2D(_MainTex, vs_TEXCOORD0.xy).w;\n    SV_Target0.w = u_xlat10_0.x * vs_COLOR0.w;\n    return;\n}\n\n",0,0,0,0,0,[],[["IGNOREPROJECTOR","true"],["QUEUE","Transparent"],["RenderType","Transparent"]]],[0,"\n#version 100\n\nuniform \tvec4 _ScreenParams;\nuniform \tvec4 hlslcc_mtx4x4unity_ObjectToWorld[4];\nuniform \tvec4 hlslcc_mtx4x4glstate_matrix_projection[4];\nuniform \tvec4 hlslcc_mtx4x4unity_MatrixVP[4];\nuniform \tvec4 _FaceTex_ST;\nuniform \tmediump vec4 _FaceColor;\nuniform \tfloat _VertexOffsetX;\nuniform \tfloat _VertexOffsetY;\nuniform \tvec4 _ClipRect;\nuniform \tfloat _MaskSoftnessX;\nuniform \tfloat _MaskSoftnessY;\nattribute highp vec4 in_POSITION0;\nattribute mediump vec4 in_COLOR0;\nattribute highp vec2 in_TEXCOORD0;\nattribute highp vec2 in_TEXCOORD1;\nvarying mediump vec4 vs_COLOR0;\nvarying highp vec2 vs_TEXCOORD0;\nvarying highp vec2 vs_TEXCOORD1;\nvarying highp vec4 vs_TEXCOORD2;\nvec2 u_xlat0;\nvec4 u_xlat1;\nvec4 u_xlat2;\nvec2 u_xlat6;\nfloat unity_roundEven(float x) { float y = floor(x + 0.5); return (y - x == 0.5) ? floor(0.5*y) * 2.0 : y; }\nvec2 unity_roundEven(vec2 a) { a.x = unity_roundEven(a.x); a.y = unity_roundEven(a.y); return a; }\nvec3 unity_roundEven(vec3 a) { a.x = unity_roundEven(a.x); a.y = unity_roundEven(a.y); a.z = unity_roundEven(a.z); return a; }\nvec4 unity_roundEven(vec4 a) { a.x = unity_roundEven(a.x); a.y = unity_roundEven(a.y); a.z = unity_roundEven(a.z); a.w = unity_roundEven(a.w); return a; }\n\nvoid main()\n{\n    u_xlat0.x = in_POSITION0.w * 0.5;\n    u_xlat0.xy = u_xlat0.xx / _ScreenParams.xy;\n    u_xlat6.xy = in_POSITION0.xy + vec2(_VertexOffsetX, _VertexOffsetY);\n    u_xlat0.xy = u_xlat0.xy + u_xlat6.xy;\n    u_xlat1 = u_xlat0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];\n    u_xlat1 = hlslcc_mtx4x4unity_ObjectToWorld[0] * u_xlat0.xxxx + u_xlat1;\n    u_xlat1 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat1;\n    u_xlat1 = u_xlat1 + hlslcc_mtx4x4unity_ObjectToWorld[3];\n    u_xlat2 = u_xlat1.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];\n    u_xlat2 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat1.xxxx + u_xlat2;\n    u_xlat2 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat1.zzzz + u_xlat2;\n    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat1.wwww + u_xlat2;\n    u_xlat6.xy = u_xlat1.xy / u_xlat1.ww;\n    u_xlat1.xy = _ScreenParams.xy * vec2(0.5, 0.5);\n    u_xlat6.xy = u_xlat6.xy * u_xlat1.xy;\n    u_xlat6.xy = unity_roundEven(u_xlat6.xy);\n    u_xlat6.xy = u_xlat6.xy / u_xlat1.xy;\n    gl_Position.xy = u_xlat1.ww * u_xlat6.xy;\n    gl_Position.zw = u_xlat1.zw;\n    vs_COLOR0 = in_COLOR0 * _FaceColor;\n    u_xlat6.x = in_TEXCOORD1.x * 0.000244140625;\n    u_xlat6.x = floor(u_xlat6.x);\n    u_xlat6.y = (-u_xlat6.x) * 4096.0 + in_TEXCOORD1.x;\n    u_xlat6.xy = u_xlat6.xy * _FaceTex_ST.xy;\n    vs_TEXCOORD1.xy = u_xlat6.xy * vec2(0.001953125, 0.001953125) + _FaceTex_ST.zw;\n    vs_TEXCOORD0.xy = in_TEXCOORD0.xy;\n    u_xlat2 = max(_ClipRect, vec4(-2e+10, -2e+10, -2e+10, -2e+10));\n    u_xlat2 = min(u_xlat2, vec4(2e+10, 2e+10, 2e+10, 2e+10));\n    u_xlat0.xy = u_xlat0.xy * vec2(2.0, 2.0) + (-u_xlat2.xy);\n    vs_TEXCOORD2.xy = (-u_xlat2.zw) + u_xlat0.xy;\n    u_xlat6.x = _ScreenParams.x * hlslcc_mtx4x4glstate_matrix_projection[0].x;\n    u_xlat6.y = _ScreenParams.y * hlslcc_mtx4x4glstate_matrix_projection[1].y;\n    u_xlat0.xy = u_xlat1.ww / abs(u_xlat6.xy);\n    u_xlat0.xy = vec2(_MaskSoftnessX, _MaskSoftnessY) * vec2(0.25, 0.25) + u_xlat0.xy;\n    vs_TEXCOORD2.zw = vec2(0.25, 0.25) / u_xlat0.xy;\n    return;\n}\n\n","\n#version 100\n\n#ifdef GL_FRAGMENT_PRECISION_HIGH\n    precision highp float;\n#else\n    precision mediump float;\n#endif\nprecision highp int;\nuniform lowp sampler2D _MainTex;\nuniform lowp sampler2D _FaceTex;\nvarying mediump vec4 vs_COLOR0;\nvarying highp vec2 vs_TEXCOORD0;\nvarying highp vec2 vs_TEXCOORD1;\n#define SV_Target0 gl_FragData[0]\nvec3 u_xlat0;\nlowp vec3 u_xlat10_0;\nbool u_xlatb0;\nmediump float u_xlat16_1;\nmediump float u_xlat16_3;\nvoid main()\n{\n    u_xlat10_0.x = texture2D(_MainTex, vs_TEXCOORD0.xy).w;\n    u_xlat16_1 = vs_COLOR0.w * u_xlat10_0.x + -0.00100000005;\n    u_xlat16_3 = u_xlat10_0.x * vs_COLOR0.w;\n    SV_Target0.w = u_xlat16_3;\n    u_xlatb0 = u_xlat16_1<0.0;\n    if(u_xlatb0){discard;}\n    u_xlat10_0.xyz = texture2D(_FaceTex, vs_TEXCOORD1.xy).xyz;\n    u_xlat0.xyz = u_xlat10_0.xyz * vs_COLOR0.xyz;\n    SV_Target0.xyz = u_xlat0.xyz;\n    return;\n}\n\n",0,0,1,0,0,["UNITY_UI_ALPHACLIP"],[["IGNOREPROJECTOR","true"],["QUEUE","Transparent"],["RenderType","Transparent"]]],[0,"\n#version 100\n\nuniform \tvec4 _ScreenParams;\nuniform \tvec4 hlslcc_mtx4x4unity_ObjectToWorld[4];\nuniform \tvec4 hlslcc_mtx4x4glstate_matrix_projection[4];\nuniform \tvec4 hlslcc_mtx4x4unity_MatrixVP[4];\nuniform \tvec4 _FaceTex_ST;\nuniform \tmediump vec4 _FaceColor;\nuniform \tfloat _VertexOffsetX;\nuniform \tfloat _VertexOffsetY;\nuniform \tvec4 _ClipRect;\nuniform \tfloat _MaskSoftnessX;\nuniform \tfloat _MaskSoftnessY;\nattribute highp vec4 in_POSITION0;\nattribute mediump vec4 in_COLOR0;\nattribute highp vec2 in_TEXCOORD0;\nattribute highp vec2 in_TEXCOORD1;\nvarying mediump vec4 vs_COLOR0;\nvarying highp vec2 vs_TEXCOORD0;\nvarying highp vec2 vs_TEXCOORD1;\nvarying highp vec4 vs_TEXCOORD2;\nvec2 u_xlat0;\nvec4 u_xlat1;\nvec4 u_xlat2;\nvec2 u_xlat6;\nfloat unity_roundEven(float x) { float y = floor(x + 0.5); return (y - x == 0.5) ? floor(0.5*y) * 2.0 : y; }\nvec2 unity_roundEven(vec2 a) { a.x = unity_roundEven(a.x); a.y = unity_roundEven(a.y); return a; }\nvec3 unity_roundEven(vec3 a) { a.x = unity_roundEven(a.x); a.y = unity_roundEven(a.y); a.z = unity_roundEven(a.z); return a; }\nvec4 unity_roundEven(vec4 a) { a.x = unity_roundEven(a.x); a.y = unity_roundEven(a.y); a.z = unity_roundEven(a.z); a.w = unity_roundEven(a.w); return a; }\n\nvoid main()\n{\n    u_xlat0.x = in_POSITION0.w * 0.5;\n    u_xlat0.xy = u_xlat0.xx / _ScreenParams.xy;\n    u_xlat6.xy = in_POSITION0.xy + vec2(_VertexOffsetX, _VertexOffsetY);\n    u_xlat0.xy = u_xlat0.xy + u_xlat6.xy;\n    u_xlat1 = u_xlat0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];\n    u_xlat1 = hlslcc_mtx4x4unity_ObjectToWorld[0] * u_xlat0.xxxx + u_xlat1;\n    u_xlat1 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat1;\n    u_xlat1 = u_xlat1 + hlslcc_mtx4x4unity_ObjectToWorld[3];\n    u_xlat2 = u_xlat1.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];\n    u_xlat2 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat1.xxxx + u_xlat2;\n    u_xlat2 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat1.zzzz + u_xlat2;\n    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat1.wwww + u_xlat2;\n    u_xlat6.xy = u_xlat1.xy / u_xlat1.ww;\n    u_xlat1.xy = _ScreenParams.xy * vec2(0.5, 0.5);\n    u_xlat6.xy = u_xlat6.xy * u_xlat1.xy;\n    u_xlat6.xy = unity_roundEven(u_xlat6.xy);\n    u_xlat6.xy = u_xlat6.xy / u_xlat1.xy;\n    gl_Position.xy = u_xlat1.ww * u_xlat6.xy;\n    gl_Position.zw = u_xlat1.zw;\n    vs_COLOR0 = in_COLOR0 * _FaceColor;\n    u_xlat6.x = in_TEXCOORD1.x * 0.000244140625;\n    u_xlat6.x = floor(u_xlat6.x);\n    u_xlat6.y = (-u_xlat6.x) * 4096.0 + in_TEXCOORD1.x;\n    u_xlat6.xy = u_xlat6.xy * _FaceTex_ST.xy;\n    vs_TEXCOORD1.xy = u_xlat6.xy * vec2(0.001953125, 0.001953125) + _FaceTex_ST.zw;\n    vs_TEXCOORD0.xy = in_TEXCOORD0.xy;\n    u_xlat2 = max(_ClipRect, vec4(-2e+10, -2e+10, -2e+10, -2e+10));\n    u_xlat2 = min(u_xlat2, vec4(2e+10, 2e+10, 2e+10, 2e+10));\n    u_xlat0.xy = u_xlat0.xy * vec2(2.0, 2.0) + (-u_xlat2.xy);\n    vs_TEXCOORD2.xy = (-u_xlat2.zw) + u_xlat0.xy;\n    u_xlat6.x = _ScreenParams.x * hlslcc_mtx4x4glstate_matrix_projection[0].x;\n    u_xlat6.y = _ScreenParams.y * hlslcc_mtx4x4glstate_matrix_projection[1].y;\n    u_xlat0.xy = u_xlat1.ww / abs(u_xlat6.xy);\n    u_xlat0.xy = vec2(_MaskSoftnessX, _MaskSoftnessY) * vec2(0.25, 0.25) + u_xlat0.xy;\n    vs_TEXCOORD2.zw = vec2(0.25, 0.25) / u_xlat0.xy;\n    return;\n}\n\n","\n#version 100\n\n#ifdef GL_FRAGMENT_PRECISION_HIGH\n    precision highp float;\n#else\n    precision mediump float;\n#endif\nprecision highp int;\nuniform \tvec4 _ClipRect;\nuniform lowp sampler2D _MainTex;\nuniform lowp sampler2D _FaceTex;\nvarying mediump vec4 vs_COLOR0;\nvarying highp vec2 vs_TEXCOORD0;\nvarying highp vec2 vs_TEXCOORD1;\nvarying highp vec4 vs_TEXCOORD2;\n#define SV_Target0 gl_FragData[0]\nvec3 u_xlat0;\nlowp vec3 u_xlat10_0;\nvec2 u_xlat1;\nmediump float u_xlat16_2;\nmediump float u_xlat16_5;\nvoid main()\n{\n    u_xlat10_0.xyz = texture2D(_FaceTex, vs_TEXCOORD1.xy).xyz;\n    u_xlat0.xyz = u_xlat10_0.xyz * vs_COLOR0.xyz;\n    u_xlat1.xy = (-_ClipRect.xy) + _ClipRect.zw;\n    u_xlat1.xy = u_xlat1.xy + -abs(vs_TEXCOORD2.xy);\n    u_xlat1.xy = u_xlat1.xy * vs_TEXCOORD2.zw;\n    u_xlat1.xy = clamp(u_xlat1.xy, 0.0, 1.0);\n    u_xlat16_2 = u_xlat1.y * u_xlat1.x;\n    SV_Target0.xyz = u_xlat0.xyz * vec3(u_xlat16_2);\n    u_xlat10_0.x = texture2D(_MainTex, vs_TEXCOORD0.xy).w;\n    u_xlat16_5 = u_xlat10_0.x * vs_COLOR0.w;\n    SV_Target0.w = u_xlat16_2 * u_xlat16_5;\n    return;\n}\n\n",0,0,2,0,0,["UNITY_UI_CLIP_RECT"],[["IGNOREPROJECTOR","true"],["QUEUE","Transparent"],["RenderType","Transparent"]]],[0,"\n#version 100\n\nuniform \tvec4 _ScreenParams;\nuniform \tvec4 hlslcc_mtx4x4unity_ObjectToWorld[4];\nuniform \tvec4 hlslcc_mtx4x4glstate_matrix_projection[4];\nuniform \tvec4 hlslcc_mtx4x4unity_MatrixVP[4];\nuniform \tvec4 _FaceTex_ST;\nuniform \tmediump vec4 _FaceColor;\nuniform \tfloat _VertexOffsetX;\nuniform \tfloat _VertexOffsetY;\nuniform \tvec4 _ClipRect;\nuniform \tfloat _MaskSoftnessX;\nuniform \tfloat _MaskSoftnessY;\nattribute highp vec4 in_POSITION0;\nattribute mediump vec4 in_COLOR0;\nattribute highp vec2 in_TEXCOORD0;\nattribute highp vec2 in_TEXCOORD1;\nvarying mediump vec4 vs_COLOR0;\nvarying highp vec2 vs_TEXCOORD0;\nvarying highp vec2 vs_TEXCOORD1;\nvarying highp vec4 vs_TEXCOORD2;\nvec2 u_xlat0;\nvec4 u_xlat1;\nvec4 u_xlat2;\nvec2 u_xlat6;\nfloat unity_roundEven(float x) { float y = floor(x + 0.5); return (y - x == 0.5) ? floor(0.5*y) * 2.0 : y; }\nvec2 unity_roundEven(vec2 a) { a.x = unity_roundEven(a.x); a.y = unity_roundEven(a.y); return a; }\nvec3 unity_roundEven(vec3 a) { a.x = unity_roundEven(a.x); a.y = unity_roundEven(a.y); a.z = unity_roundEven(a.z); return a; }\nvec4 unity_roundEven(vec4 a) { a.x = unity_roundEven(a.x); a.y = unity_roundEven(a.y); a.z = unity_roundEven(a.z); a.w = unity_roundEven(a.w); return a; }\n\nvoid main()\n{\n    u_xlat0.x = in_POSITION0.w * 0.5;\n    u_xlat0.xy = u_xlat0.xx / _ScreenParams.xy;\n    u_xlat6.xy = in_POSITION0.xy + vec2(_VertexOffsetX, _VertexOffsetY);\n    u_xlat0.xy = u_xlat0.xy + u_xlat6.xy;\n    u_xlat1 = u_xlat0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];\n    u_xlat1 = hlslcc_mtx4x4unity_ObjectToWorld[0] * u_xlat0.xxxx + u_xlat1;\n    u_xlat1 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat1;\n    u_xlat1 = u_xlat1 + hlslcc_mtx4x4unity_ObjectToWorld[3];\n    u_xlat2 = u_xlat1.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];\n    u_xlat2 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat1.xxxx + u_xlat2;\n    u_xlat2 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat1.zzzz + u_xlat2;\n    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat1.wwww + u_xlat2;\n    u_xlat6.xy = u_xlat1.xy / u_xlat1.ww;\n    u_xlat1.xy = _ScreenParams.xy * vec2(0.5, 0.5);\n    u_xlat6.xy = u_xlat6.xy * u_xlat1.xy;\n    u_xlat6.xy = unity_roundEven(u_xlat6.xy);\n    u_xlat6.xy = u_xlat6.xy / u_xlat1.xy;\n    gl_Position.xy = u_xlat1.ww * u_xlat6.xy;\n    gl_Position.zw = u_xlat1.zw;\n    vs_COLOR0 = in_COLOR0 * _FaceColor;\n    u_xlat6.x = in_TEXCOORD1.x * 0.000244140625;\n    u_xlat6.x = floor(u_xlat6.x);\n    u_xlat6.y = (-u_xlat6.x) * 4096.0 + in_TEXCOORD1.x;\n    u_xlat6.xy = u_xlat6.xy * _FaceTex_ST.xy;\n    vs_TEXCOORD1.xy = u_xlat6.xy * vec2(0.001953125, 0.001953125) + _FaceTex_ST.zw;\n    vs_TEXCOORD0.xy = in_TEXCOORD0.xy;\n    u_xlat2 = max(_ClipRect, vec4(-2e+10, -2e+10, -2e+10, -2e+10));\n    u_xlat2 = min(u_xlat2, vec4(2e+10, 2e+10, 2e+10, 2e+10));\n    u_xlat0.xy = u_xlat0.xy * vec2(2.0, 2.0) + (-u_xlat2.xy);\n    vs_TEXCOORD2.xy = (-u_xlat2.zw) + u_xlat0.xy;\n    u_xlat6.x = _ScreenParams.x * hlslcc_mtx4x4glstate_matrix_projection[0].x;\n    u_xlat6.y = _ScreenParams.y * hlslcc_mtx4x4glstate_matrix_projection[1].y;\n    u_xlat0.xy = u_xlat1.ww / abs(u_xlat6.xy);\n    u_xlat0.xy = vec2(_MaskSoftnessX, _MaskSoftnessY) * vec2(0.25, 0.25) + u_xlat0.xy;\n    vs_TEXCOORD2.zw = vec2(0.25, 0.25) / u_xlat0.xy;\n    return;\n}\n\n","\n#version 100\n\n#ifdef GL_FRAGMENT_PRECISION_HIGH\n    precision highp float;\n#else\n    precision mediump float;\n#endif\nprecision highp int;\nuniform \tvec4 _ClipRect;\nuniform lowp sampler2D _MainTex;\nuniform lowp sampler2D _FaceTex;\nvarying mediump vec4 vs_COLOR0;\nvarying highp vec2 vs_TEXCOORD0;\nvarying highp vec2 vs_TEXCOORD1;\nvarying highp vec4 vs_TEXCOORD2;\n#define SV_Target0 gl_FragData[0]\nvec3 u_xlat0;\nlowp vec3 u_xlat10_0;\nbool u_xlatb0;\nmediump float u_xlat16_1;\nmediump float u_xlat16_3;\nmediump float u_xlat16_5;\nvoid main()\n{\n    u_xlat0.xy = (-_ClipRect.xy) + _ClipRect.zw;\n    u_xlat0.xy = u_xlat0.xy + -abs(vs_TEXCOORD2.xy);\n    u_xlat0.xy = u_xlat0.xy * vs_TEXCOORD2.zw;\n    u_xlat0.xy = clamp(u_xlat0.xy, 0.0, 1.0);\n    u_xlat16_1 = u_xlat0.y * u_xlat0.x;\n    u_xlat10_0.x = texture2D(_MainTex, vs_TEXCOORD0.xy).w;\n    u_xlat16_3 = u_xlat10_0.x * vs_COLOR0.w;\n    u_xlat16_5 = u_xlat16_3 * u_xlat16_1 + -0.00100000005;\n    u_xlat16_3 = u_xlat16_1 * u_xlat16_3;\n    SV_Target0.w = u_xlat16_3;\n    u_xlatb0 = u_xlat16_5<0.0;\n    if(u_xlatb0){discard;}\n    u_xlat10_0.xyz = texture2D(_FaceTex, vs_TEXCOORD1.xy).xyz;\n    u_xlat0.xyz = u_xlat10_0.xyz * vs_COLOR0.xyz;\n    SV_Target0.xyz = vec3(u_xlat16_1) * u_xlat0.xyz;\n    return;\n}\n\n",0,0,3,0,0,["UNITY_UI_ALPHACLIP","UNITY_UI_CLIP_RECT"],[["IGNOREPROJECTOR","true"],["QUEUE","Transparent"],["RenderType","Transparent"]]]],["STEREO_CUBEMAP_RENDER_ON","STEREO_INSTANCING_ON","STEREO_MULTIVIEW_ON","UNITY_SINGLE_PASS_STEREO","UNITY_UI_ALPHACLIP","UNITY_UI_CLIP_RECT","__"],[[["__","UNITY_UI_CLIP_RECT"]],[["__","UNITY_UI_ALPHACLIP"]]],0,0,5,0,0,0,0,[["IGNOREPROJECTOR","true"],["QUEUE","Transparent"],["RenderType","Transparent"]],null,"",33,-1]],[["IGNOREPROJECTOR","true"],["QUEUE","Transparent"],["RenderType","Transparent"]],0]],0,424,"Assets/TextMesh Pro/Shaders/TMP_Bitmap.shader",["UNITY_UI_ALPHACLIP","UNITY_UI_CLIP_RECT","STEREO_CUBEMAP_RENDER_ON","STEREO_INSTANCING_ON","STEREO_MULTIVIEW_ON","UNITY_SINGLE_PASS_STEREO","__"],null,null,[],5],[[[0,[["TextMeshPro/Bitmap Custom Atlas",[[0,"\n#version 100\n\nuniform \tvec4 _ScreenParams;\nuniform \tvec4 hlslcc_mtx4x4unity_ObjectToWorld[4];\nuniform \tvec4 hlslcc_mtx4x4glstate_matrix_projection[4];\nuniform \tvec4 hlslcc_mtx4x4unity_MatrixVP[4];\nuniform \tvec4 _FaceTex_ST;\nuniform \tmediump vec4 _FaceColor;\nuniform \tfloat _VertexOffsetX;\nuniform \tfloat _VertexOffsetY;\nuniform \tvec4 _ClipRect;\nuniform \tfloat _MaskSoftnessX;\nuniform \tfloat _MaskSoftnessY;\nattribute highp vec4 in_POSITION0;\nattribute mediump vec4 in_COLOR0;\nattribute highp vec2 in_TEXCOORD0;\nattribute highp vec2 in_TEXCOORD1;\nvarying mediump vec4 vs_COLOR0;\nvarying highp vec2 vs_TEXCOORD0;\nvarying highp vec2 vs_TEXCOORD1;\nvarying highp vec4 vs_TEXCOORD2;\nvec2 u_xlat0;\nvec4 u_xlat1;\nvec4 u_xlat2;\nvec2 u_xlat6;\nfloat unity_roundEven(float x) { float y = floor(x + 0.5); return (y - x == 0.5) ? floor(0.5*y) * 2.0 : y; }\nvec2 unity_roundEven(vec2 a) { a.x = unity_roundEven(a.x); a.y = unity_roundEven(a.y); return a; }\nvec3 unity_roundEven(vec3 a) { a.x = unity_roundEven(a.x); a.y = unity_roundEven(a.y); a.z = unity_roundEven(a.z); return a; }\nvec4 unity_roundEven(vec4 a) { a.x = unity_roundEven(a.x); a.y = unity_roundEven(a.y); a.z = unity_roundEven(a.z); a.w = unity_roundEven(a.w); return a; }\n\nvoid main()\n{\n    u_xlat0.x = in_POSITION0.w * 0.5;\n    u_xlat0.xy = u_xlat0.xx / _ScreenParams.xy;\n    u_xlat6.xy = in_POSITION0.xy + vec2(_VertexOffsetX, _VertexOffsetY);\n    u_xlat0.xy = u_xlat0.xy + u_xlat6.xy;\n    u_xlat1 = u_xlat0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];\n    u_xlat1 = hlslcc_mtx4x4unity_ObjectToWorld[0] * u_xlat0.xxxx + u_xlat1;\n    u_xlat1 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat1;\n    u_xlat1 = u_xlat1 + hlslcc_mtx4x4unity_ObjectToWorld[3];\n    u_xlat2 = u_xlat1.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];\n    u_xlat2 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat1.xxxx + u_xlat2;\n    u_xlat2 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat1.zzzz + u_xlat2;\n    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat1.wwww + u_xlat2;\n    u_xlat6.xy = u_xlat1.xy / u_xlat1.ww;\n    u_xlat1.xy = _ScreenParams.xy * vec2(0.5, 0.5);\n    u_xlat6.xy = u_xlat6.xy * u_xlat1.xy;\n    u_xlat6.xy = unity_roundEven(u_xlat6.xy);\n    u_xlat6.xy = u_xlat6.xy / u_xlat1.xy;\n    gl_Position.xy = u_xlat1.ww * u_xlat6.xy;\n    gl_Position.zw = u_xlat1.zw;\n    vs_COLOR0 = in_COLOR0 * _FaceColor;\n    u_xlat6.x = in_TEXCOORD1.x * 0.000244140625;\n    u_xlat6.x = floor(u_xlat6.x);\n    u_xlat6.y = (-u_xlat6.x) * 4096.0 + in_TEXCOORD1.x;\n    u_xlat6.xy = u_xlat6.xy * _FaceTex_ST.xy;\n    vs_TEXCOORD1.xy = u_xlat6.xy * vec2(0.001953125, 0.001953125) + _FaceTex_ST.zw;\n    vs_TEXCOORD0.xy = in_TEXCOORD0.xy;\n    u_xlat2 = max(_ClipRect, vec4(-2e+10, -2e+10, -2e+10, -2e+10));\n    u_xlat2 = min(u_xlat2, vec4(2e+10, 2e+10, 2e+10, 2e+10));\n    u_xlat0.xy = u_xlat0.xy * vec2(2.0, 2.0) + (-u_xlat2.xy);\n    vs_TEXCOORD2.xy = (-u_xlat2.zw) + u_xlat0.xy;\n    u_xlat6.x = _ScreenParams.x * hlslcc_mtx4x4glstate_matrix_projection[0].x;\n    u_xlat6.y = _ScreenParams.y * hlslcc_mtx4x4glstate_matrix_projection[1].y;\n    u_xlat0.xy = u_xlat1.ww / abs(u_xlat6.xy);\n    u_xlat0.xy = vec2(_MaskSoftnessX, _MaskSoftnessY) * vec2(0.25, 0.25) + u_xlat0.xy;\n    vs_TEXCOORD2.zw = vec2(0.25, 0.25) / u_xlat0.xy;\n    return;\n}\n\n","\n#version 100\n\n#ifdef GL_FRAGMENT_PRECISION_HIGH\n    precision highp float;\n#else\n    precision mediump float;\n#endif\nprecision highp int;\nuniform lowp sampler2D _MainTex;\nuniform lowp sampler2D _FaceTex;\nvarying mediump vec4 vs_COLOR0;\nvarying highp vec2 vs_TEXCOORD0;\nvarying highp vec2 vs_TEXCOORD1;\n#define SV_Target0 gl_FragData[0]\nvec4 u_xlat0;\nlowp vec4 u_xlat10_0;\nlowp vec4 u_xlat10_1;\nvoid main()\n{\n    u_xlat10_0 = texture2D(_MainTex, vs_TEXCOORD0.xy);\n    u_xlat10_1 = texture2D(_FaceTex, vs_TEXCOORD1.xy);\n    u_xlat0 = u_xlat10_0 * u_xlat10_1;\n    u_xlat0 = u_xlat0 * vs_COLOR0;\n    SV_Target0 = u_xlat0;\n    return;\n}\n\n",0,0,0,0,0,[],[["IGNOREPROJECTOR","true"],["QUEUE","Transparent"],["RenderType","Transparent"]]],[0,"\n#version 100\n\nuniform \tvec4 _ScreenParams;\nuniform \tvec4 hlslcc_mtx4x4unity_ObjectToWorld[4];\nuniform \tvec4 hlslcc_mtx4x4glstate_matrix_projection[4];\nuniform \tvec4 hlslcc_mtx4x4unity_MatrixVP[4];\nuniform \tvec4 _FaceTex_ST;\nuniform \tmediump vec4 _FaceColor;\nuniform \tfloat _VertexOffsetX;\nuniform \tfloat _VertexOffsetY;\nuniform \tvec4 _ClipRect;\nuniform \tfloat _MaskSoftnessX;\nuniform \tfloat _MaskSoftnessY;\nattribute highp vec4 in_POSITION0;\nattribute mediump vec4 in_COLOR0;\nattribute highp vec2 in_TEXCOORD0;\nattribute highp vec2 in_TEXCOORD1;\nvarying mediump vec4 vs_COLOR0;\nvarying highp vec2 vs_TEXCOORD0;\nvarying highp vec2 vs_TEXCOORD1;\nvarying highp vec4 vs_TEXCOORD2;\nvec2 u_xlat0;\nvec4 u_xlat1;\nvec4 u_xlat2;\nvec2 u_xlat6;\nfloat unity_roundEven(float x) { float y = floor(x + 0.5); return (y - x == 0.5) ? floor(0.5*y) * 2.0 : y; }\nvec2 unity_roundEven(vec2 a) { a.x = unity_roundEven(a.x); a.y = unity_roundEven(a.y); return a; }\nvec3 unity_roundEven(vec3 a) { a.x = unity_roundEven(a.x); a.y = unity_roundEven(a.y); a.z = unity_roundEven(a.z); return a; }\nvec4 unity_roundEven(vec4 a) { a.x = unity_roundEven(a.x); a.y = unity_roundEven(a.y); a.z = unity_roundEven(a.z); a.w = unity_roundEven(a.w); return a; }\n\nvoid main()\n{\n    u_xlat0.x = in_POSITION0.w * 0.5;\n    u_xlat0.xy = u_xlat0.xx / _ScreenParams.xy;\n    u_xlat6.xy = in_POSITION0.xy + vec2(_VertexOffsetX, _VertexOffsetY);\n    u_xlat0.xy = u_xlat0.xy + u_xlat6.xy;\n    u_xlat1 = u_xlat0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];\n    u_xlat1 = hlslcc_mtx4x4unity_ObjectToWorld[0] * u_xlat0.xxxx + u_xlat1;\n    u_xlat1 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat1;\n    u_xlat1 = u_xlat1 + hlslcc_mtx4x4unity_ObjectToWorld[3];\n    u_xlat2 = u_xlat1.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];\n    u_xlat2 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat1.xxxx + u_xlat2;\n    u_xlat2 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat1.zzzz + u_xlat2;\n    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat1.wwww + u_xlat2;\n    u_xlat6.xy = u_xlat1.xy / u_xlat1.ww;\n    u_xlat1.xy = _ScreenParams.xy * vec2(0.5, 0.5);\n    u_xlat6.xy = u_xlat6.xy * u_xlat1.xy;\n    u_xlat6.xy = unity_roundEven(u_xlat6.xy);\n    u_xlat6.xy = u_xlat6.xy / u_xlat1.xy;\n    gl_Position.xy = u_xlat1.ww * u_xlat6.xy;\n    gl_Position.zw = u_xlat1.zw;\n    vs_COLOR0 = in_COLOR0 * _FaceColor;\n    u_xlat6.x = in_TEXCOORD1.x * 0.000244140625;\n    u_xlat6.x = floor(u_xlat6.x);\n    u_xlat6.y = (-u_xlat6.x) * 4096.0 + in_TEXCOORD1.x;\n    u_xlat6.xy = u_xlat6.xy * _FaceTex_ST.xy;\n    vs_TEXCOORD1.xy = u_xlat6.xy * vec2(0.001953125, 0.001953125) + _FaceTex_ST.zw;\n    vs_TEXCOORD0.xy = in_TEXCOORD0.xy;\n    u_xlat2 = max(_ClipRect, vec4(-2e+10, -2e+10, -2e+10, -2e+10));\n    u_xlat2 = min(u_xlat2, vec4(2e+10, 2e+10, 2e+10, 2e+10));\n    u_xlat0.xy = u_xlat0.xy * vec2(2.0, 2.0) + (-u_xlat2.xy);\n    vs_TEXCOORD2.xy = (-u_xlat2.zw) + u_xlat0.xy;\n    u_xlat6.x = _ScreenParams.x * hlslcc_mtx4x4glstate_matrix_projection[0].x;\n    u_xlat6.y = _ScreenParams.y * hlslcc_mtx4x4glstate_matrix_projection[1].y;\n    u_xlat0.xy = u_xlat1.ww / abs(u_xlat6.xy);\n    u_xlat0.xy = vec2(_MaskSoftnessX, _MaskSoftnessY) * vec2(0.25, 0.25) + u_xlat0.xy;\n    vs_TEXCOORD2.zw = vec2(0.25, 0.25) / u_xlat0.xy;\n    return;\n}\n\n","\n#version 100\n\n#ifdef GL_FRAGMENT_PRECISION_HIGH\n    precision highp float;\n#else\n    precision mediump float;\n#endif\nprecision highp int;\nuniform lowp sampler2D _MainTex;\nuniform lowp sampler2D _FaceTex;\nvarying mediump vec4 vs_COLOR0;\nvarying highp vec2 vs_TEXCOORD0;\nvarying highp vec2 vs_TEXCOORD1;\n#define SV_Target0 gl_FragData[0]\nvec4 u_xlat0;\nlowp vec4 u_xlat10_0;\nbool u_xlatb0;\nlowp vec4 u_xlat10_1;\nmediump float u_xlat16_2;\nvoid main()\n{\n    u_xlat10_0 = texture2D(_MainTex, vs_TEXCOORD0.xy);\n    u_xlat10_1 = texture2D(_FaceTex, vs_TEXCOORD1.xy);\n    u_xlat0 = u_xlat10_0 * u_xlat10_1;\n    u_xlat16_2 = u_xlat0.w * vs_COLOR0.w + -0.00100000005;\n    u_xlat0 = u_xlat0 * vs_COLOR0;\n    SV_Target0 = u_xlat0;\n    u_xlatb0 = u_xlat16_2<0.0;\n    if(u_xlatb0){discard;}\n    return;\n}\n\n",0,0,1,0,0,["UNITY_UI_ALPHACLIP"],[["IGNOREPROJECTOR","true"],["QUEUE","Transparent"],["RenderType","Transparent"]]],[0,"\n#version 100\n\nuniform \tvec4 _ScreenParams;\nuniform \tvec4 hlslcc_mtx4x4unity_ObjectToWorld[4];\nuniform \tvec4 hlslcc_mtx4x4glstate_matrix_projection[4];\nuniform \tvec4 hlslcc_mtx4x4unity_MatrixVP[4];\nuniform \tvec4 _FaceTex_ST;\nuniform \tmediump vec4 _FaceColor;\nuniform \tfloat _VertexOffsetX;\nuniform \tfloat _VertexOffsetY;\nuniform \tvec4 _ClipRect;\nuniform \tfloat _MaskSoftnessX;\nuniform \tfloat _MaskSoftnessY;\nattribute highp vec4 in_POSITION0;\nattribute mediump vec4 in_COLOR0;\nattribute highp vec2 in_TEXCOORD0;\nattribute highp vec2 in_TEXCOORD1;\nvarying mediump vec4 vs_COLOR0;\nvarying highp vec2 vs_TEXCOORD0;\nvarying highp vec2 vs_TEXCOORD1;\nvarying highp vec4 vs_TEXCOORD2;\nvec2 u_xlat0;\nvec4 u_xlat1;\nvec4 u_xlat2;\nvec2 u_xlat6;\nfloat unity_roundEven(float x) { float y = floor(x + 0.5); return (y - x == 0.5) ? floor(0.5*y) * 2.0 : y; }\nvec2 unity_roundEven(vec2 a) { a.x = unity_roundEven(a.x); a.y = unity_roundEven(a.y); return a; }\nvec3 unity_roundEven(vec3 a) { a.x = unity_roundEven(a.x); a.y = unity_roundEven(a.y); a.z = unity_roundEven(a.z); return a; }\nvec4 unity_roundEven(vec4 a) { a.x = unity_roundEven(a.x); a.y = unity_roundEven(a.y); a.z = unity_roundEven(a.z); a.w = unity_roundEven(a.w); return a; }\n\nvoid main()\n{\n    u_xlat0.x = in_POSITION0.w * 0.5;\n    u_xlat0.xy = u_xlat0.xx / _ScreenParams.xy;\n    u_xlat6.xy = in_POSITION0.xy + vec2(_VertexOffsetX, _VertexOffsetY);\n    u_xlat0.xy = u_xlat0.xy + u_xlat6.xy;\n    u_xlat1 = u_xlat0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];\n    u_xlat1 = hlslcc_mtx4x4unity_ObjectToWorld[0] * u_xlat0.xxxx + u_xlat1;\n    u_xlat1 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat1;\n    u_xlat1 = u_xlat1 + hlslcc_mtx4x4unity_ObjectToWorld[3];\n    u_xlat2 = u_xlat1.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];\n    u_xlat2 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat1.xxxx + u_xlat2;\n    u_xlat2 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat1.zzzz + u_xlat2;\n    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat1.wwww + u_xlat2;\n    u_xlat6.xy = u_xlat1.xy / u_xlat1.ww;\n    u_xlat1.xy = _ScreenParams.xy * vec2(0.5, 0.5);\n    u_xlat6.xy = u_xlat6.xy * u_xlat1.xy;\n    u_xlat6.xy = unity_roundEven(u_xlat6.xy);\n    u_xlat6.xy = u_xlat6.xy / u_xlat1.xy;\n    gl_Position.xy = u_xlat1.ww * u_xlat6.xy;\n    gl_Position.zw = u_xlat1.zw;\n    vs_COLOR0 = in_COLOR0 * _FaceColor;\n    u_xlat6.x = in_TEXCOORD1.x * 0.000244140625;\n    u_xlat6.x = floor(u_xlat6.x);\n    u_xlat6.y = (-u_xlat6.x) * 4096.0 + in_TEXCOORD1.x;\n    u_xlat6.xy = u_xlat6.xy * _FaceTex_ST.xy;\n    vs_TEXCOORD1.xy = u_xlat6.xy * vec2(0.001953125, 0.001953125) + _FaceTex_ST.zw;\n    vs_TEXCOORD0.xy = in_TEXCOORD0.xy;\n    u_xlat2 = max(_ClipRect, vec4(-2e+10, -2e+10, -2e+10, -2e+10));\n    u_xlat2 = min(u_xlat2, vec4(2e+10, 2e+10, 2e+10, 2e+10));\n    u_xlat0.xy = u_xlat0.xy * vec2(2.0, 2.0) + (-u_xlat2.xy);\n    vs_TEXCOORD2.xy = (-u_xlat2.zw) + u_xlat0.xy;\n    u_xlat6.x = _ScreenParams.x * hlslcc_mtx4x4glstate_matrix_projection[0].x;\n    u_xlat6.y = _ScreenParams.y * hlslcc_mtx4x4glstate_matrix_projection[1].y;\n    u_xlat0.xy = u_xlat1.ww / abs(u_xlat6.xy);\n    u_xlat0.xy = vec2(_MaskSoftnessX, _MaskSoftnessY) * vec2(0.25, 0.25) + u_xlat0.xy;\n    vs_TEXCOORD2.zw = vec2(0.25, 0.25) / u_xlat0.xy;\n    return;\n}\n\n","\n#version 100\n\n#ifdef GL_FRAGMENT_PRECISION_HIGH\n    precision highp float;\n#else\n    precision mediump float;\n#endif\nprecision highp int;\nuniform \tvec4 _ClipRect;\nuniform lowp sampler2D _MainTex;\nuniform lowp sampler2D _FaceTex;\nvarying mediump vec4 vs_COLOR0;\nvarying highp vec2 vs_TEXCOORD0;\nvarying highp vec2 vs_TEXCOORD1;\nvarying highp vec4 vs_TEXCOORD2;\n#define SV_Target0 gl_FragData[0]\nvec4 u_xlat0;\nlowp vec4 u_xlat10_0;\nvec2 u_xlat1;\nlowp vec4 u_xlat10_1;\nmediump float u_xlat16_2;\nvoid main()\n{\n    u_xlat10_0 = texture2D(_MainTex, vs_TEXCOORD0.xy);\n    u_xlat10_1 = texture2D(_FaceTex, vs_TEXCOORD1.xy);\n    u_xlat0 = u_xlat10_0 * u_xlat10_1;\n    u_xlat0 = u_xlat0 * vs_COLOR0;\n    u_xlat1.xy = (-_ClipRect.xy) + _ClipRect.zw;\n    u_xlat1.xy = u_xlat1.xy + -abs(vs_TEXCOORD2.xy);\n    u_xlat1.xy = u_xlat1.xy * vs_TEXCOORD2.zw;\n    u_xlat1.xy = clamp(u_xlat1.xy, 0.0, 1.0);\n    u_xlat16_2 = u_xlat1.y * u_xlat1.x;\n    SV_Target0 = u_xlat0 * vec4(u_xlat16_2);\n    return;\n}\n\n",0,0,2,0,0,["UNITY_UI_CLIP_RECT"],[["IGNOREPROJECTOR","true"],["QUEUE","Transparent"],["RenderType","Transparent"]]],[0,"\n#version 100\n\nuniform \tvec4 _ScreenParams;\nuniform \tvec4 hlslcc_mtx4x4unity_ObjectToWorld[4];\nuniform \tvec4 hlslcc_mtx4x4glstate_matrix_projection[4];\nuniform \tvec4 hlslcc_mtx4x4unity_MatrixVP[4];\nuniform \tvec4 _FaceTex_ST;\nuniform \tmediump vec4 _FaceColor;\nuniform \tfloat _VertexOffsetX;\nuniform \tfloat _VertexOffsetY;\nuniform \tvec4 _ClipRect;\nuniform \tfloat _MaskSoftnessX;\nuniform \tfloat _MaskSoftnessY;\nattribute highp vec4 in_POSITION0;\nattribute mediump vec4 in_COLOR0;\nattribute highp vec2 in_TEXCOORD0;\nattribute highp vec2 in_TEXCOORD1;\nvarying mediump vec4 vs_COLOR0;\nvarying highp vec2 vs_TEXCOORD0;\nvarying highp vec2 vs_TEXCOORD1;\nvarying highp vec4 vs_TEXCOORD2;\nvec2 u_xlat0;\nvec4 u_xlat1;\nvec4 u_xlat2;\nvec2 u_xlat6;\nfloat unity_roundEven(float x) { float y = floor(x + 0.5); return (y - x == 0.5) ? floor(0.5*y) * 2.0 : y; }\nvec2 unity_roundEven(vec2 a) { a.x = unity_roundEven(a.x); a.y = unity_roundEven(a.y); return a; }\nvec3 unity_roundEven(vec3 a) { a.x = unity_roundEven(a.x); a.y = unity_roundEven(a.y); a.z = unity_roundEven(a.z); return a; }\nvec4 unity_roundEven(vec4 a) { a.x = unity_roundEven(a.x); a.y = unity_roundEven(a.y); a.z = unity_roundEven(a.z); a.w = unity_roundEven(a.w); return a; }\n\nvoid main()\n{\n    u_xlat0.x = in_POSITION0.w * 0.5;\n    u_xlat0.xy = u_xlat0.xx / _ScreenParams.xy;\n    u_xlat6.xy = in_POSITION0.xy + vec2(_VertexOffsetX, _VertexOffsetY);\n    u_xlat0.xy = u_xlat0.xy + u_xlat6.xy;\n    u_xlat1 = u_xlat0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];\n    u_xlat1 = hlslcc_mtx4x4unity_ObjectToWorld[0] * u_xlat0.xxxx + u_xlat1;\n    u_xlat1 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat1;\n    u_xlat1 = u_xlat1 + hlslcc_mtx4x4unity_ObjectToWorld[3];\n    u_xlat2 = u_xlat1.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];\n    u_xlat2 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat1.xxxx + u_xlat2;\n    u_xlat2 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat1.zzzz + u_xlat2;\n    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat1.wwww + u_xlat2;\n    u_xlat6.xy = u_xlat1.xy / u_xlat1.ww;\n    u_xlat1.xy = _ScreenParams.xy * vec2(0.5, 0.5);\n    u_xlat6.xy = u_xlat6.xy * u_xlat1.xy;\n    u_xlat6.xy = unity_roundEven(u_xlat6.xy);\n    u_xlat6.xy = u_xlat6.xy / u_xlat1.xy;\n    gl_Position.xy = u_xlat1.ww * u_xlat6.xy;\n    gl_Position.zw = u_xlat1.zw;\n    vs_COLOR0 = in_COLOR0 * _FaceColor;\n    u_xlat6.x = in_TEXCOORD1.x * 0.000244140625;\n    u_xlat6.x = floor(u_xlat6.x);\n    u_xlat6.y = (-u_xlat6.x) * 4096.0 + in_TEXCOORD1.x;\n    u_xlat6.xy = u_xlat6.xy * _FaceTex_ST.xy;\n    vs_TEXCOORD1.xy = u_xlat6.xy * vec2(0.001953125, 0.001953125) + _FaceTex_ST.zw;\n    vs_TEXCOORD0.xy = in_TEXCOORD0.xy;\n    u_xlat2 = max(_ClipRect, vec4(-2e+10, -2e+10, -2e+10, -2e+10));\n    u_xlat2 = min(u_xlat2, vec4(2e+10, 2e+10, 2e+10, 2e+10));\n    u_xlat0.xy = u_xlat0.xy * vec2(2.0, 2.0) + (-u_xlat2.xy);\n    vs_TEXCOORD2.xy = (-u_xlat2.zw) + u_xlat0.xy;\n    u_xlat6.x = _ScreenParams.x * hlslcc_mtx4x4glstate_matrix_projection[0].x;\n    u_xlat6.y = _ScreenParams.y * hlslcc_mtx4x4glstate_matrix_projection[1].y;\n    u_xlat0.xy = u_xlat1.ww / abs(u_xlat6.xy);\n    u_xlat0.xy = vec2(_MaskSoftnessX, _MaskSoftnessY) * vec2(0.25, 0.25) + u_xlat0.xy;\n    vs_TEXCOORD2.zw = vec2(0.25, 0.25) / u_xlat0.xy;\n    return;\n}\n\n","\n#version 100\n\n#ifdef GL_FRAGMENT_PRECISION_HIGH\n    precision highp float;\n#else\n    precision mediump float;\n#endif\nprecision highp int;\nuniform \tvec4 _ClipRect;\nuniform lowp sampler2D _MainTex;\nuniform lowp sampler2D _FaceTex;\nvarying mediump vec4 vs_COLOR0;\nvarying highp vec2 vs_TEXCOORD0;\nvarying highp vec2 vs_TEXCOORD1;\nvarying highp vec4 vs_TEXCOORD2;\n#define SV_Target0 gl_FragData[0]\nvec4 u_xlat0;\nmediump vec4 u_xlat16_0;\nlowp vec4 u_xlat10_0;\nvec2 u_xlat1;\nlowp vec4 u_xlat10_1;\nbool u_xlatb1;\nmediump float u_xlat16_2;\nmediump float u_xlat16_5;\nvoid main()\n{\n    u_xlat10_0 = texture2D(_MainTex, vs_TEXCOORD0.xy);\n    u_xlat10_1 = texture2D(_FaceTex, vs_TEXCOORD1.xy);\n    u_xlat0 = u_xlat10_0 * u_xlat10_1;\n    u_xlat0 = u_xlat0 * vs_COLOR0;\n    u_xlat1.xy = (-_ClipRect.xy) + _ClipRect.zw;\n    u_xlat1.xy = u_xlat1.xy + -abs(vs_TEXCOORD2.xy);\n    u_xlat1.xy = u_xlat1.xy * vs_TEXCOORD2.zw;\n    u_xlat1.xy = clamp(u_xlat1.xy, 0.0, 1.0);\n    u_xlat16_2 = u_xlat1.y * u_xlat1.x;\n    u_xlat16_5 = u_xlat0.w * u_xlat16_2 + -0.00100000005;\n    u_xlat16_0 = u_xlat0 * vec4(u_xlat16_2);\n    SV_Target0 = u_xlat16_0;\n    u_xlatb1 = u_xlat16_5<0.0;\n    if(u_xlatb1){discard;}\n    return;\n}\n\n",0,0,3,0,0,["UNITY_UI_ALPHACLIP","UNITY_UI_CLIP_RECT"],[["IGNOREPROJECTOR","true"],["QUEUE","Transparent"],["RenderType","Transparent"]]]],["STEREO_CUBEMAP_RENDER_ON","STEREO_INSTANCING_ON","STEREO_MULTIVIEW_ON","UNITY_SINGLE_PASS_STEREO","UNITY_UI_ALPHACLIP","UNITY_UI_CLIP_RECT","__"],[[["__","UNITY_UI_CLIP_RECT"]],[["__","UNITY_UI_ALPHACLIP"]]],0,0,5,0,0,0,0,[["IGNOREPROJECTOR","true"],["QUEUE","Transparent"],["RenderType","Transparent"]],null,"",33,-1]],[["IGNOREPROJECTOR","true"],["QUEUE","Transparent"],["RenderType","Transparent"]],0]],0,420,"Assets/TextMesh Pro/Shaders/TMP_Bitmap-Custom-Atlas.shader",["UNITY_UI_ALPHACLIP","UNITY_UI_CLIP_RECT","STEREO_CUBEMAP_RENDER_ON","STEREO_INSTANCING_ON","STEREO_MULTIVIEW_ON","UNITY_SINGLE_PASS_STEREO","__"],null,null,[],5],[[[0,[["TextMeshPro/Distance Field",[[0,"\n#version 100\n\nuniform \tvec3 _WorldSpaceCameraPos;\nuniform \tvec4 _ScreenParams;\nuniform \tvec4 hlslcc_mtx4x4unity_ObjectToWorld[4];\nuniform \tvec4 hlslcc_mtx4x4unity_WorldToObject[4];\nuniform \tvec4 hlslcc_mtx4x4glstate_matrix_projection[4];\nuniform \tvec4 hlslcc_mtx4x4unity_MatrixVP[4];\nuniform \tfloat _FaceDilate;\nuniform \tfloat _OutlineSoftness;\nuniform \tfloat _OutlineWidth;\nuniform \tvec4 hlslcc_mtx4x4_EnvMatrix[4];\nuniform \tfloat _WeightNormal;\nuniform \tfloat _WeightBold;\nuniform \tfloat _ScaleRatioA;\nuniform \tfloat _VertexOffsetX;\nuniform \tfloat _VertexOffsetY;\nuniform \tvec4 _ClipRect;\nuniform \tfloat _MaskSoftnessX;\nuniform \tfloat _MaskSoftnessY;\nuniform \tfloat _GradientScale;\nuniform \tfloat _ScaleX;\nuniform \tfloat _ScaleY;\nuniform \tfloat _PerspectiveFilter;\nuniform \tfloat _Sharpness;\nuniform \tvec4 _FaceTex_ST;\nuniform \tvec4 _OutlineTex_ST;\nattribute highp vec4 in_POSITION0;\nattribute highp vec3 in_NORMAL0;\nattribute mediump vec4 in_COLOR0;\nattribute highp vec2 in_TEXCOORD0;\nattribute highp vec2 in_TEXCOORD1;\nvarying mediump vec4 vs_COLOR0;\nvarying highp vec2 vs_TEXCOORD0;\nvarying highp vec4 vs_TEXCOORD1;\nvarying highp vec4 vs_TEXCOORD2;\nvarying highp vec3 vs_TEXCOORD3;\nvarying highp vec4 vs_TEXCOORD5;\nvec3 u_xlat0;\nvec4 u_xlat1;\nvec4 u_xlat2;\nvec4 u_xlat3;\nvec3 u_xlat6;\nvec2 u_xlat8;\nbool u_xlatb8;\nfloat u_xlat12;\nbool u_xlatb12;\nfloat u_xlat13;\nvoid main()\n{\n    u_xlat0.xy = in_POSITION0.xy + vec2(_VertexOffsetX, _VertexOffsetY);\n    u_xlat1 = u_xlat0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];\n    u_xlat1 = hlslcc_mtx4x4unity_ObjectToWorld[0] * u_xlat0.xxxx + u_xlat1;\n    u_xlat1 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat1;\n    u_xlat2 = u_xlat1 + hlslcc_mtx4x4unity_ObjectToWorld[3];\n    u_xlat1.xyz = hlslcc_mtx4x4unity_ObjectToWorld[3].xyz * in_POSITION0.www + u_xlat1.xyz;\n    u_xlat1.xyz = (-u_xlat1.xyz) + _WorldSpaceCameraPos.xyz;\n    u_xlat3 = u_xlat2.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];\n    u_xlat3 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat2.xxxx + u_xlat3;\n    u_xlat3 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat2.zzzz + u_xlat3;\n    u_xlat2 = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat2.wwww + u_xlat3;\n    gl_Position = u_xlat2;\n    vs_COLOR0 = in_COLOR0;\n    vs_TEXCOORD0.xy = in_TEXCOORD0.xy;\n    u_xlat8.xy = _ScreenParams.yy * hlslcc_mtx4x4glstate_matrix_projection[1].xy;\n    u_xlat8.xy = hlslcc_mtx4x4glstate_matrix_projection[0].xy * _ScreenParams.xx + u_xlat8.xy;\n    u_xlat8.xy = abs(u_xlat8.xy) * vec2(_ScaleX, _ScaleY);\n    u_xlat8.xy = u_xlat2.ww / u_xlat8.xy;\n    u_xlat13 = dot(u_xlat8.xy, u_xlat8.xy);\n    u_xlat8.xy = vec2(_MaskSoftnessX, _MaskSoftnessY) * vec2(0.25, 0.25) + u_xlat8.xy;\n    vs_TEXCOORD2.zw = vec2(0.25, 0.25) / u_xlat8.xy;\n    u_xlat8.x = inversesqrt(u_xlat13);\n    u_xlat12 = abs(in_TEXCOORD1.y) * _GradientScale;\n    u_xlat13 = _Sharpness + 1.0;\n    u_xlat12 = u_xlat12 * u_xlat13;\n    u_xlat13 = u_xlat12 * u_xlat8.x;\n    u_xlat2.x = (-_PerspectiveFilter) + 1.0;\n    u_xlat2.x = abs(u_xlat13) * u_xlat2.x;\n    u_xlat8.x = u_xlat8.x * u_xlat12 + (-u_xlat2.x);\n    u_xlat3.x = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[0].xyz);\n    u_xlat3.y = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[1].xyz);\n    u_xlat3.z = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[2].xyz);\n    u_xlat12 = dot(u_xlat3.xyz, u_xlat3.xyz);\n    u_xlat12 = inversesqrt(u_xlat12);\n    u_xlat6.xyz = vec3(u_xlat12) * u_xlat3.xyz;\n    u_xlat12 = dot(u_xlat1.xyz, u_xlat1.xyz);\n    u_xlat12 = inversesqrt(u_xlat12);\n    u_xlat3.xyz = vec3(u_xlat12) * u_xlat1.xyz;\n    u_xlat12 = dot(u_xlat6.xyz, u_xlat3.xyz);\n    u_xlat8.x = abs(u_xlat12) * u_xlat8.x + u_xlat2.x;\n    u_xlatb12 = hlslcc_mtx4x4glstate_matrix_projection[3].w==0.0;\n    u_xlat6.x = (u_xlatb12) ? u_xlat8.x : u_xlat13;\n    u_xlatb8 = 0.0>=in_TEXCOORD1.y;\n    u_xlat8.x = u_xlatb8 ? 1.0 : float(0.0);\n    u_xlat12 = (-_WeightNormal) + _WeightBold;\n    u_xlat8.x = u_xlat8.x * u_xlat12 + _WeightNormal;\n    u_xlat8.x = u_xlat8.x * 0.25 + _FaceDilate;\n    u_xlat8.x = u_xlat8.x * _ScaleRatioA;\n    u_xlat6.z = u_xlat8.x * 0.5;\n    vs_TEXCOORD1.yw = u_xlat6.xz;\n    u_xlat12 = 0.5 / u_xlat6.x;\n    u_xlat13 = (-_OutlineWidth) * _ScaleRatioA + 1.0;\n    u_xlat13 = (-_OutlineSoftness) * _ScaleRatioA + u_xlat13;\n    u_xlat13 = u_xlat13 * 0.5 + (-u_xlat12);\n    vs_TEXCOORD1.x = (-u_xlat8.x) * 0.5 + u_xlat13;\n    u_xlat8.x = (-u_xlat8.x) * 0.5 + 0.5;\n    vs_TEXCOORD1.z = u_xlat12 + u_xlat8.x;\n    u_xlat2 = max(_ClipRect, vec4(-2e+10, -2e+10, -2e+10, -2e+10));\n    u_xlat2 = min(u_xlat2, vec4(2e+10, 2e+10, 2e+10, 2e+10));\n    u_xlat0.xy = u_xlat0.xy * vec2(2.0, 2.0) + (-u_xlat2.xy);\n    vs_TEXCOORD2.xy = (-u_xlat2.zw) + u_xlat0.xy;\n    u_xlat0.xyz = u_xlat1.yyy * hlslcc_mtx4x4_EnvMatrix[1].xyz;\n    u_xlat0.xyz = hlslcc_mtx4x4_EnvMatrix[0].xyz * u_xlat1.xxx + u_xlat0.xyz;\n    vs_TEXCOORD3.xyz = hlslcc_mtx4x4_EnvMatrix[2].xyz * u_xlat1.zzz + u_xlat0.xyz;\n    u_xlat0.x = in_TEXCOORD1.x * 0.000244140625;\n    u_xlat8.x = floor(u_xlat0.x);\n    u_xlat8.y = (-u_xlat8.x) * 4096.0 + in_TEXCOORD1.x;\n    u_xlat0.xy = u_xlat8.xy * vec2(0.001953125, 0.001953125);\n    vs_TEXCOORD5.xy = u_xlat0.xy * _FaceTex_ST.xy + _FaceTex_ST.zw;\n    vs_TEXCOORD5.zw = u_xlat0.xy * _OutlineTex_ST.xy + _OutlineTex_ST.zw;\n    return;\n}\n\n","\n#version 100\n\n#ifdef GL_FRAGMENT_PRECISION_HIGH\n    precision highp float;\n#else\n    precision mediump float;\n#endif\nprecision highp int;\nuniform \tvec4 _Time;\nuniform \tfloat _FaceUVSpeedX;\nuniform \tfloat _FaceUVSpeedY;\nuniform \tmediump vec4 _FaceColor;\nuniform \tfloat _OutlineSoftness;\nuniform \tfloat _OutlineUVSpeedX;\nuniform \tfloat _OutlineUVSpeedY;\nuniform \tmediump vec4 _OutlineColor;\nuniform \tfloat _OutlineWidth;\nuniform \tfloat _ScaleRatioA;\nuniform lowp sampler2D _MainTex;\nuniform lowp sampler2D _FaceTex;\nuniform lowp sampler2D _OutlineTex;\nvarying mediump vec4 vs_COLOR0;\nvarying highp vec2 vs_TEXCOORD0;\nvarying highp vec4 vs_TEXCOORD1;\nvarying highp vec4 vs_TEXCOORD5;\n#define SV_Target0 gl_FragData[0]\nvec3 u_xlat0;\nmediump vec4 u_xlat16_0;\nlowp vec4 u_xlat10_0;\nmediump float u_xlat16_1;\nvec4 u_xlat2;\nmediump vec4 u_xlat16_2;\nmediump vec3 u_xlat16_3;\nfloat u_xlat4;\nlowp vec4 u_xlat10_4;\nfloat u_xlat5;\nbool u_xlatb5;\nmediump float u_xlat16_6;\nfloat u_xlat9;\nmediump float u_xlat16_11;\nvoid main()\n{\n    u_xlat10_0.x = texture2D(_MainTex, vs_TEXCOORD0.xy).w;\n    u_xlat5 = u_xlat10_0.x + (-vs_TEXCOORD1.x);\n    u_xlat0.x = (-u_xlat10_0.x) + vs_TEXCOORD1.z;\n    u_xlatb5 = u_xlat5<0.0;\n    if(u_xlatb5){discard;}\n    u_xlat5 = _OutlineWidth * _ScaleRatioA;\n    u_xlat5 = u_xlat5 * vs_TEXCOORD1.y;\n    u_xlat16_1 = min(u_xlat5, 1.0);\n    u_xlat16_6 = u_xlat5 * 0.5;\n    u_xlat16_1 = sqrt(u_xlat16_1);\n    u_xlat16_11 = u_xlat0.x * vs_TEXCOORD1.y + u_xlat16_6;\n    u_xlat16_11 = clamp(u_xlat16_11, 0.0, 1.0);\n    u_xlat16_6 = u_xlat0.x * vs_TEXCOORD1.y + (-u_xlat16_6);\n    u_xlat16_1 = u_xlat16_1 * u_xlat16_11;\n    u_xlat0.xy = vec2(_OutlineUVSpeedX, _OutlineUVSpeedY) * _Time.yy + vs_TEXCOORD5.zw;\n    u_xlat10_0 = texture2D(_OutlineTex, u_xlat0.xy);\n    u_xlat2 = u_xlat10_0 * _OutlineColor;\n    u_xlat16_3.xyz = vs_COLOR0.xyz * _FaceColor.xyz;\n    u_xlat0.xy = vec2(_FaceUVSpeedX, _FaceUVSpeedY) * _Time.yy + vs_TEXCOORD5.xy;\n    u_xlat10_4 = texture2D(_FaceTex, u_xlat0.xy);\n    u_xlat0.xyz = u_xlat16_3.xyz * u_xlat10_4.xyz;\n    u_xlat4 = u_xlat10_4.w * _FaceColor.w;\n    u_xlat16_3.xyz = u_xlat0.xyz * vec3(u_xlat4);\n    u_xlat16_2.xyz = u_xlat2.xyz * u_xlat2.www + (-u_xlat16_3.xyz);\n    u_xlat16_2.w = _OutlineColor.w * u_xlat10_0.w + (-u_xlat4);\n    u_xlat16_2 = vec4(u_xlat16_1) * u_xlat16_2;\n    u_xlat16_0.xyz = u_xlat0.xyz * vec3(u_xlat4) + u_xlat16_2.xyz;\n    u_xlat16_0.w = _FaceColor.w * u_xlat10_4.w + u_xlat16_2.w;\n    u_xlat4 = _OutlineSoftness * _ScaleRatioA;\n    u_xlat9 = u_xlat4 * vs_TEXCOORD1.y;\n    u_xlat16_1 = u_xlat4 * vs_TEXCOORD1.y + 1.0;\n    u_xlat16_6 = u_xlat9 * 0.5 + u_xlat16_6;\n    u_xlat16_1 = u_xlat16_6 / u_xlat16_1;\n    u_xlat16_1 = clamp(u_xlat16_1, 0.0, 1.0);\n    u_xlat16_1 = (-u_xlat16_1) + 1.0;\n    u_xlat16_0 = u_xlat16_0 * vec4(u_xlat16_1);\n    SV_Target0 = u_xlat16_0 * vs_COLOR0.wwww;\n    return;\n}\n\n",0,0,0,0,0,[],[["IGNOREPROJECTOR","true"],["QUEUE","Transparent"],["RenderType","Transparent"]]],[0,"\n#version 100\n\nuniform \tvec3 _WorldSpaceCameraPos;\nuniform \tvec4 _ScreenParams;\nuniform \tvec4 hlslcc_mtx4x4unity_ObjectToWorld[4];\nuniform \tvec4 hlslcc_mtx4x4unity_WorldToObject[4];\nuniform \tvec4 hlslcc_mtx4x4glstate_matrix_projection[4];\nuniform \tvec4 hlslcc_mtx4x4unity_MatrixVP[4];\nuniform \tfloat _FaceDilate;\nuniform \tfloat _OutlineSoftness;\nuniform \tfloat _OutlineWidth;\nuniform \tvec4 hlslcc_mtx4x4_EnvMatrix[4];\nuniform \tfloat _WeightNormal;\nuniform \tfloat _WeightBold;\nuniform \tfloat _ScaleRatioA;\nuniform \tfloat _VertexOffsetX;\nuniform \tfloat _VertexOffsetY;\nuniform \tvec4 _ClipRect;\nuniform \tfloat _MaskSoftnessX;\nuniform \tfloat _MaskSoftnessY;\nuniform \tfloat _GradientScale;\nuniform \tfloat _ScaleX;\nuniform \tfloat _ScaleY;\nuniform \tfloat _PerspectiveFilter;\nuniform \tfloat _Sharpness;\nuniform \tvec4 _FaceTex_ST;\nuniform \tvec4 _OutlineTex_ST;\nattribute highp vec4 in_POSITION0;\nattribute highp vec3 in_NORMAL0;\nattribute mediump vec4 in_COLOR0;\nattribute highp vec2 in_TEXCOORD0;\nattribute highp vec2 in_TEXCOORD1;\nvarying mediump vec4 vs_COLOR0;\nvarying highp vec2 vs_TEXCOORD0;\nvarying highp vec4 vs_TEXCOORD1;\nvarying highp vec4 vs_TEXCOORD2;\nvarying highp vec3 vs_TEXCOORD3;\nvarying highp vec4 vs_TEXCOORD5;\nvec3 u_xlat0;\nvec4 u_xlat1;\nvec4 u_xlat2;\nvec4 u_xlat3;\nvec3 u_xlat6;\nvec2 u_xlat8;\nbool u_xlatb8;\nfloat u_xlat12;\nbool u_xlatb12;\nfloat u_xlat13;\nvoid main()\n{\n    u_xlat0.xy = in_POSITION0.xy + vec2(_VertexOffsetX, _VertexOffsetY);\n    u_xlat1 = u_xlat0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];\n    u_xlat1 = hlslcc_mtx4x4unity_ObjectToWorld[0] * u_xlat0.xxxx + u_xlat1;\n    u_xlat1 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat1;\n    u_xlat2 = u_xlat1 + hlslcc_mtx4x4unity_ObjectToWorld[3];\n    u_xlat1.xyz = hlslcc_mtx4x4unity_ObjectToWorld[3].xyz * in_POSITION0.www + u_xlat1.xyz;\n    u_xlat1.xyz = (-u_xlat1.xyz) + _WorldSpaceCameraPos.xyz;\n    u_xlat3 = u_xlat2.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];\n    u_xlat3 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat2.xxxx + u_xlat3;\n    u_xlat3 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat2.zzzz + u_xlat3;\n    u_xlat2 = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat2.wwww + u_xlat3;\n    gl_Position = u_xlat2;\n    vs_COLOR0 = in_COLOR0;\n    vs_TEXCOORD0.xy = in_TEXCOORD0.xy;\n    u_xlat8.xy = _ScreenParams.yy * hlslcc_mtx4x4glstate_matrix_projection[1].xy;\n    u_xlat8.xy = hlslcc_mtx4x4glstate_matrix_projection[0].xy * _ScreenParams.xx + u_xlat8.xy;\n    u_xlat8.xy = abs(u_xlat8.xy) * vec2(_ScaleX, _ScaleY);\n    u_xlat8.xy = u_xlat2.ww / u_xlat8.xy;\n    u_xlat13 = dot(u_xlat8.xy, u_xlat8.xy);\n    u_xlat8.xy = vec2(_MaskSoftnessX, _MaskSoftnessY) * vec2(0.25, 0.25) + u_xlat8.xy;\n    vs_TEXCOORD2.zw = vec2(0.25, 0.25) / u_xlat8.xy;\n    u_xlat8.x = inversesqrt(u_xlat13);\n    u_xlat12 = abs(in_TEXCOORD1.y) * _GradientScale;\n    u_xlat13 = _Sharpness + 1.0;\n    u_xlat12 = u_xlat12 * u_xlat13;\n    u_xlat13 = u_xlat12 * u_xlat8.x;\n    u_xlat2.x = (-_PerspectiveFilter) + 1.0;\n    u_xlat2.x = abs(u_xlat13) * u_xlat2.x;\n    u_xlat8.x = u_xlat8.x * u_xlat12 + (-u_xlat2.x);\n    u_xlat3.x = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[0].xyz);\n    u_xlat3.y = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[1].xyz);\n    u_xlat3.z = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[2].xyz);\n    u_xlat12 = dot(u_xlat3.xyz, u_xlat3.xyz);\n    u_xlat12 = inversesqrt(u_xlat12);\n    u_xlat6.xyz = vec3(u_xlat12) * u_xlat3.xyz;\n    u_xlat12 = dot(u_xlat1.xyz, u_xlat1.xyz);\n    u_xlat12 = inversesqrt(u_xlat12);\n    u_xlat3.xyz = vec3(u_xlat12) * u_xlat1.xyz;\n    u_xlat12 = dot(u_xlat6.xyz, u_xlat3.xyz);\n    u_xlat8.x = abs(u_xlat12) * u_xlat8.x + u_xlat2.x;\n    u_xlatb12 = hlslcc_mtx4x4glstate_matrix_projection[3].w==0.0;\n    u_xlat6.x = (u_xlatb12) ? u_xlat8.x : u_xlat13;\n    u_xlatb8 = 0.0>=in_TEXCOORD1.y;\n    u_xlat8.x = u_xlatb8 ? 1.0 : float(0.0);\n    u_xlat12 = (-_WeightNormal) + _WeightBold;\n    u_xlat8.x = u_xlat8.x * u_xlat12 + _WeightNormal;\n    u_xlat8.x = u_xlat8.x * 0.25 + _FaceDilate;\n    u_xlat8.x = u_xlat8.x * _ScaleRatioA;\n    u_xlat6.z = u_xlat8.x * 0.5;\n    vs_TEXCOORD1.yw = u_xlat6.xz;\n    u_xlat12 = 0.5 / u_xlat6.x;\n    u_xlat13 = (-_OutlineWidth) * _ScaleRatioA + 1.0;\n    u_xlat13 = (-_OutlineSoftness) * _ScaleRatioA + u_xlat13;\n    u_xlat13 = u_xlat13 * 0.5 + (-u_xlat12);\n    vs_TEXCOORD1.x = (-u_xlat8.x) * 0.5 + u_xlat13;\n    u_xlat8.x = (-u_xlat8.x) * 0.5 + 0.5;\n    vs_TEXCOORD1.z = u_xlat12 + u_xlat8.x;\n    u_xlat2 = max(_ClipRect, vec4(-2e+10, -2e+10, -2e+10, -2e+10));\n    u_xlat2 = min(u_xlat2, vec4(2e+10, 2e+10, 2e+10, 2e+10));\n    u_xlat0.xy = u_xlat0.xy * vec2(2.0, 2.0) + (-u_xlat2.xy);\n    vs_TEXCOORD2.xy = (-u_xlat2.zw) + u_xlat0.xy;\n    u_xlat0.xyz = u_xlat1.yyy * hlslcc_mtx4x4_EnvMatrix[1].xyz;\n    u_xlat0.xyz = hlslcc_mtx4x4_EnvMatrix[0].xyz * u_xlat1.xxx + u_xlat0.xyz;\n    vs_TEXCOORD3.xyz = hlslcc_mtx4x4_EnvMatrix[2].xyz * u_xlat1.zzz + u_xlat0.xyz;\n    u_xlat0.x = in_TEXCOORD1.x * 0.000244140625;\n    u_xlat8.x = floor(u_xlat0.x);\n    u_xlat8.y = (-u_xlat8.x) * 4096.0 + in_TEXCOORD1.x;\n    u_xlat0.xy = u_xlat8.xy * vec2(0.001953125, 0.001953125);\n    vs_TEXCOORD5.xy = u_xlat0.xy * _FaceTex_ST.xy + _FaceTex_ST.zw;\n    vs_TEXCOORD5.zw = u_xlat0.xy * _OutlineTex_ST.xy + _OutlineTex_ST.zw;\n    return;\n}\n\n","\n#version 100\n\n#ifdef GL_FRAGMENT_PRECISION_HIGH\n    precision highp float;\n#else\n    precision mediump float;\n#endif\nprecision highp int;\nuniform \tvec4 _Time;\nuniform \tfloat _FaceUVSpeedX;\nuniform \tfloat _FaceUVSpeedY;\nuniform \tmediump vec4 _FaceColor;\nuniform \tfloat _OutlineSoftness;\nuniform \tfloat _OutlineUVSpeedX;\nuniform \tfloat _OutlineUVSpeedY;\nuniform \tmediump vec4 _OutlineColor;\nuniform \tfloat _OutlineWidth;\nuniform \tfloat _ScaleRatioA;\nuniform lowp sampler2D _MainTex;\nuniform lowp sampler2D _FaceTex;\nuniform lowp sampler2D _OutlineTex;\nvarying mediump vec4 vs_COLOR0;\nvarying highp vec2 vs_TEXCOORD0;\nvarying highp vec4 vs_TEXCOORD1;\nvarying highp vec4 vs_TEXCOORD5;\n#define SV_Target0 gl_FragData[0]\nvec3 u_xlat0;\nmediump vec4 u_xlat16_0;\nlowp vec4 u_xlat10_0;\nmediump float u_xlat16_1;\nvec4 u_xlat2;\nmediump vec4 u_xlat16_2;\nmediump vec4 u_xlat16_3;\nfloat u_xlat4;\nlowp vec4 u_xlat10_4;\nbool u_xlatb4;\nfloat u_xlat5;\nbool u_xlatb5;\nmediump float u_xlat16_6;\nmediump float u_xlat16_11;\nvoid main()\n{\n    u_xlat10_0.x = texture2D(_MainTex, vs_TEXCOORD0.xy).w;\n    u_xlat5 = u_xlat10_0.x + (-vs_TEXCOORD1.x);\n    u_xlat0.x = (-u_xlat10_0.x) + vs_TEXCOORD1.z;\n    u_xlatb5 = u_xlat5<0.0;\n    if(u_xlatb5){discard;}\n    u_xlat5 = _OutlineWidth * _ScaleRatioA;\n    u_xlat5 = u_xlat5 * vs_TEXCOORD1.y;\n    u_xlat16_1 = min(u_xlat5, 1.0);\n    u_xlat16_6 = u_xlat5 * 0.5;\n    u_xlat16_1 = sqrt(u_xlat16_1);\n    u_xlat16_11 = u_xlat0.x * vs_TEXCOORD1.y + u_xlat16_6;\n    u_xlat16_11 = clamp(u_xlat16_11, 0.0, 1.0);\n    u_xlat16_6 = u_xlat0.x * vs_TEXCOORD1.y + (-u_xlat16_6);\n    u_xlat16_1 = u_xlat16_1 * u_xlat16_11;\n    u_xlat0.xy = vec2(_OutlineUVSpeedX, _OutlineUVSpeedY) * _Time.yy + vs_TEXCOORD5.zw;\n    u_xlat10_0 = texture2D(_OutlineTex, u_xlat0.xy);\n    u_xlat2 = u_xlat10_0 * _OutlineColor;\n    u_xlat16_3.xyz = vs_COLOR0.xyz * _FaceColor.xyz;\n    u_xlat0.xy = vec2(_FaceUVSpeedX, _FaceUVSpeedY) * _Time.yy + vs_TEXCOORD5.xy;\n    u_xlat10_4 = texture2D(_FaceTex, u_xlat0.xy);\n    u_xlat0.xyz = u_xlat16_3.xyz * u_xlat10_4.xyz;\n    u_xlat4 = u_xlat10_4.w * _FaceColor.w;\n    u_xlat16_3.xyz = u_xlat0.xyz * vec3(u_xlat4);\n    u_xlat16_2.xyz = u_xlat2.xyz * u_xlat2.www + (-u_xlat16_3.xyz);\n    u_xlat16_2.w = _OutlineColor.w * u_xlat10_0.w + (-u_xlat4);\n    u_xlat16_2 = vec4(u_xlat16_1) * u_xlat16_2;\n    u_xlat16_3.w = _FaceColor.w * u_xlat10_4.w + u_xlat16_2.w;\n    u_xlat16_3.xyz = u_xlat0.xyz * vec3(u_xlat4) + u_xlat16_2.xyz;\n    u_xlat0.x = _OutlineSoftness * _ScaleRatioA;\n    u_xlat5 = u_xlat0.x * vs_TEXCOORD1.y;\n    u_xlat16_1 = u_xlat0.x * vs_TEXCOORD1.y + 1.0;\n    u_xlat16_6 = u_xlat5 * 0.5 + u_xlat16_6;\n    u_xlat16_1 = u_xlat16_6 / u_xlat16_1;\n    u_xlat16_1 = clamp(u_xlat16_1, 0.0, 1.0);\n    u_xlat16_1 = (-u_xlat16_1) + 1.0;\n    u_xlat16_6 = u_xlat16_3.w * u_xlat16_1 + -0.00100000005;\n    u_xlat16_0 = vec4(u_xlat16_1) * u_xlat16_3;\n    SV_Target0 = u_xlat16_0 * vs_COLOR0.wwww;\n    u_xlatb4 = u_xlat16_6<0.0;\n    if(u_xlatb4){discard;}\n    return;\n}\n\n",0,0,1,0,0,["UNITY_UI_ALPHACLIP"],[["IGNOREPROJECTOR","true"],["QUEUE","Transparent"],["RenderType","Transparent"]]],[0,"\n#version 100\n\nuniform \tvec3 _WorldSpaceCameraPos;\nuniform \tvec4 _ScreenParams;\nuniform \tvec4 hlslcc_mtx4x4unity_ObjectToWorld[4];\nuniform \tvec4 hlslcc_mtx4x4unity_WorldToObject[4];\nuniform \tvec4 hlslcc_mtx4x4glstate_matrix_projection[4];\nuniform \tvec4 hlslcc_mtx4x4unity_MatrixVP[4];\nuniform \tfloat _FaceDilate;\nuniform \tfloat _OutlineSoftness;\nuniform \tfloat _OutlineWidth;\nuniform \tvec4 hlslcc_mtx4x4_EnvMatrix[4];\nuniform \tfloat _WeightNormal;\nuniform \tfloat _WeightBold;\nuniform \tfloat _ScaleRatioA;\nuniform \tfloat _VertexOffsetX;\nuniform \tfloat _VertexOffsetY;\nuniform \tvec4 _ClipRect;\nuniform \tfloat _MaskSoftnessX;\nuniform \tfloat _MaskSoftnessY;\nuniform \tfloat _GradientScale;\nuniform \tfloat _ScaleX;\nuniform \tfloat _ScaleY;\nuniform \tfloat _PerspectiveFilter;\nuniform \tfloat _Sharpness;\nuniform \tvec4 _FaceTex_ST;\nuniform \tvec4 _OutlineTex_ST;\nattribute highp vec4 in_POSITION0;\nattribute highp vec3 in_NORMAL0;\nattribute mediump vec4 in_COLOR0;\nattribute highp vec2 in_TEXCOORD0;\nattribute highp vec2 in_TEXCOORD1;\nvarying mediump vec4 vs_COLOR0;\nvarying highp vec2 vs_TEXCOORD0;\nvarying highp vec4 vs_TEXCOORD1;\nvarying highp vec4 vs_TEXCOORD2;\nvarying highp vec3 vs_TEXCOORD3;\nvarying highp vec4 vs_TEXCOORD5;\nvec3 u_xlat0;\nvec4 u_xlat1;\nvec4 u_xlat2;\nvec4 u_xlat3;\nvec3 u_xlat6;\nvec2 u_xlat8;\nbool u_xlatb8;\nfloat u_xlat12;\nbool u_xlatb12;\nfloat u_xlat13;\nvoid main()\n{\n    u_xlat0.xy = in_POSITION0.xy + vec2(_VertexOffsetX, _VertexOffsetY);\n    u_xlat1 = u_xlat0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];\n    u_xlat1 = hlslcc_mtx4x4unity_ObjectToWorld[0] * u_xlat0.xxxx + u_xlat1;\n    u_xlat1 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat1;\n    u_xlat2 = u_xlat1 + hlslcc_mtx4x4unity_ObjectToWorld[3];\n    u_xlat1.xyz = hlslcc_mtx4x4unity_ObjectToWorld[3].xyz * in_POSITION0.www + u_xlat1.xyz;\n    u_xlat1.xyz = (-u_xlat1.xyz) + _WorldSpaceCameraPos.xyz;\n    u_xlat3 = u_xlat2.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];\n    u_xlat3 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat2.xxxx + u_xlat3;\n    u_xlat3 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat2.zzzz + u_xlat3;\n    u_xlat2 = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat2.wwww + u_xlat3;\n    gl_Position = u_xlat2;\n    vs_COLOR0 = in_COLOR0;\n    vs_TEXCOORD0.xy = in_TEXCOORD0.xy;\n    u_xlat8.xy = _ScreenParams.yy * hlslcc_mtx4x4glstate_matrix_projection[1].xy;\n    u_xlat8.xy = hlslcc_mtx4x4glstate_matrix_projection[0].xy * _ScreenParams.xx + u_xlat8.xy;\n    u_xlat8.xy = abs(u_xlat8.xy) * vec2(_ScaleX, _ScaleY);\n    u_xlat8.xy = u_xlat2.ww / u_xlat8.xy;\n    u_xlat13 = dot(u_xlat8.xy, u_xlat8.xy);\n    u_xlat8.xy = vec2(_MaskSoftnessX, _MaskSoftnessY) * vec2(0.25, 0.25) + u_xlat8.xy;\n    vs_TEXCOORD2.zw = vec2(0.25, 0.25) / u_xlat8.xy;\n    u_xlat8.x = inversesqrt(u_xlat13);\n    u_xlat12 = abs(in_TEXCOORD1.y) * _GradientScale;\n    u_xlat13 = _Sharpness + 1.0;\n    u_xlat12 = u_xlat12 * u_xlat13;\n    u_xlat13 = u_xlat12 * u_xlat8.x;\n    u_xlat2.x = (-_PerspectiveFilter) + 1.0;\n    u_xlat2.x = abs(u_xlat13) * u_xlat2.x;\n    u_xlat8.x = u_xlat8.x * u_xlat12 + (-u_xlat2.x);\n    u_xlat3.x = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[0].xyz);\n    u_xlat3.y = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[1].xyz);\n    u_xlat3.z = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[2].xyz);\n    u_xlat12 = dot(u_xlat3.xyz, u_xlat3.xyz);\n    u_xlat12 = inversesqrt(u_xlat12);\n    u_xlat6.xyz = vec3(u_xlat12) * u_xlat3.xyz;\n    u_xlat12 = dot(u_xlat1.xyz, u_xlat1.xyz);\n    u_xlat12 = inversesqrt(u_xlat12);\n    u_xlat3.xyz = vec3(u_xlat12) * u_xlat1.xyz;\n    u_xlat12 = dot(u_xlat6.xyz, u_xlat3.xyz);\n    u_xlat8.x = abs(u_xlat12) * u_xlat8.x + u_xlat2.x;\n    u_xlatb12 = hlslcc_mtx4x4glstate_matrix_projection[3].w==0.0;\n    u_xlat6.x = (u_xlatb12) ? u_xlat8.x : u_xlat13;\n    u_xlatb8 = 0.0>=in_TEXCOORD1.y;\n    u_xlat8.x = u_xlatb8 ? 1.0 : float(0.0);\n    u_xlat12 = (-_WeightNormal) + _WeightBold;\n    u_xlat8.x = u_xlat8.x * u_xlat12 + _WeightNormal;\n    u_xlat8.x = u_xlat8.x * 0.25 + _FaceDilate;\n    u_xlat8.x = u_xlat8.x * _ScaleRatioA;\n    u_xlat6.z = u_xlat8.x * 0.5;\n    vs_TEXCOORD1.yw = u_xlat6.xz;\n    u_xlat12 = 0.5 / u_xlat6.x;\n    u_xlat13 = (-_OutlineWidth) * _ScaleRatioA + 1.0;\n    u_xlat13 = (-_OutlineSoftness) * _ScaleRatioA + u_xlat13;\n    u_xlat13 = u_xlat13 * 0.5 + (-u_xlat12);\n    vs_TEXCOORD1.x = (-u_xlat8.x) * 0.5 + u_xlat13;\n    u_xlat8.x = (-u_xlat8.x) * 0.5 + 0.5;\n    vs_TEXCOORD1.z = u_xlat12 + u_xlat8.x;\n    u_xlat2 = max(_ClipRect, vec4(-2e+10, -2e+10, -2e+10, -2e+10));\n    u_xlat2 = min(u_xlat2, vec4(2e+10, 2e+10, 2e+10, 2e+10));\n    u_xlat0.xy = u_xlat0.xy * vec2(2.0, 2.0) + (-u_xlat2.xy);\n    vs_TEXCOORD2.xy = (-u_xlat2.zw) + u_xlat0.xy;\n    u_xlat0.xyz = u_xlat1.yyy * hlslcc_mtx4x4_EnvMatrix[1].xyz;\n    u_xlat0.xyz = hlslcc_mtx4x4_EnvMatrix[0].xyz * u_xlat1.xxx + u_xlat0.xyz;\n    vs_TEXCOORD3.xyz = hlslcc_mtx4x4_EnvMatrix[2].xyz * u_xlat1.zzz + u_xlat0.xyz;\n    u_xlat0.x = in_TEXCOORD1.x * 0.000244140625;\n    u_xlat8.x = floor(u_xlat0.x);\n    u_xlat8.y = (-u_xlat8.x) * 4096.0 + in_TEXCOORD1.x;\n    u_xlat0.xy = u_xlat8.xy * vec2(0.001953125, 0.001953125);\n    vs_TEXCOORD5.xy = u_xlat0.xy * _FaceTex_ST.xy + _FaceTex_ST.zw;\n    vs_TEXCOORD5.zw = u_xlat0.xy * _OutlineTex_ST.xy + _OutlineTex_ST.zw;\n    return;\n}\n\n","\n#version 100\n\n#ifdef GL_FRAGMENT_PRECISION_HIGH\n    precision highp float;\n#else\n    precision mediump float;\n#endif\nprecision highp int;\nuniform \tvec4 _Time;\nuniform \tfloat _FaceUVSpeedX;\nuniform \tfloat _FaceUVSpeedY;\nuniform \tmediump vec4 _FaceColor;\nuniform \tfloat _OutlineSoftness;\nuniform \tfloat _OutlineUVSpeedX;\nuniform \tfloat _OutlineUVSpeedY;\nuniform \tmediump vec4 _OutlineColor;\nuniform \tfloat _OutlineWidth;\nuniform \tfloat _ScaleRatioA;\nuniform \tvec4 _ClipRect;\nuniform lowp sampler2D _MainTex;\nuniform lowp sampler2D _FaceTex;\nuniform lowp sampler2D _OutlineTex;\nvarying mediump vec4 vs_COLOR0;\nvarying highp vec2 vs_TEXCOORD0;\nvarying highp vec4 vs_TEXCOORD1;\nvarying highp vec4 vs_TEXCOORD2;\nvarying highp vec4 vs_TEXCOORD5;\n#define SV_Target0 gl_FragData[0]\nvec3 u_xlat0;\nmediump vec4 u_xlat16_0;\nlowp vec4 u_xlat10_0;\nmediump float u_xlat16_1;\nvec4 u_xlat2;\nmediump vec4 u_xlat16_2;\nmediump vec3 u_xlat16_3;\nvec2 u_xlat4;\nlowp vec4 u_xlat10_4;\nfloat u_xlat5;\nbool u_xlatb5;\nmediump float u_xlat16_6;\nfloat u_xlat9;\nmediump float u_xlat16_11;\nvoid main()\n{\n    u_xlat10_0.x = texture2D(_MainTex, vs_TEXCOORD0.xy).w;\n    u_xlat5 = u_xlat10_0.x + (-vs_TEXCOORD1.x);\n    u_xlat0.x = (-u_xlat10_0.x) + vs_TEXCOORD1.z;\n    u_xlatb5 = u_xlat5<0.0;\n    if(u_xlatb5){discard;}\n    u_xlat5 = _OutlineWidth * _ScaleRatioA;\n    u_xlat5 = u_xlat5 * vs_TEXCOORD1.y;\n    u_xlat16_1 = min(u_xlat5, 1.0);\n    u_xlat16_6 = u_xlat5 * 0.5;\n    u_xlat16_1 = sqrt(u_xlat16_1);\n    u_xlat16_11 = u_xlat0.x * vs_TEXCOORD1.y + u_xlat16_6;\n    u_xlat16_11 = clamp(u_xlat16_11, 0.0, 1.0);\n    u_xlat16_6 = u_xlat0.x * vs_TEXCOORD1.y + (-u_xlat16_6);\n    u_xlat16_1 = u_xlat16_1 * u_xlat16_11;\n    u_xlat0.xy = vec2(_OutlineUVSpeedX, _OutlineUVSpeedY) * _Time.yy + vs_TEXCOORD5.zw;\n    u_xlat10_0 = texture2D(_OutlineTex, u_xlat0.xy);\n    u_xlat2 = u_xlat10_0 * _OutlineColor;\n    u_xlat16_3.xyz = vs_COLOR0.xyz * _FaceColor.xyz;\n    u_xlat0.xy = vec2(_FaceUVSpeedX, _FaceUVSpeedY) * _Time.yy + vs_TEXCOORD5.xy;\n    u_xlat10_4 = texture2D(_FaceTex, u_xlat0.xy);\n    u_xlat0.xyz = u_xlat16_3.xyz * u_xlat10_4.xyz;\n    u_xlat4.x = u_xlat10_4.w * _FaceColor.w;\n    u_xlat16_3.xyz = u_xlat0.xyz * u_xlat4.xxx;\n    u_xlat16_2.xyz = u_xlat2.xyz * u_xlat2.www + (-u_xlat16_3.xyz);\n    u_xlat16_2.w = _OutlineColor.w * u_xlat10_0.w + (-u_xlat4.x);\n    u_xlat16_2 = vec4(u_xlat16_1) * u_xlat16_2;\n    u_xlat16_0.xyz = u_xlat0.xyz * u_xlat4.xxx + u_xlat16_2.xyz;\n    u_xlat16_0.w = _FaceColor.w * u_xlat10_4.w + u_xlat16_2.w;\n    u_xlat4.x = _OutlineSoftness * _ScaleRatioA;\n    u_xlat9 = u_xlat4.x * vs_TEXCOORD1.y;\n    u_xlat16_1 = u_xlat4.x * vs_TEXCOORD1.y + 1.0;\n    u_xlat16_6 = u_xlat9 * 0.5 + u_xlat16_6;\n    u_xlat16_1 = u_xlat16_6 / u_xlat16_1;\n    u_xlat16_1 = clamp(u_xlat16_1, 0.0, 1.0);\n    u_xlat16_1 = (-u_xlat16_1) + 1.0;\n    u_xlat16_0 = u_xlat16_0 * vec4(u_xlat16_1);\n    u_xlat4.xy = (-_ClipRect.xy) + _ClipRect.zw;\n    u_xlat4.xy = u_xlat4.xy + -abs(vs_TEXCOORD2.xy);\n    u_xlat4.xy = u_xlat4.xy * vs_TEXCOORD2.zw;\n    u_xlat4.xy = clamp(u_xlat4.xy, 0.0, 1.0);\n    u_xlat16_1 = u_xlat4.y * u_xlat4.x;\n    u_xlat16_0 = u_xlat16_0 * vec4(u_xlat16_1);\n    SV_Target0 = u_xlat16_0 * vs_COLOR0.wwww;\n    return;\n}\n\n",0,0,2,0,0,["UNITY_UI_CLIP_RECT"],[["IGNOREPROJECTOR","true"],["QUEUE","Transparent"],["RenderType","Transparent"]]],[0,"\n#version 100\n\nuniform \tvec3 _WorldSpaceCameraPos;\nuniform \tvec4 _ScreenParams;\nuniform \tvec4 hlslcc_mtx4x4unity_ObjectToWorld[4];\nuniform \tvec4 hlslcc_mtx4x4unity_WorldToObject[4];\nuniform \tvec4 hlslcc_mtx4x4glstate_matrix_projection[4];\nuniform \tvec4 hlslcc_mtx4x4unity_MatrixVP[4];\nuniform \tfloat _FaceDilate;\nuniform \tfloat _OutlineSoftness;\nuniform \tfloat _OutlineWidth;\nuniform \tvec4 hlslcc_mtx4x4_EnvMatrix[4];\nuniform \tfloat _WeightNormal;\nuniform \tfloat _WeightBold;\nuniform \tfloat _ScaleRatioA;\nuniform \tfloat _VertexOffsetX;\nuniform \tfloat _VertexOffsetY;\nuniform \tvec4 _ClipRect;\nuniform \tfloat _MaskSoftnessX;\nuniform \tfloat _MaskSoftnessY;\nuniform \tfloat _GradientScale;\nuniform \tfloat _ScaleX;\nuniform \tfloat _ScaleY;\nuniform \tfloat _PerspectiveFilter;\nuniform \tfloat _Sharpness;\nuniform \tvec4 _FaceTex_ST;\nuniform \tvec4 _OutlineTex_ST;\nattribute highp vec4 in_POSITION0;\nattribute highp vec3 in_NORMAL0;\nattribute mediump vec4 in_COLOR0;\nattribute highp vec2 in_TEXCOORD0;\nattribute highp vec2 in_TEXCOORD1;\nvarying mediump vec4 vs_COLOR0;\nvarying highp vec2 vs_TEXCOORD0;\nvarying highp vec4 vs_TEXCOORD1;\nvarying highp vec4 vs_TEXCOORD2;\nvarying highp vec3 vs_TEXCOORD3;\nvarying highp vec4 vs_TEXCOORD5;\nvec3 u_xlat0;\nvec4 u_xlat1;\nvec4 u_xlat2;\nvec4 u_xlat3;\nvec3 u_xlat6;\nvec2 u_xlat8;\nbool u_xlatb8;\nfloat u_xlat12;\nbool u_xlatb12;\nfloat u_xlat13;\nvoid main()\n{\n    u_xlat0.xy = in_POSITION0.xy + vec2(_VertexOffsetX, _VertexOffsetY);\n    u_xlat1 = u_xlat0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];\n    u_xlat1 = hlslcc_mtx4x4unity_ObjectToWorld[0] * u_xlat0.xxxx + u_xlat1;\n    u_xlat1 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat1;\n    u_xlat2 = u_xlat1 + hlslcc_mtx4x4unity_ObjectToWorld[3];\n    u_xlat1.xyz = hlslcc_mtx4x4unity_ObjectToWorld[3].xyz * in_POSITION0.www + u_xlat1.xyz;\n    u_xlat1.xyz = (-u_xlat1.xyz) + _WorldSpaceCameraPos.xyz;\n    u_xlat3 = u_xlat2.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];\n    u_xlat3 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat2.xxxx + u_xlat3;\n    u_xlat3 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat2.zzzz + u_xlat3;\n    u_xlat2 = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat2.wwww + u_xlat3;\n    gl_Position = u_xlat2;\n    vs_COLOR0 = in_COLOR0;\n    vs_TEXCOORD0.xy = in_TEXCOORD0.xy;\n    u_xlat8.xy = _ScreenParams.yy * hlslcc_mtx4x4glstate_matrix_projection[1].xy;\n    u_xlat8.xy = hlslcc_mtx4x4glstate_matrix_projection[0].xy * _ScreenParams.xx + u_xlat8.xy;\n    u_xlat8.xy = abs(u_xlat8.xy) * vec2(_ScaleX, _ScaleY);\n    u_xlat8.xy = u_xlat2.ww / u_xlat8.xy;\n    u_xlat13 = dot(u_xlat8.xy, u_xlat8.xy);\n    u_xlat8.xy = vec2(_MaskSoftnessX, _MaskSoftnessY) * vec2(0.25, 0.25) + u_xlat8.xy;\n    vs_TEXCOORD2.zw = vec2(0.25, 0.25) / u_xlat8.xy;\n    u_xlat8.x = inversesqrt(u_xlat13);\n    u_xlat12 = abs(in_TEXCOORD1.y) * _GradientScale;\n    u_xlat13 = _Sharpness + 1.0;\n    u_xlat12 = u_xlat12 * u_xlat13;\n    u_xlat13 = u_xlat12 * u_xlat8.x;\n    u_xlat2.x = (-_PerspectiveFilter) + 1.0;\n    u_xlat2.x = abs(u_xlat13) * u_xlat2.x;\n    u_xlat8.x = u_xlat8.x * u_xlat12 + (-u_xlat2.x);\n    u_xlat3.x = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[0].xyz);\n    u_xlat3.y = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[1].xyz);\n    u_xlat3.z = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[2].xyz);\n    u_xlat12 = dot(u_xlat3.xyz, u_xlat3.xyz);\n    u_xlat12 = inversesqrt(u_xlat12);\n    u_xlat6.xyz = vec3(u_xlat12) * u_xlat3.xyz;\n    u_xlat12 = dot(u_xlat1.xyz, u_xlat1.xyz);\n    u_xlat12 = inversesqrt(u_xlat12);\n    u_xlat3.xyz = vec3(u_xlat12) * u_xlat1.xyz;\n    u_xlat12 = dot(u_xlat6.xyz, u_xlat3.xyz);\n    u_xlat8.x = abs(u_xlat12) * u_xlat8.x + u_xlat2.x;\n    u_xlatb12 = hlslcc_mtx4x4glstate_matrix_projection[3].w==0.0;\n    u_xlat6.x = (u_xlatb12) ? u_xlat8.x : u_xlat13;\n    u_xlatb8 = 0.0>=in_TEXCOORD1.y;\n    u_xlat8.x = u_xlatb8 ? 1.0 : float(0.0);\n    u_xlat12 = (-_WeightNormal) + _WeightBold;\n    u_xlat8.x = u_xlat8.x * u_xlat12 + _WeightNormal;\n    u_xlat8.x = u_xlat8.x * 0.25 + _FaceDilate;\n    u_xlat8.x = u_xlat8.x * _ScaleRatioA;\n    u_xlat6.z = u_xlat8.x * 0.5;\n    vs_TEXCOORD1.yw = u_xlat6.xz;\n    u_xlat12 = 0.5 / u_xlat6.x;\n    u_xlat13 = (-_OutlineWidth) * _ScaleRatioA + 1.0;\n    u_xlat13 = (-_OutlineSoftness) * _ScaleRatioA + u_xlat13;\n    u_xlat13 = u_xlat13 * 0.5 + (-u_xlat12);\n    vs_TEXCOORD1.x = (-u_xlat8.x) * 0.5 + u_xlat13;\n    u_xlat8.x = (-u_xlat8.x) * 0.5 + 0.5;\n    vs_TEXCOORD1.z = u_xlat12 + u_xlat8.x;\n    u_xlat2 = max(_ClipRect, vec4(-2e+10, -2e+10, -2e+10, -2e+10));\n    u_xlat2 = min(u_xlat2, vec4(2e+10, 2e+10, 2e+10, 2e+10));\n    u_xlat0.xy = u_xlat0.xy * vec2(2.0, 2.0) + (-u_xlat2.xy);\n    vs_TEXCOORD2.xy = (-u_xlat2.zw) + u_xlat0.xy;\n    u_xlat0.xyz = u_xlat1.yyy * hlslcc_mtx4x4_EnvMatrix[1].xyz;\n    u_xlat0.xyz = hlslcc_mtx4x4_EnvMatrix[0].xyz * u_xlat1.xxx + u_xlat0.xyz;\n    vs_TEXCOORD3.xyz = hlslcc_mtx4x4_EnvMatrix[2].xyz * u_xlat1.zzz + u_xlat0.xyz;\n    u_xlat0.x = in_TEXCOORD1.x * 0.000244140625;\n    u_xlat8.x = floor(u_xlat0.x);\n    u_xlat8.y = (-u_xlat8.x) * 4096.0 + in_TEXCOORD1.x;\n    u_xlat0.xy = u_xlat8.xy * vec2(0.001953125, 0.001953125);\n    vs_TEXCOORD5.xy = u_xlat0.xy * _FaceTex_ST.xy + _FaceTex_ST.zw;\n    vs_TEXCOORD5.zw = u_xlat0.xy * _OutlineTex_ST.xy + _OutlineTex_ST.zw;\n    return;\n}\n\n","\n#version 100\n\n#ifdef GL_FRAGMENT_PRECISION_HIGH\n    precision highp float;\n#else\n    precision mediump float;\n#endif\nprecision highp int;\nuniform \tvec4 _Time;\nuniform \tfloat _FaceUVSpeedX;\nuniform \tfloat _FaceUVSpeedY;\nuniform \tmediump vec4 _FaceColor;\nuniform \tfloat _OutlineSoftness;\nuniform \tfloat _OutlineUVSpeedX;\nuniform \tfloat _OutlineUVSpeedY;\nuniform \tmediump vec4 _OutlineColor;\nuniform \tfloat _OutlineWidth;\nuniform \tfloat _ScaleRatioA;\nuniform \tvec4 _ClipRect;\nuniform lowp sampler2D _MainTex;\nuniform lowp sampler2D _FaceTex;\nuniform lowp sampler2D _OutlineTex;\nvarying mediump vec4 vs_COLOR0;\nvarying highp vec2 vs_TEXCOORD0;\nvarying highp vec4 vs_TEXCOORD1;\nvarying highp vec4 vs_TEXCOORD2;\nvarying highp vec4 vs_TEXCOORD5;\n#define SV_Target0 gl_FragData[0]\nvec3 u_xlat0;\nmediump vec4 u_xlat16_0;\nlowp vec4 u_xlat10_0;\nmediump float u_xlat16_1;\nvec4 u_xlat2;\nmediump vec4 u_xlat16_2;\nmediump vec3 u_xlat16_3;\nvec2 u_xlat4;\nlowp vec4 u_xlat10_4;\nbool u_xlatb4;\nfloat u_xlat5;\nbool u_xlatb5;\nmediump float u_xlat16_6;\nfloat u_xlat9;\nmediump float u_xlat16_11;\nvoid main()\n{\n    u_xlat10_0.x = texture2D(_MainTex, vs_TEXCOORD0.xy).w;\n    u_xlat5 = u_xlat10_0.x + (-vs_TEXCOORD1.x);\n    u_xlat0.x = (-u_xlat10_0.x) + vs_TEXCOORD1.z;\n    u_xlatb5 = u_xlat5<0.0;\n    if(u_xlatb5){discard;}\n    u_xlat5 = _OutlineWidth * _ScaleRatioA;\n    u_xlat5 = u_xlat5 * vs_TEXCOORD1.y;\n    u_xlat16_1 = min(u_xlat5, 1.0);\n    u_xlat16_6 = u_xlat5 * 0.5;\n    u_xlat16_1 = sqrt(u_xlat16_1);\n    u_xlat16_11 = u_xlat0.x * vs_TEXCOORD1.y + u_xlat16_6;\n    u_xlat16_11 = clamp(u_xlat16_11, 0.0, 1.0);\n    u_xlat16_6 = u_xlat0.x * vs_TEXCOORD1.y + (-u_xlat16_6);\n    u_xlat16_1 = u_xlat16_1 * u_xlat16_11;\n    u_xlat0.xy = vec2(_OutlineUVSpeedX, _OutlineUVSpeedY) * _Time.yy + vs_TEXCOORD5.zw;\n    u_xlat10_0 = texture2D(_OutlineTex, u_xlat0.xy);\n    u_xlat2 = u_xlat10_0 * _OutlineColor;\n    u_xlat16_3.xyz = vs_COLOR0.xyz * _FaceColor.xyz;\n    u_xlat0.xy = vec2(_FaceUVSpeedX, _FaceUVSpeedY) * _Time.yy + vs_TEXCOORD5.xy;\n    u_xlat10_4 = texture2D(_FaceTex, u_xlat0.xy);\n    u_xlat0.xyz = u_xlat16_3.xyz * u_xlat10_4.xyz;\n    u_xlat4.x = u_xlat10_4.w * _FaceColor.w;\n    u_xlat16_3.xyz = u_xlat0.xyz * u_xlat4.xxx;\n    u_xlat16_2.xyz = u_xlat2.xyz * u_xlat2.www + (-u_xlat16_3.xyz);\n    u_xlat16_2.w = _OutlineColor.w * u_xlat10_0.w + (-u_xlat4.x);\n    u_xlat16_2 = vec4(u_xlat16_1) * u_xlat16_2;\n    u_xlat16_0.xyz = u_xlat0.xyz * u_xlat4.xxx + u_xlat16_2.xyz;\n    u_xlat16_0.w = _FaceColor.w * u_xlat10_4.w + u_xlat16_2.w;\n    u_xlat4.x = _OutlineSoftness * _ScaleRatioA;\n    u_xlat9 = u_xlat4.x * vs_TEXCOORD1.y;\n    u_xlat16_1 = u_xlat4.x * vs_TEXCOORD1.y + 1.0;\n    u_xlat16_6 = u_xlat9 * 0.5 + u_xlat16_6;\n    u_xlat16_1 = u_xlat16_6 / u_xlat16_1;\n    u_xlat16_1 = clamp(u_xlat16_1, 0.0, 1.0);\n    u_xlat16_1 = (-u_xlat16_1) + 1.0;\n    u_xlat16_0 = u_xlat16_0 * vec4(u_xlat16_1);\n    u_xlat4.xy = (-_ClipRect.xy) + _ClipRect.zw;\n    u_xlat4.xy = u_xlat4.xy + -abs(vs_TEXCOORD2.xy);\n    u_xlat4.xy = u_xlat4.xy * vs_TEXCOORD2.zw;\n    u_xlat4.xy = clamp(u_xlat4.xy, 0.0, 1.0);\n    u_xlat16_1 = u_xlat4.y * u_xlat4.x;\n    u_xlat16_6 = u_xlat16_0.w * u_xlat16_1 + -0.00100000005;\n    u_xlat16_0 = u_xlat16_0 * vec4(u_xlat16_1);\n    SV_Target0 = u_xlat16_0 * vs_COLOR0.wwww;\n    u_xlatb4 = u_xlat16_6<0.0;\n    if(u_xlatb4){discard;}\n    return;\n}\n\n",0,0,3,0,0,["UNITY_UI_ALPHACLIP","UNITY_UI_CLIP_RECT"],[["IGNOREPROJECTOR","true"],["QUEUE","Transparent"],["RenderType","Transparent"]]]],["BEVEL_ON","GLOW_ON","STEREO_CUBEMAP_RENDER_ON","STEREO_INSTANCING_ON","STEREO_MULTIVIEW_ON","UNDERLAY_INNER","UNDERLAY_ON","UNITY_SINGLE_PASS_STEREO","UNITY_UI_ALPHACLIP","UNITY_UI_CLIP_RECT","__"],[[["__","BEVEL_ON"]],[["__","UNDERLAY_ON","UNDERLAY_INNER"]],[["__","GLOW_ON"]],[["__","UNITY_UI_CLIP_RECT"]],[["__","UNITY_UI_ALPHACLIP"]]],0,0,5,0,0,0,0,[["IGNOREPROJECTOR","true"],["QUEUE","Transparent"],["RenderType","Transparent"]],null,"",227,-1]],[["IGNOREPROJECTOR","true"],["QUEUE","Transparent"],["RenderType","Transparent"]],0]],0,416,"Assets/TextMesh Pro/Shaders/TMP_SDF.shader",["BEVEL_ON","GLOW_ON","UNDERLAY_INNER","UNDERLAY_ON","UNITY_UI_ALPHACLIP","UNITY_UI_CLIP_RECT","STEREO_CUBEMAP_RENDER_ON","STEREO_INSTANCING_ON","STEREO_MULTIVIEW_ON","UNITY_SINGLE_PASS_STEREO","__"],0,408,[],5],[[[0,[["TextMeshPro/Distance Field (Surface)",[[0,"\n#version 100\n\nuniform \tvec3 _WorldSpaceCameraPos;\nuniform \tvec4 _ScreenParams;\nuniform \tmediump vec4 unity_SHBr;\nuniform \tmediump vec4 unity_SHBg;\nuniform \tmediump vec4 unity_SHBb;\nuniform \tmediump vec4 unity_SHC;\nuniform \tvec4 hlslcc_mtx4x4unity_ObjectToWorld[4];\nuniform \tvec4 hlslcc_mtx4x4unity_WorldToObject[4];\nuniform \tvec4 unity_WorldTransformParams;\nuniform \tvec4 hlslcc_mtx4x4glstate_matrix_projection[4];\nuniform \tvec4 hlslcc_mtx4x4unity_MatrixVP[4];\nuniform \tfloat _FaceDilate;\nuniform \tvec4 hlslcc_mtx4x4_EnvMatrix[4];\nuniform \tfloat _WeightNormal;\nuniform \tfloat _WeightBold;\nuniform \tfloat _ScaleRatioA;\nuniform \tfloat _VertexOffsetX;\nuniform \tfloat _VertexOffsetY;\nuniform \tfloat _GradientScale;\nuniform \tfloat _ScaleX;\nuniform \tfloat _ScaleY;\nuniform \tfloat _PerspectiveFilter;\nuniform \tfloat _Sharpness;\nuniform \tvec4 _MainTex_ST;\nuniform \tvec4 _FaceTex_ST;\nuniform \tvec4 _OutlineTex_ST;\nattribute highp vec4 in_POSITION0;\nattribute highp vec4 in_TANGENT0;\nattribute highp vec3 in_NORMAL0;\nattribute highp vec4 in_TEXCOORD0;\nattribute highp vec4 in_TEXCOORD1;\nattribute mediump vec4 in_COLOR0;\nvarying highp vec4 vs_TEXCOORD0;\nvarying highp vec2 vs_TEXCOORD1;\nvarying highp vec2 vs_TEXCOORD5;\nvarying highp vec4 vs_TEXCOORD2;\nvarying highp vec4 vs_TEXCOORD3;\nvarying highp vec4 vs_TEXCOORD4;\nvarying mediump vec4 vs_COLOR0;\nvarying highp vec3 vs_TEXCOORD6;\nvarying mediump vec3 vs_TEXCOORD7;\nvec4 u_xlat0;\nmediump vec4 u_xlat16_0;\nint u_xlati0;\nvec4 u_xlat1;\nvec4 u_xlat2;\nvec4 u_xlat3;\nvec3 u_xlat4;\nmediump float u_xlat16_5;\nmediump vec3 u_xlat16_6;\nint u_xlati7;\nvec3 u_xlat9;\nfloat u_xlat21;\nbool u_xlatb21;\nfloat u_xlat22;\nvoid main()\n{\n    u_xlat0.xy = in_POSITION0.xy + vec2(_VertexOffsetX, _VertexOffsetY);\n    u_xlat1 = u_xlat0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];\n    u_xlat1 = hlslcc_mtx4x4unity_ObjectToWorld[0] * u_xlat0.xxxx + u_xlat1;\n    u_xlat1 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat1;\n    u_xlat2 = u_xlat1 + hlslcc_mtx4x4unity_ObjectToWorld[3];\n    u_xlat1.xyz = hlslcc_mtx4x4unity_ObjectToWorld[3].xyz * in_POSITION0.www + u_xlat1.xyz;\n    u_xlat3 = u_xlat2.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];\n    u_xlat3 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat2.xxxx + u_xlat3;\n    u_xlat3 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat2.zzzz + u_xlat3;\n    gl_Position = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat2.wwww + u_xlat3;\n    u_xlat21 = in_TEXCOORD1.x * 0.000244140625;\n    u_xlat3.x = floor(u_xlat21);\n    u_xlat3.y = (-u_xlat3.x) * 4096.0 + in_TEXCOORD1.x;\n    u_xlat3.xy = u_xlat3.xy * vec2(0.001953125, 0.001953125);\n    vs_TEXCOORD0.zw = u_xlat3.xy * _FaceTex_ST.xy + _FaceTex_ST.zw;\n    vs_TEXCOORD1.xy = u_xlat3.xy * _OutlineTex_ST.xy + _OutlineTex_ST.zw;\n    vs_TEXCOORD0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;\n    u_xlatb21 = 0.0>=in_TEXCOORD1.y;\n    u_xlat21 = u_xlatb21 ? 1.0 : float(0.0);\n    u_xlat22 = (-_WeightNormal) + _WeightBold;\n    u_xlat21 = u_xlat21 * u_xlat22 + _WeightNormal;\n    u_xlat21 = u_xlat21 * 0.25 + _FaceDilate;\n    u_xlat21 = u_xlat21 * _ScaleRatioA;\n    vs_TEXCOORD5.x = u_xlat21 * 0.5;\n    u_xlat21 = u_xlat2.y * hlslcc_mtx4x4unity_MatrixVP[1].w;\n    u_xlat21 = hlslcc_mtx4x4unity_MatrixVP[0].w * u_xlat2.x + u_xlat21;\n    u_xlat21 = hlslcc_mtx4x4unity_MatrixVP[2].w * u_xlat2.z + u_xlat21;\n    u_xlat21 = hlslcc_mtx4x4unity_MatrixVP[3].w * u_xlat2.w + u_xlat21;\n    u_xlat2.xy = _ScreenParams.yy * hlslcc_mtx4x4glstate_matrix_projection[1].xy;\n    u_xlat2.xy = hlslcc_mtx4x4glstate_matrix_projection[0].xy * _ScreenParams.xx + u_xlat2.xy;\n    u_xlat2.xy = u_xlat2.xy * vec2(_ScaleX, _ScaleY);\n    u_xlat2.xy = vec2(u_xlat21) / u_xlat2.xy;\n    u_xlat21 = dot(u_xlat2.xy, u_xlat2.xy);\n    u_xlat21 = inversesqrt(u_xlat21);\n    u_xlat22 = abs(in_TEXCOORD1.y) * _GradientScale;\n    u_xlat2.x = _Sharpness + 1.0;\n    u_xlat22 = u_xlat22 * u_xlat2.x;\n    u_xlat2.x = u_xlat21 * u_xlat22;\n    u_xlat9.x = (-_PerspectiveFilter) + 1.0;\n    u_xlat2.x = u_xlat9.x * u_xlat2.x;\n    u_xlat21 = u_xlat21 * u_xlat22 + (-u_xlat2.x);\n    u_xlat9.xyz = _WorldSpaceCameraPos.yyy * hlslcc_mtx4x4unity_WorldToObject[1].xyz;\n    u_xlat9.xyz = hlslcc_mtx4x4unity_WorldToObject[0].xyz * _WorldSpaceCameraPos.xxx + u_xlat9.xyz;\n    u_xlat9.xyz = hlslcc_mtx4x4unity_WorldToObject[2].xyz * _WorldSpaceCameraPos.zzz + u_xlat9.xyz;\n    u_xlat9.xyz = u_xlat9.xyz + hlslcc_mtx4x4unity_WorldToObject[3].xyz;\n    u_xlat0.z = in_POSITION0.z;\n    u_xlat0.xyz = (-u_xlat0.xyz) + u_xlat9.xyz;\n    u_xlat0.x = dot(in_NORMAL0.xyz, u_xlat0.xyz);\n    u_xlati7 = int((0.0<u_xlat0.x) ? -1 : 0);\n    u_xlati0 = int((u_xlat0.x<0.0) ? -1 : 0);\n    u_xlati0 = (-u_xlati7) + u_xlati0;\n    u_xlat0.x = float(u_xlati0);\n    u_xlat0.xyz = u_xlat0.xxx * in_NORMAL0.xyz;\n    u_xlat3.x = dot(u_xlat0.xyz, hlslcc_mtx4x4unity_WorldToObject[0].xyz);\n    u_xlat3.y = dot(u_xlat0.xyz, hlslcc_mtx4x4unity_WorldToObject[1].xyz);\n    u_xlat3.z = dot(u_xlat0.xyz, hlslcc_mtx4x4unity_WorldToObject[2].xyz);\n    u_xlat0.x = dot(u_xlat3.xyz, u_xlat3.xyz);\n    u_xlat0.x = inversesqrt(u_xlat0.x);\n    u_xlat3 = u_xlat0.xxxx * u_xlat3.xyzz;\n    u_xlat0.xyz = (-u_xlat1.xyz) + _WorldSpaceCameraPos.xyz;\n    u_xlat22 = dot(u_xlat0.xyz, u_xlat0.xyz);\n    u_xlat22 = inversesqrt(u_xlat22);\n    u_xlat9.xyz = u_xlat0.xyz * vec3(u_xlat22);\n    u_xlat22 = dot(u_xlat3.xyw, u_xlat9.xyz);\n    vs_TEXCOORD5.y = abs(u_xlat22) * u_xlat21 + u_xlat2.x;\n    vs_TEXCOORD2.w = u_xlat1.x;\n    u_xlat2.xyz = in_TANGENT0.yyy * hlslcc_mtx4x4unity_ObjectToWorld[1].yzx;\n    u_xlat2.xyz = hlslcc_mtx4x4unity_ObjectToWorld[0].yzx * in_TANGENT0.xxx + u_xlat2.xyz;\n    u_xlat2.xyz = hlslcc_mtx4x4unity_ObjectToWorld[2].yzx * in_TANGENT0.zzz + u_xlat2.xyz;\n    u_xlat21 = dot(u_xlat2.xyz, u_xlat2.xyz);\n    u_xlat21 = inversesqrt(u_xlat21);\n    u_xlat2.xyz = vec3(u_xlat21) * u_xlat2.xyz;\n    u_xlat4.xyz = u_xlat2.xyz * u_xlat3.wxy;\n    u_xlat4.xyz = u_xlat3.ywx * u_xlat2.yzx + (-u_xlat4.xyz);\n    u_xlat21 = in_TANGENT0.w * unity_WorldTransformParams.w;\n    u_xlat4.xyz = vec3(u_xlat21) * u_xlat4.xyz;\n    vs_TEXCOORD2.y = u_xlat4.x;\n    vs_TEXCOORD2.z = u_xlat3.x;\n    vs_TEXCOORD2.x = u_xlat2.z;\n    vs_TEXCOORD3.x = u_xlat2.x;\n    vs_TEXCOORD4.x = u_xlat2.y;\n    vs_TEXCOORD3.w = u_xlat1.y;\n    vs_TEXCOORD4.w = u_xlat1.z;\n    vs_TEXCOORD3.z = u_xlat3.y;\n    vs_TEXCOORD3.y = u_xlat4.y;\n    vs_TEXCOORD4.y = u_xlat4.z;\n    vs_TEXCOORD4.z = u_xlat3.w;\n    vs_COLOR0 = in_COLOR0;\n    u_xlat1.xyz = u_xlat0.yyy * hlslcc_mtx4x4_EnvMatrix[1].xyz;\n    u_xlat0.xyw = hlslcc_mtx4x4_EnvMatrix[0].xyz * u_xlat0.xxx + u_xlat1.xyz;\n    vs_TEXCOORD6.xyz = hlslcc_mtx4x4_EnvMatrix[2].xyz * u_xlat0.zzz + u_xlat0.xyw;\n    u_xlat16_5 = u_xlat3.y * u_xlat3.y;\n    u_xlat16_5 = u_xlat3.x * u_xlat3.x + (-u_xlat16_5);\n    u_xlat16_0 = u_xlat3.ywzx * u_xlat3;\n    u_xlat16_6.x = dot(unity_SHBr, u_xlat16_0);\n    u_xlat16_6.y = dot(unity_SHBg, u_xlat16_0);\n    u_xlat16_6.z = dot(unity_SHBb, u_xlat16_0);\n    vs_TEXCOORD7.xyz = unity_SHC.xyz * vec3(u_xlat16_5) + u_xlat16_6.xyz;\n    return;\n}\n\n","\n#version 100\n\n#ifdef GL_FRAGMENT_PRECISION_HIGH\n    precision highp float;\n#else\n    precision mediump float;\n#endif\nprecision highp int;\nuniform \tvec4 _Time;\nuniform \tvec3 _WorldSpaceCameraPos;\nuniform \tmediump vec4 _WorldSpaceLightPos0;\nuniform \tmediump vec4 unity_SHAr;\nuniform \tmediump vec4 unity_SHAg;\nuniform \tmediump vec4 unity_SHAb;\nuniform \tvec4 hlslcc_mtx4x4unity_ObjectToWorld[4];\nuniform \tmediump vec4 _LightColor0;\nuniform \tmediump vec4 _SpecColor;\nuniform \tfloat _FaceUVSpeedX;\nuniform \tfloat _FaceUVSpeedY;\nuniform \tmediump vec4 _FaceColor;\nuniform \tfloat _OutlineSoftness;\nuniform \tfloat _OutlineUVSpeedX;\nuniform \tfloat _OutlineUVSpeedY;\nuniform \tmediump vec4 _OutlineColor;\nuniform \tfloat _OutlineWidth;\nuniform \tfloat _Bevel;\nuniform \tfloat _BevelOffset;\nuniform \tfloat _BevelWidth;\nuniform \tfloat _BevelClamp;\nuniform \tfloat _BevelRoundness;\nuniform \tfloat _BumpOutline;\nuniform \tfloat _BumpFace;\nuniform \tmediump vec4 _ReflectFaceColor;\nuniform \tmediump vec4 _ReflectOutlineColor;\nuniform \tfloat _ShaderFlags;\nuniform \tfloat _ScaleRatioA;\nuniform \tfloat _TextureWidth;\nuniform \tfloat _TextureHeight;\nuniform \tfloat _GradientScale;\nuniform \tmediump float _FaceShininess;\nuniform \tmediump float _OutlineShininess;\nuniform lowp sampler2D _MainTex;\nuniform lowp sampler2D _FaceTex;\nuniform lowp sampler2D _OutlineTex;\nuniform lowp sampler2D _BumpMap;\nuniform lowp samplerCube _Cube;\nvarying highp vec4 vs_TEXCOORD0;\nvarying highp vec2 vs_TEXCOORD1;\nvarying highp vec2 vs_TEXCOORD5;\nvarying highp vec4 vs_TEXCOORD2;\nvarying highp vec4 vs_TEXCOORD3;\nvarying highp vec4 vs_TEXCOORD4;\nvarying mediump vec4 vs_COLOR0;\nvarying highp vec3 vs_TEXCOORD6;\nvarying mediump vec3 vs_TEXCOORD7;\n#define SV_Target0 gl_FragData[0]\nvec4 u_xlat0;\nlowp vec3 u_xlat10_0;\nmediump vec3 u_xlat16_1;\nvec4 u_xlat2;\nmediump vec4 u_xlat16_2;\nvec4 u_xlat3;\nmediump vec4 u_xlat16_3;\nlowp vec4 u_xlat10_3;\nvec2 u_xlat4;\nmediump vec4 u_xlat16_4;\nlowp vec4 u_xlat10_4;\nvec4 u_xlat5;\nmediump float u_xlat16_5;\nvec4 u_xlat6;\nmediump vec4 u_xlat16_7;\nvec3 u_xlat8;\nvec3 u_xlat9;\nmediump vec3 u_xlat16_11;\nvec3 u_xlat12;\nbool u_xlatb12;\nfloat u_xlat13;\nfloat u_xlat16;\nlowp vec2 u_xlat10_16;\nbool u_xlatb22;\nfloat u_xlat30;\nlowp float u_xlat10_30;\nmediump float u_xlat16_31;\nfloat u_xlat36;\nvoid main()\n{\n    u_xlat0.x = vs_TEXCOORD2.w;\n    u_xlat0.y = vs_TEXCOORD3.w;\n    u_xlat0.z = vs_TEXCOORD4.w;\n    u_xlat0.xyz = (-u_xlat0.xyz) + _WorldSpaceCameraPos.xyz;\n    u_xlat30 = dot(u_xlat0.xyz, u_xlat0.xyz);\n    u_xlat30 = inversesqrt(u_xlat30);\n    u_xlat16_1.xyz = u_xlat0.xyz * vec3(u_xlat30) + _WorldSpaceLightPos0.xyz;\n    u_xlat16_31 = dot(u_xlat16_1.xyz, u_xlat16_1.xyz);\n    u_xlat16_31 = inversesqrt(u_xlat16_31);\n    u_xlat16_1.xyz = vec3(u_xlat16_31) * u_xlat16_1.xyz;\n    u_xlat0.x = vs_TEXCOORD5.x + _BevelOffset;\n    u_xlat2.xy = vec2(1.0, 1.0) / vec2(_TextureWidth, _TextureHeight);\n    u_xlat2.z = 0.0;\n    u_xlat3 = (-u_xlat2.xzzy) + vs_TEXCOORD0.xyxy;\n    u_xlat2 = u_xlat2.xzzy + vs_TEXCOORD0.xyxy;\n    u_xlat10_4.x = texture2D(_MainTex, u_xlat3.xy).w;\n    u_xlat10_4.z = texture2D(_MainTex, u_xlat3.zw).w;\n    u_xlat10_4.y = texture2D(_MainTex, u_xlat2.xy).w;\n    u_xlat10_4.w = texture2D(_MainTex, u_xlat2.zw).w;\n    u_xlat0 = u_xlat0.xxxx + u_xlat10_4;\n    u_xlat0 = u_xlat0 + vec4(-0.5, -0.5, -0.5, -0.5);\n    u_xlat2.x = _BevelWidth + _OutlineWidth;\n    u_xlat2.x = max(u_xlat2.x, 0.00999999978);\n    u_xlat0 = u_xlat0 / u_xlat2.xxxx;\n    u_xlat2.x = u_xlat2.x * _Bevel;\n    u_xlat2.x = u_xlat2.x * _GradientScale;\n    u_xlat2.x = u_xlat2.x * -2.0;\n    u_xlat0 = u_xlat0 + vec4(0.5, 0.5, 0.5, 0.5);\n    u_xlat0 = clamp(u_xlat0, 0.0, 1.0);\n    u_xlat3 = u_xlat0 * vec4(2.0, 2.0, 2.0, 2.0) + vec4(-1.0, -1.0, -1.0, -1.0);\n    u_xlat3 = -abs(u_xlat3) + vec4(1.0, 1.0, 1.0, 1.0);\n    u_xlat12.x = _ShaderFlags * 0.5;\n    u_xlatb22 = u_xlat12.x>=(-u_xlat12.x);\n    u_xlat12.x = fract(abs(u_xlat12.x));\n    u_xlat12.x = (u_xlatb22) ? u_xlat12.x : (-u_xlat12.x);\n    u_xlatb12 = u_xlat12.x>=0.5;\n    u_xlat0 = (bool(u_xlatb12)) ? u_xlat3 : u_xlat0;\n    u_xlat3 = u_xlat0 * vec4(1.57079601, 1.57079601, 1.57079601, 1.57079601);\n    u_xlat3 = sin(u_xlat3);\n    u_xlat3 = (-u_xlat0) + u_xlat3;\n    u_xlat0 = vec4(vec4(_BevelRoundness, _BevelRoundness, _BevelRoundness, _BevelRoundness)) * u_xlat3 + u_xlat0;\n    u_xlat12.x = (-_BevelClamp) + 1.0;\n    u_xlat0 = min(u_xlat0, u_xlat12.xxxx);\n    u_xlat0.xz = u_xlat2.xx * u_xlat0.xz;\n    u_xlat0.yz = u_xlat0.wy * u_xlat2.xx + (-u_xlat0.zx);\n    u_xlat0.x = float(-1.0);\n    u_xlat0.w = float(1.0);\n    u_xlat2.x = dot(u_xlat0.xy, u_xlat0.xy);\n    u_xlat2.x = inversesqrt(u_xlat2.x);\n    u_xlat30 = dot(u_xlat0.zw, u_xlat0.zw);\n    u_xlat30 = inversesqrt(u_xlat30);\n    u_xlat3.x = u_xlat30 * u_xlat0.z;\n    u_xlat3.yz = vec2(u_xlat30) * vec2(1.0, 0.0);\n    u_xlat0.z = 0.0;\n    u_xlat0.xyz = u_xlat2.xxx * u_xlat0.xyz;\n    u_xlat2.xyz = u_xlat0.xyz * u_xlat3.xyz;\n    u_xlat0.xyz = u_xlat3.zxy * u_xlat0.yzx + (-u_xlat2.xyz);\n    u_xlat10_30 = texture2D(_MainTex, vs_TEXCOORD0.xy).w;\n    u_xlat30 = (-u_xlat10_30) + 0.5;\n    u_xlat30 = u_xlat30 + (-vs_TEXCOORD5.x);\n    u_xlat30 = u_xlat30 * vs_TEXCOORD5.y + 0.5;\n    u_xlat2.x = _OutlineWidth * _ScaleRatioA;\n    u_xlat2.x = u_xlat2.x * vs_TEXCOORD5.y;\n    u_xlat16_31 = u_xlat2.x * 0.5 + u_xlat30;\n    u_xlat16_31 = clamp(u_xlat16_31, 0.0, 1.0);\n    u_xlat16_5 = min(u_xlat2.x, 1.0);\n    u_xlat16_5 = sqrt(u_xlat16_5);\n    u_xlat16_31 = u_xlat16_31 * u_xlat16_5;\n    u_xlat12.xy = vec2(_OutlineUVSpeedX, _OutlineUVSpeedY) * _Time.yy + vs_TEXCOORD1.xy;\n    u_xlat10_3 = texture2D(_OutlineTex, u_xlat12.xy);\n    u_xlat12.xyz = u_xlat10_3.xyz * _OutlineColor.xyz;\n    u_xlat3.x = vs_COLOR0.w * _OutlineColor.w;\n    u_xlat13 = u_xlat10_3.w * u_xlat3.x;\n    u_xlat4.xy = vec2(_FaceUVSpeedX, _FaceUVSpeedY) * _Time.yy + vs_TEXCOORD0.zw;\n    u_xlat10_4 = texture2D(_FaceTex, u_xlat4.xy);\n    u_xlat5 = vs_COLOR0 * _FaceColor;\n    u_xlat6 = u_xlat10_4 * u_xlat5;\n    u_xlat16_7.xyz = u_xlat6.www * u_xlat6.xyz;\n    u_xlat16_7.xyz = u_xlat12.xyz * vec3(u_xlat13) + (-u_xlat16_7.xyz);\n    u_xlat16_7.w = u_xlat3.x * u_xlat10_3.w + (-u_xlat6.w);\n    u_xlat16_3 = vec4(u_xlat16_31) * u_xlat16_7;\n    u_xlat16_4.w = u_xlat5.w * u_xlat10_4.w + u_xlat16_3.w;\n    u_xlat16_4.xyz = u_xlat6.xyz * u_xlat6.www + u_xlat16_3.xyz;\n    u_xlat16_31 = (-u_xlat2.x) * 0.5 + u_xlat30;\n    u_xlat30 = u_xlat2.x * 0.5 + u_xlat30;\n    u_xlat30 = clamp(u_xlat30, 0.0, 1.0);\n    u_xlat2.x = _OutlineSoftness * _ScaleRatioA;\n    u_xlat12.x = u_xlat2.x * vs_TEXCOORD5.y;\n    u_xlat16_7.x = u_xlat2.x * vs_TEXCOORD5.y + 1.0;\n    u_xlat16_31 = u_xlat12.x * 0.5 + u_xlat16_31;\n    u_xlat16_31 = u_xlat16_31 / u_xlat16_7.x;\n    u_xlat16_31 = clamp(u_xlat16_31, 0.0, 1.0);\n    u_xlat16_31 = (-u_xlat16_31) + 1.0;\n    u_xlat16_2 = vec4(u_xlat16_31) * u_xlat16_4;\n    u_xlat6.x = (-_BumpFace) + _BumpOutline;\n    u_xlat6.x = u_xlat30 * u_xlat6.x + _BumpFace;\n    u_xlat10_16.xy = texture2D(_BumpMap, vs_TEXCOORD0.zw).yw;\n    u_xlat16_7.xy = u_xlat10_16.yx * vec2(2.0, 2.0) + vec2(-1.0, -1.0);\n    u_xlat16_31 = dot(u_xlat16_7.xy, u_xlat16_7.xy);\n    u_xlat16_31 = min(u_xlat16_31, 1.0);\n    u_xlat16_31 = (-u_xlat16_31) + 1.0;\n    u_xlat16_7.z = sqrt(u_xlat16_31);\n    u_xlat6.xyz = u_xlat16_7.xyz * u_xlat6.xxx + vec3(-0.0, -0.0, -1.0);\n    u_xlat6.xyz = u_xlat16_2.www * u_xlat6.xyz + vec3(0.0, 0.0, 1.0);\n    u_xlat0.xyz = u_xlat0.xyz + (-u_xlat6.xyz);\n    u_xlat6.x = dot(u_xlat0.xyz, u_xlat0.xyz);\n    u_xlat6.x = inversesqrt(u_xlat6.x);\n    u_xlat0.xyz = u_xlat0.xyz * u_xlat6.xxx;\n    u_xlat16_7.x = dot(vs_TEXCOORD2.xyz, (-u_xlat0.xyz));\n    u_xlat16_7.y = dot(vs_TEXCOORD3.xyz, (-u_xlat0.xyz));\n    u_xlat16_7.z = dot(vs_TEXCOORD4.xyz, (-u_xlat0.xyz));\n    u_xlat6.x = dot(u_xlat16_7.xyz, u_xlat16_7.xyz);\n    u_xlat6.x = inversesqrt(u_xlat6.x);\n    u_xlat3.xyz = u_xlat6.xxx * u_xlat16_7.xyz;\n    u_xlat16_1.x = dot(u_xlat3.xyz, u_xlat16_1.xyz);\n    u_xlat16_1.x = max(u_xlat16_1.x, 0.0);\n    u_xlat6.x = log2(u_xlat16_1.x);\n    u_xlat16 = (-_FaceShininess) + _OutlineShininess;\n    u_xlat16 = u_xlat30 * u_xlat16 + _FaceShininess;\n    u_xlat16_1.x = u_xlat16 * 128.0;\n    u_xlat6.x = u_xlat6.x * u_xlat16_1.x;\n    u_xlat6.x = exp2(u_xlat6.x);\n    u_xlat16_1.xyz = _LightColor0.xyz * _SpecColor.xyz;\n    u_xlat6.xyz = u_xlat6.xxx * u_xlat16_1.xyz;\n    u_xlat16_1.x = dot(u_xlat3.xyz, _WorldSpaceLightPos0.xyz);\n    u_xlat16_1.x = max(u_xlat16_1.x, 0.0);\n    u_xlat36 = max(u_xlat16_2.w, 9.99999975e-05);\n    u_xlat8.xyz = u_xlat16_2.xyz / vec3(u_xlat36);\n    u_xlat16_11.xyz = u_xlat8.xyz * _LightColor0.xyz;\n    u_xlat6.xyz = u_xlat16_11.xyz * u_xlat16_1.xxx + u_xlat6.xyz;\n    u_xlat3.w = 1.0;\n    u_xlat16_1.x = dot(unity_SHAr, u_xlat3);\n    u_xlat16_1.y = dot(unity_SHAg, u_xlat3);\n    u_xlat16_1.z = dot(unity_SHAb, u_xlat3);\n    u_xlat16_1.xyz = u_xlat16_1.xyz + vs_TEXCOORD7.xyz;\n    u_xlat16_1.xyz = max(u_xlat16_1.xyz, vec3(0.0, 0.0, 0.0));\n    u_xlat9.xyz = log2(u_xlat16_1.xyz);\n    u_xlat9.xyz = u_xlat9.xyz * vec3(0.416666657, 0.416666657, 0.416666657);\n    u_xlat9.xyz = exp2(u_xlat9.xyz);\n    u_xlat9.xyz = u_xlat9.xyz * vec3(1.05499995, 1.05499995, 1.05499995) + vec3(-0.0549999997, -0.0549999997, -0.0549999997);\n    u_xlat9.xyz = max(u_xlat9.xyz, vec3(0.0, 0.0, 0.0));\n    u_xlat16_1.xyz = u_xlat8.xyz * u_xlat9.xyz + u_xlat6.xyz;\n    u_xlat6.xyz = (-_ReflectFaceColor.xyz) + _ReflectOutlineColor.xyz;\n    u_xlat6.xyz = vec3(u_xlat30) * u_xlat6.xyz + _ReflectFaceColor.xyz;\n    u_xlat8.xyz = u_xlat0.yyy * hlslcc_mtx4x4unity_ObjectToWorld[1].xyz;\n    u_xlat0.xyw = hlslcc_mtx4x4unity_ObjectToWorld[0].xyz * u_xlat0.xxx + u_xlat8.xyz;\n    u_xlat0.xyz = hlslcc_mtx4x4unity_ObjectToWorld[2].xyz * u_xlat0.zzz + u_xlat0.xyw;\n    u_xlat30 = dot(vs_TEXCOORD6.xyz, u_xlat0.xyz);\n    u_xlat30 = u_xlat30 + u_xlat30;\n    u_xlat0.xyz = u_xlat0.xyz * (-vec3(u_xlat30)) + vs_TEXCOORD6.xyz;\n    u_xlat10_0.xyz = textureCube(_Cube, u_xlat0.xyz).xyz;\n    u_xlat0.xyz = u_xlat6.xyz * u_xlat10_0.xyz;\n    SV_Target0.xyz = u_xlat0.xyz * u_xlat16_2.www + u_xlat16_1.xyz;\n    SV_Target0.w = u_xlat16_2.w;\n    return;\n}\n\n",0,0,0,0,0,["DIRECTIONAL"],[["IGNOREPROJECTOR","true"],["LIGHTMODE","FORWARDBASE"],["QUEUE","Transparent"],["RenderType","Transparent"]]],[0,"\n#version 100\n\nuniform \tvec3 _WorldSpaceCameraPos;\nuniform \tvec4 _ScreenParams;\nuniform \tmediump vec4 unity_SHBr;\nuniform \tmediump vec4 unity_SHBg;\nuniform \tmediump vec4 unity_SHBb;\nuniform \tmediump vec4 unity_SHC;\nuniform \tvec4 hlslcc_mtx4x4unity_ObjectToWorld[4];\nuniform \tvec4 hlslcc_mtx4x4unity_WorldToObject[4];\nuniform \tvec4 unity_WorldTransformParams;\nuniform \tvec4 hlslcc_mtx4x4glstate_matrix_projection[4];\nuniform \tvec4 hlslcc_mtx4x4unity_MatrixVP[4];\nuniform \tfloat _FaceDilate;\nuniform \tvec4 hlslcc_mtx4x4_EnvMatrix[4];\nuniform \tfloat _WeightNormal;\nuniform \tfloat _WeightBold;\nuniform \tfloat _ScaleRatioA;\nuniform \tfloat _VertexOffsetX;\nuniform \tfloat _VertexOffsetY;\nuniform \tfloat _GradientScale;\nuniform \tfloat _ScaleX;\nuniform \tfloat _ScaleY;\nuniform \tfloat _PerspectiveFilter;\nuniform \tfloat _Sharpness;\nuniform \tvec4 _MainTex_ST;\nuniform \tvec4 _FaceTex_ST;\nuniform \tvec4 _OutlineTex_ST;\nattribute highp vec4 in_POSITION0;\nattribute highp vec4 in_TANGENT0;\nattribute highp vec3 in_NORMAL0;\nattribute highp vec4 in_TEXCOORD0;\nattribute highp vec4 in_TEXCOORD1;\nattribute mediump vec4 in_COLOR0;\nvarying highp vec4 vs_TEXCOORD0;\nvarying highp vec2 vs_TEXCOORD1;\nvarying highp vec2 vs_TEXCOORD5;\nvarying highp vec4 vs_TEXCOORD2;\nvarying highp vec4 vs_TEXCOORD3;\nvarying highp vec4 vs_TEXCOORD4;\nvarying mediump vec4 vs_COLOR0;\nvarying highp vec3 vs_TEXCOORD6;\nvarying mediump vec3 vs_TEXCOORD7;\nvec4 u_xlat0;\nmediump vec4 u_xlat16_0;\nint u_xlati0;\nvec4 u_xlat1;\nvec4 u_xlat2;\nvec4 u_xlat3;\nvec3 u_xlat4;\nmediump float u_xlat16_5;\nmediump vec3 u_xlat16_6;\nint u_xlati7;\nvec3 u_xlat9;\nfloat u_xlat21;\nbool u_xlatb21;\nfloat u_xlat22;\nvoid main()\n{\n    u_xlat0.xy = in_POSITION0.xy + vec2(_VertexOffsetX, _VertexOffsetY);\n    u_xlat1 = u_xlat0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];\n    u_xlat1 = hlslcc_mtx4x4unity_ObjectToWorld[0] * u_xlat0.xxxx + u_xlat1;\n    u_xlat1 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat1;\n    u_xlat2 = u_xlat1 + hlslcc_mtx4x4unity_ObjectToWorld[3];\n    u_xlat1.xyz = hlslcc_mtx4x4unity_ObjectToWorld[3].xyz * in_POSITION0.www + u_xlat1.xyz;\n    u_xlat3 = u_xlat2.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];\n    u_xlat3 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat2.xxxx + u_xlat3;\n    u_xlat3 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat2.zzzz + u_xlat3;\n    gl_Position = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat2.wwww + u_xlat3;\n    u_xlat21 = in_TEXCOORD1.x * 0.000244140625;\n    u_xlat3.x = floor(u_xlat21);\n    u_xlat3.y = (-u_xlat3.x) * 4096.0 + in_TEXCOORD1.x;\n    u_xlat3.xy = u_xlat3.xy * vec2(0.001953125, 0.001953125);\n    vs_TEXCOORD0.zw = u_xlat3.xy * _FaceTex_ST.xy + _FaceTex_ST.zw;\n    vs_TEXCOORD1.xy = u_xlat3.xy * _OutlineTex_ST.xy + _OutlineTex_ST.zw;\n    vs_TEXCOORD0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;\n    u_xlatb21 = 0.0>=in_TEXCOORD1.y;\n    u_xlat21 = u_xlatb21 ? 1.0 : float(0.0);\n    u_xlat22 = (-_WeightNormal) + _WeightBold;\n    u_xlat21 = u_xlat21 * u_xlat22 + _WeightNormal;\n    u_xlat21 = u_xlat21 * 0.25 + _FaceDilate;\n    u_xlat21 = u_xlat21 * _ScaleRatioA;\n    vs_TEXCOORD5.x = u_xlat21 * 0.5;\n    u_xlat21 = u_xlat2.y * hlslcc_mtx4x4unity_MatrixVP[1].w;\n    u_xlat21 = hlslcc_mtx4x4unity_MatrixVP[0].w * u_xlat2.x + u_xlat21;\n    u_xlat21 = hlslcc_mtx4x4unity_MatrixVP[2].w * u_xlat2.z + u_xlat21;\n    u_xlat21 = hlslcc_mtx4x4unity_MatrixVP[3].w * u_xlat2.w + u_xlat21;\n    u_xlat2.xy = _ScreenParams.yy * hlslcc_mtx4x4glstate_matrix_projection[1].xy;\n    u_xlat2.xy = hlslcc_mtx4x4glstate_matrix_projection[0].xy * _ScreenParams.xx + u_xlat2.xy;\n    u_xlat2.xy = u_xlat2.xy * vec2(_ScaleX, _ScaleY);\n    u_xlat2.xy = vec2(u_xlat21) / u_xlat2.xy;\n    u_xlat21 = dot(u_xlat2.xy, u_xlat2.xy);\n    u_xlat21 = inversesqrt(u_xlat21);\n    u_xlat22 = abs(in_TEXCOORD1.y) * _GradientScale;\n    u_xlat2.x = _Sharpness + 1.0;\n    u_xlat22 = u_xlat22 * u_xlat2.x;\n    u_xlat2.x = u_xlat21 * u_xlat22;\n    u_xlat9.x = (-_PerspectiveFilter) + 1.0;\n    u_xlat2.x = u_xlat9.x * u_xlat2.x;\n    u_xlat21 = u_xlat21 * u_xlat22 + (-u_xlat2.x);\n    u_xlat9.xyz = _WorldSpaceCameraPos.yyy * hlslcc_mtx4x4unity_WorldToObject[1].xyz;\n    u_xlat9.xyz = hlslcc_mtx4x4unity_WorldToObject[0].xyz * _WorldSpaceCameraPos.xxx + u_xlat9.xyz;\n    u_xlat9.xyz = hlslcc_mtx4x4unity_WorldToObject[2].xyz * _WorldSpaceCameraPos.zzz + u_xlat9.xyz;\n    u_xlat9.xyz = u_xlat9.xyz + hlslcc_mtx4x4unity_WorldToObject[3].xyz;\n    u_xlat0.z = in_POSITION0.z;\n    u_xlat0.xyz = (-u_xlat0.xyz) + u_xlat9.xyz;\n    u_xlat0.x = dot(in_NORMAL0.xyz, u_xlat0.xyz);\n    u_xlati7 = int((0.0<u_xlat0.x) ? -1 : 0);\n    u_xlati0 = int((u_xlat0.x<0.0) ? -1 : 0);\n    u_xlati0 = (-u_xlati7) + u_xlati0;\n    u_xlat0.x = float(u_xlati0);\n    u_xlat0.xyz = u_xlat0.xxx * in_NORMAL0.xyz;\n    u_xlat3.x = dot(u_xlat0.xyz, hlslcc_mtx4x4unity_WorldToObject[0].xyz);\n    u_xlat3.y = dot(u_xlat0.xyz, hlslcc_mtx4x4unity_WorldToObject[1].xyz);\n    u_xlat3.z = dot(u_xlat0.xyz, hlslcc_mtx4x4unity_WorldToObject[2].xyz);\n    u_xlat0.x = dot(u_xlat3.xyz, u_xlat3.xyz);\n    u_xlat0.x = inversesqrt(u_xlat0.x);\n    u_xlat3 = u_xlat0.xxxx * u_xlat3.xyzz;\n    u_xlat0.xyz = (-u_xlat1.xyz) + _WorldSpaceCameraPos.xyz;\n    u_xlat22 = dot(u_xlat0.xyz, u_xlat0.xyz);\n    u_xlat22 = inversesqrt(u_xlat22);\n    u_xlat9.xyz = u_xlat0.xyz * vec3(u_xlat22);\n    u_xlat22 = dot(u_xlat3.xyw, u_xlat9.xyz);\n    vs_TEXCOORD5.y = abs(u_xlat22) * u_xlat21 + u_xlat2.x;\n    vs_TEXCOORD2.w = u_xlat1.x;\n    u_xlat2.xyz = in_TANGENT0.yyy * hlslcc_mtx4x4unity_ObjectToWorld[1].yzx;\n    u_xlat2.xyz = hlslcc_mtx4x4unity_ObjectToWorld[0].yzx * in_TANGENT0.xxx + u_xlat2.xyz;\n    u_xlat2.xyz = hlslcc_mtx4x4unity_ObjectToWorld[2].yzx * in_TANGENT0.zzz + u_xlat2.xyz;\n    u_xlat21 = dot(u_xlat2.xyz, u_xlat2.xyz);\n    u_xlat21 = inversesqrt(u_xlat21);\n    u_xlat2.xyz = vec3(u_xlat21) * u_xlat2.xyz;\n    u_xlat4.xyz = u_xlat2.xyz * u_xlat3.wxy;\n    u_xlat4.xyz = u_xlat3.ywx * u_xlat2.yzx + (-u_xlat4.xyz);\n    u_xlat21 = in_TANGENT0.w * unity_WorldTransformParams.w;\n    u_xlat4.xyz = vec3(u_xlat21) * u_xlat4.xyz;\n    vs_TEXCOORD2.y = u_xlat4.x;\n    vs_TEXCOORD2.z = u_xlat3.x;\n    vs_TEXCOORD2.x = u_xlat2.z;\n    vs_TEXCOORD3.x = u_xlat2.x;\n    vs_TEXCOORD4.x = u_xlat2.y;\n    vs_TEXCOORD3.w = u_xlat1.y;\n    vs_TEXCOORD4.w = u_xlat1.z;\n    vs_TEXCOORD3.z = u_xlat3.y;\n    vs_TEXCOORD3.y = u_xlat4.y;\n    vs_TEXCOORD4.y = u_xlat4.z;\n    vs_TEXCOORD4.z = u_xlat3.w;\n    vs_COLOR0 = in_COLOR0;\n    u_xlat1.xyz = u_xlat0.yyy * hlslcc_mtx4x4_EnvMatrix[1].xyz;\n    u_xlat0.xyw = hlslcc_mtx4x4_EnvMatrix[0].xyz * u_xlat0.xxx + u_xlat1.xyz;\n    vs_TEXCOORD6.xyz = hlslcc_mtx4x4_EnvMatrix[2].xyz * u_xlat0.zzz + u_xlat0.xyw;\n    u_xlat16_5 = u_xlat3.y * u_xlat3.y;\n    u_xlat16_5 = u_xlat3.x * u_xlat3.x + (-u_xlat16_5);\n    u_xlat16_0 = u_xlat3.ywzx * u_xlat3;\n    u_xlat16_6.x = dot(unity_SHBr, u_xlat16_0);\n    u_xlat16_6.y = dot(unity_SHBg, u_xlat16_0);\n    u_xlat16_6.z = dot(unity_SHBb, u_xlat16_0);\n    vs_TEXCOORD7.xyz = unity_SHC.xyz * vec3(u_xlat16_5) + u_xlat16_6.xyz;\n    return;\n}\n\n","\n#version 100\n\n#ifdef GL_FRAGMENT_PRECISION_HIGH\n    precision highp float;\n#else\n    precision mediump float;\n#endif\nprecision highp int;\nuniform \tvec4 _Time;\nuniform \tvec3 _WorldSpaceCameraPos;\nuniform \tmediump vec4 _WorldSpaceLightPos0;\nuniform \tmediump vec4 unity_SHAr;\nuniform \tmediump vec4 unity_SHAg;\nuniform \tmediump vec4 unity_SHAb;\nuniform \tvec4 hlslcc_mtx4x4unity_ObjectToWorld[4];\nuniform \tmediump vec4 _LightColor0;\nuniform \tmediump vec4 _SpecColor;\nuniform \tfloat _FaceUVSpeedX;\nuniform \tfloat _FaceUVSpeedY;\nuniform \tmediump vec4 _FaceColor;\nuniform \tfloat _OutlineSoftness;\nuniform \tfloat _OutlineUVSpeedX;\nuniform \tfloat _OutlineUVSpeedY;\nuniform \tmediump vec4 _OutlineColor;\nuniform \tfloat _OutlineWidth;\nuniform \tfloat _Bevel;\nuniform \tfloat _BevelOffset;\nuniform \tfloat _BevelWidth;\nuniform \tfloat _BevelClamp;\nuniform \tfloat _BevelRoundness;\nuniform \tfloat _BumpOutline;\nuniform \tfloat _BumpFace;\nuniform \tmediump vec4 _ReflectFaceColor;\nuniform \tmediump vec4 _ReflectOutlineColor;\nuniform \tfloat _ShaderFlags;\nuniform \tfloat _ScaleRatioA;\nuniform \tfloat _TextureWidth;\nuniform \tfloat _TextureHeight;\nuniform \tfloat _GradientScale;\nuniform \tmediump float _FaceShininess;\nuniform \tmediump float _OutlineShininess;\nuniform lowp sampler2D _MainTex;\nuniform lowp sampler2D _FaceTex;\nuniform lowp sampler2D _OutlineTex;\nuniform lowp sampler2D _BumpMap;\nuniform lowp samplerCube _Cube;\nvarying highp vec4 vs_TEXCOORD0;\nvarying highp vec2 vs_TEXCOORD1;\nvarying highp vec2 vs_TEXCOORD5;\nvarying highp vec4 vs_TEXCOORD2;\nvarying highp vec4 vs_TEXCOORD3;\nvarying highp vec4 vs_TEXCOORD4;\nvarying mediump vec4 vs_COLOR0;\nvarying highp vec3 vs_TEXCOORD6;\nvarying mediump vec3 vs_TEXCOORD7;\n#define SV_Target0 gl_FragData[0]\nvec4 u_xlat0;\nlowp vec3 u_xlat10_0;\nmediump vec3 u_xlat16_1;\nvec4 u_xlat2;\nmediump vec4 u_xlat16_2;\nvec4 u_xlat3;\nmediump vec4 u_xlat16_3;\nlowp vec4 u_xlat10_3;\nvec2 u_xlat4;\nmediump vec4 u_xlat16_4;\nlowp vec4 u_xlat10_4;\nvec4 u_xlat5;\nmediump float u_xlat16_5;\nvec4 u_xlat6;\nmediump vec4 u_xlat16_7;\nvec3 u_xlat8;\nvec3 u_xlat9;\nmediump vec3 u_xlat16_11;\nvec3 u_xlat12;\nbool u_xlatb12;\nfloat u_xlat13;\nfloat u_xlat16;\nlowp vec2 u_xlat10_16;\nbool u_xlatb22;\nfloat u_xlat30;\nlowp float u_xlat10_30;\nmediump float u_xlat16_31;\nfloat u_xlat36;\nvoid main()\n{\n    u_xlat0.x = vs_TEXCOORD2.w;\n    u_xlat0.y = vs_TEXCOORD3.w;\n    u_xlat0.z = vs_TEXCOORD4.w;\n    u_xlat0.xyz = (-u_xlat0.xyz) + _WorldSpaceCameraPos.xyz;\n    u_xlat30 = dot(u_xlat0.xyz, u_xlat0.xyz);\n    u_xlat30 = inversesqrt(u_xlat30);\n    u_xlat16_1.xyz = u_xlat0.xyz * vec3(u_xlat30) + _WorldSpaceLightPos0.xyz;\n    u_xlat16_31 = dot(u_xlat16_1.xyz, u_xlat16_1.xyz);\n    u_xlat16_31 = inversesqrt(u_xlat16_31);\n    u_xlat16_1.xyz = vec3(u_xlat16_31) * u_xlat16_1.xyz;\n    u_xlat0.x = vs_TEXCOORD5.x + _BevelOffset;\n    u_xlat2.xy = vec2(1.0, 1.0) / vec2(_TextureWidth, _TextureHeight);\n    u_xlat2.z = 0.0;\n    u_xlat3 = (-u_xlat2.xzzy) + vs_TEXCOORD0.xyxy;\n    u_xlat2 = u_xlat2.xzzy + vs_TEXCOORD0.xyxy;\n    u_xlat10_4.x = texture2D(_MainTex, u_xlat3.xy).w;\n    u_xlat10_4.z = texture2D(_MainTex, u_xlat3.zw).w;\n    u_xlat10_4.y = texture2D(_MainTex, u_xlat2.xy).w;\n    u_xlat10_4.w = texture2D(_MainTex, u_xlat2.zw).w;\n    u_xlat0 = u_xlat0.xxxx + u_xlat10_4;\n    u_xlat0 = u_xlat0 + vec4(-0.5, -0.5, -0.5, -0.5);\n    u_xlat2.x = _BevelWidth + _OutlineWidth;\n    u_xlat2.x = max(u_xlat2.x, 0.00999999978);\n    u_xlat0 = u_xlat0 / u_xlat2.xxxx;\n    u_xlat2.x = u_xlat2.x * _Bevel;\n    u_xlat2.x = u_xlat2.x * _GradientScale;\n    u_xlat2.x = u_xlat2.x * -2.0;\n    u_xlat0 = u_xlat0 + vec4(0.5, 0.5, 0.5, 0.5);\n    u_xlat0 = clamp(u_xlat0, 0.0, 1.0);\n    u_xlat3 = u_xlat0 * vec4(2.0, 2.0, 2.0, 2.0) + vec4(-1.0, -1.0, -1.0, -1.0);\n    u_xlat3 = -abs(u_xlat3) + vec4(1.0, 1.0, 1.0, 1.0);\n    u_xlat12.x = _ShaderFlags * 0.5;\n    u_xlatb22 = u_xlat12.x>=(-u_xlat12.x);\n    u_xlat12.x = fract(abs(u_xlat12.x));\n    u_xlat12.x = (u_xlatb22) ? u_xlat12.x : (-u_xlat12.x);\n    u_xlatb12 = u_xlat12.x>=0.5;\n    u_xlat0 = (bool(u_xlatb12)) ? u_xlat3 : u_xlat0;\n    u_xlat3 = u_xlat0 * vec4(1.57079601, 1.57079601, 1.57079601, 1.57079601);\n    u_xlat3 = sin(u_xlat3);\n    u_xlat3 = (-u_xlat0) + u_xlat3;\n    u_xlat0 = vec4(vec4(_BevelRoundness, _BevelRoundness, _BevelRoundness, _BevelRoundness)) * u_xlat3 + u_xlat0;\n    u_xlat12.x = (-_BevelClamp) + 1.0;\n    u_xlat0 = min(u_xlat0, u_xlat12.xxxx);\n    u_xlat0.xz = u_xlat2.xx * u_xlat0.xz;\n    u_xlat0.yz = u_xlat0.wy * u_xlat2.xx + (-u_xlat0.zx);\n    u_xlat0.x = float(-1.0);\n    u_xlat0.w = float(1.0);\n    u_xlat2.x = dot(u_xlat0.xy, u_xlat0.xy);\n    u_xlat2.x = inversesqrt(u_xlat2.x);\n    u_xlat30 = dot(u_xlat0.zw, u_xlat0.zw);\n    u_xlat30 = inversesqrt(u_xlat30);\n    u_xlat3.x = u_xlat30 * u_xlat0.z;\n    u_xlat3.yz = vec2(u_xlat30) * vec2(1.0, 0.0);\n    u_xlat0.z = 0.0;\n    u_xlat0.xyz = u_xlat2.xxx * u_xlat0.xyz;\n    u_xlat2.xyz = u_xlat0.xyz * u_xlat3.xyz;\n    u_xlat0.xyz = u_xlat3.zxy * u_xlat0.yzx + (-u_xlat2.xyz);\n    u_xlat10_30 = texture2D(_MainTex, vs_TEXCOORD0.xy).w;\n    u_xlat30 = (-u_xlat10_30) + 0.5;\n    u_xlat30 = u_xlat30 + (-vs_TEXCOORD5.x);\n    u_xlat30 = u_xlat30 * vs_TEXCOORD5.y + 0.5;\n    u_xlat2.x = _OutlineWidth * _ScaleRatioA;\n    u_xlat2.x = u_xlat2.x * vs_TEXCOORD5.y;\n    u_xlat16_31 = u_xlat2.x * 0.5 + u_xlat30;\n    u_xlat16_31 = clamp(u_xlat16_31, 0.0, 1.0);\n    u_xlat16_5 = min(u_xlat2.x, 1.0);\n    u_xlat16_5 = sqrt(u_xlat16_5);\n    u_xlat16_31 = u_xlat16_31 * u_xlat16_5;\n    u_xlat12.xy = vec2(_OutlineUVSpeedX, _OutlineUVSpeedY) * _Time.yy + vs_TEXCOORD1.xy;\n    u_xlat10_3 = texture2D(_OutlineTex, u_xlat12.xy);\n    u_xlat12.xyz = u_xlat10_3.xyz * _OutlineColor.xyz;\n    u_xlat3.x = vs_COLOR0.w * _OutlineColor.w;\n    u_xlat13 = u_xlat10_3.w * u_xlat3.x;\n    u_xlat4.xy = vec2(_FaceUVSpeedX, _FaceUVSpeedY) * _Time.yy + vs_TEXCOORD0.zw;\n    u_xlat10_4 = texture2D(_FaceTex, u_xlat4.xy);\n    u_xlat5 = vs_COLOR0 * _FaceColor;\n    u_xlat6 = u_xlat10_4 * u_xlat5;\n    u_xlat16_7.xyz = u_xlat6.www * u_xlat6.xyz;\n    u_xlat16_7.xyz = u_xlat12.xyz * vec3(u_xlat13) + (-u_xlat16_7.xyz);\n    u_xlat16_7.w = u_xlat3.x * u_xlat10_3.w + (-u_xlat6.w);\n    u_xlat16_3 = vec4(u_xlat16_31) * u_xlat16_7;\n    u_xlat16_4.w = u_xlat5.w * u_xlat10_4.w + u_xlat16_3.w;\n    u_xlat16_4.xyz = u_xlat6.xyz * u_xlat6.www + u_xlat16_3.xyz;\n    u_xlat16_31 = (-u_xlat2.x) * 0.5 + u_xlat30;\n    u_xlat30 = u_xlat2.x * 0.5 + u_xlat30;\n    u_xlat30 = clamp(u_xlat30, 0.0, 1.0);\n    u_xlat2.x = _OutlineSoftness * _ScaleRatioA;\n    u_xlat12.x = u_xlat2.x * vs_TEXCOORD5.y;\n    u_xlat16_7.x = u_xlat2.x * vs_TEXCOORD5.y + 1.0;\n    u_xlat16_31 = u_xlat12.x * 0.5 + u_xlat16_31;\n    u_xlat16_31 = u_xlat16_31 / u_xlat16_7.x;\n    u_xlat16_31 = clamp(u_xlat16_31, 0.0, 1.0);\n    u_xlat16_31 = (-u_xlat16_31) + 1.0;\n    u_xlat16_2 = vec4(u_xlat16_31) * u_xlat16_4;\n    u_xlat6.x = (-_BumpFace) + _BumpOutline;\n    u_xlat6.x = u_xlat30 * u_xlat6.x + _BumpFace;\n    u_xlat10_16.xy = texture2D(_BumpMap, vs_TEXCOORD0.zw).yw;\n    u_xlat16_7.xy = u_xlat10_16.yx * vec2(2.0, 2.0) + vec2(-1.0, -1.0);\n    u_xlat16_31 = dot(u_xlat16_7.xy, u_xlat16_7.xy);\n    u_xlat16_31 = min(u_xlat16_31, 1.0);\n    u_xlat16_31 = (-u_xlat16_31) + 1.0;\n    u_xlat16_7.z = sqrt(u_xlat16_31);\n    u_xlat6.xyz = u_xlat16_7.xyz * u_xlat6.xxx + vec3(-0.0, -0.0, -1.0);\n    u_xlat6.xyz = u_xlat16_2.www * u_xlat6.xyz + vec3(0.0, 0.0, 1.0);\n    u_xlat0.xyz = u_xlat0.xyz + (-u_xlat6.xyz);\n    u_xlat6.x = dot(u_xlat0.xyz, u_xlat0.xyz);\n    u_xlat6.x = inversesqrt(u_xlat6.x);\n    u_xlat0.xyz = u_xlat0.xyz * u_xlat6.xxx;\n    u_xlat16_7.x = dot(vs_TEXCOORD2.xyz, (-u_xlat0.xyz));\n    u_xlat16_7.y = dot(vs_TEXCOORD3.xyz, (-u_xlat0.xyz));\n    u_xlat16_7.z = dot(vs_TEXCOORD4.xyz, (-u_xlat0.xyz));\n    u_xlat6.x = dot(u_xlat16_7.xyz, u_xlat16_7.xyz);\n    u_xlat6.x = inversesqrt(u_xlat6.x);\n    u_xlat3.xyz = u_xlat6.xxx * u_xlat16_7.xyz;\n    u_xlat16_1.x = dot(u_xlat3.xyz, u_xlat16_1.xyz);\n    u_xlat16_1.x = max(u_xlat16_1.x, 0.0);\n    u_xlat6.x = log2(u_xlat16_1.x);\n    u_xlat16 = (-_FaceShininess) + _OutlineShininess;\n    u_xlat16 = u_xlat30 * u_xlat16 + _FaceShininess;\n    u_xlat16_1.x = u_xlat16 * 128.0;\n    u_xlat6.x = u_xlat6.x * u_xlat16_1.x;\n    u_xlat6.x = exp2(u_xlat6.x);\n    u_xlat16_1.xyz = _LightColor0.xyz * _SpecColor.xyz;\n    u_xlat6.xyz = u_xlat6.xxx * u_xlat16_1.xyz;\n    u_xlat16_1.x = dot(u_xlat3.xyz, _WorldSpaceLightPos0.xyz);\n    u_xlat16_1.x = max(u_xlat16_1.x, 0.0);\n    u_xlat36 = max(u_xlat16_2.w, 9.99999975e-05);\n    u_xlat8.xyz = u_xlat16_2.xyz / vec3(u_xlat36);\n    u_xlat16_11.xyz = u_xlat8.xyz * _LightColor0.xyz;\n    u_xlat6.xyz = u_xlat16_11.xyz * u_xlat16_1.xxx + u_xlat6.xyz;\n    u_xlat3.w = 1.0;\n    u_xlat16_1.x = dot(unity_SHAr, u_xlat3);\n    u_xlat16_1.y = dot(unity_SHAg, u_xlat3);\n    u_xlat16_1.z = dot(unity_SHAb, u_xlat3);\n    u_xlat16_1.xyz = u_xlat16_1.xyz + vs_TEXCOORD7.xyz;\n    u_xlat16_1.xyz = max(u_xlat16_1.xyz, vec3(0.0, 0.0, 0.0));\n    u_xlat9.xyz = log2(u_xlat16_1.xyz);\n    u_xlat9.xyz = u_xlat9.xyz * vec3(0.416666657, 0.416666657, 0.416666657);\n    u_xlat9.xyz = exp2(u_xlat9.xyz);\n    u_xlat9.xyz = u_xlat9.xyz * vec3(1.05499995, 1.05499995, 1.05499995) + vec3(-0.0549999997, -0.0549999997, -0.0549999997);\n    u_xlat9.xyz = max(u_xlat9.xyz, vec3(0.0, 0.0, 0.0));\n    u_xlat16_1.xyz = u_xlat8.xyz * u_xlat9.xyz + u_xlat6.xyz;\n    u_xlat6.xyz = (-_ReflectFaceColor.xyz) + _ReflectOutlineColor.xyz;\n    u_xlat6.xyz = vec3(u_xlat30) * u_xlat6.xyz + _ReflectFaceColor.xyz;\n    u_xlat8.xyz = u_xlat0.yyy * hlslcc_mtx4x4unity_ObjectToWorld[1].xyz;\n    u_xlat0.xyw = hlslcc_mtx4x4unity_ObjectToWorld[0].xyz * u_xlat0.xxx + u_xlat8.xyz;\n    u_xlat0.xyz = hlslcc_mtx4x4unity_ObjectToWorld[2].xyz * u_xlat0.zzz + u_xlat0.xyw;\n    u_xlat30 = dot(vs_TEXCOORD6.xyz, u_xlat0.xyz);\n    u_xlat30 = u_xlat30 + u_xlat30;\n    u_xlat0.xyz = u_xlat0.xyz * (-vec3(u_xlat30)) + vs_TEXCOORD6.xyz;\n    u_xlat10_0.xyz = textureCube(_Cube, u_xlat0.xyz).xyz;\n    u_xlat0.xyz = u_xlat6.xyz * u_xlat10_0.xyz;\n    SV_Target0.xyz = u_xlat0.xyz * u_xlat16_2.www + u_xlat16_1.xyz;\n    SV_Target0.w = u_xlat16_2.w;\n    return;\n}\n\n",0,0,1,0,0,["DIRECTIONAL","LIGHTPROBE_SH"],[["IGNOREPROJECTOR","true"],["LIGHTMODE","FORWARDBASE"],["QUEUE","Transparent"],["RenderType","Transparent"]]],[0,"\n#version 100\n\nuniform \tvec3 _WorldSpaceCameraPos;\nuniform \tvec4 _ScreenParams;\nuniform \tvec4 unity_4LightPosX0;\nuniform \tvec4 unity_4LightPosY0;\nuniform \tvec4 unity_4LightPosZ0;\nuniform \tmediump vec4 unity_4LightAtten0;\nuniform \tmediump vec4 unity_LightColor[8];\nuniform \tmediump vec4 unity_SHBr;\nuniform \tmediump vec4 unity_SHBg;\nuniform \tmediump vec4 unity_SHBb;\nuniform \tmediump vec4 unity_SHC;\nuniform \tvec4 hlslcc_mtx4x4unity_ObjectToWorld[4];\nuniform \tvec4 hlslcc_mtx4x4unity_WorldToObject[4];\nuniform \tvec4 unity_WorldTransformParams;\nuniform \tvec4 hlslcc_mtx4x4glstate_matrix_projection[4];\nuniform \tvec4 hlslcc_mtx4x4unity_MatrixVP[4];\nuniform \tfloat _FaceDilate;\nuniform \tvec4 hlslcc_mtx4x4_EnvMatrix[4];\nuniform \tfloat _WeightNormal;\nuniform \tfloat _WeightBold;\nuniform \tfloat _ScaleRatioA;\nuniform \tfloat _VertexOffsetX;\nuniform \tfloat _VertexOffsetY;\nuniform \tfloat _GradientScale;\nuniform \tfloat _ScaleX;\nuniform \tfloat _ScaleY;\nuniform \tfloat _PerspectiveFilter;\nuniform \tfloat _Sharpness;\nuniform \tvec4 _MainTex_ST;\nuniform \tvec4 _FaceTex_ST;\nuniform \tvec4 _OutlineTex_ST;\nattribute highp vec4 in_POSITION0;\nattribute highp vec4 in_TANGENT0;\nattribute highp vec3 in_NORMAL0;\nattribute highp vec4 in_TEXCOORD0;\nattribute highp vec4 in_TEXCOORD1;\nattribute mediump vec4 in_COLOR0;\nvarying highp vec4 vs_TEXCOORD0;\nvarying highp vec2 vs_TEXCOORD1;\nvarying highp vec2 vs_TEXCOORD5;\nvarying highp vec4 vs_TEXCOORD2;\nvarying highp vec4 vs_TEXCOORD3;\nvarying highp vec4 vs_TEXCOORD4;\nvarying mediump vec4 vs_COLOR0;\nvarying highp vec3 vs_TEXCOORD6;\nvarying mediump vec3 vs_TEXCOORD7;\nvec4 u_xlat0;\nint u_xlati0;\nvec4 u_xlat1;\nvec4 u_xlat2;\nmediump vec4 u_xlat16_2;\nvec4 u_xlat3;\nvec4 u_xlat4;\nmediump vec3 u_xlat16_5;\nmediump vec3 u_xlat16_6;\nint u_xlati7;\nvec3 u_xlat9;\nfloat u_xlat21;\nbool u_xlatb21;\nfloat u_xlat22;\nvoid main()\n{\n    u_xlat0.xy = in_POSITION0.xy + vec2(_VertexOffsetX, _VertexOffsetY);\n    u_xlat1 = u_xlat0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];\n    u_xlat1 = hlslcc_mtx4x4unity_ObjectToWorld[0] * u_xlat0.xxxx + u_xlat1;\n    u_xlat1 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat1;\n    u_xlat2 = u_xlat1 + hlslcc_mtx4x4unity_ObjectToWorld[3];\n    u_xlat1.xyz = hlslcc_mtx4x4unity_ObjectToWorld[3].xyz * in_POSITION0.www + u_xlat1.xyz;\n    u_xlat3 = u_xlat2.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];\n    u_xlat3 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat2.xxxx + u_xlat3;\n    u_xlat3 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat2.zzzz + u_xlat3;\n    gl_Position = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat2.wwww + u_xlat3;\n    u_xlat21 = in_TEXCOORD1.x * 0.000244140625;\n    u_xlat3.x = floor(u_xlat21);\n    u_xlat3.y = (-u_xlat3.x) * 4096.0 + in_TEXCOORD1.x;\n    u_xlat3.xy = u_xlat3.xy * vec2(0.001953125, 0.001953125);\n    vs_TEXCOORD0.zw = u_xlat3.xy * _FaceTex_ST.xy + _FaceTex_ST.zw;\n    vs_TEXCOORD1.xy = u_xlat3.xy * _OutlineTex_ST.xy + _OutlineTex_ST.zw;\n    vs_TEXCOORD0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;\n    u_xlatb21 = 0.0>=in_TEXCOORD1.y;\n    u_xlat21 = u_xlatb21 ? 1.0 : float(0.0);\n    u_xlat22 = (-_WeightNormal) + _WeightBold;\n    u_xlat21 = u_xlat21 * u_xlat22 + _WeightNormal;\n    u_xlat21 = u_xlat21 * 0.25 + _FaceDilate;\n    u_xlat21 = u_xlat21 * _ScaleRatioA;\n    vs_TEXCOORD5.x = u_xlat21 * 0.5;\n    u_xlat21 = u_xlat2.y * hlslcc_mtx4x4unity_MatrixVP[1].w;\n    u_xlat21 = hlslcc_mtx4x4unity_MatrixVP[0].w * u_xlat2.x + u_xlat21;\n    u_xlat21 = hlslcc_mtx4x4unity_MatrixVP[2].w * u_xlat2.z + u_xlat21;\n    u_xlat21 = hlslcc_mtx4x4unity_MatrixVP[3].w * u_xlat2.w + u_xlat21;\n    u_xlat2.xy = _ScreenParams.yy * hlslcc_mtx4x4glstate_matrix_projection[1].xy;\n    u_xlat2.xy = hlslcc_mtx4x4glstate_matrix_projection[0].xy * _ScreenParams.xx + u_xlat2.xy;\n    u_xlat2.xy = u_xlat2.xy * vec2(_ScaleX, _ScaleY);\n    u_xlat2.xy = vec2(u_xlat21) / u_xlat2.xy;\n    u_xlat21 = dot(u_xlat2.xy, u_xlat2.xy);\n    u_xlat21 = inversesqrt(u_xlat21);\n    u_xlat22 = abs(in_TEXCOORD1.y) * _GradientScale;\n    u_xlat2.x = _Sharpness + 1.0;\n    u_xlat22 = u_xlat22 * u_xlat2.x;\n    u_xlat2.x = u_xlat21 * u_xlat22;\n    u_xlat9.x = (-_PerspectiveFilter) + 1.0;\n    u_xlat2.x = u_xlat9.x * u_xlat2.x;\n    u_xlat21 = u_xlat21 * u_xlat22 + (-u_xlat2.x);\n    u_xlat9.xyz = _WorldSpaceCameraPos.yyy * hlslcc_mtx4x4unity_WorldToObject[1].xyz;\n    u_xlat9.xyz = hlslcc_mtx4x4unity_WorldToObject[0].xyz * _WorldSpaceCameraPos.xxx + u_xlat9.xyz;\n    u_xlat9.xyz = hlslcc_mtx4x4unity_WorldToObject[2].xyz * _WorldSpaceCameraPos.zzz + u_xlat9.xyz;\n    u_xlat9.xyz = u_xlat9.xyz + hlslcc_mtx4x4unity_WorldToObject[3].xyz;\n    u_xlat0.z = in_POSITION0.z;\n    u_xlat0.xyz = (-u_xlat0.xyz) + u_xlat9.xyz;\n    u_xlat0.x = dot(in_NORMAL0.xyz, u_xlat0.xyz);\n    u_xlati7 = int((0.0<u_xlat0.x) ? -1 : 0);\n    u_xlati0 = int((u_xlat0.x<0.0) ? -1 : 0);\n    u_xlati0 = (-u_xlati7) + u_xlati0;\n    u_xlat0.x = float(u_xlati0);\n    u_xlat0.xyz = u_xlat0.xxx * in_NORMAL0.xyz;\n    u_xlat3.x = dot(u_xlat0.xyz, hlslcc_mtx4x4unity_WorldToObject[0].xyz);\n    u_xlat3.y = dot(u_xlat0.xyz, hlslcc_mtx4x4unity_WorldToObject[1].xyz);\n    u_xlat3.z = dot(u_xlat0.xyz, hlslcc_mtx4x4unity_WorldToObject[2].xyz);\n    u_xlat0.x = dot(u_xlat3.xyz, u_xlat3.xyz);\n    u_xlat0.x = inversesqrt(u_xlat0.x);\n    u_xlat3 = u_xlat0.xxxx * u_xlat3.xyzz;\n    u_xlat0.xyz = (-u_xlat1.xyz) + _WorldSpaceCameraPos.xyz;\n    u_xlat22 = dot(u_xlat0.xyz, u_xlat0.xyz);\n    u_xlat22 = inversesqrt(u_xlat22);\n    u_xlat9.xyz = u_xlat0.xyz * vec3(u_xlat22);\n    u_xlat22 = dot(u_xlat3.xyw, u_xlat9.xyz);\n    vs_TEXCOORD5.y = abs(u_xlat22) * u_xlat21 + u_xlat2.x;\n    u_xlat2.xyz = in_TANGENT0.yyy * hlslcc_mtx4x4unity_ObjectToWorld[1].yzx;\n    u_xlat2.xyz = hlslcc_mtx4x4unity_ObjectToWorld[0].yzx * in_TANGENT0.xxx + u_xlat2.xyz;\n    u_xlat2.xyz = hlslcc_mtx4x4unity_ObjectToWorld[2].yzx * in_TANGENT0.zzz + u_xlat2.xyz;\n    u_xlat21 = dot(u_xlat2.xyz, u_xlat2.xyz);\n    u_xlat21 = inversesqrt(u_xlat21);\n    u_xlat2.xyz = vec3(u_xlat21) * u_xlat2.xyz;\n    u_xlat4.xyz = u_xlat2.xyz * u_xlat3.wxy;\n    u_xlat4.xyz = u_xlat3.ywx * u_xlat2.yzx + (-u_xlat4.xyz);\n    u_xlat21 = in_TANGENT0.w * unity_WorldTransformParams.w;\n    u_xlat4.xyz = vec3(u_xlat21) * u_xlat4.xyz;\n    vs_TEXCOORD2.y = u_xlat4.x;\n    vs_TEXCOORD2.z = u_xlat3.x;\n    vs_TEXCOORD2.x = u_xlat2.z;\n    vs_TEXCOORD2.w = u_xlat1.x;\n    vs_TEXCOORD3.x = u_xlat2.x;\n    vs_TEXCOORD4.x = u_xlat2.y;\n    vs_TEXCOORD3.z = u_xlat3.y;\n    vs_TEXCOORD3.y = u_xlat4.y;\n    vs_TEXCOORD4.y = u_xlat4.z;\n    vs_TEXCOORD3.w = u_xlat1.y;\n    vs_TEXCOORD4.z = u_xlat3.w;\n    vs_TEXCOORD4.w = u_xlat1.z;\n    vs_COLOR0 = in_COLOR0;\n    u_xlat2.xyz = u_xlat0.yyy * hlslcc_mtx4x4_EnvMatrix[1].xyz;\n    u_xlat0.xyw = hlslcc_mtx4x4_EnvMatrix[0].xyz * u_xlat0.xxx + u_xlat2.xyz;\n    vs_TEXCOORD6.xyz = hlslcc_mtx4x4_EnvMatrix[2].xyz * u_xlat0.zzz + u_xlat0.xyw;\n    u_xlat0 = (-u_xlat1.yyyy) + unity_4LightPosY0;\n    u_xlat2 = u_xlat3.yyyy * u_xlat0;\n    u_xlat0 = u_xlat0 * u_xlat0;\n    u_xlat4 = (-u_xlat1.xxxx) + unity_4LightPosX0;\n    u_xlat1 = (-u_xlat1.zzzz) + unity_4LightPosZ0;\n    u_xlat2 = u_xlat4 * u_xlat3.xxxx + u_xlat2;\n    u_xlat0 = u_xlat4 * u_xlat4 + u_xlat0;\n    u_xlat0 = u_xlat1 * u_xlat1 + u_xlat0;\n    u_xlat1 = u_xlat1 * u_xlat3.wwzw + u_xlat2;\n    u_xlat0 = max(u_xlat0, vec4(9.99999997e-07, 9.99999997e-07, 9.99999997e-07, 9.99999997e-07));\n    u_xlat2 = inversesqrt(u_xlat0);\n    u_xlat0 = u_xlat0 * unity_4LightAtten0 + vec4(1.0, 1.0, 1.0, 1.0);\n    u_xlat0 = vec4(1.0, 1.0, 1.0, 1.0) / u_xlat0;\n    u_xlat1 = u_xlat1 * u_xlat2;\n    u_xlat1 = max(u_xlat1, vec4(0.0, 0.0, 0.0, 0.0));\n    u_xlat0 = u_xlat0 * u_xlat1;\n    u_xlat1.xyz = u_xlat0.yyy * unity_LightColor[1].xyz;\n    u_xlat1.xyz = unity_LightColor[0].xyz * u_xlat0.xxx + u_xlat1.xyz;\n    u_xlat0.xyz = unity_LightColor[2].xyz * u_xlat0.zzz + u_xlat1.xyz;\n    u_xlat0.xyz = unity_LightColor[3].xyz * u_xlat0.www + u_xlat0.xyz;\n    u_xlat1.xyz = u_xlat0.xyz * vec3(0.305306017, 0.305306017, 0.305306017) + vec3(0.682171106, 0.682171106, 0.682171106);\n    u_xlat1.xyz = u_xlat0.xyz * u_xlat1.xyz + vec3(0.0125228781, 0.0125228781, 0.0125228781);\n    u_xlat16_5.x = u_xlat3.y * u_xlat3.y;\n    u_xlat16_5.x = u_xlat3.x * u_xlat3.x + (-u_xlat16_5.x);\n    u_xlat16_2 = u_xlat3.ywzx * u_xlat3;\n    u_xlat16_6.x = dot(unity_SHBr, u_xlat16_2);\n    u_xlat16_6.y = dot(unity_SHBg, u_xlat16_2);\n    u_xlat16_6.z = dot(unity_SHBb, u_xlat16_2);\n    u_xlat16_5.xyz = unity_SHC.xyz * u_xlat16_5.xxx + u_xlat16_6.xyz;\n    vs_TEXCOORD7.xyz = u_xlat0.xyz * u_xlat1.xyz + u_xlat16_5.xyz;\n    return;\n}\n\n","\n#version 100\n\n#ifdef GL_FRAGMENT_PRECISION_HIGH\n    precision highp float;\n#else\n    precision mediump float;\n#endif\nprecision highp int;\nuniform \tvec4 _Time;\nuniform \tvec3 _WorldSpaceCameraPos;\nuniform \tmediump vec4 _WorldSpaceLightPos0;\nuniform \tmediump vec4 unity_SHAr;\nuniform \tmediump vec4 unity_SHAg;\nuniform \tmediump vec4 unity_SHAb;\nuniform \tvec4 hlslcc_mtx4x4unity_ObjectToWorld[4];\nuniform \tmediump vec4 _LightColor0;\nuniform \tmediump vec4 _SpecColor;\nuniform \tfloat _FaceUVSpeedX;\nuniform \tfloat _FaceUVSpeedY;\nuniform \tmediump vec4 _FaceColor;\nuniform \tfloat _OutlineSoftness;\nuniform \tfloat _OutlineUVSpeedX;\nuniform \tfloat _OutlineUVSpeedY;\nuniform \tmediump vec4 _OutlineColor;\nuniform \tfloat _OutlineWidth;\nuniform \tfloat _Bevel;\nuniform \tfloat _BevelOffset;\nuniform \tfloat _BevelWidth;\nuniform \tfloat _BevelClamp;\nuniform \tfloat _BevelRoundness;\nuniform \tfloat _BumpOutline;\nuniform \tfloat _BumpFace;\nuniform \tmediump vec4 _ReflectFaceColor;\nuniform \tmediump vec4 _ReflectOutlineColor;\nuniform \tfloat _ShaderFlags;\nuniform \tfloat _ScaleRatioA;\nuniform \tfloat _TextureWidth;\nuniform \tfloat _TextureHeight;\nuniform \tfloat _GradientScale;\nuniform \tmediump float _FaceShininess;\nuniform \tmediump float _OutlineShininess;\nuniform lowp sampler2D _MainTex;\nuniform lowp sampler2D _FaceTex;\nuniform lowp sampler2D _OutlineTex;\nuniform lowp sampler2D _BumpMap;\nuniform lowp samplerCube _Cube;\nvarying highp vec4 vs_TEXCOORD0;\nvarying highp vec2 vs_TEXCOORD1;\nvarying highp vec2 vs_TEXCOORD5;\nvarying highp vec4 vs_TEXCOORD2;\nvarying highp vec4 vs_TEXCOORD3;\nvarying highp vec4 vs_TEXCOORD4;\nvarying mediump vec4 vs_COLOR0;\nvarying highp vec3 vs_TEXCOORD6;\nvarying mediump vec3 vs_TEXCOORD7;\n#define SV_Target0 gl_FragData[0]\nvec4 u_xlat0;\nlowp vec3 u_xlat10_0;\nmediump vec3 u_xlat16_1;\nvec4 u_xlat2;\nmediump vec4 u_xlat16_2;\nvec4 u_xlat3;\nmediump vec4 u_xlat16_3;\nlowp vec4 u_xlat10_3;\nvec2 u_xlat4;\nmediump vec4 u_xlat16_4;\nlowp vec4 u_xlat10_4;\nvec4 u_xlat5;\nmediump float u_xlat16_5;\nvec4 u_xlat6;\nmediump vec4 u_xlat16_7;\nvec3 u_xlat8;\nvec3 u_xlat9;\nmediump vec3 u_xlat16_11;\nvec3 u_xlat12;\nbool u_xlatb12;\nfloat u_xlat13;\nfloat u_xlat16;\nlowp vec2 u_xlat10_16;\nbool u_xlatb22;\nfloat u_xlat30;\nlowp float u_xlat10_30;\nmediump float u_xlat16_31;\nfloat u_xlat36;\nvoid main()\n{\n    u_xlat0.x = vs_TEXCOORD2.w;\n    u_xlat0.y = vs_TEXCOORD3.w;\n    u_xlat0.z = vs_TEXCOORD4.w;\n    u_xlat0.xyz = (-u_xlat0.xyz) + _WorldSpaceCameraPos.xyz;\n    u_xlat30 = dot(u_xlat0.xyz, u_xlat0.xyz);\n    u_xlat30 = inversesqrt(u_xlat30);\n    u_xlat16_1.xyz = u_xlat0.xyz * vec3(u_xlat30) + _WorldSpaceLightPos0.xyz;\n    u_xlat16_31 = dot(u_xlat16_1.xyz, u_xlat16_1.xyz);\n    u_xlat16_31 = inversesqrt(u_xlat16_31);\n    u_xlat16_1.xyz = vec3(u_xlat16_31) * u_xlat16_1.xyz;\n    u_xlat0.x = vs_TEXCOORD5.x + _BevelOffset;\n    u_xlat2.xy = vec2(1.0, 1.0) / vec2(_TextureWidth, _TextureHeight);\n    u_xlat2.z = 0.0;\n    u_xlat3 = (-u_xlat2.xzzy) + vs_TEXCOORD0.xyxy;\n    u_xlat2 = u_xlat2.xzzy + vs_TEXCOORD0.xyxy;\n    u_xlat10_4.x = texture2D(_MainTex, u_xlat3.xy).w;\n    u_xlat10_4.z = texture2D(_MainTex, u_xlat3.zw).w;\n    u_xlat10_4.y = texture2D(_MainTex, u_xlat2.xy).w;\n    u_xlat10_4.w = texture2D(_MainTex, u_xlat2.zw).w;\n    u_xlat0 = u_xlat0.xxxx + u_xlat10_4;\n    u_xlat0 = u_xlat0 + vec4(-0.5, -0.5, -0.5, -0.5);\n    u_xlat2.x = _BevelWidth + _OutlineWidth;\n    u_xlat2.x = max(u_xlat2.x, 0.00999999978);\n    u_xlat0 = u_xlat0 / u_xlat2.xxxx;\n    u_xlat2.x = u_xlat2.x * _Bevel;\n    u_xlat2.x = u_xlat2.x * _GradientScale;\n    u_xlat2.x = u_xlat2.x * -2.0;\n    u_xlat0 = u_xlat0 + vec4(0.5, 0.5, 0.5, 0.5);\n    u_xlat0 = clamp(u_xlat0, 0.0, 1.0);\n    u_xlat3 = u_xlat0 * vec4(2.0, 2.0, 2.0, 2.0) + vec4(-1.0, -1.0, -1.0, -1.0);\n    u_xlat3 = -abs(u_xlat3) + vec4(1.0, 1.0, 1.0, 1.0);\n    u_xlat12.x = _ShaderFlags * 0.5;\n    u_xlatb22 = u_xlat12.x>=(-u_xlat12.x);\n    u_xlat12.x = fract(abs(u_xlat12.x));\n    u_xlat12.x = (u_xlatb22) ? u_xlat12.x : (-u_xlat12.x);\n    u_xlatb12 = u_xlat12.x>=0.5;\n    u_xlat0 = (bool(u_xlatb12)) ? u_xlat3 : u_xlat0;\n    u_xlat3 = u_xlat0 * vec4(1.57079601, 1.57079601, 1.57079601, 1.57079601);\n    u_xlat3 = sin(u_xlat3);\n    u_xlat3 = (-u_xlat0) + u_xlat3;\n    u_xlat0 = vec4(vec4(_BevelRoundness, _BevelRoundness, _BevelRoundness, _BevelRoundness)) * u_xlat3 + u_xlat0;\n    u_xlat12.x = (-_BevelClamp) + 1.0;\n    u_xlat0 = min(u_xlat0, u_xlat12.xxxx);\n    u_xlat0.xz = u_xlat2.xx * u_xlat0.xz;\n    u_xlat0.yz = u_xlat0.wy * u_xlat2.xx + (-u_xlat0.zx);\n    u_xlat0.x = float(-1.0);\n    u_xlat0.w = float(1.0);\n    u_xlat2.x = dot(u_xlat0.xy, u_xlat0.xy);\n    u_xlat2.x = inversesqrt(u_xlat2.x);\n    u_xlat30 = dot(u_xlat0.zw, u_xlat0.zw);\n    u_xlat30 = inversesqrt(u_xlat30);\n    u_xlat3.x = u_xlat30 * u_xlat0.z;\n    u_xlat3.yz = vec2(u_xlat30) * vec2(1.0, 0.0);\n    u_xlat0.z = 0.0;\n    u_xlat0.xyz = u_xlat2.xxx * u_xlat0.xyz;\n    u_xlat2.xyz = u_xlat0.xyz * u_xlat3.xyz;\n    u_xlat0.xyz = u_xlat3.zxy * u_xlat0.yzx + (-u_xlat2.xyz);\n    u_xlat10_30 = texture2D(_MainTex, vs_TEXCOORD0.xy).w;\n    u_xlat30 = (-u_xlat10_30) + 0.5;\n    u_xlat30 = u_xlat30 + (-vs_TEXCOORD5.x);\n    u_xlat30 = u_xlat30 * vs_TEXCOORD5.y + 0.5;\n    u_xlat2.x = _OutlineWidth * _ScaleRatioA;\n    u_xlat2.x = u_xlat2.x * vs_TEXCOORD5.y;\n    u_xlat16_31 = u_xlat2.x * 0.5 + u_xlat30;\n    u_xlat16_31 = clamp(u_xlat16_31, 0.0, 1.0);\n    u_xlat16_5 = min(u_xlat2.x, 1.0);\n    u_xlat16_5 = sqrt(u_xlat16_5);\n    u_xlat16_31 = u_xlat16_31 * u_xlat16_5;\n    u_xlat12.xy = vec2(_OutlineUVSpeedX, _OutlineUVSpeedY) * _Time.yy + vs_TEXCOORD1.xy;\n    u_xlat10_3 = texture2D(_OutlineTex, u_xlat12.xy);\n    u_xlat12.xyz = u_xlat10_3.xyz * _OutlineColor.xyz;\n    u_xlat3.x = vs_COLOR0.w * _OutlineColor.w;\n    u_xlat13 = u_xlat10_3.w * u_xlat3.x;\n    u_xlat4.xy = vec2(_FaceUVSpeedX, _FaceUVSpeedY) * _Time.yy + vs_TEXCOORD0.zw;\n    u_xlat10_4 = texture2D(_FaceTex, u_xlat4.xy);\n    u_xlat5 = vs_COLOR0 * _FaceColor;\n    u_xlat6 = u_xlat10_4 * u_xlat5;\n    u_xlat16_7.xyz = u_xlat6.www * u_xlat6.xyz;\n    u_xlat16_7.xyz = u_xlat12.xyz * vec3(u_xlat13) + (-u_xlat16_7.xyz);\n    u_xlat16_7.w = u_xlat3.x * u_xlat10_3.w + (-u_xlat6.w);\n    u_xlat16_3 = vec4(u_xlat16_31) * u_xlat16_7;\n    u_xlat16_4.w = u_xlat5.w * u_xlat10_4.w + u_xlat16_3.w;\n    u_xlat16_4.xyz = u_xlat6.xyz * u_xlat6.www + u_xlat16_3.xyz;\n    u_xlat16_31 = (-u_xlat2.x) * 0.5 + u_xlat30;\n    u_xlat30 = u_xlat2.x * 0.5 + u_xlat30;\n    u_xlat30 = clamp(u_xlat30, 0.0, 1.0);\n    u_xlat2.x = _OutlineSoftness * _ScaleRatioA;\n    u_xlat12.x = u_xlat2.x * vs_TEXCOORD5.y;\n    u_xlat16_7.x = u_xlat2.x * vs_TEXCOORD5.y + 1.0;\n    u_xlat16_31 = u_xlat12.x * 0.5 + u_xlat16_31;\n    u_xlat16_31 = u_xlat16_31 / u_xlat16_7.x;\n    u_xlat16_31 = clamp(u_xlat16_31, 0.0, 1.0);\n    u_xlat16_31 = (-u_xlat16_31) + 1.0;\n    u_xlat16_2 = vec4(u_xlat16_31) * u_xlat16_4;\n    u_xlat6.x = (-_BumpFace) + _BumpOutline;\n    u_xlat6.x = u_xlat30 * u_xlat6.x + _BumpFace;\n    u_xlat10_16.xy = texture2D(_BumpMap, vs_TEXCOORD0.zw).yw;\n    u_xlat16_7.xy = u_xlat10_16.yx * vec2(2.0, 2.0) + vec2(-1.0, -1.0);\n    u_xlat16_31 = dot(u_xlat16_7.xy, u_xlat16_7.xy);\n    u_xlat16_31 = min(u_xlat16_31, 1.0);\n    u_xlat16_31 = (-u_xlat16_31) + 1.0;\n    u_xlat16_7.z = sqrt(u_xlat16_31);\n    u_xlat6.xyz = u_xlat16_7.xyz * u_xlat6.xxx + vec3(-0.0, -0.0, -1.0);\n    u_xlat6.xyz = u_xlat16_2.www * u_xlat6.xyz + vec3(0.0, 0.0, 1.0);\n    u_xlat0.xyz = u_xlat0.xyz + (-u_xlat6.xyz);\n    u_xlat6.x = dot(u_xlat0.xyz, u_xlat0.xyz);\n    u_xlat6.x = inversesqrt(u_xlat6.x);\n    u_xlat0.xyz = u_xlat0.xyz * u_xlat6.xxx;\n    u_xlat16_7.x = dot(vs_TEXCOORD2.xyz, (-u_xlat0.xyz));\n    u_xlat16_7.y = dot(vs_TEXCOORD3.xyz, (-u_xlat0.xyz));\n    u_xlat16_7.z = dot(vs_TEXCOORD4.xyz, (-u_xlat0.xyz));\n    u_xlat6.x = dot(u_xlat16_7.xyz, u_xlat16_7.xyz);\n    u_xlat6.x = inversesqrt(u_xlat6.x);\n    u_xlat3.xyz = u_xlat6.xxx * u_xlat16_7.xyz;\n    u_xlat16_1.x = dot(u_xlat3.xyz, u_xlat16_1.xyz);\n    u_xlat16_1.x = max(u_xlat16_1.x, 0.0);\n    u_xlat6.x = log2(u_xlat16_1.x);\n    u_xlat16 = (-_FaceShininess) + _OutlineShininess;\n    u_xlat16 = u_xlat30 * u_xlat16 + _FaceShininess;\n    u_xlat16_1.x = u_xlat16 * 128.0;\n    u_xlat6.x = u_xlat6.x * u_xlat16_1.x;\n    u_xlat6.x = exp2(u_xlat6.x);\n    u_xlat16_1.xyz = _LightColor0.xyz * _SpecColor.xyz;\n    u_xlat6.xyz = u_xlat6.xxx * u_xlat16_1.xyz;\n    u_xlat16_1.x = dot(u_xlat3.xyz, _WorldSpaceLightPos0.xyz);\n    u_xlat16_1.x = max(u_xlat16_1.x, 0.0);\n    u_xlat36 = max(u_xlat16_2.w, 9.99999975e-05);\n    u_xlat8.xyz = u_xlat16_2.xyz / vec3(u_xlat36);\n    u_xlat16_11.xyz = u_xlat8.xyz * _LightColor0.xyz;\n    u_xlat6.xyz = u_xlat16_11.xyz * u_xlat16_1.xxx + u_xlat6.xyz;\n    u_xlat3.w = 1.0;\n    u_xlat16_1.x = dot(unity_SHAr, u_xlat3);\n    u_xlat16_1.y = dot(unity_SHAg, u_xlat3);\n    u_xlat16_1.z = dot(unity_SHAb, u_xlat3);\n    u_xlat16_1.xyz = u_xlat16_1.xyz + vs_TEXCOORD7.xyz;\n    u_xlat16_1.xyz = max(u_xlat16_1.xyz, vec3(0.0, 0.0, 0.0));\n    u_xlat9.xyz = log2(u_xlat16_1.xyz);\n    u_xlat9.xyz = u_xlat9.xyz * vec3(0.416666657, 0.416666657, 0.416666657);\n    u_xlat9.xyz = exp2(u_xlat9.xyz);\n    u_xlat9.xyz = u_xlat9.xyz * vec3(1.05499995, 1.05499995, 1.05499995) + vec3(-0.0549999997, -0.0549999997, -0.0549999997);\n    u_xlat9.xyz = max(u_xlat9.xyz, vec3(0.0, 0.0, 0.0));\n    u_xlat16_1.xyz = u_xlat8.xyz * u_xlat9.xyz + u_xlat6.xyz;\n    u_xlat6.xyz = (-_ReflectFaceColor.xyz) + _ReflectOutlineColor.xyz;\n    u_xlat6.xyz = vec3(u_xlat30) * u_xlat6.xyz + _ReflectFaceColor.xyz;\n    u_xlat8.xyz = u_xlat0.yyy * hlslcc_mtx4x4unity_ObjectToWorld[1].xyz;\n    u_xlat0.xyw = hlslcc_mtx4x4unity_ObjectToWorld[0].xyz * u_xlat0.xxx + u_xlat8.xyz;\n    u_xlat0.xyz = hlslcc_mtx4x4unity_ObjectToWorld[2].xyz * u_xlat0.zzz + u_xlat0.xyw;\n    u_xlat30 = dot(vs_TEXCOORD6.xyz, u_xlat0.xyz);\n    u_xlat30 = u_xlat30 + u_xlat30;\n    u_xlat0.xyz = u_xlat0.xyz * (-vec3(u_xlat30)) + vs_TEXCOORD6.xyz;\n    u_xlat10_0.xyz = textureCube(_Cube, u_xlat0.xyz).xyz;\n    u_xlat0.xyz = u_xlat6.xyz * u_xlat10_0.xyz;\n    SV_Target0.xyz = u_xlat0.xyz * u_xlat16_2.www + u_xlat16_1.xyz;\n    SV_Target0.w = u_xlat16_2.w;\n    return;\n}\n\n",0,0,2,0,0,["DIRECTIONAL","LIGHTPROBE_SH","VERTEXLIGHT_ON"],[["IGNOREPROJECTOR","true"],["LIGHTMODE","FORWARDBASE"],["QUEUE","Transparent"],["RenderType","Transparent"]]]],["DIRECTIONAL","FOG_EXP","FOG_EXP2","FOG_LINEAR","GLOW_ON","INSTANCING_ON","LIGHTPROBE_SH","STEREO_CUBEMAP_RENDER_ON","STEREO_INSTANCING_ON","STEREO_MULTIVIEW_ON","UNITY_SINGLE_PASS_STEREO","VERTEXLIGHT_ON","__"],[[["__","GLOW_ON"]],[["__","INSTANCING_ON"]],[["__","FOG_LINEAR","FOG_EXP","FOG_EXP2"]],[["DIRECTIONAL"]],[["DIRECTIONAL","LIGHTPROBE_SH"]],[["DIRECTIONAL","VERTEXLIGHT_ON","LIGHTPROBE_SH"]]],3,0,5,0,0,0,0,[["IGNOREPROJECTOR","true"],["LIGHTMODE","FORWARDBASE"],["QUEUE","Transparent"],["RenderType","Transparent"]],null,"",227,-1],["TextMeshPro/Distance Field (Surface)",[[0,"\n#version 100\n\nuniform \tvec3 _WorldSpaceCameraPos;\nuniform \tvec4 _ScreenParams;\nuniform \tvec4 hlslcc_mtx4x4unity_ObjectToWorld[4];\nuniform \tvec4 hlslcc_mtx4x4unity_WorldToObject[4];\nuniform \tvec4 unity_WorldTransformParams;\nuniform \tvec4 hlslcc_mtx4x4glstate_matrix_projection[4];\nuniform \tvec4 hlslcc_mtx4x4unity_MatrixVP[4];\nuniform \tvec4 hlslcc_mtx4x4unity_WorldToLight[4];\nuniform \tfloat _FaceDilate;\nuniform \tvec4 hlslcc_mtx4x4_EnvMatrix[4];\nuniform \tfloat _WeightNormal;\nuniform \tfloat _WeightBold;\nuniform \tfloat _ScaleRatioA;\nuniform \tfloat _VertexOffsetX;\nuniform \tfloat _VertexOffsetY;\nuniform \tfloat _GradientScale;\nuniform \tfloat _ScaleX;\nuniform \tfloat _ScaleY;\nuniform \tfloat _PerspectiveFilter;\nuniform \tfloat _Sharpness;\nuniform \tvec4 _MainTex_ST;\nuniform \tvec4 _FaceTex_ST;\nuniform \tvec4 _OutlineTex_ST;\nattribute highp vec4 in_POSITION0;\nattribute highp vec4 in_TANGENT0;\nattribute highp vec3 in_NORMAL0;\nattribute highp vec4 in_TEXCOORD0;\nattribute highp vec4 in_TEXCOORD1;\nattribute mediump vec4 in_COLOR0;\nvarying highp vec4 vs_TEXCOORD0;\nvarying highp vec2 vs_TEXCOORD1;\nvarying highp vec2 vs_TEXCOORD6;\nvarying highp vec3 vs_TEXCOORD2;\nvarying highp vec3 vs_TEXCOORD3;\nvarying highp vec3 vs_TEXCOORD4;\nvarying highp vec3 vs_TEXCOORD5;\nvarying mediump vec4 vs_COLOR0;\nvarying highp vec3 vs_TEXCOORD7;\nvarying highp vec3 vs_TEXCOORD8;\nvec3 u_xlat0;\nint u_xlati0;\nvec4 u_xlat1;\nvec4 u_xlat2;\nvec4 u_xlat3;\nvec3 u_xlat4;\nfloat u_xlat5;\nint u_xlati5;\nfloat u_xlat7;\nfloat u_xlat12;\nfloat u_xlat15;\nbool u_xlatb15;\nvoid main()\n{\n    u_xlat0.xy = in_POSITION0.xy + vec2(_VertexOffsetX, _VertexOffsetY);\n    u_xlat1 = u_xlat0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];\n    u_xlat1 = hlslcc_mtx4x4unity_ObjectToWorld[0] * u_xlat0.xxxx + u_xlat1;\n    u_xlat1 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat1;\n    u_xlat2 = u_xlat1 + hlslcc_mtx4x4unity_ObjectToWorld[3];\n    u_xlat3 = u_xlat2.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];\n    u_xlat3 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat2.xxxx + u_xlat3;\n    u_xlat3 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat2.zzzz + u_xlat3;\n    gl_Position = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat2.wwww + u_xlat3;\n    u_xlat15 = in_TEXCOORD1.x * 0.000244140625;\n    u_xlat3.x = floor(u_xlat15);\n    u_xlat3.y = (-u_xlat3.x) * 4096.0 + in_TEXCOORD1.x;\n    u_xlat3.xy = u_xlat3.xy * vec2(0.001953125, 0.001953125);\n    vs_TEXCOORD0.zw = u_xlat3.xy * _FaceTex_ST.xy + _FaceTex_ST.zw;\n    vs_TEXCOORD1.xy = u_xlat3.xy * _OutlineTex_ST.xy + _OutlineTex_ST.zw;\n    vs_TEXCOORD0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;\n    u_xlat15 = u_xlat2.y * hlslcc_mtx4x4unity_MatrixVP[1].w;\n    u_xlat15 = hlslcc_mtx4x4unity_MatrixVP[0].w * u_xlat2.x + u_xlat15;\n    u_xlat15 = hlslcc_mtx4x4unity_MatrixVP[2].w * u_xlat2.z + u_xlat15;\n    u_xlat15 = hlslcc_mtx4x4unity_MatrixVP[3].w * u_xlat2.w + u_xlat15;\n    u_xlat2.xy = _ScreenParams.yy * hlslcc_mtx4x4glstate_matrix_projection[1].xy;\n    u_xlat2.xy = hlslcc_mtx4x4glstate_matrix_projection[0].xy * _ScreenParams.xx + u_xlat2.xy;\n    u_xlat2.xy = u_xlat2.xy * vec2(_ScaleX, _ScaleY);\n    u_xlat2.xy = vec2(u_xlat15) / u_xlat2.xy;\n    u_xlat15 = dot(u_xlat2.xy, u_xlat2.xy);\n    u_xlat15 = inversesqrt(u_xlat15);\n    u_xlat2.x = abs(in_TEXCOORD1.y) * _GradientScale;\n    u_xlat7 = _Sharpness + 1.0;\n    u_xlat2.x = u_xlat7 * u_xlat2.x;\n    u_xlat7 = u_xlat15 * u_xlat2.x;\n    u_xlat12 = (-_PerspectiveFilter) + 1.0;\n    u_xlat7 = u_xlat12 * u_xlat7;\n    u_xlat15 = u_xlat15 * u_xlat2.x + (-u_xlat7);\n    u_xlat2.xzw = _WorldSpaceCameraPos.yyy * hlslcc_mtx4x4unity_WorldToObject[1].xyz;\n    u_xlat2.xzw = hlslcc_mtx4x4unity_WorldToObject[0].xyz * _WorldSpaceCameraPos.xxx + u_xlat2.xzw;\n    u_xlat2.xzw = hlslcc_mtx4x4unity_WorldToObject[2].xyz * _WorldSpaceCameraPos.zzz + u_xlat2.xzw;\n    u_xlat2.xzw = u_xlat2.xzw + hlslcc_mtx4x4unity_WorldToObject[3].xyz;\n    u_xlat0.z = in_POSITION0.z;\n    u_xlat0.xyz = (-u_xlat0.xyz) + u_xlat2.xzw;\n    u_xlat0.x = dot(in_NORMAL0.xyz, u_xlat0.xyz);\n    u_xlati5 = int((0.0<u_xlat0.x) ? -1 : 0);\n    u_xlati0 = int((u_xlat0.x<0.0) ? -1 : 0);\n    u_xlati0 = (-u_xlati5) + u_xlati0;\n    u_xlat0.x = float(u_xlati0);\n    u_xlat0.xyz = u_xlat0.xxx * in_NORMAL0.xyz;\n    u_xlat3.y = dot(u_xlat0.xyz, hlslcc_mtx4x4unity_WorldToObject[0].xyz);\n    u_xlat3.z = dot(u_xlat0.xyz, hlslcc_mtx4x4unity_WorldToObject[1].xyz);\n    u_xlat3.x = dot(u_xlat0.xyz, hlslcc_mtx4x4unity_WorldToObject[2].xyz);\n    u_xlat0.x = dot(u_xlat3.xyz, u_xlat3.xyz);\n    u_xlat0.x = inversesqrt(u_xlat0.x);\n    u_xlat0.xyz = u_xlat0.xxx * u_xlat3.xyz;\n    u_xlat2.xzw = hlslcc_mtx4x4unity_ObjectToWorld[3].xyz * in_POSITION0.www + u_xlat1.xyz;\n    u_xlat1 = hlslcc_mtx4x4unity_ObjectToWorld[3] * in_POSITION0.wwww + u_xlat1;\n    u_xlat3.xyz = (-u_xlat2.xzw) + _WorldSpaceCameraPos.xyz;\n    vs_TEXCOORD5.xyz = u_xlat2.xzw;\n    u_xlat2.x = dot(u_xlat3.xyz, u_xlat3.xyz);\n    u_xlat2.x = inversesqrt(u_xlat2.x);\n    u_xlat2.xzw = u_xlat2.xxx * u_xlat3.xyz;\n    u_xlat2.x = dot(u_xlat0.yzx, u_xlat2.xzw);\n    vs_TEXCOORD6.y = abs(u_xlat2.x) * u_xlat15 + u_xlat7;\n    u_xlatb15 = 0.0>=in_TEXCOORD1.y;\n    u_xlat15 = u_xlatb15 ? 1.0 : float(0.0);\n    u_xlat2.x = (-_WeightNormal) + _WeightBold;\n    u_xlat15 = u_xlat15 * u_xlat2.x + _WeightNormal;\n    u_xlat15 = u_xlat15 * 0.25 + _FaceDilate;\n    u_xlat15 = u_xlat15 * _ScaleRatioA;\n    vs_TEXCOORD6.x = u_xlat15 * 0.5;\n    vs_TEXCOORD2.z = u_xlat0.y;\n    u_xlat2.xyz = in_TANGENT0.yyy * hlslcc_mtx4x4unity_ObjectToWorld[1].yzx;\n    u_xlat2.xyz = hlslcc_mtx4x4unity_ObjectToWorld[0].yzx * in_TANGENT0.xxx + u_xlat2.xyz;\n    u_xlat2.xyz = hlslcc_mtx4x4unity_ObjectToWorld[2].yzx * in_TANGENT0.zzz + u_xlat2.xyz;\n    u_xlat15 = dot(u_xlat2.xyz, u_xlat2.xyz);\n    u_xlat15 = inversesqrt(u_xlat15);\n    u_xlat2.xyz = vec3(u_xlat15) * u_xlat2.xyz;\n    u_xlat4.xyz = u_xlat0.xyz * u_xlat2.xyz;\n    u_xlat4.xyz = u_xlat0.zxy * u_xlat2.yzx + (-u_xlat4.xyz);\n    u_xlat5 = in_TANGENT0.w * unity_WorldTransformParams.w;\n    u_xlat4.xyz = vec3(u_xlat5) * u_xlat4.xyz;\n    vs_TEXCOORD2.y = u_xlat4.x;\n    vs_TEXCOORD2.x = u_xlat2.z;\n    vs_TEXCOORD3.z = u_xlat0.z;\n    vs_TEXCOORD4.z = u_xlat0.x;\n    vs_TEXCOORD3.x = u_xlat2.x;\n    vs_TEXCOORD4.x = u_xlat2.y;\n    vs_TEXCOORD3.y = u_xlat4.y;\n    vs_TEXCOORD4.y = u_xlat4.z;\n    vs_COLOR0 = in_COLOR0;\n    u_xlat0.xyz = u_xlat3.yyy * hlslcc_mtx4x4_EnvMatrix[1].xyz;\n    u_xlat0.xyz = hlslcc_mtx4x4_EnvMatrix[0].xyz * u_xlat3.xxx + u_xlat0.xyz;\n    vs_TEXCOORD7.xyz = hlslcc_mtx4x4_EnvMatrix[2].xyz * u_xlat3.zzz + u_xlat0.xyz;\n    u_xlat0.xyz = u_xlat1.yyy * hlslcc_mtx4x4unity_WorldToLight[1].xyz;\n    u_xlat0.xyz = hlslcc_mtx4x4unity_WorldToLight[0].xyz * u_xlat1.xxx + u_xlat0.xyz;\n    u_xlat0.xyz = hlslcc_mtx4x4unity_WorldToLight[2].xyz * u_xlat1.zzz + u_xlat0.xyz;\n    vs_TEXCOORD8.xyz = hlslcc_mtx4x4unity_WorldToLight[3].xyz * u_xlat1.www + u_xlat0.xyz;\n    return;\n}\n\n","\n#version 100\n\n#ifdef GL_FRAGMENT_PRECISION_HIGH\n    precision highp float;\n#else\n    precision mediump float;\n#endif\nprecision highp int;\nuniform \tvec4 _Time;\nuniform \tvec3 _WorldSpaceCameraPos;\nuniform \tvec4 _WorldSpaceLightPos0;\nuniform \tmediump vec4 _LightColor0;\nuniform \tmediump vec4 _SpecColor;\nuniform \tvec4 hlslcc_mtx4x4unity_WorldToLight[4];\nuniform \tfloat _FaceUVSpeedX;\nuniform \tfloat _FaceUVSpeedY;\nuniform \tmediump vec4 _FaceColor;\nuniform \tfloat _OutlineSoftness;\nuniform \tfloat _OutlineUVSpeedX;\nuniform \tfloat _OutlineUVSpeedY;\nuniform \tmediump vec4 _OutlineColor;\nuniform \tfloat _OutlineWidth;\nuniform \tfloat _Bevel;\nuniform \tfloat _BevelOffset;\nuniform \tfloat _BevelWidth;\nuniform \tfloat _BevelClamp;\nuniform \tfloat _BevelRoundness;\nuniform \tfloat _BumpOutline;\nuniform \tfloat _BumpFace;\nuniform \tfloat _ShaderFlags;\nuniform \tfloat _ScaleRatioA;\nuniform \tfloat _TextureWidth;\nuniform \tfloat _TextureHeight;\nuniform \tfloat _GradientScale;\nuniform \tmediump float _FaceShininess;\nuniform \tmediump float _OutlineShininess;\nuniform lowp sampler2D _MainTex;\nuniform lowp sampler2D _FaceTex;\nuniform lowp sampler2D _OutlineTex;\nuniform lowp sampler2D _BumpMap;\nuniform highp sampler2D _LightTexture0;\nvarying highp vec4 vs_TEXCOORD0;\nvarying highp vec2 vs_TEXCOORD1;\nvarying highp vec2 vs_TEXCOORD6;\nvarying highp vec3 vs_TEXCOORD2;\nvarying highp vec3 vs_TEXCOORD3;\nvarying highp vec3 vs_TEXCOORD4;\nvarying highp vec3 vs_TEXCOORD5;\nvarying mediump vec4 vs_COLOR0;\n#define SV_Target0 gl_FragData[0]\nvec4 u_xlat0;\nvec4 u_xlat1;\nmediump vec4 u_xlat16_1;\nvec4 u_xlat2;\nmediump vec4 u_xlat16_2;\nlowp vec4 u_xlat10_2;\nvec2 u_xlat3;\nmediump vec4 u_xlat16_3;\nlowp vec4 u_xlat10_3;\nmediump vec4 u_xlat16_4;\nvec4 u_xlat5;\nvec4 u_xlat6;\nmediump vec4 u_xlat16_7;\nvec3 u_xlat8;\nvec3 u_xlat9;\nbool u_xlatb9;\nfloat u_xlat10;\nmediump vec3 u_xlat16_12;\nlowp vec2 u_xlat10_13;\nbool u_xlatb17;\nfloat u_xlat24;\nlowp float u_xlat10_24;\nmediump float u_xlat16_28;\nfloat u_xlat29;\nvoid main()\n{\n    u_xlat0.x = vs_TEXCOORD6.x + _BevelOffset;\n    u_xlat1.xy = vec2(1.0, 1.0) / vec2(_TextureWidth, _TextureHeight);\n    u_xlat1.z = 0.0;\n    u_xlat2 = (-u_xlat1.xzzy) + vs_TEXCOORD0.xyxy;\n    u_xlat1 = u_xlat1.xzzy + vs_TEXCOORD0.xyxy;\n    u_xlat10_3.x = texture2D(_MainTex, u_xlat2.xy).w;\n    u_xlat10_3.z = texture2D(_MainTex, u_xlat2.zw).w;\n    u_xlat10_3.y = texture2D(_MainTex, u_xlat1.xy).w;\n    u_xlat10_3.w = texture2D(_MainTex, u_xlat1.zw).w;\n    u_xlat0 = u_xlat0.xxxx + u_xlat10_3;\n    u_xlat0 = u_xlat0 + vec4(-0.5, -0.5, -0.5, -0.5);\n    u_xlat1.x = _BevelWidth + _OutlineWidth;\n    u_xlat1.x = max(u_xlat1.x, 0.00999999978);\n    u_xlat0 = u_xlat0 / u_xlat1.xxxx;\n    u_xlat1.x = u_xlat1.x * _Bevel;\n    u_xlat1.x = u_xlat1.x * _GradientScale;\n    u_xlat1.x = u_xlat1.x * -2.0;\n    u_xlat0 = u_xlat0 + vec4(0.5, 0.5, 0.5, 0.5);\n    u_xlat0 = clamp(u_xlat0, 0.0, 1.0);\n    u_xlat2 = u_xlat0 * vec4(2.0, 2.0, 2.0, 2.0) + vec4(-1.0, -1.0, -1.0, -1.0);\n    u_xlat2 = -abs(u_xlat2) + vec4(1.0, 1.0, 1.0, 1.0);\n    u_xlat9.x = _ShaderFlags * 0.5;\n    u_xlatb17 = u_xlat9.x>=(-u_xlat9.x);\n    u_xlat9.x = fract(abs(u_xlat9.x));\n    u_xlat9.x = (u_xlatb17) ? u_xlat9.x : (-u_xlat9.x);\n    u_xlatb9 = u_xlat9.x>=0.5;\n    u_xlat0 = (bool(u_xlatb9)) ? u_xlat2 : u_xlat0;\n    u_xlat2 = u_xlat0 * vec4(1.57079601, 1.57079601, 1.57079601, 1.57079601);\n    u_xlat2 = sin(u_xlat2);\n    u_xlat2 = (-u_xlat0) + u_xlat2;\n    u_xlat0 = vec4(vec4(_BevelRoundness, _BevelRoundness, _BevelRoundness, _BevelRoundness)) * u_xlat2 + u_xlat0;\n    u_xlat9.x = (-_BevelClamp) + 1.0;\n    u_xlat0 = min(u_xlat0, u_xlat9.xxxx);\n    u_xlat0.xz = u_xlat1.xx * u_xlat0.xz;\n    u_xlat0.yz = u_xlat0.wy * u_xlat1.xx + (-u_xlat0.zx);\n    u_xlat0.x = float(-1.0);\n    u_xlat0.w = float(1.0);\n    u_xlat1.x = dot(u_xlat0.xy, u_xlat0.xy);\n    u_xlat1.x = inversesqrt(u_xlat1.x);\n    u_xlat24 = dot(u_xlat0.zw, u_xlat0.zw);\n    u_xlat24 = inversesqrt(u_xlat24);\n    u_xlat2.x = u_xlat24 * u_xlat0.z;\n    u_xlat2.yz = vec2(u_xlat24) * vec2(1.0, 0.0);\n    u_xlat0.z = 0.0;\n    u_xlat0.xyz = u_xlat1.xxx * u_xlat0.xyz;\n    u_xlat1.xyz = u_xlat0.xyz * u_xlat2.xyz;\n    u_xlat0.xyz = u_xlat2.zxy * u_xlat0.yzx + (-u_xlat1.xyz);\n    u_xlat10_24 = texture2D(_MainTex, vs_TEXCOORD0.xy).w;\n    u_xlat24 = (-u_xlat10_24) + 0.5;\n    u_xlat24 = u_xlat24 + (-vs_TEXCOORD6.x);\n    u_xlat24 = u_xlat24 * vs_TEXCOORD6.y + 0.5;\n    u_xlat1.x = _OutlineWidth * _ScaleRatioA;\n    u_xlat1.x = u_xlat1.x * vs_TEXCOORD6.y;\n    u_xlat16_4.x = u_xlat1.x * 0.5 + u_xlat24;\n    u_xlat16_4.x = clamp(u_xlat16_4.x, 0.0, 1.0);\n    u_xlat16_12.x = min(u_xlat1.x, 1.0);\n    u_xlat16_12.x = sqrt(u_xlat16_12.x);\n    u_xlat16_4.x = u_xlat16_12.x * u_xlat16_4.x;\n    u_xlat9.xy = vec2(_OutlineUVSpeedX, _OutlineUVSpeedY) * _Time.yy + vs_TEXCOORD1.xy;\n    u_xlat10_2 = texture2D(_OutlineTex, u_xlat9.xy);\n    u_xlat9.xyz = u_xlat10_2.xyz * _OutlineColor.xyz;\n    u_xlat2.x = vs_COLOR0.w * _OutlineColor.w;\n    u_xlat10 = u_xlat10_2.w * u_xlat2.x;\n    u_xlat3.xy = vec2(_FaceUVSpeedX, _FaceUVSpeedY) * _Time.yy + vs_TEXCOORD0.zw;\n    u_xlat10_3 = texture2D(_FaceTex, u_xlat3.xy);\n    u_xlat5 = vs_COLOR0 * _FaceColor;\n    u_xlat6 = u_xlat10_3 * u_xlat5;\n    u_xlat16_12.xyz = u_xlat6.www * u_xlat6.xyz;\n    u_xlat16_7.xyz = u_xlat9.xyz * vec3(u_xlat10) + (-u_xlat16_12.xyz);\n    u_xlat16_7.w = u_xlat2.x * u_xlat10_2.w + (-u_xlat6.w);\n    u_xlat16_2 = u_xlat16_4.xxxx * u_xlat16_7;\n    u_xlat16_3.w = u_xlat5.w * u_xlat10_3.w + u_xlat16_2.w;\n    u_xlat16_3.xyz = u_xlat6.xyz * u_xlat6.www + u_xlat16_2.xyz;\n    u_xlat16_4.x = (-u_xlat1.x) * 0.5 + u_xlat24;\n    u_xlat24 = u_xlat1.x * 0.5 + u_xlat24;\n    u_xlat24 = clamp(u_xlat24, 0.0, 1.0);\n    u_xlat1.x = _OutlineSoftness * _ScaleRatioA;\n    u_xlat9.x = u_xlat1.x * vs_TEXCOORD6.y;\n    u_xlat16_12.x = u_xlat1.x * vs_TEXCOORD6.y + 1.0;\n    u_xlat16_4.x = u_xlat9.x * 0.5 + u_xlat16_4.x;\n    u_xlat16_4.x = u_xlat16_4.x / u_xlat16_12.x;\n    u_xlat16_4.x = clamp(u_xlat16_4.x, 0.0, 1.0);\n    u_xlat16_4.x = (-u_xlat16_4.x) + 1.0;\n    u_xlat16_1 = u_xlat16_3 * u_xlat16_4.xxxx;\n    u_xlat5.x = (-_BumpFace) + _BumpOutline;\n    u_xlat5.x = u_xlat24 * u_xlat5.x + _BumpFace;\n    u_xlat10_13.xy = texture2D(_BumpMap, vs_TEXCOORD0.zw).yw;\n    u_xlat16_4.xy = u_xlat10_13.yx * vec2(2.0, 2.0) + vec2(-1.0, -1.0);\n    u_xlat16_28 = dot(u_xlat16_4.xy, u_xlat16_4.xy);\n    u_xlat16_28 = min(u_xlat16_28, 1.0);\n    u_xlat16_28 = (-u_xlat16_28) + 1.0;\n    u_xlat16_4.z = sqrt(u_xlat16_28);\n    u_xlat5.xyz = u_xlat16_4.xyz * u_xlat5.xxx + vec3(-0.0, -0.0, -1.0);\n    u_xlat5.xyz = u_xlat16_1.www * u_xlat5.xyz + vec3(0.0, 0.0, 1.0);\n    u_xlat0.xyz = u_xlat0.xyz + (-u_xlat5.xyz);\n    u_xlat5.x = dot(u_xlat0.xyz, u_xlat0.xyz);\n    u_xlat5.x = inversesqrt(u_xlat5.x);\n    u_xlat0.xyz = u_xlat0.xyz * u_xlat5.xxx;\n    u_xlat16_4.x = dot(vs_TEXCOORD2.xyz, (-u_xlat0.xyz));\n    u_xlat16_4.y = dot(vs_TEXCOORD3.xyz, (-u_xlat0.xyz));\n    u_xlat16_4.z = dot(vs_TEXCOORD4.xyz, (-u_xlat0.xyz));\n    u_xlat0.x = dot(u_xlat16_4.xyz, u_xlat16_4.xyz);\n    u_xlat0.x = inversesqrt(u_xlat0.x);\n    u_xlat0.xyz = u_xlat0.xxx * u_xlat16_4.xyz;\n    u_xlat5.xyz = (-vs_TEXCOORD5.xyz) + _WorldSpaceLightPos0.xyz;\n    u_xlat29 = dot(u_xlat5.xyz, u_xlat5.xyz);\n    u_xlat29 = inversesqrt(u_xlat29);\n    u_xlat5.xyz = vec3(u_xlat29) * u_xlat5.xyz;\n    u_xlat6.xyz = (-vs_TEXCOORD5.xyz) + _WorldSpaceCameraPos.xyz;\n    u_xlat29 = dot(u_xlat6.xyz, u_xlat6.xyz);\n    u_xlat29 = inversesqrt(u_xlat29);\n    u_xlat16_4.xyz = u_xlat6.xyz * vec3(u_xlat29) + u_xlat5.xyz;\n    u_xlat16_4.w = dot(u_xlat0.xyz, u_xlat5.xyz);\n    u_xlat16_7.x = dot(u_xlat16_4.xyz, u_xlat16_4.xyz);\n    u_xlat16_7.x = inversesqrt(u_xlat16_7.x);\n    u_xlat16_4.xyz = u_xlat16_4.xyz * u_xlat16_7.xxx;\n    u_xlat16_4.x = dot(u_xlat0.xyz, u_xlat16_4.xyz);\n    u_xlat16_4.xw = max(u_xlat16_4.xw, vec2(0.0, 0.0));\n    u_xlat0.x = log2(u_xlat16_4.x);\n    u_xlat8.x = (-_FaceShininess) + _OutlineShininess;\n    u_xlat8.x = u_xlat24 * u_xlat8.x + _FaceShininess;\n    u_xlat16_4.x = u_xlat8.x * 128.0;\n    u_xlat0.x = u_xlat0.x * u_xlat16_4.x;\n    u_xlat0.x = exp2(u_xlat0.x);\n    u_xlat8.xyz = vs_TEXCOORD5.yyy * hlslcc_mtx4x4unity_WorldToLight[1].xyz;\n    u_xlat8.xyz = hlslcc_mtx4x4unity_WorldToLight[0].xyz * vs_TEXCOORD5.xxx + u_xlat8.xyz;\n    u_xlat8.xyz = hlslcc_mtx4x4unity_WorldToLight[2].xyz * vs_TEXCOORD5.zzz + u_xlat8.xyz;\n    u_xlat8.xyz = u_xlat8.xyz + hlslcc_mtx4x4unity_WorldToLight[3].xyz;\n    u_xlat8.x = dot(u_xlat8.xyz, u_xlat8.xyz);\n    u_xlat8.x = texture2D(_LightTexture0, u_xlat8.xx).x;\n    u_xlat16_4.xyz = u_xlat8.xxx * _LightColor0.xyz;\n    u_xlat16_7.xyz = u_xlat16_4.xyz * _SpecColor.xyz;\n    u_xlat0.xyz = u_xlat0.xxx * u_xlat16_7.xyz;\n    u_xlat24 = max(u_xlat16_1.w, 9.99999975e-05);\n    u_xlat5.xyz = u_xlat16_1.xyz / vec3(u_xlat24);\n    SV_Target0.w = u_xlat16_1.w;\n    u_xlat16_4.xyz = u_xlat16_4.xyz * u_xlat5.xyz;\n    u_xlat0.xyz = u_xlat16_4.xyz * u_xlat16_4.www + u_xlat0.xyz;\n    SV_Target0.xyz = u_xlat0.xyz;\n    return;\n}\n\n",0,0,0,1,0,["POINT"],[["IGNOREPROJECTOR","true"],["LIGHTMODE","FORWARDADD"],["QUEUE","Transparent"],["RenderType","Transparent"]]],[0,"\n#version 100\n\nuniform \tvec3 _WorldSpaceCameraPos;\nuniform \tvec4 _ScreenParams;\nuniform \tvec4 hlslcc_mtx4x4unity_ObjectToWorld[4];\nuniform \tvec4 hlslcc_mtx4x4unity_WorldToObject[4];\nuniform \tvec4 unity_WorldTransformParams;\nuniform \tvec4 hlslcc_mtx4x4glstate_matrix_projection[4];\nuniform \tvec4 hlslcc_mtx4x4unity_MatrixVP[4];\nuniform \tfloat _FaceDilate;\nuniform \tvec4 hlslcc_mtx4x4_EnvMatrix[4];\nuniform \tfloat _WeightNormal;\nuniform \tfloat _WeightBold;\nuniform \tfloat _ScaleRatioA;\nuniform \tfloat _VertexOffsetX;\nuniform \tfloat _VertexOffsetY;\nuniform \tfloat _GradientScale;\nuniform \tfloat _ScaleX;\nuniform \tfloat _ScaleY;\nuniform \tfloat _PerspectiveFilter;\nuniform \tfloat _Sharpness;\nuniform \tvec4 _MainTex_ST;\nuniform \tvec4 _FaceTex_ST;\nuniform \tvec4 _OutlineTex_ST;\nattribute highp vec4 in_POSITION0;\nattribute highp vec4 in_TANGENT0;\nattribute highp vec3 in_NORMAL0;\nattribute highp vec4 in_TEXCOORD0;\nattribute highp vec4 in_TEXCOORD1;\nattribute mediump vec4 in_COLOR0;\nvarying highp vec4 vs_TEXCOORD0;\nvarying highp vec2 vs_TEXCOORD1;\nvarying highp vec2 vs_TEXCOORD6;\nvarying highp vec3 vs_TEXCOORD2;\nvarying highp vec3 vs_TEXCOORD3;\nvarying highp vec3 vs_TEXCOORD4;\nvarying highp vec3 vs_TEXCOORD5;\nvarying mediump vec4 vs_COLOR0;\nvarying highp vec3 vs_TEXCOORD7;\nvec3 u_xlat0;\nint u_xlati0;\nvec4 u_xlat1;\nvec4 u_xlat2;\nvec4 u_xlat3;\nfloat u_xlat4;\nint u_xlati4;\nvec3 u_xlat6;\nfloat u_xlat12;\nbool u_xlatb12;\nfloat u_xlat13;\nvoid main()\n{\n    u_xlat0.xy = in_POSITION0.xy + vec2(_VertexOffsetX, _VertexOffsetY);\n    u_xlat1 = u_xlat0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];\n    u_xlat1 = hlslcc_mtx4x4unity_ObjectToWorld[0] * u_xlat0.xxxx + u_xlat1;\n    u_xlat1 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat1;\n    u_xlat2 = u_xlat1 + hlslcc_mtx4x4unity_ObjectToWorld[3];\n    u_xlat1.xyz = hlslcc_mtx4x4unity_ObjectToWorld[3].xyz * in_POSITION0.www + u_xlat1.xyz;\n    u_xlat3 = u_xlat2.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];\n    u_xlat3 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat2.xxxx + u_xlat3;\n    u_xlat3 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat2.zzzz + u_xlat3;\n    gl_Position = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat2.wwww + u_xlat3;\n    u_xlat12 = in_TEXCOORD1.x * 0.000244140625;\n    u_xlat3.x = floor(u_xlat12);\n    u_xlat3.y = (-u_xlat3.x) * 4096.0 + in_TEXCOORD1.x;\n    u_xlat3.xy = u_xlat3.xy * vec2(0.001953125, 0.001953125);\n    vs_TEXCOORD0.zw = u_xlat3.xy * _FaceTex_ST.xy + _FaceTex_ST.zw;\n    vs_TEXCOORD1.xy = u_xlat3.xy * _OutlineTex_ST.xy + _OutlineTex_ST.zw;\n    vs_TEXCOORD0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;\n    u_xlat12 = u_xlat2.y * hlslcc_mtx4x4unity_MatrixVP[1].w;\n    u_xlat12 = hlslcc_mtx4x4unity_MatrixVP[0].w * u_xlat2.x + u_xlat12;\n    u_xlat12 = hlslcc_mtx4x4unity_MatrixVP[2].w * u_xlat2.z + u_xlat12;\n    u_xlat12 = hlslcc_mtx4x4unity_MatrixVP[3].w * u_xlat2.w + u_xlat12;\n    u_xlat2.xy = _ScreenParams.yy * hlslcc_mtx4x4glstate_matrix_projection[1].xy;\n    u_xlat2.xy = hlslcc_mtx4x4glstate_matrix_projection[0].xy * _ScreenParams.xx + u_xlat2.xy;\n    u_xlat2.xy = u_xlat2.xy * vec2(_ScaleX, _ScaleY);\n    u_xlat2.xy = vec2(u_xlat12) / u_xlat2.xy;\n    u_xlat12 = dot(u_xlat2.xy, u_xlat2.xy);\n    u_xlat12 = inversesqrt(u_xlat12);\n    u_xlat13 = abs(in_TEXCOORD1.y) * _GradientScale;\n    u_xlat2.x = _Sharpness + 1.0;\n    u_xlat13 = u_xlat13 * u_xlat2.x;\n    u_xlat2.x = u_xlat12 * u_xlat13;\n    u_xlat6.x = (-_PerspectiveFilter) + 1.0;\n    u_xlat2.x = u_xlat6.x * u_xlat2.x;\n    u_xlat12 = u_xlat12 * u_xlat13 + (-u_xlat2.x);\n    u_xlat6.xyz = _WorldSpaceCameraPos.yyy * hlslcc_mtx4x4unity_WorldToObject[1].xyz;\n    u_xlat6.xyz = hlslcc_mtx4x4unity_WorldToObject[0].xyz * _WorldSpaceCameraPos.xxx + u_xlat6.xyz;\n    u_xlat6.xyz = hlslcc_mtx4x4unity_WorldToObject[2].xyz * _WorldSpaceCameraPos.zzz + u_xlat6.xyz;\n    u_xlat6.xyz = u_xlat6.xyz + hlslcc_mtx4x4unity_WorldToObject[3].xyz;\n    u_xlat0.z = in_POSITION0.z;\n    u_xlat0.xyz = (-u_xlat0.xyz) + u_xlat6.xyz;\n    u_xlat0.x = dot(in_NORMAL0.xyz, u_xlat0.xyz);\n    u_xlati4 = int((0.0<u_xlat0.x) ? -1 : 0);\n    u_xlati0 = int((u_xlat0.x<0.0) ? -1 : 0);\n    u_xlati0 = (-u_xlati4) + u_xlati0;\n    u_xlat0.x = float(u_xlati0);\n    u_xlat0.xyz = u_xlat0.xxx * in_NORMAL0.xyz;\n    u_xlat3.y = dot(u_xlat0.xyz, hlslcc_mtx4x4unity_WorldToObject[0].xyz);\n    u_xlat3.z = dot(u_xlat0.xyz, hlslcc_mtx4x4unity_WorldToObject[1].xyz);\n    u_xlat3.x = dot(u_xlat0.xyz, hlslcc_mtx4x4unity_WorldToObject[2].xyz);\n    u_xlat0.x = dot(u_xlat3.xyz, u_xlat3.xyz);\n    u_xlat0.x = inversesqrt(u_xlat0.x);\n    u_xlat0.xyz = u_xlat0.xxx * u_xlat3.xyz;\n    u_xlat6.xyz = (-u_xlat1.xyz) + _WorldSpaceCameraPos.xyz;\n    vs_TEXCOORD5.xyz = u_xlat1.xyz;\n    u_xlat1.x = dot(u_xlat6.xyz, u_xlat6.xyz);\n    u_xlat1.x = inversesqrt(u_xlat1.x);\n    u_xlat1.xyz = u_xlat1.xxx * u_xlat6.xyz;\n    u_xlat1.x = dot(u_xlat0.yzx, u_xlat1.xyz);\n    vs_TEXCOORD6.y = abs(u_xlat1.x) * u_xlat12 + u_xlat2.x;\n    u_xlatb12 = 0.0>=in_TEXCOORD1.y;\n    u_xlat12 = u_xlatb12 ? 1.0 : float(0.0);\n    u_xlat1.x = (-_WeightNormal) + _WeightBold;\n    u_xlat12 = u_xlat12 * u_xlat1.x + _WeightNormal;\n    u_xlat12 = u_xlat12 * 0.25 + _FaceDilate;\n    u_xlat12 = u_xlat12 * _ScaleRatioA;\n    vs_TEXCOORD6.x = u_xlat12 * 0.5;\n    vs_TEXCOORD2.z = u_xlat0.y;\n    u_xlat1.xyz = in_TANGENT0.yyy * hlslcc_mtx4x4unity_ObjectToWorld[1].yzx;\n    u_xlat1.xyz = hlslcc_mtx4x4unity_ObjectToWorld[0].yzx * in_TANGENT0.xxx + u_xlat1.xyz;\n    u_xlat1.xyz = hlslcc_mtx4x4unity_ObjectToWorld[2].yzx * in_TANGENT0.zzz + u_xlat1.xyz;\n    u_xlat12 = dot(u_xlat1.xyz, u_xlat1.xyz);\n    u_xlat12 = inversesqrt(u_xlat12);\n    u_xlat1.xyz = vec3(u_xlat12) * u_xlat1.xyz;\n    u_xlat3.xyz = u_xlat0.xyz * u_xlat1.xyz;\n    u_xlat3.xyz = u_xlat0.zxy * u_xlat1.yzx + (-u_xlat3.xyz);\n    u_xlat4 = in_TANGENT0.w * unity_WorldTransformParams.w;\n    u_xlat3.xyz = vec3(u_xlat4) * u_xlat3.xyz;\n    vs_TEXCOORD2.y = u_xlat3.x;\n    vs_TEXCOORD2.x = u_xlat1.z;\n    vs_TEXCOORD3.z = u_xlat0.z;\n    vs_TEXCOORD4.z = u_xlat0.x;\n    vs_TEXCOORD3.x = u_xlat1.x;\n    vs_TEXCOORD4.x = u_xlat1.y;\n    vs_TEXCOORD3.y = u_xlat3.y;\n    vs_TEXCOORD4.y = u_xlat3.z;\n    vs_COLOR0 = in_COLOR0;\n    u_xlat0.xyz = u_xlat6.yyy * hlslcc_mtx4x4_EnvMatrix[1].xyz;\n    u_xlat0.xyz = hlslcc_mtx4x4_EnvMatrix[0].xyz * u_xlat6.xxx + u_xlat0.xyz;\n    vs_TEXCOORD7.xyz = hlslcc_mtx4x4_EnvMatrix[2].xyz * u_xlat6.zzz + u_xlat0.xyz;\n    return;\n}\n\n","\n#version 100\n\n#ifdef GL_FRAGMENT_PRECISION_HIGH\n    precision highp float;\n#else\n    precision mediump float;\n#endif\nprecision highp int;\nuniform \tvec4 _Time;\nuniform \tvec3 _WorldSpaceCameraPos;\nuniform \tmediump vec4 _WorldSpaceLightPos0;\nuniform \tmediump vec4 _LightColor0;\nuniform \tmediump vec4 _SpecColor;\nuniform \tfloat _FaceUVSpeedX;\nuniform \tfloat _FaceUVSpeedY;\nuniform \tmediump vec4 _FaceColor;\nuniform \tfloat _OutlineSoftness;\nuniform \tfloat _OutlineUVSpeedX;\nuniform \tfloat _OutlineUVSpeedY;\nuniform \tmediump vec4 _OutlineColor;\nuniform \tfloat _OutlineWidth;\nuniform \tfloat _Bevel;\nuniform \tfloat _BevelOffset;\nuniform \tfloat _BevelWidth;\nuniform \tfloat _BevelClamp;\nuniform \tfloat _BevelRoundness;\nuniform \tfloat _BumpOutline;\nuniform \tfloat _BumpFace;\nuniform \tfloat _ShaderFlags;\nuniform \tfloat _ScaleRatioA;\nuniform \tfloat _TextureWidth;\nuniform \tfloat _TextureHeight;\nuniform \tfloat _GradientScale;\nuniform \tmediump float _FaceShininess;\nuniform \tmediump float _OutlineShininess;\nuniform lowp sampler2D _MainTex;\nuniform lowp sampler2D _FaceTex;\nuniform lowp sampler2D _OutlineTex;\nuniform lowp sampler2D _BumpMap;\nvarying highp vec4 vs_TEXCOORD0;\nvarying highp vec2 vs_TEXCOORD1;\nvarying highp vec2 vs_TEXCOORD6;\nvarying highp vec3 vs_TEXCOORD2;\nvarying highp vec3 vs_TEXCOORD3;\nvarying highp vec3 vs_TEXCOORD4;\nvarying highp vec3 vs_TEXCOORD5;\nvarying mediump vec4 vs_COLOR0;\n#define SV_Target0 gl_FragData[0]\nvec4 u_xlat0;\nvec4 u_xlat1;\nmediump vec4 u_xlat16_1;\nvec4 u_xlat2;\nmediump vec4 u_xlat16_2;\nlowp vec4 u_xlat10_2;\nvec2 u_xlat3;\nmediump vec4 u_xlat16_3;\nlowp vec4 u_xlat10_3;\nmediump vec4 u_xlat16_4;\nvec4 u_xlat5;\nvec4 u_xlat6;\nmediump vec4 u_xlat16_7;\nfloat u_xlat8;\nvec3 u_xlat9;\nbool u_xlatb9;\nfloat u_xlat10;\nmediump vec3 u_xlat16_12;\nlowp vec2 u_xlat10_13;\nbool u_xlatb17;\nfloat u_xlat24;\nlowp float u_xlat10_24;\nmediump float u_xlat16_28;\nfloat u_xlat29;\nvoid main()\n{\n    u_xlat0.x = vs_TEXCOORD6.x + _BevelOffset;\n    u_xlat1.xy = vec2(1.0, 1.0) / vec2(_TextureWidth, _TextureHeight);\n    u_xlat1.z = 0.0;\n    u_xlat2 = (-u_xlat1.xzzy) + vs_TEXCOORD0.xyxy;\n    u_xlat1 = u_xlat1.xzzy + vs_TEXCOORD0.xyxy;\n    u_xlat10_3.x = texture2D(_MainTex, u_xlat2.xy).w;\n    u_xlat10_3.z = texture2D(_MainTex, u_xlat2.zw).w;\n    u_xlat10_3.y = texture2D(_MainTex, u_xlat1.xy).w;\n    u_xlat10_3.w = texture2D(_MainTex, u_xlat1.zw).w;\n    u_xlat0 = u_xlat0.xxxx + u_xlat10_3;\n    u_xlat0 = u_xlat0 + vec4(-0.5, -0.5, -0.5, -0.5);\n    u_xlat1.x = _BevelWidth + _OutlineWidth;\n    u_xlat1.x = max(u_xlat1.x, 0.00999999978);\n    u_xlat0 = u_xlat0 / u_xlat1.xxxx;\n    u_xlat1.x = u_xlat1.x * _Bevel;\n    u_xlat1.x = u_xlat1.x * _GradientScale;\n    u_xlat1.x = u_xlat1.x * -2.0;\n    u_xlat0 = u_xlat0 + vec4(0.5, 0.5, 0.5, 0.5);\n    u_xlat0 = clamp(u_xlat0, 0.0, 1.0);\n    u_xlat2 = u_xlat0 * vec4(2.0, 2.0, 2.0, 2.0) + vec4(-1.0, -1.0, -1.0, -1.0);\n    u_xlat2 = -abs(u_xlat2) + vec4(1.0, 1.0, 1.0, 1.0);\n    u_xlat9.x = _ShaderFlags * 0.5;\n    u_xlatb17 = u_xlat9.x>=(-u_xlat9.x);\n    u_xlat9.x = fract(abs(u_xlat9.x));\n    u_xlat9.x = (u_xlatb17) ? u_xlat9.x : (-u_xlat9.x);\n    u_xlatb9 = u_xlat9.x>=0.5;\n    u_xlat0 = (bool(u_xlatb9)) ? u_xlat2 : u_xlat0;\n    u_xlat2 = u_xlat0 * vec4(1.57079601, 1.57079601, 1.57079601, 1.57079601);\n    u_xlat2 = sin(u_xlat2);\n    u_xlat2 = (-u_xlat0) + u_xlat2;\n    u_xlat0 = vec4(vec4(_BevelRoundness, _BevelRoundness, _BevelRoundness, _BevelRoundness)) * u_xlat2 + u_xlat0;\n    u_xlat9.x = (-_BevelClamp) + 1.0;\n    u_xlat0 = min(u_xlat0, u_xlat9.xxxx);\n    u_xlat0.xz = u_xlat1.xx * u_xlat0.xz;\n    u_xlat0.yz = u_xlat0.wy * u_xlat1.xx + (-u_xlat0.zx);\n    u_xlat0.x = float(-1.0);\n    u_xlat0.w = float(1.0);\n    u_xlat1.x = dot(u_xlat0.xy, u_xlat0.xy);\n    u_xlat1.x = inversesqrt(u_xlat1.x);\n    u_xlat24 = dot(u_xlat0.zw, u_xlat0.zw);\n    u_xlat24 = inversesqrt(u_xlat24);\n    u_xlat2.x = u_xlat24 * u_xlat0.z;\n    u_xlat2.yz = vec2(u_xlat24) * vec2(1.0, 0.0);\n    u_xlat0.z = 0.0;\n    u_xlat0.xyz = u_xlat1.xxx * u_xlat0.xyz;\n    u_xlat1.xyz = u_xlat0.xyz * u_xlat2.xyz;\n    u_xlat0.xyz = u_xlat2.zxy * u_xlat0.yzx + (-u_xlat1.xyz);\n    u_xlat10_24 = texture2D(_MainTex, vs_TEXCOORD0.xy).w;\n    u_xlat24 = (-u_xlat10_24) + 0.5;\n    u_xlat24 = u_xlat24 + (-vs_TEXCOORD6.x);\n    u_xlat24 = u_xlat24 * vs_TEXCOORD6.y + 0.5;\n    u_xlat1.x = _OutlineWidth * _ScaleRatioA;\n    u_xlat1.x = u_xlat1.x * vs_TEXCOORD6.y;\n    u_xlat16_4.x = u_xlat1.x * 0.5 + u_xlat24;\n    u_xlat16_4.x = clamp(u_xlat16_4.x, 0.0, 1.0);\n    u_xlat16_12.x = min(u_xlat1.x, 1.0);\n    u_xlat16_12.x = sqrt(u_xlat16_12.x);\n    u_xlat16_4.x = u_xlat16_12.x * u_xlat16_4.x;\n    u_xlat9.xy = vec2(_OutlineUVSpeedX, _OutlineUVSpeedY) * _Time.yy + vs_TEXCOORD1.xy;\n    u_xlat10_2 = texture2D(_OutlineTex, u_xlat9.xy);\n    u_xlat9.xyz = u_xlat10_2.xyz * _OutlineColor.xyz;\n    u_xlat2.x = vs_COLOR0.w * _OutlineColor.w;\n    u_xlat10 = u_xlat10_2.w * u_xlat2.x;\n    u_xlat3.xy = vec2(_FaceUVSpeedX, _FaceUVSpeedY) * _Time.yy + vs_TEXCOORD0.zw;\n    u_xlat10_3 = texture2D(_FaceTex, u_xlat3.xy);\n    u_xlat5 = vs_COLOR0 * _FaceColor;\n    u_xlat6 = u_xlat10_3 * u_xlat5;\n    u_xlat16_12.xyz = u_xlat6.www * u_xlat6.xyz;\n    u_xlat16_7.xyz = u_xlat9.xyz * vec3(u_xlat10) + (-u_xlat16_12.xyz);\n    u_xlat16_7.w = u_xlat2.x * u_xlat10_2.w + (-u_xlat6.w);\n    u_xlat16_2 = u_xlat16_4.xxxx * u_xlat16_7;\n    u_xlat16_3.w = u_xlat5.w * u_xlat10_3.w + u_xlat16_2.w;\n    u_xlat16_3.xyz = u_xlat6.xyz * u_xlat6.www + u_xlat16_2.xyz;\n    u_xlat16_4.x = (-u_xlat1.x) * 0.5 + u_xlat24;\n    u_xlat24 = u_xlat1.x * 0.5 + u_xlat24;\n    u_xlat24 = clamp(u_xlat24, 0.0, 1.0);\n    u_xlat1.x = _OutlineSoftness * _ScaleRatioA;\n    u_xlat9.x = u_xlat1.x * vs_TEXCOORD6.y;\n    u_xlat16_12.x = u_xlat1.x * vs_TEXCOORD6.y + 1.0;\n    u_xlat16_4.x = u_xlat9.x * 0.5 + u_xlat16_4.x;\n    u_xlat16_4.x = u_xlat16_4.x / u_xlat16_12.x;\n    u_xlat16_4.x = clamp(u_xlat16_4.x, 0.0, 1.0);\n    u_xlat16_4.x = (-u_xlat16_4.x) + 1.0;\n    u_xlat16_1 = u_xlat16_3 * u_xlat16_4.xxxx;\n    u_xlat5.x = (-_BumpFace) + _BumpOutline;\n    u_xlat5.x = u_xlat24 * u_xlat5.x + _BumpFace;\n    u_xlat10_13.xy = texture2D(_BumpMap, vs_TEXCOORD0.zw).yw;\n    u_xlat16_4.xy = u_xlat10_13.yx * vec2(2.0, 2.0) + vec2(-1.0, -1.0);\n    u_xlat16_28 = dot(u_xlat16_4.xy, u_xlat16_4.xy);\n    u_xlat16_28 = min(u_xlat16_28, 1.0);\n    u_xlat16_28 = (-u_xlat16_28) + 1.0;\n    u_xlat16_4.z = sqrt(u_xlat16_28);\n    u_xlat5.xyz = u_xlat16_4.xyz * u_xlat5.xxx + vec3(-0.0, -0.0, -1.0);\n    u_xlat5.xyz = u_xlat16_1.www * u_xlat5.xyz + vec3(0.0, 0.0, 1.0);\n    u_xlat0.xyz = u_xlat0.xyz + (-u_xlat5.xyz);\n    u_xlat5.x = dot(u_xlat0.xyz, u_xlat0.xyz);\n    u_xlat5.x = inversesqrt(u_xlat5.x);\n    u_xlat0.xyz = u_xlat0.xyz * u_xlat5.xxx;\n    u_xlat16_4.x = dot(vs_TEXCOORD2.xyz, (-u_xlat0.xyz));\n    u_xlat16_4.y = dot(vs_TEXCOORD3.xyz, (-u_xlat0.xyz));\n    u_xlat16_4.z = dot(vs_TEXCOORD4.xyz, (-u_xlat0.xyz));\n    u_xlat0.x = dot(u_xlat16_4.xyz, u_xlat16_4.xyz);\n    u_xlat0.x = inversesqrt(u_xlat0.x);\n    u_xlat0.xyz = u_xlat0.xxx * u_xlat16_4.xyz;\n    u_xlat5.xyz = (-vs_TEXCOORD5.xyz) + _WorldSpaceCameraPos.xyz;\n    u_xlat29 = dot(u_xlat5.xyz, u_xlat5.xyz);\n    u_xlat29 = inversesqrt(u_xlat29);\n    u_xlat16_4.xyz = u_xlat5.xyz * vec3(u_xlat29) + _WorldSpaceLightPos0.xyz;\n    u_xlat16_28 = dot(u_xlat16_4.xyz, u_xlat16_4.xyz);\n    u_xlat16_28 = inversesqrt(u_xlat16_28);\n    u_xlat16_4.xyz = vec3(u_xlat16_28) * u_xlat16_4.xyz;\n    u_xlat16_4.x = dot(u_xlat0.xyz, u_xlat16_4.xyz);\n    u_xlat16_4.y = dot(u_xlat0.xyz, _WorldSpaceLightPos0.xyz);\n    u_xlat16_4.xy = max(u_xlat16_4.xy, vec2(0.0, 0.0));\n    u_xlat0.x = log2(u_xlat16_4.x);\n    u_xlat8 = (-_FaceShininess) + _OutlineShininess;\n    u_xlat8 = u_xlat24 * u_xlat8 + _FaceShininess;\n    u_xlat16_4.x = u_xlat8 * 128.0;\n    u_xlat0.x = u_xlat0.x * u_xlat16_4.x;\n    u_xlat0.x = exp2(u_xlat0.x);\n    u_xlat16_4.xzw = _LightColor0.xyz * _SpecColor.xyz;\n    u_xlat0.xyz = u_xlat0.xxx * u_xlat16_4.xzw;\n    u_xlat24 = max(u_xlat16_1.w, 9.99999975e-05);\n    u_xlat5.xyz = u_xlat16_1.xyz / vec3(u_xlat24);\n    SV_Target0.w = u_xlat16_1.w;\n    u_xlat16_4.xzw = u_xlat5.xyz * _LightColor0.xyz;\n    u_xlat0.xyz = u_xlat16_4.xzw * u_xlat16_4.yyy + u_xlat0.xyz;\n    SV_Target0.xyz = u_xlat0.xyz;\n    return;\n}\n\n",0,0,1,1,0,["DIRECTIONAL"],[["IGNOREPROJECTOR","true"],["LIGHTMODE","FORWARDADD"],["QUEUE","Transparent"],["RenderType","Transparent"]]],[0,"\n#version 100\n\nuniform \tvec3 _WorldSpaceCameraPos;\nuniform \tvec4 _ScreenParams;\nuniform \tvec4 hlslcc_mtx4x4unity_ObjectToWorld[4];\nuniform \tvec4 hlslcc_mtx4x4unity_WorldToObject[4];\nuniform \tvec4 unity_WorldTransformParams;\nuniform \tvec4 hlslcc_mtx4x4glstate_matrix_projection[4];\nuniform \tvec4 hlslcc_mtx4x4unity_MatrixVP[4];\nuniform \tvec4 hlslcc_mtx4x4unity_WorldToLight[4];\nuniform \tfloat _FaceDilate;\nuniform \tvec4 hlslcc_mtx4x4_EnvMatrix[4];\nuniform \tfloat _WeightNormal;\nuniform \tfloat _WeightBold;\nuniform \tfloat _ScaleRatioA;\nuniform \tfloat _VertexOffsetX;\nuniform \tfloat _VertexOffsetY;\nuniform \tfloat _GradientScale;\nuniform \tfloat _ScaleX;\nuniform \tfloat _ScaleY;\nuniform \tfloat _PerspectiveFilter;\nuniform \tfloat _Sharpness;\nuniform \tvec4 _MainTex_ST;\nuniform \tvec4 _FaceTex_ST;\nuniform \tvec4 _OutlineTex_ST;\nattribute highp vec4 in_POSITION0;\nattribute highp vec4 in_TANGENT0;\nattribute highp vec3 in_NORMAL0;\nattribute highp vec4 in_TEXCOORD0;\nattribute highp vec4 in_TEXCOORD1;\nattribute mediump vec4 in_COLOR0;\nvarying highp vec4 vs_TEXCOORD0;\nvarying highp vec2 vs_TEXCOORD1;\nvarying highp vec2 vs_TEXCOORD6;\nvarying highp vec3 vs_TEXCOORD2;\nvarying highp vec3 vs_TEXCOORD3;\nvarying highp vec3 vs_TEXCOORD4;\nvarying highp vec3 vs_TEXCOORD5;\nvarying mediump vec4 vs_COLOR0;\nvarying highp vec3 vs_TEXCOORD7;\nvarying highp vec4 vs_TEXCOORD8;\nvec4 u_xlat0;\nint u_xlati0;\nvec4 u_xlat1;\nvec4 u_xlat2;\nvec4 u_xlat3;\nvec3 u_xlat4;\nfloat u_xlat5;\nint u_xlati5;\nfloat u_xlat7;\nfloat u_xlat12;\nfloat u_xlat15;\nbool u_xlatb15;\nvoid main()\n{\n    u_xlat0.xy = in_POSITION0.xy + vec2(_VertexOffsetX, _VertexOffsetY);\n    u_xlat1 = u_xlat0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];\n    u_xlat1 = hlslcc_mtx4x4unity_ObjectToWorld[0] * u_xlat0.xxxx + u_xlat1;\n    u_xlat1 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat1;\n    u_xlat2 = u_xlat1 + hlslcc_mtx4x4unity_ObjectToWorld[3];\n    u_xlat3 = u_xlat2.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];\n    u_xlat3 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat2.xxxx + u_xlat3;\n    u_xlat3 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat2.zzzz + u_xlat3;\n    gl_Position = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat2.wwww + u_xlat3;\n    u_xlat15 = in_TEXCOORD1.x * 0.000244140625;\n    u_xlat3.x = floor(u_xlat15);\n    u_xlat3.y = (-u_xlat3.x) * 4096.0 + in_TEXCOORD1.x;\n    u_xlat3.xy = u_xlat3.xy * vec2(0.001953125, 0.001953125);\n    vs_TEXCOORD0.zw = u_xlat3.xy * _FaceTex_ST.xy + _FaceTex_ST.zw;\n    vs_TEXCOORD1.xy = u_xlat3.xy * _OutlineTex_ST.xy + _OutlineTex_ST.zw;\n    vs_TEXCOORD0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;\n    u_xlat15 = u_xlat2.y * hlslcc_mtx4x4unity_MatrixVP[1].w;\n    u_xlat15 = hlslcc_mtx4x4unity_MatrixVP[0].w * u_xlat2.x + u_xlat15;\n    u_xlat15 = hlslcc_mtx4x4unity_MatrixVP[2].w * u_xlat2.z + u_xlat15;\n    u_xlat15 = hlslcc_mtx4x4unity_MatrixVP[3].w * u_xlat2.w + u_xlat15;\n    u_xlat2.xy = _ScreenParams.yy * hlslcc_mtx4x4glstate_matrix_projection[1].xy;\n    u_xlat2.xy = hlslcc_mtx4x4glstate_matrix_projection[0].xy * _ScreenParams.xx + u_xlat2.xy;\n    u_xlat2.xy = u_xlat2.xy * vec2(_ScaleX, _ScaleY);\n    u_xlat2.xy = vec2(u_xlat15) / u_xlat2.xy;\n    u_xlat15 = dot(u_xlat2.xy, u_xlat2.xy);\n    u_xlat15 = inversesqrt(u_xlat15);\n    u_xlat2.x = abs(in_TEXCOORD1.y) * _GradientScale;\n    u_xlat7 = _Sharpness + 1.0;\n    u_xlat2.x = u_xlat7 * u_xlat2.x;\n    u_xlat7 = u_xlat15 * u_xlat2.x;\n    u_xlat12 = (-_PerspectiveFilter) + 1.0;\n    u_xlat7 = u_xlat12 * u_xlat7;\n    u_xlat15 = u_xlat15 * u_xlat2.x + (-u_xlat7);\n    u_xlat2.xzw = _WorldSpaceCameraPos.yyy * hlslcc_mtx4x4unity_WorldToObject[1].xyz;\n    u_xlat2.xzw = hlslcc_mtx4x4unity_WorldToObject[0].xyz * _WorldSpaceCameraPos.xxx + u_xlat2.xzw;\n    u_xlat2.xzw = hlslcc_mtx4x4unity_WorldToObject[2].xyz * _WorldSpaceCameraPos.zzz + u_xlat2.xzw;\n    u_xlat2.xzw = u_xlat2.xzw + hlslcc_mtx4x4unity_WorldToObject[3].xyz;\n    u_xlat0.z = in_POSITION0.z;\n    u_xlat0.xyz = (-u_xlat0.xyz) + u_xlat2.xzw;\n    u_xlat0.x = dot(in_NORMAL0.xyz, u_xlat0.xyz);\n    u_xlati5 = int((0.0<u_xlat0.x) ? -1 : 0);\n    u_xlati0 = int((u_xlat0.x<0.0) ? -1 : 0);\n    u_xlati0 = (-u_xlati5) + u_xlati0;\n    u_xlat0.x = float(u_xlati0);\n    u_xlat0.xyz = u_xlat0.xxx * in_NORMAL0.xyz;\n    u_xlat3.y = dot(u_xlat0.xyz, hlslcc_mtx4x4unity_WorldToObject[0].xyz);\n    u_xlat3.z = dot(u_xlat0.xyz, hlslcc_mtx4x4unity_WorldToObject[1].xyz);\n    u_xlat3.x = dot(u_xlat0.xyz, hlslcc_mtx4x4unity_WorldToObject[2].xyz);\n    u_xlat0.x = dot(u_xlat3.xyz, u_xlat3.xyz);\n    u_xlat0.x = inversesqrt(u_xlat0.x);\n    u_xlat0.xyz = u_xlat0.xxx * u_xlat3.xyz;\n    u_xlat2.xzw = hlslcc_mtx4x4unity_ObjectToWorld[3].xyz * in_POSITION0.www + u_xlat1.xyz;\n    u_xlat1 = hlslcc_mtx4x4unity_ObjectToWorld[3] * in_POSITION0.wwww + u_xlat1;\n    u_xlat3.xyz = (-u_xlat2.xzw) + _WorldSpaceCameraPos.xyz;\n    vs_TEXCOORD5.xyz = u_xlat2.xzw;\n    u_xlat2.x = dot(u_xlat3.xyz, u_xlat3.xyz);\n    u_xlat2.x = inversesqrt(u_xlat2.x);\n    u_xlat2.xzw = u_xlat2.xxx * u_xlat3.xyz;\n    u_xlat2.x = dot(u_xlat0.yzx, u_xlat2.xzw);\n    vs_TEXCOORD6.y = abs(u_xlat2.x) * u_xlat15 + u_xlat7;\n    u_xlatb15 = 0.0>=in_TEXCOORD1.y;\n    u_xlat15 = u_xlatb15 ? 1.0 : float(0.0);\n    u_xlat2.x = (-_WeightNormal) + _WeightBold;\n    u_xlat15 = u_xlat15 * u_xlat2.x + _WeightNormal;\n    u_xlat15 = u_xlat15 * 0.25 + _FaceDilate;\n    u_xlat15 = u_xlat15 * _ScaleRatioA;\n    vs_TEXCOORD6.x = u_xlat15 * 0.5;\n    vs_TEXCOORD2.z = u_xlat0.y;\n    u_xlat2.xyz = in_TANGENT0.yyy * hlslcc_mtx4x4unity_ObjectToWorld[1].yzx;\n    u_xlat2.xyz = hlslcc_mtx4x4unity_ObjectToWorld[0].yzx * in_TANGENT0.xxx + u_xlat2.xyz;\n    u_xlat2.xyz = hlslcc_mtx4x4unity_ObjectToWorld[2].yzx * in_TANGENT0.zzz + u_xlat2.xyz;\n    u_xlat15 = dot(u_xlat2.xyz, u_xlat2.xyz);\n    u_xlat15 = inversesqrt(u_xlat15);\n    u_xlat2.xyz = vec3(u_xlat15) * u_xlat2.xyz;\n    u_xlat4.xyz = u_xlat0.xyz * u_xlat2.xyz;\n    u_xlat4.xyz = u_xlat0.zxy * u_xlat2.yzx + (-u_xlat4.xyz);\n    u_xlat5 = in_TANGENT0.w * unity_WorldTransformParams.w;\n    u_xlat4.xyz = vec3(u_xlat5) * u_xlat4.xyz;\n    vs_TEXCOORD2.y = u_xlat4.x;\n    vs_TEXCOORD2.x = u_xlat2.z;\n    vs_TEXCOORD3.z = u_xlat0.z;\n    vs_TEXCOORD4.z = u_xlat0.x;\n    vs_TEXCOORD3.x = u_xlat2.x;\n    vs_TEXCOORD4.x = u_xlat2.y;\n    vs_TEXCOORD3.y = u_xlat4.y;\n    vs_TEXCOORD4.y = u_xlat4.z;\n    vs_COLOR0 = in_COLOR0;\n    u_xlat0.xyz = u_xlat3.yyy * hlslcc_mtx4x4_EnvMatrix[1].xyz;\n    u_xlat0.xyz = hlslcc_mtx4x4_EnvMatrix[0].xyz * u_xlat3.xxx + u_xlat0.xyz;\n    vs_TEXCOORD7.xyz = hlslcc_mtx4x4_EnvMatrix[2].xyz * u_xlat3.zzz + u_xlat0.xyz;\n    u_xlat0 = u_xlat1.yyyy * hlslcc_mtx4x4unity_WorldToLight[1];\n    u_xlat0 = hlslcc_mtx4x4unity_WorldToLight[0] * u_xlat1.xxxx + u_xlat0;\n    u_xlat0 = hlslcc_mtx4x4unity_WorldToLight[2] * u_xlat1.zzzz + u_xlat0;\n    vs_TEXCOORD8 = hlslcc_mtx4x4unity_WorldToLight[3] * u_xlat1.wwww + u_xlat0;\n    return;\n}\n\n","\n#version 100\n\n#ifdef GL_FRAGMENT_PRECISION_HIGH\n    precision highp float;\n#else\n    precision mediump float;\n#endif\nprecision highp int;\nuniform \tvec4 _Time;\nuniform \tvec3 _WorldSpaceCameraPos;\nuniform \tvec4 _WorldSpaceLightPos0;\nuniform \tmediump vec4 _LightColor0;\nuniform \tmediump vec4 _SpecColor;\nuniform \tvec4 hlslcc_mtx4x4unity_WorldToLight[4];\nuniform \tfloat _FaceUVSpeedX;\nuniform \tfloat _FaceUVSpeedY;\nuniform \tmediump vec4 _FaceColor;\nuniform \tfloat _OutlineSoftness;\nuniform \tfloat _OutlineUVSpeedX;\nuniform \tfloat _OutlineUVSpeedY;\nuniform \tmediump vec4 _OutlineColor;\nuniform \tfloat _OutlineWidth;\nuniform \tfloat _Bevel;\nuniform \tfloat _BevelOffset;\nuniform \tfloat _BevelWidth;\nuniform \tfloat _BevelClamp;\nuniform \tfloat _BevelRoundness;\nuniform \tfloat _BumpOutline;\nuniform \tfloat _BumpFace;\nuniform \tfloat _ShaderFlags;\nuniform \tfloat _ScaleRatioA;\nuniform \tfloat _TextureWidth;\nuniform \tfloat _TextureHeight;\nuniform \tfloat _GradientScale;\nuniform \tmediump float _FaceShininess;\nuniform \tmediump float _OutlineShininess;\nuniform lowp sampler2D _MainTex;\nuniform lowp sampler2D _FaceTex;\nuniform lowp sampler2D _OutlineTex;\nuniform lowp sampler2D _BumpMap;\nuniform highp sampler2D _LightTexture0;\nuniform highp sampler2D _LightTextureB0;\nvarying highp vec4 vs_TEXCOORD0;\nvarying highp vec2 vs_TEXCOORD1;\nvarying highp vec2 vs_TEXCOORD6;\nvarying highp vec3 vs_TEXCOORD2;\nvarying highp vec3 vs_TEXCOORD3;\nvarying highp vec3 vs_TEXCOORD4;\nvarying highp vec3 vs_TEXCOORD5;\nvarying mediump vec4 vs_COLOR0;\n#define SV_Target0 gl_FragData[0]\nvec4 u_xlat0;\nvec4 u_xlat1;\nmediump vec4 u_xlat16_1;\nvec4 u_xlat2;\nmediump vec4 u_xlat16_2;\nlowp vec4 u_xlat10_2;\nvec2 u_xlat3;\nmediump vec4 u_xlat16_3;\nlowp vec4 u_xlat10_3;\nmediump vec4 u_xlat16_4;\nvec4 u_xlat5;\nvec4 u_xlat6;\nmediump vec4 u_xlat16_7;\nvec2 u_xlat8;\nvec3 u_xlat9;\nbool u_xlatb9;\nfloat u_xlat10;\nmediump vec3 u_xlat16_12;\nlowp vec2 u_xlat10_13;\nbool u_xlatb16;\nbool u_xlatb17;\nfloat u_xlat24;\nlowp float u_xlat10_24;\nmediump float u_xlat16_28;\nfloat u_xlat29;\nvoid main()\n{\n    u_xlat0.x = vs_TEXCOORD6.x + _BevelOffset;\n    u_xlat1.xy = vec2(1.0, 1.0) / vec2(_TextureWidth, _TextureHeight);\n    u_xlat1.z = 0.0;\n    u_xlat2 = (-u_xlat1.xzzy) + vs_TEXCOORD0.xyxy;\n    u_xlat1 = u_xlat1.xzzy + vs_TEXCOORD0.xyxy;\n    u_xlat10_3.x = texture2D(_MainTex, u_xlat2.xy).w;\n    u_xlat10_3.z = texture2D(_MainTex, u_xlat2.zw).w;\n    u_xlat10_3.y = texture2D(_MainTex, u_xlat1.xy).w;\n    u_xlat10_3.w = texture2D(_MainTex, u_xlat1.zw).w;\n    u_xlat0 = u_xlat0.xxxx + u_xlat10_3;\n    u_xlat0 = u_xlat0 + vec4(-0.5, -0.5, -0.5, -0.5);\n    u_xlat1.x = _BevelWidth + _OutlineWidth;\n    u_xlat1.x = max(u_xlat1.x, 0.00999999978);\n    u_xlat0 = u_xlat0 / u_xlat1.xxxx;\n    u_xlat1.x = u_xlat1.x * _Bevel;\n    u_xlat1.x = u_xlat1.x * _GradientScale;\n    u_xlat1.x = u_xlat1.x * -2.0;\n    u_xlat0 = u_xlat0 + vec4(0.5, 0.5, 0.5, 0.5);\n    u_xlat0 = clamp(u_xlat0, 0.0, 1.0);\n    u_xlat2 = u_xlat0 * vec4(2.0, 2.0, 2.0, 2.0) + vec4(-1.0, -1.0, -1.0, -1.0);\n    u_xlat2 = -abs(u_xlat2) + vec4(1.0, 1.0, 1.0, 1.0);\n    u_xlat9.x = _ShaderFlags * 0.5;\n    u_xlatb17 = u_xlat9.x>=(-u_xlat9.x);\n    u_xlat9.x = fract(abs(u_xlat9.x));\n    u_xlat9.x = (u_xlatb17) ? u_xlat9.x : (-u_xlat9.x);\n    u_xlatb9 = u_xlat9.x>=0.5;\n    u_xlat0 = (bool(u_xlatb9)) ? u_xlat2 : u_xlat0;\n    u_xlat2 = u_xlat0 * vec4(1.57079601, 1.57079601, 1.57079601, 1.57079601);\n    u_xlat2 = sin(u_xlat2);\n    u_xlat2 = (-u_xlat0) + u_xlat2;\n    u_xlat0 = vec4(vec4(_BevelRoundness, _BevelRoundness, _BevelRoundness, _BevelRoundness)) * u_xlat2 + u_xlat0;\n    u_xlat9.x = (-_BevelClamp) + 1.0;\n    u_xlat0 = min(u_xlat0, u_xlat9.xxxx);\n    u_xlat0.xz = u_xlat1.xx * u_xlat0.xz;\n    u_xlat0.yz = u_xlat0.wy * u_xlat1.xx + (-u_xlat0.zx);\n    u_xlat0.x = float(-1.0);\n    u_xlat0.w = float(1.0);\n    u_xlat1.x = dot(u_xlat0.xy, u_xlat0.xy);\n    u_xlat1.x = inversesqrt(u_xlat1.x);\n    u_xlat24 = dot(u_xlat0.zw, u_xlat0.zw);\n    u_xlat24 = inversesqrt(u_xlat24);\n    u_xlat2.x = u_xlat24 * u_xlat0.z;\n    u_xlat2.yz = vec2(u_xlat24) * vec2(1.0, 0.0);\n    u_xlat0.z = 0.0;\n    u_xlat0.xyz = u_xlat1.xxx * u_xlat0.xyz;\n    u_xlat1.xyz = u_xlat0.xyz * u_xlat2.xyz;\n    u_xlat0.xyz = u_xlat2.zxy * u_xlat0.yzx + (-u_xlat1.xyz);\n    u_xlat10_24 = texture2D(_MainTex, vs_TEXCOORD0.xy).w;\n    u_xlat24 = (-u_xlat10_24) + 0.5;\n    u_xlat24 = u_xlat24 + (-vs_TEXCOORD6.x);\n    u_xlat24 = u_xlat24 * vs_TEXCOORD6.y + 0.5;\n    u_xlat1.x = _OutlineWidth * _ScaleRatioA;\n    u_xlat1.x = u_xlat1.x * vs_TEXCOORD6.y;\n    u_xlat16_4.x = u_xlat1.x * 0.5 + u_xlat24;\n    u_xlat16_4.x = clamp(u_xlat16_4.x, 0.0, 1.0);\n    u_xlat16_12.x = min(u_xlat1.x, 1.0);\n    u_xlat16_12.x = sqrt(u_xlat16_12.x);\n    u_xlat16_4.x = u_xlat16_12.x * u_xlat16_4.x;\n    u_xlat9.xy = vec2(_OutlineUVSpeedX, _OutlineUVSpeedY) * _Time.yy + vs_TEXCOORD1.xy;\n    u_xlat10_2 = texture2D(_OutlineTex, u_xlat9.xy);\n    u_xlat9.xyz = u_xlat10_2.xyz * _OutlineColor.xyz;\n    u_xlat2.x = vs_COLOR0.w * _OutlineColor.w;\n    u_xlat10 = u_xlat10_2.w * u_xlat2.x;\n    u_xlat3.xy = vec2(_FaceUVSpeedX, _FaceUVSpeedY) * _Time.yy + vs_TEXCOORD0.zw;\n    u_xlat10_3 = texture2D(_FaceTex, u_xlat3.xy);\n    u_xlat5 = vs_COLOR0 * _FaceColor;\n    u_xlat6 = u_xlat10_3 * u_xlat5;\n    u_xlat16_12.xyz = u_xlat6.www * u_xlat6.xyz;\n    u_xlat16_7.xyz = u_xlat9.xyz * vec3(u_xlat10) + (-u_xlat16_12.xyz);\n    u_xlat16_7.w = u_xlat2.x * u_xlat10_2.w + (-u_xlat6.w);\n    u_xlat16_2 = u_xlat16_4.xxxx * u_xlat16_7;\n    u_xlat16_3.w = u_xlat5.w * u_xlat10_3.w + u_xlat16_2.w;\n    u_xlat16_3.xyz = u_xlat6.xyz * u_xlat6.www + u_xlat16_2.xyz;\n    u_xlat16_4.x = (-u_xlat1.x) * 0.5 + u_xlat24;\n    u_xlat24 = u_xlat1.x * 0.5 + u_xlat24;\n    u_xlat24 = clamp(u_xlat24, 0.0, 1.0);\n    u_xlat1.x = _OutlineSoftness * _ScaleRatioA;\n    u_xlat9.x = u_xlat1.x * vs_TEXCOORD6.y;\n    u_xlat16_12.x = u_xlat1.x * vs_TEXCOORD6.y + 1.0;\n    u_xlat16_4.x = u_xlat9.x * 0.5 + u_xlat16_4.x;\n    u_xlat16_4.x = u_xlat16_4.x / u_xlat16_12.x;\n    u_xlat16_4.x = clamp(u_xlat16_4.x, 0.0, 1.0);\n    u_xlat16_4.x = (-u_xlat16_4.x) + 1.0;\n    u_xlat16_1 = u_xlat16_3 * u_xlat16_4.xxxx;\n    u_xlat5.x = (-_BumpFace) + _BumpOutline;\n    u_xlat5.x = u_xlat24 * u_xlat5.x + _BumpFace;\n    u_xlat10_13.xy = texture2D(_BumpMap, vs_TEXCOORD0.zw).yw;\n    u_xlat16_4.xy = u_xlat10_13.yx * vec2(2.0, 2.0) + vec2(-1.0, -1.0);\n    u_xlat16_28 = dot(u_xlat16_4.xy, u_xlat16_4.xy);\n    u_xlat16_28 = min(u_xlat16_28, 1.0);\n    u_xlat16_28 = (-u_xlat16_28) + 1.0;\n    u_xlat16_4.z = sqrt(u_xlat16_28);\n    u_xlat5.xyz = u_xlat16_4.xyz * u_xlat5.xxx + vec3(-0.0, -0.0, -1.0);\n    u_xlat5.xyz = u_xlat16_1.www * u_xlat5.xyz + vec3(0.0, 0.0, 1.0);\n    u_xlat0.xyz = u_xlat0.xyz + (-u_xlat5.xyz);\n    u_xlat5.x = dot(u_xlat0.xyz, u_xlat0.xyz);\n    u_xlat5.x = inversesqrt(u_xlat5.x);\n    u_xlat0.xyz = u_xlat0.xyz * u_xlat5.xxx;\n    u_xlat16_4.x = dot(vs_TEXCOORD2.xyz, (-u_xlat0.xyz));\n    u_xlat16_4.y = dot(vs_TEXCOORD3.xyz, (-u_xlat0.xyz));\n    u_xlat16_4.z = dot(vs_TEXCOORD4.xyz, (-u_xlat0.xyz));\n    u_xlat0.x = dot(u_xlat16_4.xyz, u_xlat16_4.xyz);\n    u_xlat0.x = inversesqrt(u_xlat0.x);\n    u_xlat0.xyz = u_xlat0.xxx * u_xlat16_4.xyz;\n    u_xlat5.xyz = (-vs_TEXCOORD5.xyz) + _WorldSpaceLightPos0.xyz;\n    u_xlat29 = dot(u_xlat5.xyz, u_xlat5.xyz);\n    u_xlat29 = inversesqrt(u_xlat29);\n    u_xlat5.xyz = vec3(u_xlat29) * u_xlat5.xyz;\n    u_xlat6.xyz = (-vs_TEXCOORD5.xyz) + _WorldSpaceCameraPos.xyz;\n    u_xlat29 = dot(u_xlat6.xyz, u_xlat6.xyz);\n    u_xlat29 = inversesqrt(u_xlat29);\n    u_xlat16_4.xyz = u_xlat6.xyz * vec3(u_xlat29) + u_xlat5.xyz;\n    u_xlat16_4.w = dot(u_xlat0.xyz, u_xlat5.xyz);\n    u_xlat16_7.x = dot(u_xlat16_4.xyz, u_xlat16_4.xyz);\n    u_xlat16_7.x = inversesqrt(u_xlat16_7.x);\n    u_xlat16_4.xyz = u_xlat16_4.xyz * u_xlat16_7.xxx;\n    u_xlat16_4.x = dot(u_xlat0.xyz, u_xlat16_4.xyz);\n    u_xlat16_4.xw = max(u_xlat16_4.xw, vec2(0.0, 0.0));\n    u_xlat0.x = log2(u_xlat16_4.x);\n    u_xlat8.x = (-_FaceShininess) + _OutlineShininess;\n    u_xlat8.x = u_xlat24 * u_xlat8.x + _FaceShininess;\n    u_xlat16_4.x = u_xlat8.x * 128.0;\n    u_xlat0.x = u_xlat0.x * u_xlat16_4.x;\n    u_xlat0.x = exp2(u_xlat0.x);\n    u_xlat2 = vs_TEXCOORD5.yyyy * hlslcc_mtx4x4unity_WorldToLight[1];\n    u_xlat2 = hlslcc_mtx4x4unity_WorldToLight[0] * vs_TEXCOORD5.xxxx + u_xlat2;\n    u_xlat2 = hlslcc_mtx4x4unity_WorldToLight[2] * vs_TEXCOORD5.zzzz + u_xlat2;\n    u_xlat2 = u_xlat2 + hlslcc_mtx4x4unity_WorldToLight[3];\n    u_xlat8.xy = u_xlat2.xy / u_xlat2.ww;\n    u_xlat8.xy = u_xlat8.xy + vec2(0.5, 0.5);\n    u_xlat8.x = texture2D(_LightTexture0, u_xlat8.xy).w;\n    u_xlatb16 = 0.0<u_xlat2.z;\n    u_xlat24 = dot(u_xlat2.xyz, u_xlat2.xyz);\n    u_xlat24 = texture2D(_LightTextureB0, vec2(u_xlat24)).x;\n    u_xlat16_4.x = (u_xlatb16) ? 1.0 : 0.0;\n    u_xlat16_4.x = u_xlat8.x * u_xlat16_4.x;\n    u_xlat16_4.x = u_xlat24 * u_xlat16_4.x;\n    u_xlat16_4.xyz = u_xlat16_4.xxx * _LightColor0.xyz;\n    u_xlat16_7.xyz = u_xlat16_4.xyz * _SpecColor.xyz;\n    u_xlat0.xyz = u_xlat0.xxx * u_xlat16_7.xyz;\n    u_xlat24 = max(u_xlat16_1.w, 9.99999975e-05);\n    u_xlat5.xyz = u_xlat16_1.xyz / vec3(u_xlat24);\n    SV_Target0.w = u_xlat16_1.w;\n    u_xlat16_4.xyz = u_xlat16_4.xyz * u_xlat5.xyz;\n    u_xlat0.xyz = u_xlat16_4.xyz * u_xlat16_4.www + u_xlat0.xyz;\n    SV_Target0.xyz = u_xlat0.xyz;\n    return;\n}\n\n",0,0,2,1,0,["SPOT"],[["IGNOREPROJECTOR","true"],["LIGHTMODE","FORWARDADD"],["QUEUE","Transparent"],["RenderType","Transparent"]]],[0,"\n#version 100\n\nuniform \tvec3 _WorldSpaceCameraPos;\nuniform \tvec4 _ScreenParams;\nuniform \tvec4 hlslcc_mtx4x4unity_ObjectToWorld[4];\nuniform \tvec4 hlslcc_mtx4x4unity_WorldToObject[4];\nuniform \tvec4 unity_WorldTransformParams;\nuniform \tvec4 hlslcc_mtx4x4glstate_matrix_projection[4];\nuniform \tvec4 hlslcc_mtx4x4unity_MatrixVP[4];\nuniform \tvec4 hlslcc_mtx4x4unity_WorldToLight[4];\nuniform \tfloat _FaceDilate;\nuniform \tvec4 hlslcc_mtx4x4_EnvMatrix[4];\nuniform \tfloat _WeightNormal;\nuniform \tfloat _WeightBold;\nuniform \tfloat _ScaleRatioA;\nuniform \tfloat _VertexOffsetX;\nuniform \tfloat _VertexOffsetY;\nuniform \tfloat _GradientScale;\nuniform \tfloat _ScaleX;\nuniform \tfloat _ScaleY;\nuniform \tfloat _PerspectiveFilter;\nuniform \tfloat _Sharpness;\nuniform \tvec4 _MainTex_ST;\nuniform \tvec4 _FaceTex_ST;\nuniform \tvec4 _OutlineTex_ST;\nattribute highp vec4 in_POSITION0;\nattribute highp vec4 in_TANGENT0;\nattribute highp vec3 in_NORMAL0;\nattribute highp vec4 in_TEXCOORD0;\nattribute highp vec4 in_TEXCOORD1;\nattribute mediump vec4 in_COLOR0;\nvarying highp vec4 vs_TEXCOORD0;\nvarying highp vec2 vs_TEXCOORD1;\nvarying highp vec2 vs_TEXCOORD6;\nvarying highp vec3 vs_TEXCOORD2;\nvarying highp vec3 vs_TEXCOORD3;\nvarying highp vec3 vs_TEXCOORD4;\nvarying highp vec3 vs_TEXCOORD5;\nvarying mediump vec4 vs_COLOR0;\nvarying highp vec3 vs_TEXCOORD7;\nvarying highp vec3 vs_TEXCOORD8;\nvec3 u_xlat0;\nint u_xlati0;\nvec4 u_xlat1;\nvec4 u_xlat2;\nvec4 u_xlat3;\nvec3 u_xlat4;\nfloat u_xlat5;\nint u_xlati5;\nfloat u_xlat7;\nfloat u_xlat12;\nfloat u_xlat15;\nbool u_xlatb15;\nvoid main()\n{\n    u_xlat0.xy = in_POSITION0.xy + vec2(_VertexOffsetX, _VertexOffsetY);\n    u_xlat1 = u_xlat0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];\n    u_xlat1 = hlslcc_mtx4x4unity_ObjectToWorld[0] * u_xlat0.xxxx + u_xlat1;\n    u_xlat1 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat1;\n    u_xlat2 = u_xlat1 + hlslcc_mtx4x4unity_ObjectToWorld[3];\n    u_xlat3 = u_xlat2.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];\n    u_xlat3 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat2.xxxx + u_xlat3;\n    u_xlat3 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat2.zzzz + u_xlat3;\n    gl_Position = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat2.wwww + u_xlat3;\n    u_xlat15 = in_TEXCOORD1.x * 0.000244140625;\n    u_xlat3.x = floor(u_xlat15);\n    u_xlat3.y = (-u_xlat3.x) * 4096.0 + in_TEXCOORD1.x;\n    u_xlat3.xy = u_xlat3.xy * vec2(0.001953125, 0.001953125);\n    vs_TEXCOORD0.zw = u_xlat3.xy * _FaceTex_ST.xy + _FaceTex_ST.zw;\n    vs_TEXCOORD1.xy = u_xlat3.xy * _OutlineTex_ST.xy + _OutlineTex_ST.zw;\n    vs_TEXCOORD0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;\n    u_xlat15 = u_xlat2.y * hlslcc_mtx4x4unity_MatrixVP[1].w;\n    u_xlat15 = hlslcc_mtx4x4unity_MatrixVP[0].w * u_xlat2.x + u_xlat15;\n    u_xlat15 = hlslcc_mtx4x4unity_MatrixVP[2].w * u_xlat2.z + u_xlat15;\n    u_xlat15 = hlslcc_mtx4x4unity_MatrixVP[3].w * u_xlat2.w + u_xlat15;\n    u_xlat2.xy = _ScreenParams.yy * hlslcc_mtx4x4glstate_matrix_projection[1].xy;\n    u_xlat2.xy = hlslcc_mtx4x4glstate_matrix_projection[0].xy * _ScreenParams.xx + u_xlat2.xy;\n    u_xlat2.xy = u_xlat2.xy * vec2(_ScaleX, _ScaleY);\n    u_xlat2.xy = vec2(u_xlat15) / u_xlat2.xy;\n    u_xlat15 = dot(u_xlat2.xy, u_xlat2.xy);\n    u_xlat15 = inversesqrt(u_xlat15);\n    u_xlat2.x = abs(in_TEXCOORD1.y) * _GradientScale;\n    u_xlat7 = _Sharpness + 1.0;\n    u_xlat2.x = u_xlat7 * u_xlat2.x;\n    u_xlat7 = u_xlat15 * u_xlat2.x;\n    u_xlat12 = (-_PerspectiveFilter) + 1.0;\n    u_xlat7 = u_xlat12 * u_xlat7;\n    u_xlat15 = u_xlat15 * u_xlat2.x + (-u_xlat7);\n    u_xlat2.xzw = _WorldSpaceCameraPos.yyy * hlslcc_mtx4x4unity_WorldToObject[1].xyz;\n    u_xlat2.xzw = hlslcc_mtx4x4unity_WorldToObject[0].xyz * _WorldSpaceCameraPos.xxx + u_xlat2.xzw;\n    u_xlat2.xzw = hlslcc_mtx4x4unity_WorldToObject[2].xyz * _WorldSpaceCameraPos.zzz + u_xlat2.xzw;\n    u_xlat2.xzw = u_xlat2.xzw + hlslcc_mtx4x4unity_WorldToObject[3].xyz;\n    u_xlat0.z = in_POSITION0.z;\n    u_xlat0.xyz = (-u_xlat0.xyz) + u_xlat2.xzw;\n    u_xlat0.x = dot(in_NORMAL0.xyz, u_xlat0.xyz);\n    u_xlati5 = int((0.0<u_xlat0.x) ? -1 : 0);\n    u_xlati0 = int((u_xlat0.x<0.0) ? -1 : 0);\n    u_xlati0 = (-u_xlati5) + u_xlati0;\n    u_xlat0.x = float(u_xlati0);\n    u_xlat0.xyz = u_xlat0.xxx * in_NORMAL0.xyz;\n    u_xlat3.y = dot(u_xlat0.xyz, hlslcc_mtx4x4unity_WorldToObject[0].xyz);\n    u_xlat3.z = dot(u_xlat0.xyz, hlslcc_mtx4x4unity_WorldToObject[1].xyz);\n    u_xlat3.x = dot(u_xlat0.xyz, hlslcc_mtx4x4unity_WorldToObject[2].xyz);\n    u_xlat0.x = dot(u_xlat3.xyz, u_xlat3.xyz);\n    u_xlat0.x = inversesqrt(u_xlat0.x);\n    u_xlat0.xyz = u_xlat0.xxx * u_xlat3.xyz;\n    u_xlat2.xzw = hlslcc_mtx4x4unity_ObjectToWorld[3].xyz * in_POSITION0.www + u_xlat1.xyz;\n    u_xlat1 = hlslcc_mtx4x4unity_ObjectToWorld[3] * in_POSITION0.wwww + u_xlat1;\n    u_xlat3.xyz = (-u_xlat2.xzw) + _WorldSpaceCameraPos.xyz;\n    vs_TEXCOORD5.xyz = u_xlat2.xzw;\n    u_xlat2.x = dot(u_xlat3.xyz, u_xlat3.xyz);\n    u_xlat2.x = inversesqrt(u_xlat2.x);\n    u_xlat2.xzw = u_xlat2.xxx * u_xlat3.xyz;\n    u_xlat2.x = dot(u_xlat0.yzx, u_xlat2.xzw);\n    vs_TEXCOORD6.y = abs(u_xlat2.x) * u_xlat15 + u_xlat7;\n    u_xlatb15 = 0.0>=in_TEXCOORD1.y;\n    u_xlat15 = u_xlatb15 ? 1.0 : float(0.0);\n    u_xlat2.x = (-_WeightNormal) + _WeightBold;\n    u_xlat15 = u_xlat15 * u_xlat2.x + _WeightNormal;\n    u_xlat15 = u_xlat15 * 0.25 + _FaceDilate;\n    u_xlat15 = u_xlat15 * _ScaleRatioA;\n    vs_TEXCOORD6.x = u_xlat15 * 0.5;\n    vs_TEXCOORD2.z = u_xlat0.y;\n    u_xlat2.xyz = in_TANGENT0.yyy * hlslcc_mtx4x4unity_ObjectToWorld[1].yzx;\n    u_xlat2.xyz = hlslcc_mtx4x4unity_ObjectToWorld[0].yzx * in_TANGENT0.xxx + u_xlat2.xyz;\n    u_xlat2.xyz = hlslcc_mtx4x4unity_ObjectToWorld[2].yzx * in_TANGENT0.zzz + u_xlat2.xyz;\n    u_xlat15 = dot(u_xlat2.xyz, u_xlat2.xyz);\n    u_xlat15 = inversesqrt(u_xlat15);\n    u_xlat2.xyz = vec3(u_xlat15) * u_xlat2.xyz;\n    u_xlat4.xyz = u_xlat0.xyz * u_xlat2.xyz;\n    u_xlat4.xyz = u_xlat0.zxy * u_xlat2.yzx + (-u_xlat4.xyz);\n    u_xlat5 = in_TANGENT0.w * unity_WorldTransformParams.w;\n    u_xlat4.xyz = vec3(u_xlat5) * u_xlat4.xyz;\n    vs_TEXCOORD2.y = u_xlat4.x;\n    vs_TEXCOORD2.x = u_xlat2.z;\n    vs_TEXCOORD3.z = u_xlat0.z;\n    vs_TEXCOORD4.z = u_xlat0.x;\n    vs_TEXCOORD3.x = u_xlat2.x;\n    vs_TEXCOORD4.x = u_xlat2.y;\n    vs_TEXCOORD3.y = u_xlat4.y;\n    vs_TEXCOORD4.y = u_xlat4.z;\n    vs_COLOR0 = in_COLOR0;\n    u_xlat0.xyz = u_xlat3.yyy * hlslcc_mtx4x4_EnvMatrix[1].xyz;\n    u_xlat0.xyz = hlslcc_mtx4x4_EnvMatrix[0].xyz * u_xlat3.xxx + u_xlat0.xyz;\n    vs_TEXCOORD7.xyz = hlslcc_mtx4x4_EnvMatrix[2].xyz * u_xlat3.zzz + u_xlat0.xyz;\n    u_xlat0.xyz = u_xlat1.yyy * hlslcc_mtx4x4unity_WorldToLight[1].xyz;\n    u_xlat0.xyz = hlslcc_mtx4x4unity_WorldToLight[0].xyz * u_xlat1.xxx + u_xlat0.xyz;\n    u_xlat0.xyz = hlslcc_mtx4x4unity_WorldToLight[2].xyz * u_xlat1.zzz + u_xlat0.xyz;\n    vs_TEXCOORD8.xyz = hlslcc_mtx4x4unity_WorldToLight[3].xyz * u_xlat1.www + u_xlat0.xyz;\n    return;\n}\n\n","\n#version 100\n\n#ifdef GL_FRAGMENT_PRECISION_HIGH\n    precision highp float;\n#else\n    precision mediump float;\n#endif\nprecision highp int;\nuniform \tvec4 _Time;\nuniform \tvec3 _WorldSpaceCameraPos;\nuniform \tvec4 _WorldSpaceLightPos0;\nuniform \tmediump vec4 _LightColor0;\nuniform \tmediump vec4 _SpecColor;\nuniform \tvec4 hlslcc_mtx4x4unity_WorldToLight[4];\nuniform \tfloat _FaceUVSpeedX;\nuniform \tfloat _FaceUVSpeedY;\nuniform \tmediump vec4 _FaceColor;\nuniform \tfloat _OutlineSoftness;\nuniform \tfloat _OutlineUVSpeedX;\nuniform \tfloat _OutlineUVSpeedY;\nuniform \tmediump vec4 _OutlineColor;\nuniform \tfloat _OutlineWidth;\nuniform \tfloat _Bevel;\nuniform \tfloat _BevelOffset;\nuniform \tfloat _BevelWidth;\nuniform \tfloat _BevelClamp;\nuniform \tfloat _BevelRoundness;\nuniform \tfloat _BumpOutline;\nuniform \tfloat _BumpFace;\nuniform \tfloat _ShaderFlags;\nuniform \tfloat _ScaleRatioA;\nuniform \tfloat _TextureWidth;\nuniform \tfloat _TextureHeight;\nuniform \tfloat _GradientScale;\nuniform \tmediump float _FaceShininess;\nuniform \tmediump float _OutlineShininess;\nuniform lowp sampler2D _MainTex;\nuniform lowp sampler2D _FaceTex;\nuniform lowp sampler2D _OutlineTex;\nuniform lowp sampler2D _BumpMap;\nuniform highp sampler2D _LightTextureB0;\nuniform highp samplerCube _LightTexture0;\nvarying highp vec4 vs_TEXCOORD0;\nvarying highp vec2 vs_TEXCOORD1;\nvarying highp vec2 vs_TEXCOORD6;\nvarying highp vec3 vs_TEXCOORD2;\nvarying highp vec3 vs_TEXCOORD3;\nvarying highp vec3 vs_TEXCOORD4;\nvarying highp vec3 vs_TEXCOORD5;\nvarying mediump vec4 vs_COLOR0;\n#define SV_Target0 gl_FragData[0]\nvec4 u_xlat0;\nvec4 u_xlat1;\nmediump vec4 u_xlat16_1;\nvec4 u_xlat2;\nmediump vec4 u_xlat16_2;\nlowp vec4 u_xlat10_2;\nvec2 u_xlat3;\nmediump vec4 u_xlat16_3;\nlowp vec4 u_xlat10_3;\nmediump vec4 u_xlat16_4;\nvec4 u_xlat5;\nvec4 u_xlat6;\nmediump vec4 u_xlat16_7;\nvec3 u_xlat8;\nvec3 u_xlat9;\nbool u_xlatb9;\nfloat u_xlat10;\nmediump vec3 u_xlat16_12;\nlowp vec2 u_xlat10_13;\nfloat u_xlat16;\nbool u_xlatb17;\nfloat u_xlat24;\nlowp float u_xlat10_24;\nmediump float u_xlat16_28;\nfloat u_xlat29;\nvoid main()\n{\n    u_xlat0.x = vs_TEXCOORD6.x + _BevelOffset;\n    u_xlat1.xy = vec2(1.0, 1.0) / vec2(_TextureWidth, _TextureHeight);\n    u_xlat1.z = 0.0;\n    u_xlat2 = (-u_xlat1.xzzy) + vs_TEXCOORD0.xyxy;\n    u_xlat1 = u_xlat1.xzzy + vs_TEXCOORD0.xyxy;\n    u_xlat10_3.x = texture2D(_MainTex, u_xlat2.xy).w;\n    u_xlat10_3.z = texture2D(_MainTex, u_xlat2.zw).w;\n    u_xlat10_3.y = texture2D(_MainTex, u_xlat1.xy).w;\n    u_xlat10_3.w = texture2D(_MainTex, u_xlat1.zw).w;\n    u_xlat0 = u_xlat0.xxxx + u_xlat10_3;\n    u_xlat0 = u_xlat0 + vec4(-0.5, -0.5, -0.5, -0.5);\n    u_xlat1.x = _BevelWidth + _OutlineWidth;\n    u_xlat1.x = max(u_xlat1.x, 0.00999999978);\n    u_xlat0 = u_xlat0 / u_xlat1.xxxx;\n    u_xlat1.x = u_xlat1.x * _Bevel;\n    u_xlat1.x = u_xlat1.x * _GradientScale;\n    u_xlat1.x = u_xlat1.x * -2.0;\n    u_xlat0 = u_xlat0 + vec4(0.5, 0.5, 0.5, 0.5);\n    u_xlat0 = clamp(u_xlat0, 0.0, 1.0);\n    u_xlat2 = u_xlat0 * vec4(2.0, 2.0, 2.0, 2.0) + vec4(-1.0, -1.0, -1.0, -1.0);\n    u_xlat2 = -abs(u_xlat2) + vec4(1.0, 1.0, 1.0, 1.0);\n    u_xlat9.x = _ShaderFlags * 0.5;\n    u_xlatb17 = u_xlat9.x>=(-u_xlat9.x);\n    u_xlat9.x = fract(abs(u_xlat9.x));\n    u_xlat9.x = (u_xlatb17) ? u_xlat9.x : (-u_xlat9.x);\n    u_xlatb9 = u_xlat9.x>=0.5;\n    u_xlat0 = (bool(u_xlatb9)) ? u_xlat2 : u_xlat0;\n    u_xlat2 = u_xlat0 * vec4(1.57079601, 1.57079601, 1.57079601, 1.57079601);\n    u_xlat2 = sin(u_xlat2);\n    u_xlat2 = (-u_xlat0) + u_xlat2;\n    u_xlat0 = vec4(vec4(_BevelRoundness, _BevelRoundness, _BevelRoundness, _BevelRoundness)) * u_xlat2 + u_xlat0;\n    u_xlat9.x = (-_BevelClamp) + 1.0;\n    u_xlat0 = min(u_xlat0, u_xlat9.xxxx);\n    u_xlat0.xz = u_xlat1.xx * u_xlat0.xz;\n    u_xlat0.yz = u_xlat0.wy * u_xlat1.xx + (-u_xlat0.zx);\n    u_xlat0.x = float(-1.0);\n    u_xlat0.w = float(1.0);\n    u_xlat1.x = dot(u_xlat0.xy, u_xlat0.xy);\n    u_xlat1.x = inversesqrt(u_xlat1.x);\n    u_xlat24 = dot(u_xlat0.zw, u_xlat0.zw);\n    u_xlat24 = inversesqrt(u_xlat24);\n    u_xlat2.x = u_xlat24 * u_xlat0.z;\n    u_xlat2.yz = vec2(u_xlat24) * vec2(1.0, 0.0);\n    u_xlat0.z = 0.0;\n    u_xlat0.xyz = u_xlat1.xxx * u_xlat0.xyz;\n    u_xlat1.xyz = u_xlat0.xyz * u_xlat2.xyz;\n    u_xlat0.xyz = u_xlat2.zxy * u_xlat0.yzx + (-u_xlat1.xyz);\n    u_xlat10_24 = texture2D(_MainTex, vs_TEXCOORD0.xy).w;\n    u_xlat24 = (-u_xlat10_24) + 0.5;\n    u_xlat24 = u_xlat24 + (-vs_TEXCOORD6.x);\n    u_xlat24 = u_xlat24 * vs_TEXCOORD6.y + 0.5;\n    u_xlat1.x = _OutlineWidth * _ScaleRatioA;\n    u_xlat1.x = u_xlat1.x * vs_TEXCOORD6.y;\n    u_xlat16_4.x = u_xlat1.x * 0.5 + u_xlat24;\n    u_xlat16_4.x = clamp(u_xlat16_4.x, 0.0, 1.0);\n    u_xlat16_12.x = min(u_xlat1.x, 1.0);\n    u_xlat16_12.x = sqrt(u_xlat16_12.x);\n    u_xlat16_4.x = u_xlat16_12.x * u_xlat16_4.x;\n    u_xlat9.xy = vec2(_OutlineUVSpeedX, _OutlineUVSpeedY) * _Time.yy + vs_TEXCOORD1.xy;\n    u_xlat10_2 = texture2D(_OutlineTex, u_xlat9.xy);\n    u_xlat9.xyz = u_xlat10_2.xyz * _OutlineColor.xyz;\n    u_xlat2.x = vs_COLOR0.w * _OutlineColor.w;\n    u_xlat10 = u_xlat10_2.w * u_xlat2.x;\n    u_xlat3.xy = vec2(_FaceUVSpeedX, _FaceUVSpeedY) * _Time.yy + vs_TEXCOORD0.zw;\n    u_xlat10_3 = texture2D(_FaceTex, u_xlat3.xy);\n    u_xlat5 = vs_COLOR0 * _FaceColor;\n    u_xlat6 = u_xlat10_3 * u_xlat5;\n    u_xlat16_12.xyz = u_xlat6.www * u_xlat6.xyz;\n    u_xlat16_7.xyz = u_xlat9.xyz * vec3(u_xlat10) + (-u_xlat16_12.xyz);\n    u_xlat16_7.w = u_xlat2.x * u_xlat10_2.w + (-u_xlat6.w);\n    u_xlat16_2 = u_xlat16_4.xxxx * u_xlat16_7;\n    u_xlat16_3.w = u_xlat5.w * u_xlat10_3.w + u_xlat16_2.w;\n    u_xlat16_3.xyz = u_xlat6.xyz * u_xlat6.www + u_xlat16_2.xyz;\n    u_xlat16_4.x = (-u_xlat1.x) * 0.5 + u_xlat24;\n    u_xlat24 = u_xlat1.x * 0.5 + u_xlat24;\n    u_xlat24 = clamp(u_xlat24, 0.0, 1.0);\n    u_xlat1.x = _OutlineSoftness * _ScaleRatioA;\n    u_xlat9.x = u_xlat1.x * vs_TEXCOORD6.y;\n    u_xlat16_12.x = u_xlat1.x * vs_TEXCOORD6.y + 1.0;\n    u_xlat16_4.x = u_xlat9.x * 0.5 + u_xlat16_4.x;\n    u_xlat16_4.x = u_xlat16_4.x / u_xlat16_12.x;\n    u_xlat16_4.x = clamp(u_xlat16_4.x, 0.0, 1.0);\n    u_xlat16_4.x = (-u_xlat16_4.x) + 1.0;\n    u_xlat16_1 = u_xlat16_3 * u_xlat16_4.xxxx;\n    u_xlat5.x = (-_BumpFace) + _BumpOutline;\n    u_xlat5.x = u_xlat24 * u_xlat5.x + _BumpFace;\n    u_xlat10_13.xy = texture2D(_BumpMap, vs_TEXCOORD0.zw).yw;\n    u_xlat16_4.xy = u_xlat10_13.yx * vec2(2.0, 2.0) + vec2(-1.0, -1.0);\n    u_xlat16_28 = dot(u_xlat16_4.xy, u_xlat16_4.xy);\n    u_xlat16_28 = min(u_xlat16_28, 1.0);\n    u_xlat16_28 = (-u_xlat16_28) + 1.0;\n    u_xlat16_4.z = sqrt(u_xlat16_28);\n    u_xlat5.xyz = u_xlat16_4.xyz * u_xlat5.xxx + vec3(-0.0, -0.0, -1.0);\n    u_xlat5.xyz = u_xlat16_1.www * u_xlat5.xyz + vec3(0.0, 0.0, 1.0);\n    u_xlat0.xyz = u_xlat0.xyz + (-u_xlat5.xyz);\n    u_xlat5.x = dot(u_xlat0.xyz, u_xlat0.xyz);\n    u_xlat5.x = inversesqrt(u_xlat5.x);\n    u_xlat0.xyz = u_xlat0.xyz * u_xlat5.xxx;\n    u_xlat16_4.x = dot(vs_TEXCOORD2.xyz, (-u_xlat0.xyz));\n    u_xlat16_4.y = dot(vs_TEXCOORD3.xyz, (-u_xlat0.xyz));\n    u_xlat16_4.z = dot(vs_TEXCOORD4.xyz, (-u_xlat0.xyz));\n    u_xlat0.x = dot(u_xlat16_4.xyz, u_xlat16_4.xyz);\n    u_xlat0.x = inversesqrt(u_xlat0.x);\n    u_xlat0.xyz = u_xlat0.xxx * u_xlat16_4.xyz;\n    u_xlat5.xyz = (-vs_TEXCOORD5.xyz) + _WorldSpaceLightPos0.xyz;\n    u_xlat29 = dot(u_xlat5.xyz, u_xlat5.xyz);\n    u_xlat29 = inversesqrt(u_xlat29);\n    u_xlat5.xyz = vec3(u_xlat29) * u_xlat5.xyz;\n    u_xlat6.xyz = (-vs_TEXCOORD5.xyz) + _WorldSpaceCameraPos.xyz;\n    u_xlat29 = dot(u_xlat6.xyz, u_xlat6.xyz);\n    u_xlat29 = inversesqrt(u_xlat29);\n    u_xlat16_4.xyz = u_xlat6.xyz * vec3(u_xlat29) + u_xlat5.xyz;\n    u_xlat16_4.w = dot(u_xlat0.xyz, u_xlat5.xyz);\n    u_xlat16_7.x = dot(u_xlat16_4.xyz, u_xlat16_4.xyz);\n    u_xlat16_7.x = inversesqrt(u_xlat16_7.x);\n    u_xlat16_4.xyz = u_xlat16_4.xyz * u_xlat16_7.xxx;\n    u_xlat16_4.x = dot(u_xlat0.xyz, u_xlat16_4.xyz);\n    u_xlat16_4.xw = max(u_xlat16_4.xw, vec2(0.0, 0.0));\n    u_xlat0.x = log2(u_xlat16_4.x);\n    u_xlat8.x = (-_FaceShininess) + _OutlineShininess;\n    u_xlat8.x = u_xlat24 * u_xlat8.x + _FaceShininess;\n    u_xlat16_4.x = u_xlat8.x * 128.0;\n    u_xlat0.x = u_xlat0.x * u_xlat16_4.x;\n    u_xlat0.x = exp2(u_xlat0.x);\n    u_xlat8.xyz = vs_TEXCOORD5.yyy * hlslcc_mtx4x4unity_WorldToLight[1].xyz;\n    u_xlat8.xyz = hlslcc_mtx4x4unity_WorldToLight[0].xyz * vs_TEXCOORD5.xxx + u_xlat8.xyz;\n    u_xlat8.xyz = hlslcc_mtx4x4unity_WorldToLight[2].xyz * vs_TEXCOORD5.zzz + u_xlat8.xyz;\n    u_xlat8.xyz = u_xlat8.xyz + hlslcc_mtx4x4unity_WorldToLight[3].xyz;\n    u_xlat5.x = dot(u_xlat8.xyz, u_xlat8.xyz);\n    u_xlat8.x = textureCube(_LightTexture0, u_xlat8.xyz).w;\n    u_xlat16 = texture2D(_LightTextureB0, u_xlat5.xx).x;\n    u_xlat8.x = u_xlat8.x * u_xlat16;\n    u_xlat16_4.xyz = u_xlat8.xxx * _LightColor0.xyz;\n    u_xlat16_7.xyz = u_xlat16_4.xyz * _SpecColor.xyz;\n    u_xlat0.xyz = u_xlat0.xxx * u_xlat16_7.xyz;\n    u_xlat24 = max(u_xlat16_1.w, 9.99999975e-05);\n    u_xlat5.xyz = u_xlat16_1.xyz / vec3(u_xlat24);\n    SV_Target0.w = u_xlat16_1.w;\n    u_xlat16_4.xyz = u_xlat16_4.xyz * u_xlat5.xyz;\n    u_xlat0.xyz = u_xlat16_4.xyz * u_xlat16_4.www + u_xlat0.xyz;\n    SV_Target0.xyz = u_xlat0.xyz;\n    return;\n}\n\n",0,0,3,1,0,["POINT_COOKIE"],[["IGNOREPROJECTOR","true"],["LIGHTMODE","FORWARDADD"],["QUEUE","Transparent"],["RenderType","Transparent"]]],[0,"\n#version 100\n\nuniform \tvec3 _WorldSpaceCameraPos;\nuniform \tvec4 _ScreenParams;\nuniform \tvec4 hlslcc_mtx4x4unity_ObjectToWorld[4];\nuniform \tvec4 hlslcc_mtx4x4unity_WorldToObject[4];\nuniform \tvec4 unity_WorldTransformParams;\nuniform \tvec4 hlslcc_mtx4x4glstate_matrix_projection[4];\nuniform \tvec4 hlslcc_mtx4x4unity_MatrixVP[4];\nuniform \tvec4 hlslcc_mtx4x4unity_WorldToLight[4];\nuniform \tfloat _FaceDilate;\nuniform \tvec4 hlslcc_mtx4x4_EnvMatrix[4];\nuniform \tfloat _WeightNormal;\nuniform \tfloat _WeightBold;\nuniform \tfloat _ScaleRatioA;\nuniform \tfloat _VertexOffsetX;\nuniform \tfloat _VertexOffsetY;\nuniform \tfloat _GradientScale;\nuniform \tfloat _ScaleX;\nuniform \tfloat _ScaleY;\nuniform \tfloat _PerspectiveFilter;\nuniform \tfloat _Sharpness;\nuniform \tvec4 _MainTex_ST;\nuniform \tvec4 _FaceTex_ST;\nuniform \tvec4 _OutlineTex_ST;\nattribute highp vec4 in_POSITION0;\nattribute highp vec4 in_TANGENT0;\nattribute highp vec3 in_NORMAL0;\nattribute highp vec4 in_TEXCOORD0;\nattribute highp vec4 in_TEXCOORD1;\nattribute mediump vec4 in_COLOR0;\nvarying highp vec4 vs_TEXCOORD0;\nvarying highp vec2 vs_TEXCOORD1;\nvarying highp vec2 vs_TEXCOORD6;\nvarying highp vec3 vs_TEXCOORD2;\nvarying highp vec3 vs_TEXCOORD3;\nvarying highp vec3 vs_TEXCOORD4;\nvarying highp vec3 vs_TEXCOORD5;\nvarying mediump vec4 vs_COLOR0;\nvarying highp vec3 vs_TEXCOORD7;\nvarying highp vec2 vs_TEXCOORD8;\nvec3 u_xlat0;\nint u_xlati0;\nvec4 u_xlat1;\nvec4 u_xlat2;\nvec4 u_xlat3;\nvec3 u_xlat4;\nfloat u_xlat5;\nint u_xlati5;\nfloat u_xlat7;\nfloat u_xlat12;\nfloat u_xlat15;\nbool u_xlatb15;\nvoid main()\n{\n    u_xlat0.xy = in_POSITION0.xy + vec2(_VertexOffsetX, _VertexOffsetY);\n    u_xlat1 = u_xlat0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];\n    u_xlat1 = hlslcc_mtx4x4unity_ObjectToWorld[0] * u_xlat0.xxxx + u_xlat1;\n    u_xlat1 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat1;\n    u_xlat2 = u_xlat1 + hlslcc_mtx4x4unity_ObjectToWorld[3];\n    u_xlat3 = u_xlat2.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];\n    u_xlat3 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat2.xxxx + u_xlat3;\n    u_xlat3 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat2.zzzz + u_xlat3;\n    gl_Position = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat2.wwww + u_xlat3;\n    u_xlat15 = in_TEXCOORD1.x * 0.000244140625;\n    u_xlat3.x = floor(u_xlat15);\n    u_xlat3.y = (-u_xlat3.x) * 4096.0 + in_TEXCOORD1.x;\n    u_xlat3.xy = u_xlat3.xy * vec2(0.001953125, 0.001953125);\n    vs_TEXCOORD0.zw = u_xlat3.xy * _FaceTex_ST.xy + _FaceTex_ST.zw;\n    vs_TEXCOORD1.xy = u_xlat3.xy * _OutlineTex_ST.xy + _OutlineTex_ST.zw;\n    vs_TEXCOORD0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;\n    u_xlat15 = u_xlat2.y * hlslcc_mtx4x4unity_MatrixVP[1].w;\n    u_xlat15 = hlslcc_mtx4x4unity_MatrixVP[0].w * u_xlat2.x + u_xlat15;\n    u_xlat15 = hlslcc_mtx4x4unity_MatrixVP[2].w * u_xlat2.z + u_xlat15;\n    u_xlat15 = hlslcc_mtx4x4unity_MatrixVP[3].w * u_xlat2.w + u_xlat15;\n    u_xlat2.xy = _ScreenParams.yy * hlslcc_mtx4x4glstate_matrix_projection[1].xy;\n    u_xlat2.xy = hlslcc_mtx4x4glstate_matrix_projection[0].xy * _ScreenParams.xx + u_xlat2.xy;\n    u_xlat2.xy = u_xlat2.xy * vec2(_ScaleX, _ScaleY);\n    u_xlat2.xy = vec2(u_xlat15) / u_xlat2.xy;\n    u_xlat15 = dot(u_xlat2.xy, u_xlat2.xy);\n    u_xlat15 = inversesqrt(u_xlat15);\n    u_xlat2.x = abs(in_TEXCOORD1.y) * _GradientScale;\n    u_xlat7 = _Sharpness + 1.0;\n    u_xlat2.x = u_xlat7 * u_xlat2.x;\n    u_xlat7 = u_xlat15 * u_xlat2.x;\n    u_xlat12 = (-_PerspectiveFilter) + 1.0;\n    u_xlat7 = u_xlat12 * u_xlat7;\n    u_xlat15 = u_xlat15 * u_xlat2.x + (-u_xlat7);\n    u_xlat2.xzw = _WorldSpaceCameraPos.yyy * hlslcc_mtx4x4unity_WorldToObject[1].xyz;\n    u_xlat2.xzw = hlslcc_mtx4x4unity_WorldToObject[0].xyz * _WorldSpaceCameraPos.xxx + u_xlat2.xzw;\n    u_xlat2.xzw = hlslcc_mtx4x4unity_WorldToObject[2].xyz * _WorldSpaceCameraPos.zzz + u_xlat2.xzw;\n    u_xlat2.xzw = u_xlat2.xzw + hlslcc_mtx4x4unity_WorldToObject[3].xyz;\n    u_xlat0.z = in_POSITION0.z;\n    u_xlat0.xyz = (-u_xlat0.xyz) + u_xlat2.xzw;\n    u_xlat0.x = dot(in_NORMAL0.xyz, u_xlat0.xyz);\n    u_xlati5 = int((0.0<u_xlat0.x) ? -1 : 0);\n    u_xlati0 = int((u_xlat0.x<0.0) ? -1 : 0);\n    u_xlati0 = (-u_xlati5) + u_xlati0;\n    u_xlat0.x = float(u_xlati0);\n    u_xlat0.xyz = u_xlat0.xxx * in_NORMAL0.xyz;\n    u_xlat3.y = dot(u_xlat0.xyz, hlslcc_mtx4x4unity_WorldToObject[0].xyz);\n    u_xlat3.z = dot(u_xlat0.xyz, hlslcc_mtx4x4unity_WorldToObject[1].xyz);\n    u_xlat3.x = dot(u_xlat0.xyz, hlslcc_mtx4x4unity_WorldToObject[2].xyz);\n    u_xlat0.x = dot(u_xlat3.xyz, u_xlat3.xyz);\n    u_xlat0.x = inversesqrt(u_xlat0.x);\n    u_xlat0.xyz = u_xlat0.xxx * u_xlat3.xyz;\n    u_xlat2.xzw = hlslcc_mtx4x4unity_ObjectToWorld[3].xyz * in_POSITION0.www + u_xlat1.xyz;\n    u_xlat1 = hlslcc_mtx4x4unity_ObjectToWorld[3] * in_POSITION0.wwww + u_xlat1;\n    u_xlat3.xyz = (-u_xlat2.xzw) + _WorldSpaceCameraPos.xyz;\n    vs_TEXCOORD5.xyz = u_xlat2.xzw;\n    u_xlat2.x = dot(u_xlat3.xyz, u_xlat3.xyz);\n    u_xlat2.x = inversesqrt(u_xlat2.x);\n    u_xlat2.xzw = u_xlat2.xxx * u_xlat3.xyz;\n    u_xlat2.x = dot(u_xlat0.yzx, u_xlat2.xzw);\n    vs_TEXCOORD6.y = abs(u_xlat2.x) * u_xlat15 + u_xlat7;\n    u_xlatb15 = 0.0>=in_TEXCOORD1.y;\n    u_xlat15 = u_xlatb15 ? 1.0 : float(0.0);\n    u_xlat2.x = (-_WeightNormal) + _WeightBold;\n    u_xlat15 = u_xlat15 * u_xlat2.x + _WeightNormal;\n    u_xlat15 = u_xlat15 * 0.25 + _FaceDilate;\n    u_xlat15 = u_xlat15 * _ScaleRatioA;\n    vs_TEXCOORD6.x = u_xlat15 * 0.5;\n    vs_TEXCOORD2.z = u_xlat0.y;\n    u_xlat2.xyz = in_TANGENT0.yyy * hlslcc_mtx4x4unity_ObjectToWorld[1].yzx;\n    u_xlat2.xyz = hlslcc_mtx4x4unity_ObjectToWorld[0].yzx * in_TANGENT0.xxx + u_xlat2.xyz;\n    u_xlat2.xyz = hlslcc_mtx4x4unity_ObjectToWorld[2].yzx * in_TANGENT0.zzz + u_xlat2.xyz;\n    u_xlat15 = dot(u_xlat2.xyz, u_xlat2.xyz);\n    u_xlat15 = inversesqrt(u_xlat15);\n    u_xlat2.xyz = vec3(u_xlat15) * u_xlat2.xyz;\n    u_xlat4.xyz = u_xlat0.xyz * u_xlat2.xyz;\n    u_xlat4.xyz = u_xlat0.zxy * u_xlat2.yzx + (-u_xlat4.xyz);\n    u_xlat5 = in_TANGENT0.w * unity_WorldTransformParams.w;\n    u_xlat4.xyz = vec3(u_xlat5) * u_xlat4.xyz;\n    vs_TEXCOORD2.y = u_xlat4.x;\n    vs_TEXCOORD2.x = u_xlat2.z;\n    vs_TEXCOORD3.z = u_xlat0.z;\n    vs_TEXCOORD4.z = u_xlat0.x;\n    vs_TEXCOORD3.x = u_xlat2.x;\n    vs_TEXCOORD4.x = u_xlat2.y;\n    vs_TEXCOORD3.y = u_xlat4.y;\n    vs_TEXCOORD4.y = u_xlat4.z;\n    vs_COLOR0 = in_COLOR0;\n    u_xlat0.xyz = u_xlat3.yyy * hlslcc_mtx4x4_EnvMatrix[1].xyz;\n    u_xlat0.xyz = hlslcc_mtx4x4_EnvMatrix[0].xyz * u_xlat3.xxx + u_xlat0.xyz;\n    vs_TEXCOORD7.xyz = hlslcc_mtx4x4_EnvMatrix[2].xyz * u_xlat3.zzz + u_xlat0.xyz;\n    u_xlat0.xy = u_xlat1.yy * hlslcc_mtx4x4unity_WorldToLight[1].xy;\n    u_xlat0.xy = hlslcc_mtx4x4unity_WorldToLight[0].xy * u_xlat1.xx + u_xlat0.xy;\n    u_xlat0.xy = hlslcc_mtx4x4unity_WorldToLight[2].xy * u_xlat1.zz + u_xlat0.xy;\n    vs_TEXCOORD8.xy = hlslcc_mtx4x4unity_WorldToLight[3].xy * u_xlat1.ww + u_xlat0.xy;\n    return;\n}\n\n","\n#version 100\n\n#ifdef GL_FRAGMENT_PRECISION_HIGH\n    precision highp float;\n#else\n    precision mediump float;\n#endif\nprecision highp int;\nuniform \tvec4 _Time;\nuniform \tvec3 _WorldSpaceCameraPos;\nuniform \tmediump vec4 _WorldSpaceLightPos0;\nuniform \tmediump vec4 _LightColor0;\nuniform \tmediump vec4 _SpecColor;\nuniform \tvec4 hlslcc_mtx4x4unity_WorldToLight[4];\nuniform \tfloat _FaceUVSpeedX;\nuniform \tfloat _FaceUVSpeedY;\nuniform \tmediump vec4 _FaceColor;\nuniform \tfloat _OutlineSoftness;\nuniform \tfloat _OutlineUVSpeedX;\nuniform \tfloat _OutlineUVSpeedY;\nuniform \tmediump vec4 _OutlineColor;\nuniform \tfloat _OutlineWidth;\nuniform \tfloat _Bevel;\nuniform \tfloat _BevelOffset;\nuniform \tfloat _BevelWidth;\nuniform \tfloat _BevelClamp;\nuniform \tfloat _BevelRoundness;\nuniform \tfloat _BumpOutline;\nuniform \tfloat _BumpFace;\nuniform \tfloat _ShaderFlags;\nuniform \tfloat _ScaleRatioA;\nuniform \tfloat _TextureWidth;\nuniform \tfloat _TextureHeight;\nuniform \tfloat _GradientScale;\nuniform \tmediump float _FaceShininess;\nuniform \tmediump float _OutlineShininess;\nuniform lowp sampler2D _MainTex;\nuniform lowp sampler2D _FaceTex;\nuniform lowp sampler2D _OutlineTex;\nuniform lowp sampler2D _BumpMap;\nuniform highp sampler2D _LightTexture0;\nvarying highp vec4 vs_TEXCOORD0;\nvarying highp vec2 vs_TEXCOORD1;\nvarying highp vec2 vs_TEXCOORD6;\nvarying highp vec3 vs_TEXCOORD2;\nvarying highp vec3 vs_TEXCOORD3;\nvarying highp vec3 vs_TEXCOORD4;\nvarying highp vec3 vs_TEXCOORD5;\nvarying mediump vec4 vs_COLOR0;\n#define SV_Target0 gl_FragData[0]\nvec4 u_xlat0;\nvec4 u_xlat1;\nmediump vec4 u_xlat16_1;\nvec4 u_xlat2;\nmediump vec4 u_xlat16_2;\nlowp vec4 u_xlat10_2;\nvec2 u_xlat3;\nmediump vec4 u_xlat16_3;\nlowp vec4 u_xlat10_3;\nmediump vec4 u_xlat16_4;\nvec4 u_xlat5;\nvec4 u_xlat6;\nmediump vec4 u_xlat16_7;\nvec2 u_xlat8;\nvec3 u_xlat9;\nbool u_xlatb9;\nfloat u_xlat10;\nmediump vec3 u_xlat16_12;\nlowp vec2 u_xlat10_13;\nbool u_xlatb17;\nfloat u_xlat24;\nlowp float u_xlat10_24;\nmediump float u_xlat16_28;\nfloat u_xlat29;\nvoid main()\n{\n    u_xlat0.x = vs_TEXCOORD6.x + _BevelOffset;\n    u_xlat1.xy = vec2(1.0, 1.0) / vec2(_TextureWidth, _TextureHeight);\n    u_xlat1.z = 0.0;\n    u_xlat2 = (-u_xlat1.xzzy) + vs_TEXCOORD0.xyxy;\n    u_xlat1 = u_xlat1.xzzy + vs_TEXCOORD0.xyxy;\n    u_xlat10_3.x = texture2D(_MainTex, u_xlat2.xy).w;\n    u_xlat10_3.z = texture2D(_MainTex, u_xlat2.zw).w;\n    u_xlat10_3.y = texture2D(_MainTex, u_xlat1.xy).w;\n    u_xlat10_3.w = texture2D(_MainTex, u_xlat1.zw).w;\n    u_xlat0 = u_xlat0.xxxx + u_xlat10_3;\n    u_xlat0 = u_xlat0 + vec4(-0.5, -0.5, -0.5, -0.5);\n    u_xlat1.x = _BevelWidth + _OutlineWidth;\n    u_xlat1.x = max(u_xlat1.x, 0.00999999978);\n    u_xlat0 = u_xlat0 / u_xlat1.xxxx;\n    u_xlat1.x = u_xlat1.x * _Bevel;\n    u_xlat1.x = u_xlat1.x * _GradientScale;\n    u_xlat1.x = u_xlat1.x * -2.0;\n    u_xlat0 = u_xlat0 + vec4(0.5, 0.5, 0.5, 0.5);\n    u_xlat0 = clamp(u_xlat0, 0.0, 1.0);\n    u_xlat2 = u_xlat0 * vec4(2.0, 2.0, 2.0, 2.0) + vec4(-1.0, -1.0, -1.0, -1.0);\n    u_xlat2 = -abs(u_xlat2) + vec4(1.0, 1.0, 1.0, 1.0);\n    u_xlat9.x = _ShaderFlags * 0.5;\n    u_xlatb17 = u_xlat9.x>=(-u_xlat9.x);\n    u_xlat9.x = fract(abs(u_xlat9.x));\n    u_xlat9.x = (u_xlatb17) ? u_xlat9.x : (-u_xlat9.x);\n    u_xlatb9 = u_xlat9.x>=0.5;\n    u_xlat0 = (bool(u_xlatb9)) ? u_xlat2 : u_xlat0;\n    u_xlat2 = u_xlat0 * vec4(1.57079601, 1.57079601, 1.57079601, 1.57079601);\n    u_xlat2 = sin(u_xlat2);\n    u_xlat2 = (-u_xlat0) + u_xlat2;\n    u_xlat0 = vec4(vec4(_BevelRoundness, _BevelRoundness, _BevelRoundness, _BevelRoundness)) * u_xlat2 + u_xlat0;\n    u_xlat9.x = (-_BevelClamp) + 1.0;\n    u_xlat0 = min(u_xlat0, u_xlat9.xxxx);\n    u_xlat0.xz = u_xlat1.xx * u_xlat0.xz;\n    u_xlat0.yz = u_xlat0.wy * u_xlat1.xx + (-u_xlat0.zx);\n    u_xlat0.x = float(-1.0);\n    u_xlat0.w = float(1.0);\n    u_xlat1.x = dot(u_xlat0.xy, u_xlat0.xy);\n    u_xlat1.x = inversesqrt(u_xlat1.x);\n    u_xlat24 = dot(u_xlat0.zw, u_xlat0.zw);\n    u_xlat24 = inversesqrt(u_xlat24);\n    u_xlat2.x = u_xlat24 * u_xlat0.z;\n    u_xlat2.yz = vec2(u_xlat24) * vec2(1.0, 0.0);\n    u_xlat0.z = 0.0;\n    u_xlat0.xyz = u_xlat1.xxx * u_xlat0.xyz;\n    u_xlat1.xyz = u_xlat0.xyz * u_xlat2.xyz;\n    u_xlat0.xyz = u_xlat2.zxy * u_xlat0.yzx + (-u_xlat1.xyz);\n    u_xlat10_24 = texture2D(_MainTex, vs_TEXCOORD0.xy).w;\n    u_xlat24 = (-u_xlat10_24) + 0.5;\n    u_xlat24 = u_xlat24 + (-vs_TEXCOORD6.x);\n    u_xlat24 = u_xlat24 * vs_TEXCOORD6.y + 0.5;\n    u_xlat1.x = _OutlineWidth * _ScaleRatioA;\n    u_xlat1.x = u_xlat1.x * vs_TEXCOORD6.y;\n    u_xlat16_4.x = u_xlat1.x * 0.5 + u_xlat24;\n    u_xlat16_4.x = clamp(u_xlat16_4.x, 0.0, 1.0);\n    u_xlat16_12.x = min(u_xlat1.x, 1.0);\n    u_xlat16_12.x = sqrt(u_xlat16_12.x);\n    u_xlat16_4.x = u_xlat16_12.x * u_xlat16_4.x;\n    u_xlat9.xy = vec2(_OutlineUVSpeedX, _OutlineUVSpeedY) * _Time.yy + vs_TEXCOORD1.xy;\n    u_xlat10_2 = texture2D(_OutlineTex, u_xlat9.xy);\n    u_xlat9.xyz = u_xlat10_2.xyz * _OutlineColor.xyz;\n    u_xlat2.x = vs_COLOR0.w * _OutlineColor.w;\n    u_xlat10 = u_xlat10_2.w * u_xlat2.x;\n    u_xlat3.xy = vec2(_FaceUVSpeedX, _FaceUVSpeedY) * _Time.yy + vs_TEXCOORD0.zw;\n    u_xlat10_3 = texture2D(_FaceTex, u_xlat3.xy);\n    u_xlat5 = vs_COLOR0 * _FaceColor;\n    u_xlat6 = u_xlat10_3 * u_xlat5;\n    u_xlat16_12.xyz = u_xlat6.www * u_xlat6.xyz;\n    u_xlat16_7.xyz = u_xlat9.xyz * vec3(u_xlat10) + (-u_xlat16_12.xyz);\n    u_xlat16_7.w = u_xlat2.x * u_xlat10_2.w + (-u_xlat6.w);\n    u_xlat16_2 = u_xlat16_4.xxxx * u_xlat16_7;\n    u_xlat16_3.w = u_xlat5.w * u_xlat10_3.w + u_xlat16_2.w;\n    u_xlat16_3.xyz = u_xlat6.xyz * u_xlat6.www + u_xlat16_2.xyz;\n    u_xlat16_4.x = (-u_xlat1.x) * 0.5 + u_xlat24;\n    u_xlat24 = u_xlat1.x * 0.5 + u_xlat24;\n    u_xlat24 = clamp(u_xlat24, 0.0, 1.0);\n    u_xlat1.x = _OutlineSoftness * _ScaleRatioA;\n    u_xlat9.x = u_xlat1.x * vs_TEXCOORD6.y;\n    u_xlat16_12.x = u_xlat1.x * vs_TEXCOORD6.y + 1.0;\n    u_xlat16_4.x = u_xlat9.x * 0.5 + u_xlat16_4.x;\n    u_xlat16_4.x = u_xlat16_4.x / u_xlat16_12.x;\n    u_xlat16_4.x = clamp(u_xlat16_4.x, 0.0, 1.0);\n    u_xlat16_4.x = (-u_xlat16_4.x) + 1.0;\n    u_xlat16_1 = u_xlat16_3 * u_xlat16_4.xxxx;\n    u_xlat5.x = (-_BumpFace) + _BumpOutline;\n    u_xlat5.x = u_xlat24 * u_xlat5.x + _BumpFace;\n    u_xlat10_13.xy = texture2D(_BumpMap, vs_TEXCOORD0.zw).yw;\n    u_xlat16_4.xy = u_xlat10_13.yx * vec2(2.0, 2.0) + vec2(-1.0, -1.0);\n    u_xlat16_28 = dot(u_xlat16_4.xy, u_xlat16_4.xy);\n    u_xlat16_28 = min(u_xlat16_28, 1.0);\n    u_xlat16_28 = (-u_xlat16_28) + 1.0;\n    u_xlat16_4.z = sqrt(u_xlat16_28);\n    u_xlat5.xyz = u_xlat16_4.xyz * u_xlat5.xxx + vec3(-0.0, -0.0, -1.0);\n    u_xlat5.xyz = u_xlat16_1.www * u_xlat5.xyz + vec3(0.0, 0.0, 1.0);\n    u_xlat0.xyz = u_xlat0.xyz + (-u_xlat5.xyz);\n    u_xlat5.x = dot(u_xlat0.xyz, u_xlat0.xyz);\n    u_xlat5.x = inversesqrt(u_xlat5.x);\n    u_xlat0.xyz = u_xlat0.xyz * u_xlat5.xxx;\n    u_xlat16_4.x = dot(vs_TEXCOORD2.xyz, (-u_xlat0.xyz));\n    u_xlat16_4.y = dot(vs_TEXCOORD3.xyz, (-u_xlat0.xyz));\n    u_xlat16_4.z = dot(vs_TEXCOORD4.xyz, (-u_xlat0.xyz));\n    u_xlat0.x = dot(u_xlat16_4.xyz, u_xlat16_4.xyz);\n    u_xlat0.x = inversesqrt(u_xlat0.x);\n    u_xlat0.xyz = u_xlat0.xxx * u_xlat16_4.xyz;\n    u_xlat5.xyz = (-vs_TEXCOORD5.xyz) + _WorldSpaceCameraPos.xyz;\n    u_xlat29 = dot(u_xlat5.xyz, u_xlat5.xyz);\n    u_xlat29 = inversesqrt(u_xlat29);\n    u_xlat16_4.xyz = u_xlat5.xyz * vec3(u_xlat29) + _WorldSpaceLightPos0.xyz;\n    u_xlat16_28 = dot(u_xlat16_4.xyz, u_xlat16_4.xyz);\n    u_xlat16_28 = inversesqrt(u_xlat16_28);\n    u_xlat16_4.xyz = vec3(u_xlat16_28) * u_xlat16_4.xyz;\n    u_xlat16_4.x = dot(u_xlat0.xyz, u_xlat16_4.xyz);\n    u_xlat16_4.y = dot(u_xlat0.xyz, _WorldSpaceLightPos0.xyz);\n    u_xlat16_4.xy = max(u_xlat16_4.xy, vec2(0.0, 0.0));\n    u_xlat0.x = log2(u_xlat16_4.x);\n    u_xlat8.x = (-_FaceShininess) + _OutlineShininess;\n    u_xlat8.x = u_xlat24 * u_xlat8.x + _FaceShininess;\n    u_xlat16_4.x = u_xlat8.x * 128.0;\n    u_xlat0.x = u_xlat0.x * u_xlat16_4.x;\n    u_xlat0.x = exp2(u_xlat0.x);\n    u_xlat8.xy = vs_TEXCOORD5.yy * hlslcc_mtx4x4unity_WorldToLight[1].xy;\n    u_xlat8.xy = hlslcc_mtx4x4unity_WorldToLight[0].xy * vs_TEXCOORD5.xx + u_xlat8.xy;\n    u_xlat8.xy = hlslcc_mtx4x4unity_WorldToLight[2].xy * vs_TEXCOORD5.zz + u_xlat8.xy;\n    u_xlat8.xy = u_xlat8.xy + hlslcc_mtx4x4unity_WorldToLight[3].xy;\n    u_xlat8.x = texture2D(_LightTexture0, u_xlat8.xy).w;\n    u_xlat16_4.xzw = u_xlat8.xxx * _LightColor0.xyz;\n    u_xlat16_7.xyz = u_xlat16_4.xzw * _SpecColor.xyz;\n    u_xlat0.xyz = u_xlat0.xxx * u_xlat16_7.xyz;\n    u_xlat24 = max(u_xlat16_1.w, 9.99999975e-05);\n    u_xlat5.xyz = u_xlat16_1.xyz / vec3(u_xlat24);\n    SV_Target0.w = u_xlat16_1.w;\n    u_xlat16_4.xzw = u_xlat16_4.xzw * u_xlat5.xyz;\n    u_xlat0.xyz = u_xlat16_4.xzw * u_xlat16_4.yyy + u_xlat0.xyz;\n    SV_Target0.xyz = u_xlat0.xyz;\n    return;\n}\n\n",0,0,4,1,0,["DIRECTIONAL_COOKIE"],[["IGNOREPROJECTOR","true"],["LIGHTMODE","FORWARDADD"],["QUEUE","Transparent"],["RenderType","Transparent"]]]],["DIRECTIONAL","DIRECTIONAL_COOKIE","FOG_EXP","FOG_EXP2","FOG_LINEAR","GLOW_ON","POINT","POINT_COOKIE","SPOT","STEREO_CUBEMAP_RENDER_ON","STEREO_INSTANCING_ON","STEREO_MULTIVIEW_ON","UNITY_SINGLE_PASS_STEREO","__"],[[["__","GLOW_ON"]],[["__","FOG_LINEAR","FOG_EXP","FOG_EXP2"]],[["POINT"]],[["DIRECTIONAL"]],[["SPOT"]],[["POINT_COOKIE"]],[["DIRECTIONAL_COOKIE"]]],5,0,5,0,1,0,1,[["IGNOREPROJECTOR","true"],["LIGHTMODE","FORWARDADD"],["QUEUE","Transparent"],["RenderType","Transparent"]],null,"",227,-1],["TextMeshPro/Distance Field (Surface)",[[0,"\n#version 100\n\nuniform \tvec4 unity_LightShadowBias;\nuniform \tvec4 hlslcc_mtx4x4unity_ObjectToWorld[4];\nuniform \tvec4 hlslcc_mtx4x4unity_MatrixVP[4];\nuniform \tvec4 _MainTex_ST;\nuniform \tvec4 _OutlineTex_ST;\nuniform \tfloat _OutlineWidth;\nuniform \tfloat _FaceDilate;\nuniform \tfloat _ScaleRatioA;\nattribute highp vec4 in_POSITION0;\nattribute highp vec4 in_TEXCOORD0;\nvarying highp vec2 vs_TEXCOORD1;\nvarying highp vec2 vs_TEXCOORD3;\nvarying highp float vs_TEXCOORD2;\nvec4 u_xlat0;\nvec4 u_xlat1;\nfloat u_xlat4;\nvoid main()\n{\n    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];\n    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;\n    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;\n    u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];\n    u_xlat1 = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];\n    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat0.xxxx + u_xlat1;\n    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat0.zzzz + u_xlat1;\n    u_xlat0 = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat0.wwww + u_xlat1;\n    u_xlat1.x = unity_LightShadowBias.x / u_xlat0.w;\n    u_xlat1.x = clamp(u_xlat1.x, 0.0, 1.0);\n    u_xlat4 = u_xlat0.z + u_xlat1.x;\n    u_xlat1.x = max((-u_xlat0.w), u_xlat4);\n    gl_Position.xyw = u_xlat0.xyw;\n    u_xlat0.x = (-u_xlat4) + u_xlat1.x;\n    gl_Position.z = unity_LightShadowBias.y * u_xlat0.x + u_xlat4;\n    vs_TEXCOORD1.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;\n    vs_TEXCOORD3.xy = in_TEXCOORD0.xy * _OutlineTex_ST.xy + _OutlineTex_ST.zw;\n    u_xlat0.x = (-_OutlineWidth) * _ScaleRatioA + 1.0;\n    u_xlat0.x = (-_FaceDilate) * _ScaleRatioA + u_xlat0.x;\n    vs_TEXCOORD2 = u_xlat0.x * 0.5;\n    return;\n}\n\n","\n#version 100\n\n#ifdef GL_FRAGMENT_PRECISION_HIGH\n    precision highp float;\n#else\n    precision mediump float;\n#endif\nprecision highp int;\nuniform lowp sampler2D _MainTex;\nvarying highp vec2 vs_TEXCOORD1;\nvarying highp float vs_TEXCOORD2;\n#define SV_Target0 gl_FragData[0]\nfloat u_xlat0;\nlowp float u_xlat10_0;\nbool u_xlatb0;\nvoid main()\n{\n    u_xlat10_0 = texture2D(_MainTex, vs_TEXCOORD1.xy).w;\n    u_xlat0 = u_xlat10_0 + (-vs_TEXCOORD2);\n    u_xlatb0 = u_xlat0<0.0;\n    if(u_xlatb0){discard;}\n    SV_Target0 = vec4(0.0, 0.0, 0.0, 0.0);\n    return;\n}\n\n",0,0,0,2,0,["SHADOWS_DEPTH"],[["IGNOREPROJECTOR","true"],["LIGHTMODE","SHADOWCASTER"],["QUEUE","Transparent"],["RenderType","Transparent"],["SHADOWSUPPORT","true"]]]],["SHADOWS_CUBE","SHADOWS_DEPTH","STEREO_CUBEMAP_RENDER_ON","STEREO_INSTANCING_ON","STEREO_MULTIVIEW_ON","UNITY_SINGLE_PASS_STEREO"],[[["SHADOWS_DEPTH"]],[["SHADOWS_CUBE"]]],2,0,5,0,2,0,2,[["IGNOREPROJECTOR","true"],["LIGHTMODE","SHADOWCASTER"],["QUEUE","Transparent"],["RenderType","Transparent"],["SHADOWSUPPORT","true"]],null,"",33,-1]],[["IGNOREPROJECTOR","true"],["QUEUE","Transparent"],["RenderType","Transparent"]],0]],0,432,"Assets/TextMesh Pro/Shaders/TMP_SDF-Surface.shader",["DIRECTIONAL","FOG_EXP","FOG_EXP2","FOG_LINEAR","GLOW_ON","LIGHTPROBE_SH","VERTEXLIGHT_ON","DIRECTIONAL_COOKIE","POINT","POINT_COOKIE","SPOT","SHADOWS_DEPTH","INSTANCING_ON","STEREO_CUBEMAP_RENDER_ON","STEREO_INSTANCING_ON","STEREO_MULTIVIEW_ON","UNITY_SINGLE_PASS_STEREO","__","SHADOWS_CUBE"],null,null,[],5],[[[0,[["TextMeshPro/Distance Field Overlay",[[0,"\n#version 100\n\nuniform \tvec3 _WorldSpaceCameraPos;\nuniform \tvec4 _ScreenParams;\nuniform \tvec4 hlslcc_mtx4x4unity_ObjectToWorld[4];\nuniform \tvec4 hlslcc_mtx4x4unity_WorldToObject[4];\nuniform \tvec4 hlslcc_mtx4x4glstate_matrix_projection[4];\nuniform \tvec4 hlslcc_mtx4x4unity_MatrixVP[4];\nuniform \tfloat _FaceDilate;\nuniform \tfloat _OutlineSoftness;\nuniform \tfloat _OutlineWidth;\nuniform \tvec4 hlslcc_mtx4x4_EnvMatrix[4];\nuniform \tfloat _WeightNormal;\nuniform \tfloat _WeightBold;\nuniform \tfloat _ScaleRatioA;\nuniform \tfloat _VertexOffsetX;\nuniform \tfloat _VertexOffsetY;\nuniform \tvec4 _ClipRect;\nuniform \tfloat _MaskSoftnessX;\nuniform \tfloat _MaskSoftnessY;\nuniform \tfloat _GradientScale;\nuniform \tfloat _ScaleX;\nuniform \tfloat _ScaleY;\nuniform \tfloat _PerspectiveFilter;\nuniform \tfloat _Sharpness;\nuniform \tvec4 _FaceTex_ST;\nuniform \tvec4 _OutlineTex_ST;\nattribute highp vec4 in_POSITION0;\nattribute highp vec3 in_NORMAL0;\nattribute mediump vec4 in_COLOR0;\nattribute highp vec2 in_TEXCOORD0;\nattribute highp vec2 in_TEXCOORD1;\nvarying mediump vec4 vs_COLOR0;\nvarying highp vec2 vs_TEXCOORD0;\nvarying highp vec4 vs_TEXCOORD1;\nvarying highp vec4 vs_TEXCOORD2;\nvarying highp vec3 vs_TEXCOORD3;\nvarying highp vec4 vs_TEXCOORD5;\nvec3 u_xlat0;\nvec4 u_xlat1;\nvec4 u_xlat2;\nvec4 u_xlat3;\nvec3 u_xlat6;\nvec2 u_xlat8;\nbool u_xlatb8;\nfloat u_xlat12;\nbool u_xlatb12;\nfloat u_xlat13;\nvoid main()\n{\n    u_xlat0.xy = in_POSITION0.xy + vec2(_VertexOffsetX, _VertexOffsetY);\n    u_xlat1 = u_xlat0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];\n    u_xlat1 = hlslcc_mtx4x4unity_ObjectToWorld[0] * u_xlat0.xxxx + u_xlat1;\n    u_xlat1 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat1;\n    u_xlat2 = u_xlat1 + hlslcc_mtx4x4unity_ObjectToWorld[3];\n    u_xlat1.xyz = hlslcc_mtx4x4unity_ObjectToWorld[3].xyz * in_POSITION0.www + u_xlat1.xyz;\n    u_xlat1.xyz = (-u_xlat1.xyz) + _WorldSpaceCameraPos.xyz;\n    u_xlat3 = u_xlat2.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];\n    u_xlat3 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat2.xxxx + u_xlat3;\n    u_xlat3 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat2.zzzz + u_xlat3;\n    u_xlat2 = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat2.wwww + u_xlat3;\n    gl_Position = u_xlat2;\n    vs_COLOR0 = in_COLOR0;\n    vs_TEXCOORD0.xy = in_TEXCOORD0.xy;\n    u_xlat8.xy = _ScreenParams.yy * hlslcc_mtx4x4glstate_matrix_projection[1].xy;\n    u_xlat8.xy = hlslcc_mtx4x4glstate_matrix_projection[0].xy * _ScreenParams.xx + u_xlat8.xy;\n    u_xlat8.xy = abs(u_xlat8.xy) * vec2(_ScaleX, _ScaleY);\n    u_xlat8.xy = u_xlat2.ww / u_xlat8.xy;\n    u_xlat13 = dot(u_xlat8.xy, u_xlat8.xy);\n    u_xlat8.xy = vec2(_MaskSoftnessX, _MaskSoftnessY) * vec2(0.25, 0.25) + u_xlat8.xy;\n    vs_TEXCOORD2.zw = vec2(0.25, 0.25) / u_xlat8.xy;\n    u_xlat8.x = inversesqrt(u_xlat13);\n    u_xlat12 = abs(in_TEXCOORD1.y) * _GradientScale;\n    u_xlat13 = _Sharpness + 1.0;\n    u_xlat12 = u_xlat12 * u_xlat13;\n    u_xlat13 = u_xlat12 * u_xlat8.x;\n    u_xlat2.x = (-_PerspectiveFilter) + 1.0;\n    u_xlat2.x = abs(u_xlat13) * u_xlat2.x;\n    u_xlat8.x = u_xlat8.x * u_xlat12 + (-u_xlat2.x);\n    u_xlat3.x = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[0].xyz);\n    u_xlat3.y = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[1].xyz);\n    u_xlat3.z = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[2].xyz);\n    u_xlat12 = dot(u_xlat3.xyz, u_xlat3.xyz);\n    u_xlat12 = inversesqrt(u_xlat12);\n    u_xlat6.xyz = vec3(u_xlat12) * u_xlat3.xyz;\n    u_xlat12 = dot(u_xlat1.xyz, u_xlat1.xyz);\n    u_xlat12 = inversesqrt(u_xlat12);\n    u_xlat3.xyz = vec3(u_xlat12) * u_xlat1.xyz;\n    u_xlat12 = dot(u_xlat6.xyz, u_xlat3.xyz);\n    u_xlat8.x = abs(u_xlat12) * u_xlat8.x + u_xlat2.x;\n    u_xlatb12 = hlslcc_mtx4x4glstate_matrix_projection[3].w==0.0;\n    u_xlat6.x = (u_xlatb12) ? u_xlat8.x : u_xlat13;\n    u_xlatb8 = 0.0>=in_TEXCOORD1.y;\n    u_xlat8.x = u_xlatb8 ? 1.0 : float(0.0);\n    u_xlat12 = (-_WeightNormal) + _WeightBold;\n    u_xlat8.x = u_xlat8.x * u_xlat12 + _WeightNormal;\n    u_xlat8.x = u_xlat8.x * 0.25 + _FaceDilate;\n    u_xlat8.x = u_xlat8.x * _ScaleRatioA;\n    u_xlat6.z = u_xlat8.x * 0.5;\n    vs_TEXCOORD1.yw = u_xlat6.xz;\n    u_xlat12 = 0.5 / u_xlat6.x;\n    u_xlat13 = (-_OutlineWidth) * _ScaleRatioA + 1.0;\n    u_xlat13 = (-_OutlineSoftness) * _ScaleRatioA + u_xlat13;\n    u_xlat13 = u_xlat13 * 0.5 + (-u_xlat12);\n    vs_TEXCOORD1.x = (-u_xlat8.x) * 0.5 + u_xlat13;\n    u_xlat8.x = (-u_xlat8.x) * 0.5 + 0.5;\n    vs_TEXCOORD1.z = u_xlat12 + u_xlat8.x;\n    u_xlat2 = max(_ClipRect, vec4(-2e+10, -2e+10, -2e+10, -2e+10));\n    u_xlat2 = min(u_xlat2, vec4(2e+10, 2e+10, 2e+10, 2e+10));\n    u_xlat0.xy = u_xlat0.xy * vec2(2.0, 2.0) + (-u_xlat2.xy);\n    vs_TEXCOORD2.xy = (-u_xlat2.zw) + u_xlat0.xy;\n    u_xlat0.xyz = u_xlat1.yyy * hlslcc_mtx4x4_EnvMatrix[1].xyz;\n    u_xlat0.xyz = hlslcc_mtx4x4_EnvMatrix[0].xyz * u_xlat1.xxx + u_xlat0.xyz;\n    vs_TEXCOORD3.xyz = hlslcc_mtx4x4_EnvMatrix[2].xyz * u_xlat1.zzz + u_xlat0.xyz;\n    u_xlat0.x = in_TEXCOORD1.x * 0.000244140625;\n    u_xlat8.x = floor(u_xlat0.x);\n    u_xlat8.y = (-u_xlat8.x) * 4096.0 + in_TEXCOORD1.x;\n    u_xlat0.xy = u_xlat8.xy * vec2(0.001953125, 0.001953125);\n    vs_TEXCOORD5.xy = u_xlat0.xy * _FaceTex_ST.xy + _FaceTex_ST.zw;\n    vs_TEXCOORD5.zw = u_xlat0.xy * _OutlineTex_ST.xy + _OutlineTex_ST.zw;\n    return;\n}\n\n","\n#version 100\n\n#ifdef GL_FRAGMENT_PRECISION_HIGH\n    precision highp float;\n#else\n    precision mediump float;\n#endif\nprecision highp int;\nuniform \tvec4 _Time;\nuniform \tfloat _FaceUVSpeedX;\nuniform \tfloat _FaceUVSpeedY;\nuniform \tmediump vec4 _FaceColor;\nuniform \tfloat _OutlineSoftness;\nuniform \tfloat _OutlineUVSpeedX;\nuniform \tfloat _OutlineUVSpeedY;\nuniform \tmediump vec4 _OutlineColor;\nuniform \tfloat _OutlineWidth;\nuniform \tfloat _ScaleRatioA;\nuniform lowp sampler2D _MainTex;\nuniform lowp sampler2D _FaceTex;\nuniform lowp sampler2D _OutlineTex;\nvarying mediump vec4 vs_COLOR0;\nvarying highp vec2 vs_TEXCOORD0;\nvarying highp vec4 vs_TEXCOORD1;\nvarying highp vec4 vs_TEXCOORD5;\n#define SV_Target0 gl_FragData[0]\nvec3 u_xlat0;\nmediump vec4 u_xlat16_0;\nlowp vec4 u_xlat10_0;\nmediump float u_xlat16_1;\nvec4 u_xlat2;\nmediump vec4 u_xlat16_2;\nmediump vec3 u_xlat16_3;\nfloat u_xlat4;\nlowp vec4 u_xlat10_4;\nfloat u_xlat5;\nbool u_xlatb5;\nmediump float u_xlat16_6;\nfloat u_xlat9;\nmediump float u_xlat16_11;\nvoid main()\n{\n    u_xlat10_0.x = texture2D(_MainTex, vs_TEXCOORD0.xy).w;\n    u_xlat5 = u_xlat10_0.x + (-vs_TEXCOORD1.x);\n    u_xlat0.x = (-u_xlat10_0.x) + vs_TEXCOORD1.z;\n    u_xlatb5 = u_xlat5<0.0;\n    if(u_xlatb5){discard;}\n    u_xlat5 = _OutlineWidth * _ScaleRatioA;\n    u_xlat5 = u_xlat5 * vs_TEXCOORD1.y;\n    u_xlat16_1 = min(u_xlat5, 1.0);\n    u_xlat16_6 = u_xlat5 * 0.5;\n    u_xlat16_1 = sqrt(u_xlat16_1);\n    u_xlat16_11 = u_xlat0.x * vs_TEXCOORD1.y + u_xlat16_6;\n    u_xlat16_11 = clamp(u_xlat16_11, 0.0, 1.0);\n    u_xlat16_6 = u_xlat0.x * vs_TEXCOORD1.y + (-u_xlat16_6);\n    u_xlat16_1 = u_xlat16_1 * u_xlat16_11;\n    u_xlat0.xy = vec2(_OutlineUVSpeedX, _OutlineUVSpeedY) * _Time.yy + vs_TEXCOORD5.zw;\n    u_xlat10_0 = texture2D(_OutlineTex, u_xlat0.xy);\n    u_xlat2 = u_xlat10_0 * _OutlineColor;\n    u_xlat16_3.xyz = vs_COLOR0.xyz * _FaceColor.xyz;\n    u_xlat0.xy = vec2(_FaceUVSpeedX, _FaceUVSpeedY) * _Time.yy + vs_TEXCOORD5.xy;\n    u_xlat10_4 = texture2D(_FaceTex, u_xlat0.xy);\n    u_xlat0.xyz = u_xlat16_3.xyz * u_xlat10_4.xyz;\n    u_xlat4 = u_xlat10_4.w * _FaceColor.w;\n    u_xlat16_3.xyz = u_xlat0.xyz * vec3(u_xlat4);\n    u_xlat16_2.xyz = u_xlat2.xyz * u_xlat2.www + (-u_xlat16_3.xyz);\n    u_xlat16_2.w = _OutlineColor.w * u_xlat10_0.w + (-u_xlat4);\n    u_xlat16_2 = vec4(u_xlat16_1) * u_xlat16_2;\n    u_xlat16_0.xyz = u_xlat0.xyz * vec3(u_xlat4) + u_xlat16_2.xyz;\n    u_xlat16_0.w = _FaceColor.w * u_xlat10_4.w + u_xlat16_2.w;\n    u_xlat4 = _OutlineSoftness * _ScaleRatioA;\n    u_xlat9 = u_xlat4 * vs_TEXCOORD1.y;\n    u_xlat16_1 = u_xlat4 * vs_TEXCOORD1.y + 1.0;\n    u_xlat16_6 = u_xlat9 * 0.5 + u_xlat16_6;\n    u_xlat16_1 = u_xlat16_6 / u_xlat16_1;\n    u_xlat16_1 = clamp(u_xlat16_1, 0.0, 1.0);\n    u_xlat16_1 = (-u_xlat16_1) + 1.0;\n    u_xlat16_0 = u_xlat16_0 * vec4(u_xlat16_1);\n    SV_Target0 = u_xlat16_0 * vs_COLOR0.wwww;\n    return;\n}\n\n",0,0,0,0,0,[],[["IGNOREPROJECTOR","true"],["QUEUE","Overlay"],["RenderType","Transparent"]]],[0,"\n#version 100\n\nuniform \tvec3 _WorldSpaceCameraPos;\nuniform \tvec4 _ScreenParams;\nuniform \tvec4 hlslcc_mtx4x4unity_ObjectToWorld[4];\nuniform \tvec4 hlslcc_mtx4x4unity_WorldToObject[4];\nuniform \tvec4 hlslcc_mtx4x4glstate_matrix_projection[4];\nuniform \tvec4 hlslcc_mtx4x4unity_MatrixVP[4];\nuniform \tfloat _FaceDilate;\nuniform \tfloat _OutlineSoftness;\nuniform \tfloat _OutlineWidth;\nuniform \tvec4 hlslcc_mtx4x4_EnvMatrix[4];\nuniform \tfloat _WeightNormal;\nuniform \tfloat _WeightBold;\nuniform \tfloat _ScaleRatioA;\nuniform \tfloat _VertexOffsetX;\nuniform \tfloat _VertexOffsetY;\nuniform \tvec4 _ClipRect;\nuniform \tfloat _MaskSoftnessX;\nuniform \tfloat _MaskSoftnessY;\nuniform \tfloat _GradientScale;\nuniform \tfloat _ScaleX;\nuniform \tfloat _ScaleY;\nuniform \tfloat _PerspectiveFilter;\nuniform \tfloat _Sharpness;\nuniform \tvec4 _FaceTex_ST;\nuniform \tvec4 _OutlineTex_ST;\nattribute highp vec4 in_POSITION0;\nattribute highp vec3 in_NORMAL0;\nattribute mediump vec4 in_COLOR0;\nattribute highp vec2 in_TEXCOORD0;\nattribute highp vec2 in_TEXCOORD1;\nvarying mediump vec4 vs_COLOR0;\nvarying highp vec2 vs_TEXCOORD0;\nvarying highp vec4 vs_TEXCOORD1;\nvarying highp vec4 vs_TEXCOORD2;\nvarying highp vec3 vs_TEXCOORD3;\nvarying highp vec4 vs_TEXCOORD5;\nvec3 u_xlat0;\nvec4 u_xlat1;\nvec4 u_xlat2;\nvec4 u_xlat3;\nvec3 u_xlat6;\nvec2 u_xlat8;\nbool u_xlatb8;\nfloat u_xlat12;\nbool u_xlatb12;\nfloat u_xlat13;\nvoid main()\n{\n    u_xlat0.xy = in_POSITION0.xy + vec2(_VertexOffsetX, _VertexOffsetY);\n    u_xlat1 = u_xlat0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];\n    u_xlat1 = hlslcc_mtx4x4unity_ObjectToWorld[0] * u_xlat0.xxxx + u_xlat1;\n    u_xlat1 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat1;\n    u_xlat2 = u_xlat1 + hlslcc_mtx4x4unity_ObjectToWorld[3];\n    u_xlat1.xyz = hlslcc_mtx4x4unity_ObjectToWorld[3].xyz * in_POSITION0.www + u_xlat1.xyz;\n    u_xlat1.xyz = (-u_xlat1.xyz) + _WorldSpaceCameraPos.xyz;\n    u_xlat3 = u_xlat2.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];\n    u_xlat3 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat2.xxxx + u_xlat3;\n    u_xlat3 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat2.zzzz + u_xlat3;\n    u_xlat2 = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat2.wwww + u_xlat3;\n    gl_Position = u_xlat2;\n    vs_COLOR0 = in_COLOR0;\n    vs_TEXCOORD0.xy = in_TEXCOORD0.xy;\n    u_xlat8.xy = _ScreenParams.yy * hlslcc_mtx4x4glstate_matrix_projection[1].xy;\n    u_xlat8.xy = hlslcc_mtx4x4glstate_matrix_projection[0].xy * _ScreenParams.xx + u_xlat8.xy;\n    u_xlat8.xy = abs(u_xlat8.xy) * vec2(_ScaleX, _ScaleY);\n    u_xlat8.xy = u_xlat2.ww / u_xlat8.xy;\n    u_xlat13 = dot(u_xlat8.xy, u_xlat8.xy);\n    u_xlat8.xy = vec2(_MaskSoftnessX, _MaskSoftnessY) * vec2(0.25, 0.25) + u_xlat8.xy;\n    vs_TEXCOORD2.zw = vec2(0.25, 0.25) / u_xlat8.xy;\n    u_xlat8.x = inversesqrt(u_xlat13);\n    u_xlat12 = abs(in_TEXCOORD1.y) * _GradientScale;\n    u_xlat13 = _Sharpness + 1.0;\n    u_xlat12 = u_xlat12 * u_xlat13;\n    u_xlat13 = u_xlat12 * u_xlat8.x;\n    u_xlat2.x = (-_PerspectiveFilter) + 1.0;\n    u_xlat2.x = abs(u_xlat13) * u_xlat2.x;\n    u_xlat8.x = u_xlat8.x * u_xlat12 + (-u_xlat2.x);\n    u_xlat3.x = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[0].xyz);\n    u_xlat3.y = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[1].xyz);\n    u_xlat3.z = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[2].xyz);\n    u_xlat12 = dot(u_xlat3.xyz, u_xlat3.xyz);\n    u_xlat12 = inversesqrt(u_xlat12);\n    u_xlat6.xyz = vec3(u_xlat12) * u_xlat3.xyz;\n    u_xlat12 = dot(u_xlat1.xyz, u_xlat1.xyz);\n    u_xlat12 = inversesqrt(u_xlat12);\n    u_xlat3.xyz = vec3(u_xlat12) * u_xlat1.xyz;\n    u_xlat12 = dot(u_xlat6.xyz, u_xlat3.xyz);\n    u_xlat8.x = abs(u_xlat12) * u_xlat8.x + u_xlat2.x;\n    u_xlatb12 = hlslcc_mtx4x4glstate_matrix_projection[3].w==0.0;\n    u_xlat6.x = (u_xlatb12) ? u_xlat8.x : u_xlat13;\n    u_xlatb8 = 0.0>=in_TEXCOORD1.y;\n    u_xlat8.x = u_xlatb8 ? 1.0 : float(0.0);\n    u_xlat12 = (-_WeightNormal) + _WeightBold;\n    u_xlat8.x = u_xlat8.x * u_xlat12 + _WeightNormal;\n    u_xlat8.x = u_xlat8.x * 0.25 + _FaceDilate;\n    u_xlat8.x = u_xlat8.x * _ScaleRatioA;\n    u_xlat6.z = u_xlat8.x * 0.5;\n    vs_TEXCOORD1.yw = u_xlat6.xz;\n    u_xlat12 = 0.5 / u_xlat6.x;\n    u_xlat13 = (-_OutlineWidth) * _ScaleRatioA + 1.0;\n    u_xlat13 = (-_OutlineSoftness) * _ScaleRatioA + u_xlat13;\n    u_xlat13 = u_xlat13 * 0.5 + (-u_xlat12);\n    vs_TEXCOORD1.x = (-u_xlat8.x) * 0.5 + u_xlat13;\n    u_xlat8.x = (-u_xlat8.x) * 0.5 + 0.5;\n    vs_TEXCOORD1.z = u_xlat12 + u_xlat8.x;\n    u_xlat2 = max(_ClipRect, vec4(-2e+10, -2e+10, -2e+10, -2e+10));\n    u_xlat2 = min(u_xlat2, vec4(2e+10, 2e+10, 2e+10, 2e+10));\n    u_xlat0.xy = u_xlat0.xy * vec2(2.0, 2.0) + (-u_xlat2.xy);\n    vs_TEXCOORD2.xy = (-u_xlat2.zw) + u_xlat0.xy;\n    u_xlat0.xyz = u_xlat1.yyy * hlslcc_mtx4x4_EnvMatrix[1].xyz;\n    u_xlat0.xyz = hlslcc_mtx4x4_EnvMatrix[0].xyz * u_xlat1.xxx + u_xlat0.xyz;\n    vs_TEXCOORD3.xyz = hlslcc_mtx4x4_EnvMatrix[2].xyz * u_xlat1.zzz + u_xlat0.xyz;\n    u_xlat0.x = in_TEXCOORD1.x * 0.000244140625;\n    u_xlat8.x = floor(u_xlat0.x);\n    u_xlat8.y = (-u_xlat8.x) * 4096.0 + in_TEXCOORD1.x;\n    u_xlat0.xy = u_xlat8.xy * vec2(0.001953125, 0.001953125);\n    vs_TEXCOORD5.xy = u_xlat0.xy * _FaceTex_ST.xy + _FaceTex_ST.zw;\n    vs_TEXCOORD5.zw = u_xlat0.xy * _OutlineTex_ST.xy + _OutlineTex_ST.zw;\n    return;\n}\n\n","\n#version 100\n\n#ifdef GL_FRAGMENT_PRECISION_HIGH\n    precision highp float;\n#else\n    precision mediump float;\n#endif\nprecision highp int;\nuniform \tvec4 _Time;\nuniform \tfloat _FaceUVSpeedX;\nuniform \tfloat _FaceUVSpeedY;\nuniform \tmediump vec4 _FaceColor;\nuniform \tfloat _OutlineSoftness;\nuniform \tfloat _OutlineUVSpeedX;\nuniform \tfloat _OutlineUVSpeedY;\nuniform \tmediump vec4 _OutlineColor;\nuniform \tfloat _OutlineWidth;\nuniform \tfloat _ScaleRatioA;\nuniform lowp sampler2D _MainTex;\nuniform lowp sampler2D _FaceTex;\nuniform lowp sampler2D _OutlineTex;\nvarying mediump vec4 vs_COLOR0;\nvarying highp vec2 vs_TEXCOORD0;\nvarying highp vec4 vs_TEXCOORD1;\nvarying highp vec4 vs_TEXCOORD5;\n#define SV_Target0 gl_FragData[0]\nvec3 u_xlat0;\nmediump vec4 u_xlat16_0;\nlowp vec4 u_xlat10_0;\nmediump float u_xlat16_1;\nvec4 u_xlat2;\nmediump vec4 u_xlat16_2;\nmediump vec4 u_xlat16_3;\nfloat u_xlat4;\nlowp vec4 u_xlat10_4;\nbool u_xlatb4;\nfloat u_xlat5;\nbool u_xlatb5;\nmediump float u_xlat16_6;\nmediump float u_xlat16_11;\nvoid main()\n{\n    u_xlat10_0.x = texture2D(_MainTex, vs_TEXCOORD0.xy).w;\n    u_xlat5 = u_xlat10_0.x + (-vs_TEXCOORD1.x);\n    u_xlat0.x = (-u_xlat10_0.x) + vs_TEXCOORD1.z;\n    u_xlatb5 = u_xlat5<0.0;\n    if(u_xlatb5){discard;}\n    u_xlat5 = _OutlineWidth * _ScaleRatioA;\n    u_xlat5 = u_xlat5 * vs_TEXCOORD1.y;\n    u_xlat16_1 = min(u_xlat5, 1.0);\n    u_xlat16_6 = u_xlat5 * 0.5;\n    u_xlat16_1 = sqrt(u_xlat16_1);\n    u_xlat16_11 = u_xlat0.x * vs_TEXCOORD1.y + u_xlat16_6;\n    u_xlat16_11 = clamp(u_xlat16_11, 0.0, 1.0);\n    u_xlat16_6 = u_xlat0.x * vs_TEXCOORD1.y + (-u_xlat16_6);\n    u_xlat16_1 = u_xlat16_1 * u_xlat16_11;\n    u_xlat0.xy = vec2(_OutlineUVSpeedX, _OutlineUVSpeedY) * _Time.yy + vs_TEXCOORD5.zw;\n    u_xlat10_0 = texture2D(_OutlineTex, u_xlat0.xy);\n    u_xlat2 = u_xlat10_0 * _OutlineColor;\n    u_xlat16_3.xyz = vs_COLOR0.xyz * _FaceColor.xyz;\n    u_xlat0.xy = vec2(_FaceUVSpeedX, _FaceUVSpeedY) * _Time.yy + vs_TEXCOORD5.xy;\n    u_xlat10_4 = texture2D(_FaceTex, u_xlat0.xy);\n    u_xlat0.xyz = u_xlat16_3.xyz * u_xlat10_4.xyz;\n    u_xlat4 = u_xlat10_4.w * _FaceColor.w;\n    u_xlat16_3.xyz = u_xlat0.xyz * vec3(u_xlat4);\n    u_xlat16_2.xyz = u_xlat2.xyz * u_xlat2.www + (-u_xlat16_3.xyz);\n    u_xlat16_2.w = _OutlineColor.w * u_xlat10_0.w + (-u_xlat4);\n    u_xlat16_2 = vec4(u_xlat16_1) * u_xlat16_2;\n    u_xlat16_3.w = _FaceColor.w * u_xlat10_4.w + u_xlat16_2.w;\n    u_xlat16_3.xyz = u_xlat0.xyz * vec3(u_xlat4) + u_xlat16_2.xyz;\n    u_xlat0.x = _OutlineSoftness * _ScaleRatioA;\n    u_xlat5 = u_xlat0.x * vs_TEXCOORD1.y;\n    u_xlat16_1 = u_xlat0.x * vs_TEXCOORD1.y + 1.0;\n    u_xlat16_6 = u_xlat5 * 0.5 + u_xlat16_6;\n    u_xlat16_1 = u_xlat16_6 / u_xlat16_1;\n    u_xlat16_1 = clamp(u_xlat16_1, 0.0, 1.0);\n    u_xlat16_1 = (-u_xlat16_1) + 1.0;\n    u_xlat16_6 = u_xlat16_3.w * u_xlat16_1 + -0.00100000005;\n    u_xlat16_0 = vec4(u_xlat16_1) * u_xlat16_3;\n    SV_Target0 = u_xlat16_0 * vs_COLOR0.wwww;\n    u_xlatb4 = u_xlat16_6<0.0;\n    if(u_xlatb4){discard;}\n    return;\n}\n\n",0,0,1,0,0,["UNITY_UI_ALPHACLIP"],[["IGNOREPROJECTOR","true"],["QUEUE","Overlay"],["RenderType","Transparent"]]],[0,"\n#version 100\n\nuniform \tvec3 _WorldSpaceCameraPos;\nuniform \tvec4 _ScreenParams;\nuniform \tvec4 hlslcc_mtx4x4unity_ObjectToWorld[4];\nuniform \tvec4 hlslcc_mtx4x4unity_WorldToObject[4];\nuniform \tvec4 hlslcc_mtx4x4glstate_matrix_projection[4];\nuniform \tvec4 hlslcc_mtx4x4unity_MatrixVP[4];\nuniform \tfloat _FaceDilate;\nuniform \tfloat _OutlineSoftness;\nuniform \tfloat _OutlineWidth;\nuniform \tvec4 hlslcc_mtx4x4_EnvMatrix[4];\nuniform \tfloat _WeightNormal;\nuniform \tfloat _WeightBold;\nuniform \tfloat _ScaleRatioA;\nuniform \tfloat _VertexOffsetX;\nuniform \tfloat _VertexOffsetY;\nuniform \tvec4 _ClipRect;\nuniform \tfloat _MaskSoftnessX;\nuniform \tfloat _MaskSoftnessY;\nuniform \tfloat _GradientScale;\nuniform \tfloat _ScaleX;\nuniform \tfloat _ScaleY;\nuniform \tfloat _PerspectiveFilter;\nuniform \tfloat _Sharpness;\nuniform \tvec4 _FaceTex_ST;\nuniform \tvec4 _OutlineTex_ST;\nattribute highp vec4 in_POSITION0;\nattribute highp vec3 in_NORMAL0;\nattribute mediump vec4 in_COLOR0;\nattribute highp vec2 in_TEXCOORD0;\nattribute highp vec2 in_TEXCOORD1;\nvarying mediump vec4 vs_COLOR0;\nvarying highp vec2 vs_TEXCOORD0;\nvarying highp vec4 vs_TEXCOORD1;\nvarying highp vec4 vs_TEXCOORD2;\nvarying highp vec3 vs_TEXCOORD3;\nvarying highp vec4 vs_TEXCOORD5;\nvec3 u_xlat0;\nvec4 u_xlat1;\nvec4 u_xlat2;\nvec4 u_xlat3;\nvec3 u_xlat6;\nvec2 u_xlat8;\nbool u_xlatb8;\nfloat u_xlat12;\nbool u_xlatb12;\nfloat u_xlat13;\nvoid main()\n{\n    u_xlat0.xy = in_POSITION0.xy + vec2(_VertexOffsetX, _VertexOffsetY);\n    u_xlat1 = u_xlat0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];\n    u_xlat1 = hlslcc_mtx4x4unity_ObjectToWorld[0] * u_xlat0.xxxx + u_xlat1;\n    u_xlat1 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat1;\n    u_xlat2 = u_xlat1 + hlslcc_mtx4x4unity_ObjectToWorld[3];\n    u_xlat1.xyz = hlslcc_mtx4x4unity_ObjectToWorld[3].xyz * in_POSITION0.www + u_xlat1.xyz;\n    u_xlat1.xyz = (-u_xlat1.xyz) + _WorldSpaceCameraPos.xyz;\n    u_xlat3 = u_xlat2.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];\n    u_xlat3 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat2.xxxx + u_xlat3;\n    u_xlat3 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat2.zzzz + u_xlat3;\n    u_xlat2 = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat2.wwww + u_xlat3;\n    gl_Position = u_xlat2;\n    vs_COLOR0 = in_COLOR0;\n    vs_TEXCOORD0.xy = in_TEXCOORD0.xy;\n    u_xlat8.xy = _ScreenParams.yy * hlslcc_mtx4x4glstate_matrix_projection[1].xy;\n    u_xlat8.xy = hlslcc_mtx4x4glstate_matrix_projection[0].xy * _ScreenParams.xx + u_xlat8.xy;\n    u_xlat8.xy = abs(u_xlat8.xy) * vec2(_ScaleX, _ScaleY);\n    u_xlat8.xy = u_xlat2.ww / u_xlat8.xy;\n    u_xlat13 = dot(u_xlat8.xy, u_xlat8.xy);\n    u_xlat8.xy = vec2(_MaskSoftnessX, _MaskSoftnessY) * vec2(0.25, 0.25) + u_xlat8.xy;\n    vs_TEXCOORD2.zw = vec2(0.25, 0.25) / u_xlat8.xy;\n    u_xlat8.x = inversesqrt(u_xlat13);\n    u_xlat12 = abs(in_TEXCOORD1.y) * _GradientScale;\n    u_xlat13 = _Sharpness + 1.0;\n    u_xlat12 = u_xlat12 * u_xlat13;\n    u_xlat13 = u_xlat12 * u_xlat8.x;\n    u_xlat2.x = (-_PerspectiveFilter) + 1.0;\n    u_xlat2.x = abs(u_xlat13) * u_xlat2.x;\n    u_xlat8.x = u_xlat8.x * u_xlat12 + (-u_xlat2.x);\n    u_xlat3.x = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[0].xyz);\n    u_xlat3.y = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[1].xyz);\n    u_xlat3.z = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[2].xyz);\n    u_xlat12 = dot(u_xlat3.xyz, u_xlat3.xyz);\n    u_xlat12 = inversesqrt(u_xlat12);\n    u_xlat6.xyz = vec3(u_xlat12) * u_xlat3.xyz;\n    u_xlat12 = dot(u_xlat1.xyz, u_xlat1.xyz);\n    u_xlat12 = inversesqrt(u_xlat12);\n    u_xlat3.xyz = vec3(u_xlat12) * u_xlat1.xyz;\n    u_xlat12 = dot(u_xlat6.xyz, u_xlat3.xyz);\n    u_xlat8.x = abs(u_xlat12) * u_xlat8.x + u_xlat2.x;\n    u_xlatb12 = hlslcc_mtx4x4glstate_matrix_projection[3].w==0.0;\n    u_xlat6.x = (u_xlatb12) ? u_xlat8.x : u_xlat13;\n    u_xlatb8 = 0.0>=in_TEXCOORD1.y;\n    u_xlat8.x = u_xlatb8 ? 1.0 : float(0.0);\n    u_xlat12 = (-_WeightNormal) + _WeightBold;\n    u_xlat8.x = u_xlat8.x * u_xlat12 + _WeightNormal;\n    u_xlat8.x = u_xlat8.x * 0.25 + _FaceDilate;\n    u_xlat8.x = u_xlat8.x * _ScaleRatioA;\n    u_xlat6.z = u_xlat8.x * 0.5;\n    vs_TEXCOORD1.yw = u_xlat6.xz;\n    u_xlat12 = 0.5 / u_xlat6.x;\n    u_xlat13 = (-_OutlineWidth) * _ScaleRatioA + 1.0;\n    u_xlat13 = (-_OutlineSoftness) * _ScaleRatioA + u_xlat13;\n    u_xlat13 = u_xlat13 * 0.5 + (-u_xlat12);\n    vs_TEXCOORD1.x = (-u_xlat8.x) * 0.5 + u_xlat13;\n    u_xlat8.x = (-u_xlat8.x) * 0.5 + 0.5;\n    vs_TEXCOORD1.z = u_xlat12 + u_xlat8.x;\n    u_xlat2 = max(_ClipRect, vec4(-2e+10, -2e+10, -2e+10, -2e+10));\n    u_xlat2 = min(u_xlat2, vec4(2e+10, 2e+10, 2e+10, 2e+10));\n    u_xlat0.xy = u_xlat0.xy * vec2(2.0, 2.0) + (-u_xlat2.xy);\n    vs_TEXCOORD2.xy = (-u_xlat2.zw) + u_xlat0.xy;\n    u_xlat0.xyz = u_xlat1.yyy * hlslcc_mtx4x4_EnvMatrix[1].xyz;\n    u_xlat0.xyz = hlslcc_mtx4x4_EnvMatrix[0].xyz * u_xlat1.xxx + u_xlat0.xyz;\n    vs_TEXCOORD3.xyz = hlslcc_mtx4x4_EnvMatrix[2].xyz * u_xlat1.zzz + u_xlat0.xyz;\n    u_xlat0.x = in_TEXCOORD1.x * 0.000244140625;\n    u_xlat8.x = floor(u_xlat0.x);\n    u_xlat8.y = (-u_xlat8.x) * 4096.0 + in_TEXCOORD1.x;\n    u_xlat0.xy = u_xlat8.xy * vec2(0.001953125, 0.001953125);\n    vs_TEXCOORD5.xy = u_xlat0.xy * _FaceTex_ST.xy + _FaceTex_ST.zw;\n    vs_TEXCOORD5.zw = u_xlat0.xy * _OutlineTex_ST.xy + _OutlineTex_ST.zw;\n    return;\n}\n\n","\n#version 100\n\n#ifdef GL_FRAGMENT_PRECISION_HIGH\n    precision highp float;\n#else\n    precision mediump float;\n#endif\nprecision highp int;\nuniform \tvec4 _Time;\nuniform \tfloat _FaceUVSpeedX;\nuniform \tfloat _FaceUVSpeedY;\nuniform \tmediump vec4 _FaceColor;\nuniform \tfloat _OutlineSoftness;\nuniform \tfloat _OutlineUVSpeedX;\nuniform \tfloat _OutlineUVSpeedY;\nuniform \tmediump vec4 _OutlineColor;\nuniform \tfloat _OutlineWidth;\nuniform \tfloat _ScaleRatioA;\nuniform \tvec4 _ClipRect;\nuniform lowp sampler2D _MainTex;\nuniform lowp sampler2D _FaceTex;\nuniform lowp sampler2D _OutlineTex;\nvarying mediump vec4 vs_COLOR0;\nvarying highp vec2 vs_TEXCOORD0;\nvarying highp vec4 vs_TEXCOORD1;\nvarying highp vec4 vs_TEXCOORD2;\nvarying highp vec4 vs_TEXCOORD5;\n#define SV_Target0 gl_FragData[0]\nvec3 u_xlat0;\nmediump vec4 u_xlat16_0;\nlowp vec4 u_xlat10_0;\nmediump float u_xlat16_1;\nvec4 u_xlat2;\nmediump vec4 u_xlat16_2;\nmediump vec3 u_xlat16_3;\nvec2 u_xlat4;\nlowp vec4 u_xlat10_4;\nfloat u_xlat5;\nbool u_xlatb5;\nmediump float u_xlat16_6;\nfloat u_xlat9;\nmediump float u_xlat16_11;\nvoid main()\n{\n    u_xlat10_0.x = texture2D(_MainTex, vs_TEXCOORD0.xy).w;\n    u_xlat5 = u_xlat10_0.x + (-vs_TEXCOORD1.x);\n    u_xlat0.x = (-u_xlat10_0.x) + vs_TEXCOORD1.z;\n    u_xlatb5 = u_xlat5<0.0;\n    if(u_xlatb5){discard;}\n    u_xlat5 = _OutlineWidth * _ScaleRatioA;\n    u_xlat5 = u_xlat5 * vs_TEXCOORD1.y;\n    u_xlat16_1 = min(u_xlat5, 1.0);\n    u_xlat16_6 = u_xlat5 * 0.5;\n    u_xlat16_1 = sqrt(u_xlat16_1);\n    u_xlat16_11 = u_xlat0.x * vs_TEXCOORD1.y + u_xlat16_6;\n    u_xlat16_11 = clamp(u_xlat16_11, 0.0, 1.0);\n    u_xlat16_6 = u_xlat0.x * vs_TEXCOORD1.y + (-u_xlat16_6);\n    u_xlat16_1 = u_xlat16_1 * u_xlat16_11;\n    u_xlat0.xy = vec2(_OutlineUVSpeedX, _OutlineUVSpeedY) * _Time.yy + vs_TEXCOORD5.zw;\n    u_xlat10_0 = texture2D(_OutlineTex, u_xlat0.xy);\n    u_xlat2 = u_xlat10_0 * _OutlineColor;\n    u_xlat16_3.xyz = vs_COLOR0.xyz * _FaceColor.xyz;\n    u_xlat0.xy = vec2(_FaceUVSpeedX, _FaceUVSpeedY) * _Time.yy + vs_TEXCOORD5.xy;\n    u_xlat10_4 = texture2D(_FaceTex, u_xlat0.xy);\n    u_xlat0.xyz = u_xlat16_3.xyz * u_xlat10_4.xyz;\n    u_xlat4.x = u_xlat10_4.w * _FaceColor.w;\n    u_xlat16_3.xyz = u_xlat0.xyz * u_xlat4.xxx;\n    u_xlat16_2.xyz = u_xlat2.xyz * u_xlat2.www + (-u_xlat16_3.xyz);\n    u_xlat16_2.w = _OutlineColor.w * u_xlat10_0.w + (-u_xlat4.x);\n    u_xlat16_2 = vec4(u_xlat16_1) * u_xlat16_2;\n    u_xlat16_0.xyz = u_xlat0.xyz * u_xlat4.xxx + u_xlat16_2.xyz;\n    u_xlat16_0.w = _FaceColor.w * u_xlat10_4.w + u_xlat16_2.w;\n    u_xlat4.x = _OutlineSoftness * _ScaleRatioA;\n    u_xlat9 = u_xlat4.x * vs_TEXCOORD1.y;\n    u_xlat16_1 = u_xlat4.x * vs_TEXCOORD1.y + 1.0;\n    u_xlat16_6 = u_xlat9 * 0.5 + u_xlat16_6;\n    u_xlat16_1 = u_xlat16_6 / u_xlat16_1;\n    u_xlat16_1 = clamp(u_xlat16_1, 0.0, 1.0);\n    u_xlat16_1 = (-u_xlat16_1) + 1.0;\n    u_xlat16_0 = u_xlat16_0 * vec4(u_xlat16_1);\n    u_xlat4.xy = (-_ClipRect.xy) + _ClipRect.zw;\n    u_xlat4.xy = u_xlat4.xy + -abs(vs_TEXCOORD2.xy);\n    u_xlat4.xy = u_xlat4.xy * vs_TEXCOORD2.zw;\n    u_xlat4.xy = clamp(u_xlat4.xy, 0.0, 1.0);\n    u_xlat16_1 = u_xlat4.y * u_xlat4.x;\n    u_xlat16_0 = u_xlat16_0 * vec4(u_xlat16_1);\n    SV_Target0 = u_xlat16_0 * vs_COLOR0.wwww;\n    return;\n}\n\n",0,0,2,0,0,["UNITY_UI_CLIP_RECT"],[["IGNOREPROJECTOR","true"],["QUEUE","Overlay"],["RenderType","Transparent"]]],[0,"\n#version 100\n\nuniform \tvec3 _WorldSpaceCameraPos;\nuniform \tvec4 _ScreenParams;\nuniform \tvec4 hlslcc_mtx4x4unity_ObjectToWorld[4];\nuniform \tvec4 hlslcc_mtx4x4unity_WorldToObject[4];\nuniform \tvec4 hlslcc_mtx4x4glstate_matrix_projection[4];\nuniform \tvec4 hlslcc_mtx4x4unity_MatrixVP[4];\nuniform \tfloat _FaceDilate;\nuniform \tfloat _OutlineSoftness;\nuniform \tfloat _OutlineWidth;\nuniform \tvec4 hlslcc_mtx4x4_EnvMatrix[4];\nuniform \tfloat _WeightNormal;\nuniform \tfloat _WeightBold;\nuniform \tfloat _ScaleRatioA;\nuniform \tfloat _VertexOffsetX;\nuniform \tfloat _VertexOffsetY;\nuniform \tvec4 _ClipRect;\nuniform \tfloat _MaskSoftnessX;\nuniform \tfloat _MaskSoftnessY;\nuniform \tfloat _GradientScale;\nuniform \tfloat _ScaleX;\nuniform \tfloat _ScaleY;\nuniform \tfloat _PerspectiveFilter;\nuniform \tfloat _Sharpness;\nuniform \tvec4 _FaceTex_ST;\nuniform \tvec4 _OutlineTex_ST;\nattribute highp vec4 in_POSITION0;\nattribute highp vec3 in_NORMAL0;\nattribute mediump vec4 in_COLOR0;\nattribute highp vec2 in_TEXCOORD0;\nattribute highp vec2 in_TEXCOORD1;\nvarying mediump vec4 vs_COLOR0;\nvarying highp vec2 vs_TEXCOORD0;\nvarying highp vec4 vs_TEXCOORD1;\nvarying highp vec4 vs_TEXCOORD2;\nvarying highp vec3 vs_TEXCOORD3;\nvarying highp vec4 vs_TEXCOORD5;\nvec3 u_xlat0;\nvec4 u_xlat1;\nvec4 u_xlat2;\nvec4 u_xlat3;\nvec3 u_xlat6;\nvec2 u_xlat8;\nbool u_xlatb8;\nfloat u_xlat12;\nbool u_xlatb12;\nfloat u_xlat13;\nvoid main()\n{\n    u_xlat0.xy = in_POSITION0.xy + vec2(_VertexOffsetX, _VertexOffsetY);\n    u_xlat1 = u_xlat0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];\n    u_xlat1 = hlslcc_mtx4x4unity_ObjectToWorld[0] * u_xlat0.xxxx + u_xlat1;\n    u_xlat1 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat1;\n    u_xlat2 = u_xlat1 + hlslcc_mtx4x4unity_ObjectToWorld[3];\n    u_xlat1.xyz = hlslcc_mtx4x4unity_ObjectToWorld[3].xyz * in_POSITION0.www + u_xlat1.xyz;\n    u_xlat1.xyz = (-u_xlat1.xyz) + _WorldSpaceCameraPos.xyz;\n    u_xlat3 = u_xlat2.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];\n    u_xlat3 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat2.xxxx + u_xlat3;\n    u_xlat3 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat2.zzzz + u_xlat3;\n    u_xlat2 = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat2.wwww + u_xlat3;\n    gl_Position = u_xlat2;\n    vs_COLOR0 = in_COLOR0;\n    vs_TEXCOORD0.xy = in_TEXCOORD0.xy;\n    u_xlat8.xy = _ScreenParams.yy * hlslcc_mtx4x4glstate_matrix_projection[1].xy;\n    u_xlat8.xy = hlslcc_mtx4x4glstate_matrix_projection[0].xy * _ScreenParams.xx + u_xlat8.xy;\n    u_xlat8.xy = abs(u_xlat8.xy) * vec2(_ScaleX, _ScaleY);\n    u_xlat8.xy = u_xlat2.ww / u_xlat8.xy;\n    u_xlat13 = dot(u_xlat8.xy, u_xlat8.xy);\n    u_xlat8.xy = vec2(_MaskSoftnessX, _MaskSoftnessY) * vec2(0.25, 0.25) + u_xlat8.xy;\n    vs_TEXCOORD2.zw = vec2(0.25, 0.25) / u_xlat8.xy;\n    u_xlat8.x = inversesqrt(u_xlat13);\n    u_xlat12 = abs(in_TEXCOORD1.y) * _GradientScale;\n    u_xlat13 = _Sharpness + 1.0;\n    u_xlat12 = u_xlat12 * u_xlat13;\n    u_xlat13 = u_xlat12 * u_xlat8.x;\n    u_xlat2.x = (-_PerspectiveFilter) + 1.0;\n    u_xlat2.x = abs(u_xlat13) * u_xlat2.x;\n    u_xlat8.x = u_xlat8.x * u_xlat12 + (-u_xlat2.x);\n    u_xlat3.x = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[0].xyz);\n    u_xlat3.y = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[1].xyz);\n    u_xlat3.z = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[2].xyz);\n    u_xlat12 = dot(u_xlat3.xyz, u_xlat3.xyz);\n    u_xlat12 = inversesqrt(u_xlat12);\n    u_xlat6.xyz = vec3(u_xlat12) * u_xlat3.xyz;\n    u_xlat12 = dot(u_xlat1.xyz, u_xlat1.xyz);\n    u_xlat12 = inversesqrt(u_xlat12);\n    u_xlat3.xyz = vec3(u_xlat12) * u_xlat1.xyz;\n    u_xlat12 = dot(u_xlat6.xyz, u_xlat3.xyz);\n    u_xlat8.x = abs(u_xlat12) * u_xlat8.x + u_xlat2.x;\n    u_xlatb12 = hlslcc_mtx4x4glstate_matrix_projection[3].w==0.0;\n    u_xlat6.x = (u_xlatb12) ? u_xlat8.x : u_xlat13;\n    u_xlatb8 = 0.0>=in_TEXCOORD1.y;\n    u_xlat8.x = u_xlatb8 ? 1.0 : float(0.0);\n    u_xlat12 = (-_WeightNormal) + _WeightBold;\n    u_xlat8.x = u_xlat8.x * u_xlat12 + _WeightNormal;\n    u_xlat8.x = u_xlat8.x * 0.25 + _FaceDilate;\n    u_xlat8.x = u_xlat8.x * _ScaleRatioA;\n    u_xlat6.z = u_xlat8.x * 0.5;\n    vs_TEXCOORD1.yw = u_xlat6.xz;\n    u_xlat12 = 0.5 / u_xlat6.x;\n    u_xlat13 = (-_OutlineWidth) * _ScaleRatioA + 1.0;\n    u_xlat13 = (-_OutlineSoftness) * _ScaleRatioA + u_xlat13;\n    u_xlat13 = u_xlat13 * 0.5 + (-u_xlat12);\n    vs_TEXCOORD1.x = (-u_xlat8.x) * 0.5 + u_xlat13;\n    u_xlat8.x = (-u_xlat8.x) * 0.5 + 0.5;\n    vs_TEXCOORD1.z = u_xlat12 + u_xlat8.x;\n    u_xlat2 = max(_ClipRect, vec4(-2e+10, -2e+10, -2e+10, -2e+10));\n    u_xlat2 = min(u_xlat2, vec4(2e+10, 2e+10, 2e+10, 2e+10));\n    u_xlat0.xy = u_xlat0.xy * vec2(2.0, 2.0) + (-u_xlat2.xy);\n    vs_TEXCOORD2.xy = (-u_xlat2.zw) + u_xlat0.xy;\n    u_xlat0.xyz = u_xlat1.yyy * hlslcc_mtx4x4_EnvMatrix[1].xyz;\n    u_xlat0.xyz = hlslcc_mtx4x4_EnvMatrix[0].xyz * u_xlat1.xxx + u_xlat0.xyz;\n    vs_TEXCOORD3.xyz = hlslcc_mtx4x4_EnvMatrix[2].xyz * u_xlat1.zzz + u_xlat0.xyz;\n    u_xlat0.x = in_TEXCOORD1.x * 0.000244140625;\n    u_xlat8.x = floor(u_xlat0.x);\n    u_xlat8.y = (-u_xlat8.x) * 4096.0 + in_TEXCOORD1.x;\n    u_xlat0.xy = u_xlat8.xy * vec2(0.001953125, 0.001953125);\n    vs_TEXCOORD5.xy = u_xlat0.xy * _FaceTex_ST.xy + _FaceTex_ST.zw;\n    vs_TEXCOORD5.zw = u_xlat0.xy * _OutlineTex_ST.xy + _OutlineTex_ST.zw;\n    return;\n}\n\n","\n#version 100\n\n#ifdef GL_FRAGMENT_PRECISION_HIGH\n    precision highp float;\n#else\n    precision mediump float;\n#endif\nprecision highp int;\nuniform \tvec4 _Time;\nuniform \tfloat _FaceUVSpeedX;\nuniform \tfloat _FaceUVSpeedY;\nuniform \tmediump vec4 _FaceColor;\nuniform \tfloat _OutlineSoftness;\nuniform \tfloat _OutlineUVSpeedX;\nuniform \tfloat _OutlineUVSpeedY;\nuniform \tmediump vec4 _OutlineColor;\nuniform \tfloat _OutlineWidth;\nuniform \tfloat _ScaleRatioA;\nuniform \tvec4 _ClipRect;\nuniform lowp sampler2D _MainTex;\nuniform lowp sampler2D _FaceTex;\nuniform lowp sampler2D _OutlineTex;\nvarying mediump vec4 vs_COLOR0;\nvarying highp vec2 vs_TEXCOORD0;\nvarying highp vec4 vs_TEXCOORD1;\nvarying highp vec4 vs_TEXCOORD2;\nvarying highp vec4 vs_TEXCOORD5;\n#define SV_Target0 gl_FragData[0]\nvec3 u_xlat0;\nmediump vec4 u_xlat16_0;\nlowp vec4 u_xlat10_0;\nmediump float u_xlat16_1;\nvec4 u_xlat2;\nmediump vec4 u_xlat16_2;\nmediump vec3 u_xlat16_3;\nvec2 u_xlat4;\nlowp vec4 u_xlat10_4;\nbool u_xlatb4;\nfloat u_xlat5;\nbool u_xlatb5;\nmediump float u_xlat16_6;\nfloat u_xlat9;\nmediump float u_xlat16_11;\nvoid main()\n{\n    u_xlat10_0.x = texture2D(_MainTex, vs_TEXCOORD0.xy).w;\n    u_xlat5 = u_xlat10_0.x + (-vs_TEXCOORD1.x);\n    u_xlat0.x = (-u_xlat10_0.x) + vs_TEXCOORD1.z;\n    u_xlatb5 = u_xlat5<0.0;\n    if(u_xlatb5){discard;}\n    u_xlat5 = _OutlineWidth * _ScaleRatioA;\n    u_xlat5 = u_xlat5 * vs_TEXCOORD1.y;\n    u_xlat16_1 = min(u_xlat5, 1.0);\n    u_xlat16_6 = u_xlat5 * 0.5;\n    u_xlat16_1 = sqrt(u_xlat16_1);\n    u_xlat16_11 = u_xlat0.x * vs_TEXCOORD1.y + u_xlat16_6;\n    u_xlat16_11 = clamp(u_xlat16_11, 0.0, 1.0);\n    u_xlat16_6 = u_xlat0.x * vs_TEXCOORD1.y + (-u_xlat16_6);\n    u_xlat16_1 = u_xlat16_1 * u_xlat16_11;\n    u_xlat0.xy = vec2(_OutlineUVSpeedX, _OutlineUVSpeedY) * _Time.yy + vs_TEXCOORD5.zw;\n    u_xlat10_0 = texture2D(_OutlineTex, u_xlat0.xy);\n    u_xlat2 = u_xlat10_0 * _OutlineColor;\n    u_xlat16_3.xyz = vs_COLOR0.xyz * _FaceColor.xyz;\n    u_xlat0.xy = vec2(_FaceUVSpeedX, _FaceUVSpeedY) * _Time.yy + vs_TEXCOORD5.xy;\n    u_xlat10_4 = texture2D(_FaceTex, u_xlat0.xy);\n    u_xlat0.xyz = u_xlat16_3.xyz * u_xlat10_4.xyz;\n    u_xlat4.x = u_xlat10_4.w * _FaceColor.w;\n    u_xlat16_3.xyz = u_xlat0.xyz * u_xlat4.xxx;\n    u_xlat16_2.xyz = u_xlat2.xyz * u_xlat2.www + (-u_xlat16_3.xyz);\n    u_xlat16_2.w = _OutlineColor.w * u_xlat10_0.w + (-u_xlat4.x);\n    u_xlat16_2 = vec4(u_xlat16_1) * u_xlat16_2;\n    u_xlat16_0.xyz = u_xlat0.xyz * u_xlat4.xxx + u_xlat16_2.xyz;\n    u_xlat16_0.w = _FaceColor.w * u_xlat10_4.w + u_xlat16_2.w;\n    u_xlat4.x = _OutlineSoftness * _ScaleRatioA;\n    u_xlat9 = u_xlat4.x * vs_TEXCOORD1.y;\n    u_xlat16_1 = u_xlat4.x * vs_TEXCOORD1.y + 1.0;\n    u_xlat16_6 = u_xlat9 * 0.5 + u_xlat16_6;\n    u_xlat16_1 = u_xlat16_6 / u_xlat16_1;\n    u_xlat16_1 = clamp(u_xlat16_1, 0.0, 1.0);\n    u_xlat16_1 = (-u_xlat16_1) + 1.0;\n    u_xlat16_0 = u_xlat16_0 * vec4(u_xlat16_1);\n    u_xlat4.xy = (-_ClipRect.xy) + _ClipRect.zw;\n    u_xlat4.xy = u_xlat4.xy + -abs(vs_TEXCOORD2.xy);\n    u_xlat4.xy = u_xlat4.xy * vs_TEXCOORD2.zw;\n    u_xlat4.xy = clamp(u_xlat4.xy, 0.0, 1.0);\n    u_xlat16_1 = u_xlat4.y * u_xlat4.x;\n    u_xlat16_6 = u_xlat16_0.w * u_xlat16_1 + -0.00100000005;\n    u_xlat16_0 = u_xlat16_0 * vec4(u_xlat16_1);\n    SV_Target0 = u_xlat16_0 * vs_COLOR0.wwww;\n    u_xlatb4 = u_xlat16_6<0.0;\n    if(u_xlatb4){discard;}\n    return;\n}\n\n",0,0,3,0,0,["UNITY_UI_ALPHACLIP","UNITY_UI_CLIP_RECT"],[["IGNOREPROJECTOR","true"],["QUEUE","Overlay"],["RenderType","Transparent"]]]],["BEVEL_ON","GLOW_ON","STEREO_CUBEMAP_RENDER_ON","STEREO_INSTANCING_ON","STEREO_MULTIVIEW_ON","UNDERLAY_INNER","UNDERLAY_ON","UNITY_SINGLE_PASS_STEREO","UNITY_UI_ALPHACLIP","UNITY_UI_CLIP_RECT","__"],[[["__","BEVEL_ON"]],[["__","UNDERLAY_ON","UNDERLAY_INNER"]],[["__","GLOW_ON"]],[["__","UNITY_UI_CLIP_RECT"]],[["__","UNITY_UI_ALPHACLIP"]]],0,0,5,0,0,0,0,[["IGNOREPROJECTOR","true"],["QUEUE","Overlay"],["RenderType","Transparent"]],null,"",227,-1]],[["IGNOREPROJECTOR","true"],["QUEUE","Overlay"],["RenderType","Transparent"]],0]],0,412,"Assets/TextMesh Pro/Shaders/TMP_SDF Overlay.shader",["BEVEL_ON","GLOW_ON","UNDERLAY_INNER","UNDERLAY_ON","UNITY_UI_ALPHACLIP","UNITY_UI_CLIP_RECT","STEREO_CUBEMAP_RENDER_ON","STEREO_INSTANCING_ON","STEREO_MULTIVIEW_ON","UNITY_SINGLE_PASS_STEREO","__"],0,408,[],5],[[[0,[["TextMeshPro/Distance Field SSD",[[0,"\n#version 100\n\nuniform \tvec3 _WorldSpaceCameraPos;\nuniform \tvec4 hlslcc_mtx4x4unity_ObjectToWorld[4];\nuniform \tvec4 hlslcc_mtx4x4unity_MatrixVP[4];\nuniform \tfloat _FaceDilate;\nuniform \tvec4 hlslcc_mtx4x4_EnvMatrix[4];\nuniform \tfloat _WeightNormal;\nuniform \tfloat _WeightBold;\nuniform \tfloat _ScaleRatioA;\nuniform \tfloat _VertexOffsetX;\nuniform \tfloat _VertexOffsetY;\nuniform \tvec4 _ClipRect;\nuniform \tvec4 _FaceTex_ST;\nuniform \tvec4 _OutlineTex_ST;\nattribute highp vec4 in_POSITION0;\nattribute highp vec4 in_COLOR0;\nattribute highp vec2 in_TEXCOORD0;\nattribute highp vec2 in_TEXCOORD1;\nvarying highp vec4 vs_COLOR0;\nvarying highp vec2 vs_TEXCOORD0;\nvarying highp float vs_TEXCOORD1;\nvarying highp vec2 vs_TEXCOORD2;\nvarying highp vec3 vs_TEXCOORD3;\nvarying highp vec4 vs_TEXCOORD5;\nvec3 u_xlat0;\nvec4 u_xlat1;\nvec4 u_xlat2;\nvec4 u_xlat3;\nvec2 u_xlat8;\nbool u_xlatb8;\nfloat u_xlat12;\nvoid main()\n{\n    u_xlat0.xy = in_POSITION0.xy + vec2(_VertexOffsetX, _VertexOffsetY);\n    u_xlat1 = u_xlat0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];\n    u_xlat1 = hlslcc_mtx4x4unity_ObjectToWorld[0] * u_xlat0.xxxx + u_xlat1;\n    u_xlat1 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat1;\n    u_xlat2 = u_xlat1 + hlslcc_mtx4x4unity_ObjectToWorld[3];\n    u_xlat1.xyz = hlslcc_mtx4x4unity_ObjectToWorld[3].xyz * in_POSITION0.www + u_xlat1.xyz;\n    u_xlat1.xyz = (-u_xlat1.xyz) + _WorldSpaceCameraPos.xyz;\n    u_xlat3 = u_xlat2.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];\n    u_xlat3 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat2.xxxx + u_xlat3;\n    u_xlat3 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat2.zzzz + u_xlat3;\n    gl_Position = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat2.wwww + u_xlat3;\n    vs_COLOR0 = in_COLOR0;\n    u_xlatb8 = 0.0>=in_TEXCOORD1.y;\n    u_xlat8.x = u_xlatb8 ? 1.0 : float(0.0);\n    u_xlat12 = (-_WeightNormal) + _WeightBold;\n    u_xlat8.x = u_xlat8.x * u_xlat12 + _WeightNormal;\n    u_xlat8.x = u_xlat8.x * 0.25 + _FaceDilate;\n    u_xlat8.x = u_xlat8.x * _ScaleRatioA;\n    vs_TEXCOORD1 = u_xlat8.x * 0.5;\n    vs_TEXCOORD0.xy = in_TEXCOORD0.xy;\n    u_xlat2 = max(_ClipRect, vec4(-2e+10, -2e+10, -2e+10, -2e+10));\n    u_xlat2 = min(u_xlat2, vec4(2e+10, 2e+10, 2e+10, 2e+10));\n    u_xlat0.xy = u_xlat0.xy * vec2(2.0, 2.0) + (-u_xlat2.xy);\n    vs_TEXCOORD2.xy = (-u_xlat2.zw) + u_xlat0.xy;\n    u_xlat0.xyz = u_xlat1.yyy * hlslcc_mtx4x4_EnvMatrix[1].xyz;\n    u_xlat0.xyz = hlslcc_mtx4x4_EnvMatrix[0].xyz * u_xlat1.xxx + u_xlat0.xyz;\n    vs_TEXCOORD3.xyz = hlslcc_mtx4x4_EnvMatrix[2].xyz * u_xlat1.zzz + u_xlat0.xyz;\n    u_xlat0.x = in_TEXCOORD1.x * 0.000244140625;\n    u_xlat8.x = floor(u_xlat0.x);\n    u_xlat8.y = (-u_xlat8.x) * 4096.0 + in_TEXCOORD1.x;\n    u_xlat0.xy = u_xlat8.xy * vec2(0.001953125, 0.001953125);\n    vs_TEXCOORD5.xy = u_xlat0.xy * _FaceTex_ST.xy + _FaceTex_ST.zw;\n    vs_TEXCOORD5.zw = u_xlat0.xy * _OutlineTex_ST.xy + _OutlineTex_ST.zw;\n    return;\n}\n\n","\n#version 100\n#ifdef GL_OES_standard_derivatives\n#extension GL_OES_standard_derivatives : enable\n#endif\n\n#ifdef GL_FRAGMENT_PRECISION_HIGH\n    precision highp float;\n#else\n    precision mediump float;\n#endif\nprecision highp int;\nuniform \tvec4 _Time;\nuniform \tfloat _FaceUVSpeedX;\nuniform \tfloat _FaceUVSpeedY;\nuniform \tmediump vec4 _FaceColor;\nuniform \tfloat _OutlineSoftness;\nuniform \tfloat _OutlineUVSpeedX;\nuniform \tfloat _OutlineUVSpeedY;\nuniform \tmediump vec4 _OutlineColor;\nuniform \tfloat _OutlineWidth;\nuniform \tfloat _ScaleRatioA;\nuniform \tfloat _TextureWidth;\nuniform \tfloat _GradientScale;\nuniform \tfloat _Sharpness;\nuniform lowp sampler2D _MainTex;\nuniform lowp sampler2D _FaceTex;\nuniform lowp sampler2D _OutlineTex;\nvarying highp vec4 vs_COLOR0;\nvarying highp vec2 vs_TEXCOORD0;\nvarying highp float vs_TEXCOORD1;\nvarying highp vec4 vs_TEXCOORD5;\n#define SV_Target0 gl_FragData[0]\nvec4 u_xlat0;\nmediump vec4 u_xlat16_0;\nlowp vec4 u_xlat10_0;\nvec4 u_xlat1;\nmediump vec4 u_xlat16_1;\nmediump float u_xlat16_2;\nvec2 u_xlat3;\nlowp vec4 u_xlat10_3;\nmediump vec3 u_xlat16_4;\nvec2 u_xlat5;\nmediump float u_xlat16_7;\nfloat u_xlat10;\nlowp float u_xlat10_10;\nmediump float u_xlat16_12;\nvoid main()\n{\n    u_xlat0.x = (-vs_TEXCOORD1) + 0.5;\n    u_xlat1.x = dFdx(vs_TEXCOORD0.y);\n    u_xlat1.y = dFdy(vs_TEXCOORD0.y);\n    u_xlat5.x = _TextureWidth * 0.75;\n    u_xlat5.xy = u_xlat5.xx * u_xlat1.xy;\n    u_xlat5.x = dot(u_xlat5.xy, u_xlat5.xy);\n    u_xlat5.x = inversesqrt(u_xlat5.x);\n    u_xlat5.x = u_xlat5.x * _GradientScale;\n    u_xlat10 = _Sharpness + 1.0;\n    u_xlat5.x = u_xlat10 * u_xlat5.x;\n    u_xlat10 = 0.5 / u_xlat5.x;\n    u_xlat0.x = u_xlat10 + u_xlat0.x;\n    u_xlat10_10 = texture2D(_MainTex, vs_TEXCOORD0.xy).w;\n    u_xlat0.x = (-u_xlat10_10) + u_xlat0.x;\n    u_xlat10 = _OutlineWidth * _ScaleRatioA;\n    u_xlat10 = u_xlat5.x * u_xlat10;\n    u_xlat16_2 = u_xlat10 * 0.5;\n    u_xlat16_7 = min(u_xlat10, 1.0);\n    u_xlat16_7 = sqrt(u_xlat16_7);\n    u_xlat16_12 = u_xlat0.x * u_xlat5.x + (-u_xlat16_2);\n    u_xlat16_2 = u_xlat0.x * u_xlat5.x + u_xlat16_2;\n    u_xlat16_2 = clamp(u_xlat16_2, 0.0, 1.0);\n    u_xlat16_2 = u_xlat16_7 * u_xlat16_2;\n    u_xlat0.x = _OutlineSoftness * _ScaleRatioA;\n    u_xlat10 = u_xlat5.x * u_xlat0.x;\n    u_xlat16_7 = u_xlat0.x * u_xlat5.x + 1.0;\n    u_xlat16_12 = u_xlat10 * 0.5 + u_xlat16_12;\n    u_xlat16_7 = u_xlat16_12 / u_xlat16_7;\n    u_xlat16_7 = clamp(u_xlat16_7, 0.0, 1.0);\n    u_xlat16_7 = (-u_xlat16_7) + 1.0;\n    u_xlat0.xy = vec2(_OutlineUVSpeedX, _OutlineUVSpeedY) * _Time.yy + vs_TEXCOORD5.zw;\n    u_xlat10_0 = texture2D(_OutlineTex, u_xlat0.xy);\n    u_xlat1 = u_xlat10_0 * _OutlineColor;\n    u_xlat0.xyz = vs_COLOR0.xyz * _FaceColor.xyz;\n    u_xlat3.xy = vec2(_FaceUVSpeedX, _FaceUVSpeedY) * _Time.yy + vs_TEXCOORD5.xy;\n    u_xlat10_3 = texture2D(_FaceTex, u_xlat3.xy);\n    u_xlat0.xyz = u_xlat0.xyz * u_xlat10_3.xyz;\n    u_xlat3.x = u_xlat10_3.w * _FaceColor.w;\n    u_xlat16_4.xyz = u_xlat0.xyz * u_xlat3.xxx;\n    u_xlat16_1.xyz = u_xlat1.xyz * u_xlat1.www + (-u_xlat16_4.xyz);\n    u_xlat16_1.w = _OutlineColor.w * u_xlat10_0.w + (-u_xlat3.x);\n    u_xlat16_1 = u_xlat16_1 * vec4(u_xlat16_2);\n    u_xlat16_0.xyz = u_xlat0.xyz * u_xlat3.xxx + u_xlat16_1.xyz;\n    u_xlat16_0.w = _FaceColor.w * u_xlat10_3.w + u_xlat16_1.w;\n    u_xlat16_0 = vec4(u_xlat16_7) * u_xlat16_0;\n    u_xlat0 = u_xlat16_0 * vs_COLOR0.wwww;\n    SV_Target0 = u_xlat0;\n    return;\n}\n\n",0,0,0,0,0,[],[["IGNOREPROJECTOR","true"],["QUEUE","Transparent"],["RenderType","Transparent"]]],[0,"\n#version 100\n\nuniform \tvec3 _WorldSpaceCameraPos;\nuniform \tvec4 hlslcc_mtx4x4unity_ObjectToWorld[4];\nuniform \tvec4 hlslcc_mtx4x4unity_MatrixVP[4];\nuniform \tfloat _FaceDilate;\nuniform \tvec4 hlslcc_mtx4x4_EnvMatrix[4];\nuniform \tfloat _WeightNormal;\nuniform \tfloat _WeightBold;\nuniform \tfloat _ScaleRatioA;\nuniform \tfloat _VertexOffsetX;\nuniform \tfloat _VertexOffsetY;\nuniform \tvec4 _ClipRect;\nuniform \tvec4 _FaceTex_ST;\nuniform \tvec4 _OutlineTex_ST;\nattribute highp vec4 in_POSITION0;\nattribute highp vec4 in_COLOR0;\nattribute highp vec2 in_TEXCOORD0;\nattribute highp vec2 in_TEXCOORD1;\nvarying highp vec4 vs_COLOR0;\nvarying highp vec2 vs_TEXCOORD0;\nvarying highp float vs_TEXCOORD1;\nvarying highp vec2 vs_TEXCOORD2;\nvarying highp vec3 vs_TEXCOORD3;\nvarying highp vec4 vs_TEXCOORD5;\nvec3 u_xlat0;\nvec4 u_xlat1;\nvec4 u_xlat2;\nvec4 u_xlat3;\nvec2 u_xlat8;\nbool u_xlatb8;\nfloat u_xlat12;\nvoid main()\n{\n    u_xlat0.xy = in_POSITION0.xy + vec2(_VertexOffsetX, _VertexOffsetY);\n    u_xlat1 = u_xlat0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];\n    u_xlat1 = hlslcc_mtx4x4unity_ObjectToWorld[0] * u_xlat0.xxxx + u_xlat1;\n    u_xlat1 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat1;\n    u_xlat2 = u_xlat1 + hlslcc_mtx4x4unity_ObjectToWorld[3];\n    u_xlat1.xyz = hlslcc_mtx4x4unity_ObjectToWorld[3].xyz * in_POSITION0.www + u_xlat1.xyz;\n    u_xlat1.xyz = (-u_xlat1.xyz) + _WorldSpaceCameraPos.xyz;\n    u_xlat3 = u_xlat2.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];\n    u_xlat3 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat2.xxxx + u_xlat3;\n    u_xlat3 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat2.zzzz + u_xlat3;\n    gl_Position = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat2.wwww + u_xlat3;\n    vs_COLOR0 = in_COLOR0;\n    u_xlatb8 = 0.0>=in_TEXCOORD1.y;\n    u_xlat8.x = u_xlatb8 ? 1.0 : float(0.0);\n    u_xlat12 = (-_WeightNormal) + _WeightBold;\n    u_xlat8.x = u_xlat8.x * u_xlat12 + _WeightNormal;\n    u_xlat8.x = u_xlat8.x * 0.25 + _FaceDilate;\n    u_xlat8.x = u_xlat8.x * _ScaleRatioA;\n    vs_TEXCOORD1 = u_xlat8.x * 0.5;\n    vs_TEXCOORD0.xy = in_TEXCOORD0.xy;\n    u_xlat2 = max(_ClipRect, vec4(-2e+10, -2e+10, -2e+10, -2e+10));\n    u_xlat2 = min(u_xlat2, vec4(2e+10, 2e+10, 2e+10, 2e+10));\n    u_xlat0.xy = u_xlat0.xy * vec2(2.0, 2.0) + (-u_xlat2.xy);\n    vs_TEXCOORD2.xy = (-u_xlat2.zw) + u_xlat0.xy;\n    u_xlat0.xyz = u_xlat1.yyy * hlslcc_mtx4x4_EnvMatrix[1].xyz;\n    u_xlat0.xyz = hlslcc_mtx4x4_EnvMatrix[0].xyz * u_xlat1.xxx + u_xlat0.xyz;\n    vs_TEXCOORD3.xyz = hlslcc_mtx4x4_EnvMatrix[2].xyz * u_xlat1.zzz + u_xlat0.xyz;\n    u_xlat0.x = in_TEXCOORD1.x * 0.000244140625;\n    u_xlat8.x = floor(u_xlat0.x);\n    u_xlat8.y = (-u_xlat8.x) * 4096.0 + in_TEXCOORD1.x;\n    u_xlat0.xy = u_xlat8.xy * vec2(0.001953125, 0.001953125);\n    vs_TEXCOORD5.xy = u_xlat0.xy * _FaceTex_ST.xy + _FaceTex_ST.zw;\n    vs_TEXCOORD5.zw = u_xlat0.xy * _OutlineTex_ST.xy + _OutlineTex_ST.zw;\n    return;\n}\n\n","\n#version 100\n#ifdef GL_OES_standard_derivatives\n#extension GL_OES_standard_derivatives : enable\n#endif\n\n#ifdef GL_FRAGMENT_PRECISION_HIGH\n    precision highp float;\n#else\n    precision mediump float;\n#endif\nprecision highp int;\nuniform \tvec4 _Time;\nuniform \tfloat _FaceUVSpeedX;\nuniform \tfloat _FaceUVSpeedY;\nuniform \tmediump vec4 _FaceColor;\nuniform \tfloat _OutlineSoftness;\nuniform \tfloat _OutlineUVSpeedX;\nuniform \tfloat _OutlineUVSpeedY;\nuniform \tmediump vec4 _OutlineColor;\nuniform \tfloat _OutlineWidth;\nuniform \tfloat _ScaleRatioA;\nuniform \tfloat _TextureWidth;\nuniform \tfloat _GradientScale;\nuniform \tfloat _Sharpness;\nuniform lowp sampler2D _MainTex;\nuniform lowp sampler2D _FaceTex;\nuniform lowp sampler2D _OutlineTex;\nvarying highp vec4 vs_COLOR0;\nvarying highp vec2 vs_TEXCOORD0;\nvarying highp float vs_TEXCOORD1;\nvarying highp vec4 vs_TEXCOORD5;\n#define SV_Target0 gl_FragData[0]\nvec4 u_xlat0;\nmediump vec4 u_xlat16_0;\nlowp vec4 u_xlat10_0;\nvec4 u_xlat1;\nmediump vec4 u_xlat16_1;\nmediump float u_xlat16_2;\nvec2 u_xlat3;\nlowp vec4 u_xlat10_3;\nbool u_xlatb3;\nmediump vec4 u_xlat16_4;\nvec2 u_xlat5;\nmediump float u_xlat16_7;\nfloat u_xlat10;\nlowp float u_xlat10_10;\nmediump float u_xlat16_12;\nvoid main()\n{\n    u_xlat0.x = (-vs_TEXCOORD1) + 0.5;\n    u_xlat1.x = dFdx(vs_TEXCOORD0.y);\n    u_xlat1.y = dFdy(vs_TEXCOORD0.y);\n    u_xlat5.x = _TextureWidth * 0.75;\n    u_xlat5.xy = u_xlat5.xx * u_xlat1.xy;\n    u_xlat5.x = dot(u_xlat5.xy, u_xlat5.xy);\n    u_xlat5.x = inversesqrt(u_xlat5.x);\n    u_xlat5.x = u_xlat5.x * _GradientScale;\n    u_xlat10 = _Sharpness + 1.0;\n    u_xlat5.x = u_xlat10 * u_xlat5.x;\n    u_xlat10 = 0.5 / u_xlat5.x;\n    u_xlat0.x = u_xlat10 + u_xlat0.x;\n    u_xlat10_10 = texture2D(_MainTex, vs_TEXCOORD0.xy).w;\n    u_xlat0.x = (-u_xlat10_10) + u_xlat0.x;\n    u_xlat10 = _OutlineWidth * _ScaleRatioA;\n    u_xlat10 = u_xlat5.x * u_xlat10;\n    u_xlat16_2 = u_xlat10 * 0.5;\n    u_xlat16_7 = min(u_xlat10, 1.0);\n    u_xlat16_7 = sqrt(u_xlat16_7);\n    u_xlat16_12 = u_xlat0.x * u_xlat5.x + (-u_xlat16_2);\n    u_xlat16_2 = u_xlat0.x * u_xlat5.x + u_xlat16_2;\n    u_xlat16_2 = clamp(u_xlat16_2, 0.0, 1.0);\n    u_xlat16_2 = u_xlat16_7 * u_xlat16_2;\n    u_xlat0.x = _OutlineSoftness * _ScaleRatioA;\n    u_xlat10 = u_xlat5.x * u_xlat0.x;\n    u_xlat16_7 = u_xlat0.x * u_xlat5.x + 1.0;\n    u_xlat16_12 = u_xlat10 * 0.5 + u_xlat16_12;\n    u_xlat16_7 = u_xlat16_12 / u_xlat16_7;\n    u_xlat16_7 = clamp(u_xlat16_7, 0.0, 1.0);\n    u_xlat16_7 = (-u_xlat16_7) + 1.0;\n    u_xlat0.xy = vec2(_OutlineUVSpeedX, _OutlineUVSpeedY) * _Time.yy + vs_TEXCOORD5.zw;\n    u_xlat10_0 = texture2D(_OutlineTex, u_xlat0.xy);\n    u_xlat1 = u_xlat10_0 * _OutlineColor;\n    u_xlat0.xyz = vs_COLOR0.xyz * _FaceColor.xyz;\n    u_xlat3.xy = vec2(_FaceUVSpeedX, _FaceUVSpeedY) * _Time.yy + vs_TEXCOORD5.xy;\n    u_xlat10_3 = texture2D(_FaceTex, u_xlat3.xy);\n    u_xlat0.xyz = u_xlat0.xyz * u_xlat10_3.xyz;\n    u_xlat3.x = u_xlat10_3.w * _FaceColor.w;\n    u_xlat16_4.xyz = u_xlat0.xyz * u_xlat3.xxx;\n    u_xlat16_1.xyz = u_xlat1.xyz * u_xlat1.www + (-u_xlat16_4.xyz);\n    u_xlat16_1.w = _OutlineColor.w * u_xlat10_0.w + (-u_xlat3.x);\n    u_xlat16_1 = u_xlat16_1 * vec4(u_xlat16_2);\n    u_xlat16_4.w = _FaceColor.w * u_xlat10_3.w + u_xlat16_1.w;\n    u_xlat16_4.xyz = u_xlat0.xyz * u_xlat3.xxx + u_xlat16_1.xyz;\n    u_xlat16_0 = vec4(u_xlat16_7) * u_xlat16_4;\n    u_xlat16_2 = u_xlat16_4.w * u_xlat16_7 + -0.00100000005;\n    u_xlatb3 = u_xlat16_2<0.0;\n    if(u_xlatb3){discard;}\n    u_xlat0 = u_xlat16_0 * vs_COLOR0.wwww;\n    SV_Target0 = u_xlat0;\n    return;\n}\n\n",0,0,1,0,0,["UNITY_UI_ALPHACLIP"],[["IGNOREPROJECTOR","true"],["QUEUE","Transparent"],["RenderType","Transparent"]]],[0,"\n#version 100\n\nuniform \tvec3 _WorldSpaceCameraPos;\nuniform \tvec4 hlslcc_mtx4x4unity_ObjectToWorld[4];\nuniform \tvec4 hlslcc_mtx4x4unity_MatrixVP[4];\nuniform \tfloat _FaceDilate;\nuniform \tvec4 hlslcc_mtx4x4_EnvMatrix[4];\nuniform \tfloat _WeightNormal;\nuniform \tfloat _WeightBold;\nuniform \tfloat _ScaleRatioA;\nuniform \tfloat _VertexOffsetX;\nuniform \tfloat _VertexOffsetY;\nuniform \tvec4 _ClipRect;\nuniform \tvec4 _FaceTex_ST;\nuniform \tvec4 _OutlineTex_ST;\nattribute highp vec4 in_POSITION0;\nattribute highp vec4 in_COLOR0;\nattribute highp vec2 in_TEXCOORD0;\nattribute highp vec2 in_TEXCOORD1;\nvarying highp vec4 vs_COLOR0;\nvarying highp vec2 vs_TEXCOORD0;\nvarying highp float vs_TEXCOORD1;\nvarying highp vec2 vs_TEXCOORD2;\nvarying highp vec3 vs_TEXCOORD3;\nvarying highp vec4 vs_TEXCOORD5;\nvec3 u_xlat0;\nvec4 u_xlat1;\nvec4 u_xlat2;\nvec4 u_xlat3;\nvec2 u_xlat8;\nbool u_xlatb8;\nfloat u_xlat12;\nvoid main()\n{\n    u_xlat0.xy = in_POSITION0.xy + vec2(_VertexOffsetX, _VertexOffsetY);\n    u_xlat1 = u_xlat0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];\n    u_xlat1 = hlslcc_mtx4x4unity_ObjectToWorld[0] * u_xlat0.xxxx + u_xlat1;\n    u_xlat1 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat1;\n    u_xlat2 = u_xlat1 + hlslcc_mtx4x4unity_ObjectToWorld[3];\n    u_xlat1.xyz = hlslcc_mtx4x4unity_ObjectToWorld[3].xyz * in_POSITION0.www + u_xlat1.xyz;\n    u_xlat1.xyz = (-u_xlat1.xyz) + _WorldSpaceCameraPos.xyz;\n    u_xlat3 = u_xlat2.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];\n    u_xlat3 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat2.xxxx + u_xlat3;\n    u_xlat3 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat2.zzzz + u_xlat3;\n    gl_Position = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat2.wwww + u_xlat3;\n    vs_COLOR0 = in_COLOR0;\n    u_xlatb8 = 0.0>=in_TEXCOORD1.y;\n    u_xlat8.x = u_xlatb8 ? 1.0 : float(0.0);\n    u_xlat12 = (-_WeightNormal) + _WeightBold;\n    u_xlat8.x = u_xlat8.x * u_xlat12 + _WeightNormal;\n    u_xlat8.x = u_xlat8.x * 0.25 + _FaceDilate;\n    u_xlat8.x = u_xlat8.x * _ScaleRatioA;\n    vs_TEXCOORD1 = u_xlat8.x * 0.5;\n    vs_TEXCOORD0.xy = in_TEXCOORD0.xy;\n    u_xlat2 = max(_ClipRect, vec4(-2e+10, -2e+10, -2e+10, -2e+10));\n    u_xlat2 = min(u_xlat2, vec4(2e+10, 2e+10, 2e+10, 2e+10));\n    u_xlat0.xy = u_xlat0.xy * vec2(2.0, 2.0) + (-u_xlat2.xy);\n    vs_TEXCOORD2.xy = (-u_xlat2.zw) + u_xlat0.xy;\n    u_xlat0.xyz = u_xlat1.yyy * hlslcc_mtx4x4_EnvMatrix[1].xyz;\n    u_xlat0.xyz = hlslcc_mtx4x4_EnvMatrix[0].xyz * u_xlat1.xxx + u_xlat0.xyz;\n    vs_TEXCOORD3.xyz = hlslcc_mtx4x4_EnvMatrix[2].xyz * u_xlat1.zzz + u_xlat0.xyz;\n    u_xlat0.x = in_TEXCOORD1.x * 0.000244140625;\n    u_xlat8.x = floor(u_xlat0.x);\n    u_xlat8.y = (-u_xlat8.x) * 4096.0 + in_TEXCOORD1.x;\n    u_xlat0.xy = u_xlat8.xy * vec2(0.001953125, 0.001953125);\n    vs_TEXCOORD5.xy = u_xlat0.xy * _FaceTex_ST.xy + _FaceTex_ST.zw;\n    vs_TEXCOORD5.zw = u_xlat0.xy * _OutlineTex_ST.xy + _OutlineTex_ST.zw;\n    return;\n}\n\n","\n#version 100\n#ifdef GL_OES_standard_derivatives\n#extension GL_OES_standard_derivatives : enable\n#endif\n\n#ifdef GL_FRAGMENT_PRECISION_HIGH\n    precision highp float;\n#else\n    precision mediump float;\n#endif\nprecision highp int;\nuniform \tvec4 _Time;\nuniform \tfloat _FaceUVSpeedX;\nuniform \tfloat _FaceUVSpeedY;\nuniform \tmediump vec4 _FaceColor;\nuniform \tfloat _OutlineSoftness;\nuniform \tfloat _OutlineUVSpeedX;\nuniform \tfloat _OutlineUVSpeedY;\nuniform \tmediump vec4 _OutlineColor;\nuniform \tfloat _OutlineWidth;\nuniform \tfloat _ScaleRatioA;\nuniform \tvec4 _ClipRect;\nuniform \tfloat _MaskSoftnessX;\nuniform \tfloat _MaskSoftnessY;\nuniform \tfloat _TextureWidth;\nuniform \tfloat _GradientScale;\nuniform \tfloat _Sharpness;\nuniform lowp sampler2D _MainTex;\nuniform lowp sampler2D _FaceTex;\nuniform lowp sampler2D _OutlineTex;\nvarying highp vec4 vs_COLOR0;\nvarying highp vec2 vs_TEXCOORD0;\nvarying highp float vs_TEXCOORD1;\nvarying highp vec2 vs_TEXCOORD2;\nvarying highp vec4 vs_TEXCOORD5;\n#define SV_Target0 gl_FragData[0]\nvec4 u_xlat0;\nmediump vec4 u_xlat16_0;\nlowp float u_xlat10_0;\nvec3 u_xlat1;\nmediump vec4 u_xlat16_1;\nlowp vec4 u_xlat10_1;\nmediump float u_xlat16_2;\nvec4 u_xlat3;\nmediump vec4 u_xlat16_3;\nlowp vec4 u_xlat10_4;\nmediump vec3 u_xlat16_5;\nvec3 u_xlat6;\nmediump float u_xlat16_8;\nvec2 u_xlat12;\nmediump float u_xlat16_14;\nfloat u_xlat18;\nvoid main()\n{\n    u_xlat10_0 = texture2D(_MainTex, vs_TEXCOORD0.xy).w;\n    u_xlat6.x = (-vs_TEXCOORD1) + 0.5;\n    u_xlat1.x = dFdx(vs_TEXCOORD0.y);\n    u_xlat1.y = dFdy(vs_TEXCOORD0.y);\n    u_xlat12.x = _TextureWidth * 0.75;\n    u_xlat12.xy = u_xlat12.xx * u_xlat1.xy;\n    u_xlat12.x = dot(u_xlat12.xy, u_xlat12.xy);\n    u_xlat12.x = inversesqrt(u_xlat12.x);\n    u_xlat12.x = u_xlat12.x * _GradientScale;\n    u_xlat18 = _Sharpness + 1.0;\n    u_xlat12.x = u_xlat18 * u_xlat12.x;\n    u_xlat18 = 0.5 / u_xlat12.x;\n    u_xlat6.x = u_xlat18 + u_xlat6.x;\n    u_xlat0.x = (-u_xlat10_0) + u_xlat6.x;\n    u_xlat6.x = _OutlineWidth * _ScaleRatioA;\n    u_xlat6.x = u_xlat12.x * u_xlat6.x;\n    u_xlat16_2 = u_xlat6.x * 0.5;\n    u_xlat16_8 = min(u_xlat6.x, 1.0);\n    u_xlat16_8 = sqrt(u_xlat16_8);\n    u_xlat16_14 = u_xlat0.x * u_xlat12.x + (-u_xlat16_2);\n    u_xlat16_2 = u_xlat0.x * u_xlat12.x + u_xlat16_2;\n    u_xlat16_2 = clamp(u_xlat16_2, 0.0, 1.0);\n    u_xlat16_2 = u_xlat16_8 * u_xlat16_2;\n    u_xlat0.x = _OutlineSoftness * _ScaleRatioA;\n    u_xlat6.x = u_xlat12.x * u_xlat0.x;\n    u_xlat16_8 = u_xlat0.x * u_xlat12.x + 1.0;\n    u_xlat0.x = float(1.0) / u_xlat12.x;\n    u_xlat0.xz = vec2(_MaskSoftnessX, _MaskSoftnessY) * vec2(0.25, 0.25) + u_xlat0.xx;\n    u_xlat0.xz = vec2(0.25, 0.25) / u_xlat0.xz;\n    u_xlat16_14 = u_xlat6.x * 0.5 + u_xlat16_14;\n    u_xlat16_8 = u_xlat16_14 / u_xlat16_8;\n    u_xlat16_8 = clamp(u_xlat16_8, 0.0, 1.0);\n    u_xlat16_8 = (-u_xlat16_8) + 1.0;\n    u_xlat6.xz = vec2(_OutlineUVSpeedX, _OutlineUVSpeedY) * _Time.yy + vs_TEXCOORD5.zw;\n    u_xlat10_1 = texture2D(_OutlineTex, u_xlat6.xz);\n    u_xlat3 = u_xlat10_1 * _OutlineColor;\n    u_xlat1.xyz = vs_COLOR0.xyz * _FaceColor.xyz;\n    u_xlat6.xz = vec2(_FaceUVSpeedX, _FaceUVSpeedY) * _Time.yy + vs_TEXCOORD5.xy;\n    u_xlat10_4 = texture2D(_FaceTex, u_xlat6.xz);\n    u_xlat1.xyz = u_xlat1.xyz * u_xlat10_4.xyz;\n    u_xlat6.x = u_xlat10_4.w * _FaceColor.w;\n    u_xlat16_5.xyz = u_xlat6.xxx * u_xlat1.xyz;\n    u_xlat16_3.xyz = u_xlat3.xyz * u_xlat3.www + (-u_xlat16_5.xyz);\n    u_xlat16_3.w = _OutlineColor.w * u_xlat10_1.w + (-u_xlat6.x);\n    u_xlat16_3 = vec4(u_xlat16_2) * u_xlat16_3;\n    u_xlat16_1.xyz = u_xlat1.xyz * u_xlat6.xxx + u_xlat16_3.xyz;\n    u_xlat16_1.w = _FaceColor.w * u_xlat10_4.w + u_xlat16_3.w;\n    u_xlat16_1 = vec4(u_xlat16_8) * u_xlat16_1;\n    u_xlat6.xz = (-_ClipRect.xy) + _ClipRect.zw;\n    u_xlat6.xz = u_xlat6.xz + -abs(vs_TEXCOORD2.xy);\n    u_xlat0.xy = u_xlat0.xz * u_xlat6.xz;\n    u_xlat0.xy = clamp(u_xlat0.xy, 0.0, 1.0);\n    u_xlat16_2 = u_xlat0.y * u_xlat0.x;\n    u_xlat16_0 = u_xlat16_1 * vec4(u_xlat16_2);\n    u_xlat0 = u_xlat16_0 * vs_COLOR0.wwww;\n    SV_Target0 = u_xlat0;\n    return;\n}\n\n",0,0,2,0,0,["UNITY_UI_CLIP_RECT"],[["IGNOREPROJECTOR","true"],["QUEUE","Transparent"],["RenderType","Transparent"]]],[0,"\n#version 100\n\nuniform \tvec3 _WorldSpaceCameraPos;\nuniform \tvec4 hlslcc_mtx4x4unity_ObjectToWorld[4];\nuniform \tvec4 hlslcc_mtx4x4unity_MatrixVP[4];\nuniform \tfloat _FaceDilate;\nuniform \tvec4 hlslcc_mtx4x4_EnvMatrix[4];\nuniform \tfloat _WeightNormal;\nuniform \tfloat _WeightBold;\nuniform \tfloat _ScaleRatioA;\nuniform \tfloat _VertexOffsetX;\nuniform \tfloat _VertexOffsetY;\nuniform \tvec4 _ClipRect;\nuniform \tvec4 _FaceTex_ST;\nuniform \tvec4 _OutlineTex_ST;\nattribute highp vec4 in_POSITION0;\nattribute highp vec4 in_COLOR0;\nattribute highp vec2 in_TEXCOORD0;\nattribute highp vec2 in_TEXCOORD1;\nvarying highp vec4 vs_COLOR0;\nvarying highp vec2 vs_TEXCOORD0;\nvarying highp float vs_TEXCOORD1;\nvarying highp vec2 vs_TEXCOORD2;\nvarying highp vec3 vs_TEXCOORD3;\nvarying highp vec4 vs_TEXCOORD5;\nvec3 u_xlat0;\nvec4 u_xlat1;\nvec4 u_xlat2;\nvec4 u_xlat3;\nvec2 u_xlat8;\nbool u_xlatb8;\nfloat u_xlat12;\nvoid main()\n{\n    u_xlat0.xy = in_POSITION0.xy + vec2(_VertexOffsetX, _VertexOffsetY);\n    u_xlat1 = u_xlat0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];\n    u_xlat1 = hlslcc_mtx4x4unity_ObjectToWorld[0] * u_xlat0.xxxx + u_xlat1;\n    u_xlat1 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat1;\n    u_xlat2 = u_xlat1 + hlslcc_mtx4x4unity_ObjectToWorld[3];\n    u_xlat1.xyz = hlslcc_mtx4x4unity_ObjectToWorld[3].xyz * in_POSITION0.www + u_xlat1.xyz;\n    u_xlat1.xyz = (-u_xlat1.xyz) + _WorldSpaceCameraPos.xyz;\n    u_xlat3 = u_xlat2.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];\n    u_xlat3 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat2.xxxx + u_xlat3;\n    u_xlat3 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat2.zzzz + u_xlat3;\n    gl_Position = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat2.wwww + u_xlat3;\n    vs_COLOR0 = in_COLOR0;\n    u_xlatb8 = 0.0>=in_TEXCOORD1.y;\n    u_xlat8.x = u_xlatb8 ? 1.0 : float(0.0);\n    u_xlat12 = (-_WeightNormal) + _WeightBold;\n    u_xlat8.x = u_xlat8.x * u_xlat12 + _WeightNormal;\n    u_xlat8.x = u_xlat8.x * 0.25 + _FaceDilate;\n    u_xlat8.x = u_xlat8.x * _ScaleRatioA;\n    vs_TEXCOORD1 = u_xlat8.x * 0.5;\n    vs_TEXCOORD0.xy = in_TEXCOORD0.xy;\n    u_xlat2 = max(_ClipRect, vec4(-2e+10, -2e+10, -2e+10, -2e+10));\n    u_xlat2 = min(u_xlat2, vec4(2e+10, 2e+10, 2e+10, 2e+10));\n    u_xlat0.xy = u_xlat0.xy * vec2(2.0, 2.0) + (-u_xlat2.xy);\n    vs_TEXCOORD2.xy = (-u_xlat2.zw) + u_xlat0.xy;\n    u_xlat0.xyz = u_xlat1.yyy * hlslcc_mtx4x4_EnvMatrix[1].xyz;\n    u_xlat0.xyz = hlslcc_mtx4x4_EnvMatrix[0].xyz * u_xlat1.xxx + u_xlat0.xyz;\n    vs_TEXCOORD3.xyz = hlslcc_mtx4x4_EnvMatrix[2].xyz * u_xlat1.zzz + u_xlat0.xyz;\n    u_xlat0.x = in_TEXCOORD1.x * 0.000244140625;\n    u_xlat8.x = floor(u_xlat0.x);\n    u_xlat8.y = (-u_xlat8.x) * 4096.0 + in_TEXCOORD1.x;\n    u_xlat0.xy = u_xlat8.xy * vec2(0.001953125, 0.001953125);\n    vs_TEXCOORD5.xy = u_xlat0.xy * _FaceTex_ST.xy + _FaceTex_ST.zw;\n    vs_TEXCOORD5.zw = u_xlat0.xy * _OutlineTex_ST.xy + _OutlineTex_ST.zw;\n    return;\n}\n\n","\n#version 100\n#ifdef GL_OES_standard_derivatives\n#extension GL_OES_standard_derivatives : enable\n#endif\n\n#ifdef GL_FRAGMENT_PRECISION_HIGH\n    precision highp float;\n#else\n    precision mediump float;\n#endif\nprecision highp int;\nuniform \tvec4 _Time;\nuniform \tfloat _FaceUVSpeedX;\nuniform \tfloat _FaceUVSpeedY;\nuniform \tmediump vec4 _FaceColor;\nuniform \tfloat _OutlineSoftness;\nuniform \tfloat _OutlineUVSpeedX;\nuniform \tfloat _OutlineUVSpeedY;\nuniform \tmediump vec4 _OutlineColor;\nuniform \tfloat _OutlineWidth;\nuniform \tfloat _ScaleRatioA;\nuniform \tvec4 _ClipRect;\nuniform \tfloat _MaskSoftnessX;\nuniform \tfloat _MaskSoftnessY;\nuniform \tfloat _TextureWidth;\nuniform \tfloat _GradientScale;\nuniform \tfloat _Sharpness;\nuniform lowp sampler2D _MainTex;\nuniform lowp sampler2D _FaceTex;\nuniform lowp sampler2D _OutlineTex;\nvarying highp vec4 vs_COLOR0;\nvarying highp vec2 vs_TEXCOORD0;\nvarying highp float vs_TEXCOORD1;\nvarying highp vec2 vs_TEXCOORD2;\nvarying highp vec4 vs_TEXCOORD5;\n#define SV_Target0 gl_FragData[0]\nvec4 u_xlat0;\nmediump vec4 u_xlat16_0;\nlowp float u_xlat10_0;\nvec3 u_xlat1;\nmediump vec4 u_xlat16_1;\nlowp vec4 u_xlat10_1;\nmediump float u_xlat16_2;\nvec4 u_xlat3;\nmediump vec4 u_xlat16_3;\nlowp vec4 u_xlat10_4;\nbool u_xlatb4;\nmediump vec3 u_xlat16_5;\nvec3 u_xlat6;\nmediump float u_xlat16_8;\nvec2 u_xlat12;\nmediump float u_xlat16_14;\nfloat u_xlat18;\nvoid main()\n{\n    u_xlat10_0 = texture2D(_MainTex, vs_TEXCOORD0.xy).w;\n    u_xlat6.x = (-vs_TEXCOORD1) + 0.5;\n    u_xlat1.x = dFdx(vs_TEXCOORD0.y);\n    u_xlat1.y = dFdy(vs_TEXCOORD0.y);\n    u_xlat12.x = _TextureWidth * 0.75;\n    u_xlat12.xy = u_xlat12.xx * u_xlat1.xy;\n    u_xlat12.x = dot(u_xlat12.xy, u_xlat12.xy);\n    u_xlat12.x = inversesqrt(u_xlat12.x);\n    u_xlat12.x = u_xlat12.x * _GradientScale;\n    u_xlat18 = _Sharpness + 1.0;\n    u_xlat12.x = u_xlat18 * u_xlat12.x;\n    u_xlat18 = 0.5 / u_xlat12.x;\n    u_xlat6.x = u_xlat18 + u_xlat6.x;\n    u_xlat0.x = (-u_xlat10_0) + u_xlat6.x;\n    u_xlat6.x = _OutlineWidth * _ScaleRatioA;\n    u_xlat6.x = u_xlat12.x * u_xlat6.x;\n    u_xlat16_2 = u_xlat6.x * 0.5;\n    u_xlat16_8 = min(u_xlat6.x, 1.0);\n    u_xlat16_8 = sqrt(u_xlat16_8);\n    u_xlat16_14 = u_xlat0.x * u_xlat12.x + (-u_xlat16_2);\n    u_xlat16_2 = u_xlat0.x * u_xlat12.x + u_xlat16_2;\n    u_xlat16_2 = clamp(u_xlat16_2, 0.0, 1.0);\n    u_xlat16_2 = u_xlat16_8 * u_xlat16_2;\n    u_xlat0.x = _OutlineSoftness * _ScaleRatioA;\n    u_xlat6.x = u_xlat12.x * u_xlat0.x;\n    u_xlat16_8 = u_xlat0.x * u_xlat12.x + 1.0;\n    u_xlat0.x = float(1.0) / u_xlat12.x;\n    u_xlat0.xz = vec2(_MaskSoftnessX, _MaskSoftnessY) * vec2(0.25, 0.25) + u_xlat0.xx;\n    u_xlat0.xz = vec2(0.25, 0.25) / u_xlat0.xz;\n    u_xlat16_14 = u_xlat6.x * 0.5 + u_xlat16_14;\n    u_xlat16_8 = u_xlat16_14 / u_xlat16_8;\n    u_xlat16_8 = clamp(u_xlat16_8, 0.0, 1.0);\n    u_xlat16_8 = (-u_xlat16_8) + 1.0;\n    u_xlat6.xz = vec2(_OutlineUVSpeedX, _OutlineUVSpeedY) * _Time.yy + vs_TEXCOORD5.zw;\n    u_xlat10_1 = texture2D(_OutlineTex, u_xlat6.xz);\n    u_xlat3 = u_xlat10_1 * _OutlineColor;\n    u_xlat1.xyz = vs_COLOR0.xyz * _FaceColor.xyz;\n    u_xlat6.xz = vec2(_FaceUVSpeedX, _FaceUVSpeedY) * _Time.yy + vs_TEXCOORD5.xy;\n    u_xlat10_4 = texture2D(_FaceTex, u_xlat6.xz);\n    u_xlat1.xyz = u_xlat1.xyz * u_xlat10_4.xyz;\n    u_xlat6.x = u_xlat10_4.w * _FaceColor.w;\n    u_xlat16_5.xyz = u_xlat6.xxx * u_xlat1.xyz;\n    u_xlat16_3.xyz = u_xlat3.xyz * u_xlat3.www + (-u_xlat16_5.xyz);\n    u_xlat16_3.w = _OutlineColor.w * u_xlat10_1.w + (-u_xlat6.x);\n    u_xlat16_3 = vec4(u_xlat16_2) * u_xlat16_3;\n    u_xlat16_1.xyz = u_xlat1.xyz * u_xlat6.xxx + u_xlat16_3.xyz;\n    u_xlat16_1.w = _FaceColor.w * u_xlat10_4.w + u_xlat16_3.w;\n    u_xlat16_1 = vec4(u_xlat16_8) * u_xlat16_1;\n    u_xlat6.xz = (-_ClipRect.xy) + _ClipRect.zw;\n    u_xlat6.xz = u_xlat6.xz + -abs(vs_TEXCOORD2.xy);\n    u_xlat0.xy = u_xlat0.xz * u_xlat6.xz;\n    u_xlat0.xy = clamp(u_xlat0.xy, 0.0, 1.0);\n    u_xlat16_2 = u_xlat0.y * u_xlat0.x;\n    u_xlat16_8 = u_xlat16_1.w * u_xlat16_2 + -0.00100000005;\n    u_xlat16_0 = u_xlat16_1 * vec4(u_xlat16_2);\n    u_xlat0 = u_xlat16_0 * vs_COLOR0.wwww;\n    SV_Target0 = u_xlat0;\n    u_xlatb4 = u_xlat16_8<0.0;\n    if(u_xlatb4){discard;}\n    return;\n}\n\n",0,0,3,0,0,["UNITY_UI_ALPHACLIP","UNITY_UI_CLIP_RECT"],[["IGNOREPROJECTOR","true"],["QUEUE","Transparent"],["RenderType","Transparent"]]]],["BEVEL_ON","FORCE_LINEAR","GLOW_ON","STEREO_CUBEMAP_RENDER_ON","STEREO_INSTANCING_ON","STEREO_MULTIVIEW_ON","UNDERLAY_INNER","UNDERLAY_ON","UNITY_SINGLE_PASS_STEREO","UNITY_UI_ALPHACLIP","UNITY_UI_CLIP_RECT","__"],[[["__","BEVEL_ON"]],[["__","UNDERLAY_ON","UNDERLAY_INNER"]],[["__","GLOW_ON"]],[["__","FORCE_LINEAR"]],[["__","UNITY_UI_CLIP_RECT"]],[["__","UNITY_UI_ALPHACLIP"]]],0,0,5,0,0,0,0,[["IGNOREPROJECTOR","true"],["QUEUE","Transparent"],["RenderType","Transparent"]],null,"",227,-1]],[["IGNOREPROJECTOR","true"],["QUEUE","Transparent"],["RenderType","Transparent"]],0]],0,414,"Assets/TextMesh Pro/Shaders/TMP_SDF SSD.shader",["BEVEL_ON","FORCE_LINEAR","GLOW_ON","UNDERLAY_INNER","UNDERLAY_ON","UNITY_UI_ALPHACLIP","UNITY_UI_CLIP_RECT","STEREO_CUBEMAP_RENDER_ON","STEREO_INSTANCING_ON","STEREO_MULTIVIEW_ON","UNITY_SINGLE_PASS_STEREO","__"],0,408,[],5],[[[0,[["TextMeshPro/Mobile/Bitmap",[[0,"\n#version 100\n\nuniform \tvec4 _ScreenParams;\nuniform \tvec4 hlslcc_mtx4x4unity_ObjectToWorld[4];\nuniform \tvec4 hlslcc_mtx4x4unity_MatrixVP[4];\nuniform \tmediump vec4 _Color;\nuniform \tfloat _DiffusePower;\nuniform \tfloat _VertexOffsetX;\nuniform \tfloat _VertexOffsetY;\nuniform \tvec4 _ClipRect;\nuniform \tfloat _MaskSoftnessX;\nuniform \tfloat _MaskSoftnessY;\nattribute highp vec4 in_POSITION0;\nattribute mediump vec4 in_COLOR0;\nattribute highp vec2 in_TEXCOORD0;\nvarying mediump vec4 vs_COLOR0;\nvarying highp vec2 vs_TEXCOORD0;\nvarying highp vec4 vs_TEXCOORD2;\nvec2 u_xlat0;\nvec4 u_xlat1;\nmediump vec4 u_xlat16_1;\nvec4 u_xlat2;\nvec2 u_xlat6;\nfloat unity_roundEven(float x) { float y = floor(x + 0.5); return (y - x == 0.5) ? floor(0.5*y) * 2.0 : y; }\nvec2 unity_roundEven(vec2 a) { a.x = unity_roundEven(a.x); a.y = unity_roundEven(a.y); return a; }\nvec3 unity_roundEven(vec3 a) { a.x = unity_roundEven(a.x); a.y = unity_roundEven(a.y); a.z = unity_roundEven(a.z); return a; }\nvec4 unity_roundEven(vec4 a) { a.x = unity_roundEven(a.x); a.y = unity_roundEven(a.y); a.z = unity_roundEven(a.z); a.w = unity_roundEven(a.w); return a; }\n\nvoid main()\n{\n    u_xlat0.x = in_POSITION0.w * 0.5;\n    u_xlat0.xy = u_xlat0.xx / _ScreenParams.xy;\n    u_xlat6.xy = in_POSITION0.xy + vec2(_VertexOffsetX, _VertexOffsetY);\n    u_xlat0.xy = u_xlat0.xy + u_xlat6.xy;\n    u_xlat1 = u_xlat0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];\n    u_xlat1 = hlslcc_mtx4x4unity_ObjectToWorld[0] * u_xlat0.xxxx + u_xlat1;\n    u_xlat1 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat1;\n    u_xlat1 = u_xlat1 + hlslcc_mtx4x4unity_ObjectToWorld[3];\n    u_xlat2 = u_xlat1.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];\n    u_xlat2 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat1.xxxx + u_xlat2;\n    u_xlat2 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat1.zzzz + u_xlat2;\n    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat1.wwww + u_xlat2;\n    u_xlat6.xy = u_xlat1.xy / u_xlat1.ww;\n    u_xlat1.xy = _ScreenParams.xy * vec2(0.5, 0.5);\n    u_xlat6.xy = u_xlat6.xy * u_xlat1.xy;\n    u_xlat6.xy = unity_roundEven(u_xlat6.xy);\n    u_xlat6.xy = u_xlat6.xy / u_xlat1.xy;\n    gl_Position.xy = u_xlat1.ww * u_xlat6.xy;\n    gl_Position.zw = u_xlat1.zw;\n    u_xlat6.xy = vec2(_MaskSoftnessX, _MaskSoftnessY) * vec2(0.25, 0.25) + u_xlat1.ww;\n    vs_TEXCOORD2.zw = vec2(0.25, 0.25) / u_xlat6.xy;\n    u_xlat16_1 = in_COLOR0 * _Color;\n    u_xlat2.xyz = u_xlat16_1.xyz * vec3(_DiffusePower);\n    vs_COLOR0.w = u_xlat16_1.w;\n    vs_COLOR0.xyz = u_xlat2.xyz;\n    vs_TEXCOORD0.xy = in_TEXCOORD0.xy;\n    u_xlat1 = max(_ClipRect, vec4(-2e+10, -2e+10, -2e+10, -2e+10));\n    u_xlat1 = min(u_xlat1, vec4(2e+10, 2e+10, 2e+10, 2e+10));\n    u_xlat0.xy = u_xlat0.xy * vec2(2.0, 2.0) + (-u_xlat1.xy);\n    vs_TEXCOORD2.xy = (-u_xlat1.zw) + u_xlat0.xy;\n    return;\n}\n\n","\n#version 100\n\n#ifdef GL_FRAGMENT_PRECISION_HIGH\n    precision highp float;\n#else\n    precision mediump float;\n#endif\nprecision highp int;\nuniform lowp sampler2D _MainTex;\nvarying mediump vec4 vs_COLOR0;\nvarying highp vec2 vs_TEXCOORD0;\n#define SV_Target0 gl_FragData[0]\nfloat u_xlat0;\nlowp float u_xlat10_0;\nvoid main()\n{\n    u_xlat10_0 = texture2D(_MainTex, vs_TEXCOORD0.xy).w;\n    u_xlat0 = u_xlat10_0 * vs_COLOR0.w;\n    SV_Target0.w = u_xlat0;\n    SV_Target0.xyz = vs_COLOR0.xyz;\n    return;\n}\n\n",0,0,0,0,0,[],[["IGNOREPROJECTOR","true"],["QUEUE","Transparent"],["RenderType","Transparent"]]],[0,"\n#version 100\n\nuniform \tvec4 _ScreenParams;\nuniform \tvec4 hlslcc_mtx4x4unity_ObjectToWorld[4];\nuniform \tvec4 hlslcc_mtx4x4unity_MatrixVP[4];\nuniform \tmediump vec4 _Color;\nuniform \tfloat _DiffusePower;\nuniform \tfloat _VertexOffsetX;\nuniform \tfloat _VertexOffsetY;\nuniform \tvec4 _ClipRect;\nuniform \tfloat _MaskSoftnessX;\nuniform \tfloat _MaskSoftnessY;\nattribute highp vec4 in_POSITION0;\nattribute mediump vec4 in_COLOR0;\nattribute highp vec2 in_TEXCOORD0;\nvarying mediump vec4 vs_COLOR0;\nvarying highp vec2 vs_TEXCOORD0;\nvarying highp vec4 vs_TEXCOORD2;\nvec2 u_xlat0;\nvec4 u_xlat1;\nmediump vec4 u_xlat16_1;\nvec4 u_xlat2;\nvec2 u_xlat6;\nfloat unity_roundEven(float x) { float y = floor(x + 0.5); return (y - x == 0.5) ? floor(0.5*y) * 2.0 : y; }\nvec2 unity_roundEven(vec2 a) { a.x = unity_roundEven(a.x); a.y = unity_roundEven(a.y); return a; }\nvec3 unity_roundEven(vec3 a) { a.x = unity_roundEven(a.x); a.y = unity_roundEven(a.y); a.z = unity_roundEven(a.z); return a; }\nvec4 unity_roundEven(vec4 a) { a.x = unity_roundEven(a.x); a.y = unity_roundEven(a.y); a.z = unity_roundEven(a.z); a.w = unity_roundEven(a.w); return a; }\n\nvoid main()\n{\n    u_xlat0.x = in_POSITION0.w * 0.5;\n    u_xlat0.xy = u_xlat0.xx / _ScreenParams.xy;\n    u_xlat6.xy = in_POSITION0.xy + vec2(_VertexOffsetX, _VertexOffsetY);\n    u_xlat0.xy = u_xlat0.xy + u_xlat6.xy;\n    u_xlat1 = u_xlat0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];\n    u_xlat1 = hlslcc_mtx4x4unity_ObjectToWorld[0] * u_xlat0.xxxx + u_xlat1;\n    u_xlat1 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat1;\n    u_xlat1 = u_xlat1 + hlslcc_mtx4x4unity_ObjectToWorld[3];\n    u_xlat2 = u_xlat1.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];\n    u_xlat2 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat1.xxxx + u_xlat2;\n    u_xlat2 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat1.zzzz + u_xlat2;\n    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat1.wwww + u_xlat2;\n    u_xlat6.xy = u_xlat1.xy / u_xlat1.ww;\n    u_xlat1.xy = _ScreenParams.xy * vec2(0.5, 0.5);\n    u_xlat6.xy = u_xlat6.xy * u_xlat1.xy;\n    u_xlat6.xy = unity_roundEven(u_xlat6.xy);\n    u_xlat6.xy = u_xlat6.xy / u_xlat1.xy;\n    gl_Position.xy = u_xlat1.ww * u_xlat6.xy;\n    gl_Position.zw = u_xlat1.zw;\n    u_xlat6.xy = vec2(_MaskSoftnessX, _MaskSoftnessY) * vec2(0.25, 0.25) + u_xlat1.ww;\n    vs_TEXCOORD2.zw = vec2(0.25, 0.25) / u_xlat6.xy;\n    u_xlat16_1 = in_COLOR0 * _Color;\n    u_xlat2.xyz = u_xlat16_1.xyz * vec3(_DiffusePower);\n    vs_COLOR0.w = u_xlat16_1.w;\n    vs_COLOR0.xyz = u_xlat2.xyz;\n    vs_TEXCOORD0.xy = in_TEXCOORD0.xy;\n    u_xlat1 = max(_ClipRect, vec4(-2e+10, -2e+10, -2e+10, -2e+10));\n    u_xlat1 = min(u_xlat1, vec4(2e+10, 2e+10, 2e+10, 2e+10));\n    u_xlat0.xy = u_xlat0.xy * vec2(2.0, 2.0) + (-u_xlat1.xy);\n    vs_TEXCOORD2.xy = (-u_xlat1.zw) + u_xlat0.xy;\n    return;\n}\n\n","\n#version 100\n\n#ifdef GL_FRAGMENT_PRECISION_HIGH\n    precision highp float;\n#else\n    precision mediump float;\n#endif\nprecision highp int;\nuniform lowp sampler2D _MainTex;\nvarying mediump vec4 vs_COLOR0;\nvarying highp vec2 vs_TEXCOORD0;\n#define SV_Target0 gl_FragData[0]\nfloat u_xlat0;\nlowp float u_xlat10_0;\nbool u_xlatb0;\nmediump float u_xlat16_1;\nvoid main()\n{\n    u_xlat10_0 = texture2D(_MainTex, vs_TEXCOORD0.xy).w;\n    u_xlat16_1 = vs_COLOR0.w * u_xlat10_0 + -0.00100000005;\n    u_xlat0 = u_xlat10_0 * vs_COLOR0.w;\n    SV_Target0.w = u_xlat0;\n    u_xlatb0 = u_xlat16_1<0.0;\n    if(u_xlatb0){discard;}\n    SV_Target0.xyz = vs_COLOR0.xyz;\n    return;\n}\n\n",0,0,1,0,0,["UNITY_UI_ALPHACLIP"],[["IGNOREPROJECTOR","true"],["QUEUE","Transparent"],["RenderType","Transparent"]]],[0,"\n#version 100\n\nuniform \tvec4 _ScreenParams;\nuniform \tvec4 hlslcc_mtx4x4unity_ObjectToWorld[4];\nuniform \tvec4 hlslcc_mtx4x4unity_MatrixVP[4];\nuniform \tmediump vec4 _Color;\nuniform \tfloat _DiffusePower;\nuniform \tfloat _VertexOffsetX;\nuniform \tfloat _VertexOffsetY;\nuniform \tvec4 _ClipRect;\nuniform \tfloat _MaskSoftnessX;\nuniform \tfloat _MaskSoftnessY;\nattribute highp vec4 in_POSITION0;\nattribute mediump vec4 in_COLOR0;\nattribute highp vec2 in_TEXCOORD0;\nvarying mediump vec4 vs_COLOR0;\nvarying highp vec2 vs_TEXCOORD0;\nvarying highp vec4 vs_TEXCOORD2;\nvec2 u_xlat0;\nvec4 u_xlat1;\nmediump vec4 u_xlat16_1;\nvec4 u_xlat2;\nvec2 u_xlat6;\nfloat unity_roundEven(float x) { float y = floor(x + 0.5); return (y - x == 0.5) ? floor(0.5*y) * 2.0 : y; }\nvec2 unity_roundEven(vec2 a) { a.x = unity_roundEven(a.x); a.y = unity_roundEven(a.y); return a; }\nvec3 unity_roundEven(vec3 a) { a.x = unity_roundEven(a.x); a.y = unity_roundEven(a.y); a.z = unity_roundEven(a.z); return a; }\nvec4 unity_roundEven(vec4 a) { a.x = unity_roundEven(a.x); a.y = unity_roundEven(a.y); a.z = unity_roundEven(a.z); a.w = unity_roundEven(a.w); return a; }\n\nvoid main()\n{\n    u_xlat0.x = in_POSITION0.w * 0.5;\n    u_xlat0.xy = u_xlat0.xx / _ScreenParams.xy;\n    u_xlat6.xy = in_POSITION0.xy + vec2(_VertexOffsetX, _VertexOffsetY);\n    u_xlat0.xy = u_xlat0.xy + u_xlat6.xy;\n    u_xlat1 = u_xlat0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];\n    u_xlat1 = hlslcc_mtx4x4unity_ObjectToWorld[0] * u_xlat0.xxxx + u_xlat1;\n    u_xlat1 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat1;\n    u_xlat1 = u_xlat1 + hlslcc_mtx4x4unity_ObjectToWorld[3];\n    u_xlat2 = u_xlat1.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];\n    u_xlat2 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat1.xxxx + u_xlat2;\n    u_xlat2 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat1.zzzz + u_xlat2;\n    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat1.wwww + u_xlat2;\n    u_xlat6.xy = u_xlat1.xy / u_xlat1.ww;\n    u_xlat1.xy = _ScreenParams.xy * vec2(0.5, 0.5);\n    u_xlat6.xy = u_xlat6.xy * u_xlat1.xy;\n    u_xlat6.xy = unity_roundEven(u_xlat6.xy);\n    u_xlat6.xy = u_xlat6.xy / u_xlat1.xy;\n    gl_Position.xy = u_xlat1.ww * u_xlat6.xy;\n    gl_Position.zw = u_xlat1.zw;\n    u_xlat6.xy = vec2(_MaskSoftnessX, _MaskSoftnessY) * vec2(0.25, 0.25) + u_xlat1.ww;\n    vs_TEXCOORD2.zw = vec2(0.25, 0.25) / u_xlat6.xy;\n    u_xlat16_1 = in_COLOR0 * _Color;\n    u_xlat2.xyz = u_xlat16_1.xyz * vec3(_DiffusePower);\n    vs_COLOR0.w = u_xlat16_1.w;\n    vs_COLOR0.xyz = u_xlat2.xyz;\n    vs_TEXCOORD0.xy = in_TEXCOORD0.xy;\n    u_xlat1 = max(_ClipRect, vec4(-2e+10, -2e+10, -2e+10, -2e+10));\n    u_xlat1 = min(u_xlat1, vec4(2e+10, 2e+10, 2e+10, 2e+10));\n    u_xlat0.xy = u_xlat0.xy * vec2(2.0, 2.0) + (-u_xlat1.xy);\n    vs_TEXCOORD2.xy = (-u_xlat1.zw) + u_xlat0.xy;\n    return;\n}\n\n","\n#version 100\n\n#ifdef GL_FRAGMENT_PRECISION_HIGH\n    precision highp float;\n#else\n    precision mediump float;\n#endif\nprecision highp int;\nuniform \tvec4 _ClipRect;\nuniform lowp sampler2D _MainTex;\nvarying mediump vec4 vs_COLOR0;\nvarying highp vec2 vs_TEXCOORD0;\nvarying highp vec4 vs_TEXCOORD2;\n#define SV_Target0 gl_FragData[0]\nfloat u_xlat0;\nlowp float u_xlat10_0;\nmediump float u_xlat16_1;\nvec2 u_xlat2;\nvoid main()\n{\n    u_xlat10_0 = texture2D(_MainTex, vs_TEXCOORD0.xy).w;\n    u_xlat0 = u_xlat10_0 * vs_COLOR0.w;\n    u_xlat2.xy = (-_ClipRect.xy) + _ClipRect.zw;\n    u_xlat2.xy = u_xlat2.xy + -abs(vs_TEXCOORD2.xy);\n    u_xlat2.xy = u_xlat2.xy * vs_TEXCOORD2.zw;\n    u_xlat2.xy = clamp(u_xlat2.xy, 0.0, 1.0);\n    u_xlat16_1 = u_xlat2.y * u_xlat2.x;\n    SV_Target0.w = u_xlat0 * u_xlat16_1;\n    SV_Target0.xyz = vec3(u_xlat16_1) * vs_COLOR0.xyz;\n    return;\n}\n\n",0,0,2,0,0,["UNITY_UI_CLIP_RECT"],[["IGNOREPROJECTOR","true"],["QUEUE","Transparent"],["RenderType","Transparent"]]],[0,"\n#version 100\n\nuniform \tvec4 _ScreenParams;\nuniform \tvec4 hlslcc_mtx4x4unity_ObjectToWorld[4];\nuniform \tvec4 hlslcc_mtx4x4unity_MatrixVP[4];\nuniform \tmediump vec4 _Color;\nuniform \tfloat _DiffusePower;\nuniform \tfloat _VertexOffsetX;\nuniform \tfloat _VertexOffsetY;\nuniform \tvec4 _ClipRect;\nuniform \tfloat _MaskSoftnessX;\nuniform \tfloat _MaskSoftnessY;\nattribute highp vec4 in_POSITION0;\nattribute mediump vec4 in_COLOR0;\nattribute highp vec2 in_TEXCOORD0;\nvarying mediump vec4 vs_COLOR0;\nvarying highp vec2 vs_TEXCOORD0;\nvarying highp vec4 vs_TEXCOORD2;\nvec2 u_xlat0;\nvec4 u_xlat1;\nmediump vec4 u_xlat16_1;\nvec4 u_xlat2;\nvec2 u_xlat6;\nfloat unity_roundEven(float x) { float y = floor(x + 0.5); return (y - x == 0.5) ? floor(0.5*y) * 2.0 : y; }\nvec2 unity_roundEven(vec2 a) { a.x = unity_roundEven(a.x); a.y = unity_roundEven(a.y); return a; }\nvec3 unity_roundEven(vec3 a) { a.x = unity_roundEven(a.x); a.y = unity_roundEven(a.y); a.z = unity_roundEven(a.z); return a; }\nvec4 unity_roundEven(vec4 a) { a.x = unity_roundEven(a.x); a.y = unity_roundEven(a.y); a.z = unity_roundEven(a.z); a.w = unity_roundEven(a.w); return a; }\n\nvoid main()\n{\n    u_xlat0.x = in_POSITION0.w * 0.5;\n    u_xlat0.xy = u_xlat0.xx / _ScreenParams.xy;\n    u_xlat6.xy = in_POSITION0.xy + vec2(_VertexOffsetX, _VertexOffsetY);\n    u_xlat0.xy = u_xlat0.xy + u_xlat6.xy;\n    u_xlat1 = u_xlat0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];\n    u_xlat1 = hlslcc_mtx4x4unity_ObjectToWorld[0] * u_xlat0.xxxx + u_xlat1;\n    u_xlat1 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat1;\n    u_xlat1 = u_xlat1 + hlslcc_mtx4x4unity_ObjectToWorld[3];\n    u_xlat2 = u_xlat1.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];\n    u_xlat2 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat1.xxxx + u_xlat2;\n    u_xlat2 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat1.zzzz + u_xlat2;\n    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat1.wwww + u_xlat2;\n    u_xlat6.xy = u_xlat1.xy / u_xlat1.ww;\n    u_xlat1.xy = _ScreenParams.xy * vec2(0.5, 0.5);\n    u_xlat6.xy = u_xlat6.xy * u_xlat1.xy;\n    u_xlat6.xy = unity_roundEven(u_xlat6.xy);\n    u_xlat6.xy = u_xlat6.xy / u_xlat1.xy;\n    gl_Position.xy = u_xlat1.ww * u_xlat6.xy;\n    gl_Position.zw = u_xlat1.zw;\n    u_xlat6.xy = vec2(_MaskSoftnessX, _MaskSoftnessY) * vec2(0.25, 0.25) + u_xlat1.ww;\n    vs_TEXCOORD2.zw = vec2(0.25, 0.25) / u_xlat6.xy;\n    u_xlat16_1 = in_COLOR0 * _Color;\n    u_xlat2.xyz = u_xlat16_1.xyz * vec3(_DiffusePower);\n    vs_COLOR0.w = u_xlat16_1.w;\n    vs_COLOR0.xyz = u_xlat2.xyz;\n    vs_TEXCOORD0.xy = in_TEXCOORD0.xy;\n    u_xlat1 = max(_ClipRect, vec4(-2e+10, -2e+10, -2e+10, -2e+10));\n    u_xlat1 = min(u_xlat1, vec4(2e+10, 2e+10, 2e+10, 2e+10));\n    u_xlat0.xy = u_xlat0.xy * vec2(2.0, 2.0) + (-u_xlat1.xy);\n    vs_TEXCOORD2.xy = (-u_xlat1.zw) + u_xlat0.xy;\n    return;\n}\n\n","\n#version 100\n\n#ifdef GL_FRAGMENT_PRECISION_HIGH\n    precision highp float;\n#else\n    precision mediump float;\n#endif\nprecision highp int;\nuniform \tvec4 _ClipRect;\nuniform lowp sampler2D _MainTex;\nvarying mediump vec4 vs_COLOR0;\nvarying highp vec2 vs_TEXCOORD0;\nvarying highp vec4 vs_TEXCOORD2;\n#define SV_Target0 gl_FragData[0]\nvec2 u_xlat0;\nlowp float u_xlat10_0;\nbool u_xlatb0;\nmediump float u_xlat16_1;\nmediump float u_xlat16_3;\nmediump float u_xlat16_5;\nvoid main()\n{\n    u_xlat0.xy = (-_ClipRect.xy) + _ClipRect.zw;\n    u_xlat0.xy = u_xlat0.xy + -abs(vs_TEXCOORD2.xy);\n    u_xlat0.xy = u_xlat0.xy * vs_TEXCOORD2.zw;\n    u_xlat0.xy = clamp(u_xlat0.xy, 0.0, 1.0);\n    u_xlat16_1 = u_xlat0.y * u_xlat0.x;\n    u_xlat10_0 = texture2D(_MainTex, vs_TEXCOORD0.xy).w;\n    u_xlat0.x = u_xlat10_0 * vs_COLOR0.w;\n    u_xlat16_3 = u_xlat0.x * u_xlat16_1 + -0.00100000005;\n    u_xlat16_5 = u_xlat16_1 * u_xlat0.x;\n    SV_Target0.xyz = vec3(u_xlat16_1) * vs_COLOR0.xyz;\n    SV_Target0.w = u_xlat16_5;\n    u_xlatb0 = u_xlat16_3<0.0;\n    if(u_xlatb0){discard;}\n    return;\n}\n\n",0,0,3,0,0,["UNITY_UI_ALPHACLIP","UNITY_UI_CLIP_RECT"],[["IGNOREPROJECTOR","true"],["QUEUE","Transparent"],["RenderType","Transparent"]]]],["STEREO_CUBEMAP_RENDER_ON","STEREO_INSTANCING_ON","STEREO_MULTIVIEW_ON","UNITY_SINGLE_PASS_STEREO","UNITY_UI_ALPHACLIP","UNITY_UI_CLIP_RECT","__"],[[["__","UNITY_UI_CLIP_RECT"]],[["__","UNITY_UI_ALPHACLIP"]]],0,0,5,0,0,0,0,[["IGNOREPROJECTOR","true"],["QUEUE","Transparent"],["RenderType","Transparent"]],null,"",33,-1]],[["IGNOREPROJECTOR","true"],["QUEUE","Transparent"],["RenderType","Transparent"]],0],[1,[["TextMeshPro/Mobile/Bitmap",[[0,"\n#version 100\n\nuniform \tvec4 hlslcc_mtx4x4unity_ObjectToWorld[4];\nuniform \tvec4 hlslcc_mtx4x4unity_MatrixVP[4];\nuniform \tvec4 _MainTex_ST;\nattribute highp vec3 in_POSITION0;\nattribute mediump vec4 in_COLOR0;\nattribute highp vec3 in_TEXCOORD0;\nvarying mediump vec4 vs_COLOR0;\nvarying highp vec2 vs_TEXCOORD0;\nvec4 u_xlat0;\nvec4 u_xlat1;\nvoid main()\n{\n    vs_COLOR0 = in_COLOR0;\n    vs_COLOR0 = clamp(vs_COLOR0, 0.0, 1.0);\n    vs_TEXCOORD0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;\n    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];\n    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;\n    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;\n    u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];\n    u_xlat1 = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];\n    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat0.xxxx + u_xlat1;\n    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat0.zzzz + u_xlat1;\n    gl_Position = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat0.wwww + u_xlat1;\n    return;\n}\n\n","\n#version 100\n\n#ifdef GL_FRAGMENT_PRECISION_HIGH\n    precision highp float;\n#else\n    precision mediump float;\n#endif\nprecision highp int;\nuniform \tmediump vec4 _Color;\nuniform lowp sampler2D _MainTex;\nvarying mediump vec4 vs_COLOR0;\nvarying highp vec2 vs_TEXCOORD0;\n#define SV_Target0 gl_FragData[0]\nlowp float u_xlat10_0;\nvoid main()\n{\n    u_xlat10_0 = texture2D(_MainTex, vs_TEXCOORD0.xy).w;\n    SV_Target0.w = u_xlat10_0 * _Color.w;\n    SV_Target0.xyz = vs_COLOR0.xyz * _Color.xyz;\n    return;\n}\n\n",0,0,0,0,1,[],[["IGNOREPROJECTOR","true"],["QUEUE","Transparent"],["RenderType","Transparent"]]]],["STEREO_CUBEMAP_RENDER_ON","STEREO_INSTANCING_ON","STEREO_MULTIVIEW_ON","UNITY_SINGLE_PASS_STEREO"],[],0,0,5,0,0,1,0,[["IGNOREPROJECTOR","true"],["QUEUE","Transparent"],["RenderType","Transparent"]],null,"",1,-1]],[["IGNOREPROJECTOR","true"],["QUEUE","Transparent"],["RenderType","Transparent"]],0]],0,426,"Assets/TextMesh Pro/Shaders/TMP_Bitmap-Mobile.shader",["UNITY_UI_ALPHACLIP","UNITY_UI_CLIP_RECT","STEREO_CUBEMAP_RENDER_ON","STEREO_INSTANCING_ON","STEREO_MULTIVIEW_ON","UNITY_SINGLE_PASS_STEREO","__"],null,null,[],5],[[[0,[["TextMeshPro/Mobile/Distance Field",[[0,"\n#version 100\n\nuniform \tvec3 _WorldSpaceCameraPos;\nuniform \tvec4 _ScreenParams;\nuniform \tvec4 hlslcc_mtx4x4unity_ObjectToWorld[4];\nuniform \tvec4 hlslcc_mtx4x4unity_WorldToObject[4];\nuniform \tvec4 hlslcc_mtx4x4glstate_matrix_projection[4];\nuniform \tvec4 hlslcc_mtx4x4unity_MatrixVP[4];\nuniform \tmediump vec4 _FaceColor;\nuniform \tfloat _FaceDilate;\nuniform \tfloat _OutlineSoftness;\nuniform \tmediump vec4 _OutlineColor;\nuniform \tfloat _OutlineWidth;\nuniform \tfloat _WeightNormal;\nuniform \tfloat _WeightBold;\nuniform \tfloat _ScaleRatioA;\nuniform \tfloat _VertexOffsetX;\nuniform \tfloat _VertexOffsetY;\nuniform \tvec4 _ClipRect;\nuniform \tfloat _MaskSoftnessX;\nuniform \tfloat _MaskSoftnessY;\nuniform \tfloat _GradientScale;\nuniform \tfloat _ScaleX;\nuniform \tfloat _ScaleY;\nuniform \tfloat _PerspectiveFilter;\nuniform \tfloat _Sharpness;\nattribute highp vec4 in_POSITION0;\nattribute highp vec3 in_NORMAL0;\nattribute mediump vec4 in_COLOR0;\nattribute highp vec2 in_TEXCOORD0;\nattribute highp vec2 in_TEXCOORD1;\nvarying mediump vec4 vs_COLOR0;\nvarying mediump vec4 vs_COLOR1;\nvarying highp vec4 vs_TEXCOORD0;\nvarying mediump vec4 vs_TEXCOORD1;\nvarying mediump vec4 vs_TEXCOORD2;\nvec2 u_xlat0;\nbool u_xlatb0;\nvec4 u_xlat1;\nvec4 u_xlat2;\nvec4 u_xlat3;\nmediump vec4 u_xlat16_3;\nvec4 u_xlat4;\nfloat u_xlat5;\nfloat u_xlat7;\nfloat u_xlat10;\nfloat u_xlat12;\nfloat u_xlat15;\nbool u_xlatb15;\nvoid main()\n{\n    u_xlat0.xy = in_POSITION0.xy + vec2(_VertexOffsetX, _VertexOffsetY);\n    u_xlat1 = u_xlat0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];\n    u_xlat1 = hlslcc_mtx4x4unity_ObjectToWorld[0] * u_xlat0.xxxx + u_xlat1;\n    u_xlat1 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat1;\n    u_xlat2 = u_xlat1 + hlslcc_mtx4x4unity_ObjectToWorld[3];\n    u_xlat1.xyz = hlslcc_mtx4x4unity_ObjectToWorld[3].xyz * in_POSITION0.www + u_xlat1.xyz;\n    u_xlat1.xyz = (-u_xlat1.xyz) + _WorldSpaceCameraPos.xyz;\n    u_xlat3 = u_xlat2.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];\n    u_xlat3 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat2.xxxx + u_xlat3;\n    u_xlat3 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat2.zzzz + u_xlat3;\n    u_xlat2 = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat2.wwww + u_xlat3;\n    gl_Position = u_xlat2;\n    u_xlat16_3 = in_COLOR0 * _FaceColor;\n    u_xlat16_3.xyz = u_xlat16_3.www * u_xlat16_3.xyz;\n    vs_COLOR0 = u_xlat16_3;\n    u_xlat10 = dot(u_xlat1.xyz, u_xlat1.xyz);\n    u_xlat10 = inversesqrt(u_xlat10);\n    u_xlat1.xyz = vec3(u_xlat10) * u_xlat1.xyz;\n    u_xlat2.x = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[0].xyz);\n    u_xlat2.y = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[1].xyz);\n    u_xlat2.z = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[2].xyz);\n    u_xlat10 = dot(u_xlat2.xyz, u_xlat2.xyz);\n    u_xlat10 = inversesqrt(u_xlat10);\n    u_xlat2.xyz = vec3(u_xlat10) * u_xlat2.xyz;\n    u_xlat10 = dot(u_xlat2.xyz, u_xlat1.xyz);\n    u_xlat1.xy = _ScreenParams.yy * hlslcc_mtx4x4glstate_matrix_projection[1].xy;\n    u_xlat1.xy = hlslcc_mtx4x4glstate_matrix_projection[0].xy * _ScreenParams.xx + u_xlat1.xy;\n    u_xlat1.xy = abs(u_xlat1.xy) * vec2(_ScaleX, _ScaleY);\n    u_xlat1.xy = u_xlat2.ww / u_xlat1.xy;\n    u_xlat15 = dot(u_xlat1.xy, u_xlat1.xy);\n    u_xlat1.xy = vec2(_MaskSoftnessX, _MaskSoftnessY) * vec2(0.25, 0.25) + u_xlat1.xy;\n    u_xlat1.zw = vec2(0.25, 0.25) / u_xlat1.xy;\n    u_xlat15 = inversesqrt(u_xlat15);\n    u_xlat2.x = abs(in_TEXCOORD1.y) * _GradientScale;\n    u_xlat7 = _Sharpness + 1.0;\n    u_xlat2.x = u_xlat7 * u_xlat2.x;\n    u_xlat7 = u_xlat15 * u_xlat2.x;\n    u_xlat12 = (-_PerspectiveFilter) + 1.0;\n    u_xlat12 = u_xlat12 * abs(u_xlat7);\n    u_xlat15 = u_xlat15 * u_xlat2.x + (-u_xlat12);\n    u_xlat10 = abs(u_xlat10) * u_xlat15 + u_xlat12;\n    u_xlatb15 = hlslcc_mtx4x4glstate_matrix_projection[3].w==0.0;\n    u_xlat10 = (u_xlatb15) ? u_xlat10 : u_xlat7;\n    u_xlat15 = _OutlineSoftness * _ScaleRatioA;\n    u_xlat15 = u_xlat15 * u_xlat10 + 1.0;\n    u_xlat2.x = u_xlat10 / u_xlat15;\n    u_xlat10 = _OutlineWidth * _ScaleRatioA;\n    u_xlat10 = u_xlat2.x * u_xlat10;\n    u_xlat15 = min(u_xlat10, 1.0);\n    u_xlat15 = sqrt(u_xlat15);\n    u_xlat4.x = in_COLOR0.w * _OutlineColor.w;\n    u_xlat4.xyz = _OutlineColor.xyz * u_xlat4.xxx + (-u_xlat16_3.xyz);\n    u_xlat4.w = _OutlineColor.w * in_COLOR0.w + (-u_xlat16_3.w);\n    u_xlat3 = vec4(u_xlat15) * u_xlat4 + u_xlat16_3;\n    vs_COLOR1 = u_xlat3;\n    u_xlat3 = max(_ClipRect, vec4(-2e+10, -2e+10, -2e+10, -2e+10));\n    u_xlat3 = min(u_xlat3, vec4(2e+10, 2e+10, 2e+10, 2e+10));\n    u_xlat4.xy = u_xlat0.xy + (-u_xlat3.xy);\n    u_xlat0.xy = u_xlat0.xy * vec2(2.0, 2.0) + (-u_xlat3.xy);\n    u_xlat1.xy = (-u_xlat3.zw) + u_xlat0.xy;\n    u_xlat0.xy = (-u_xlat3.xy) + u_xlat3.zw;\n    vs_TEXCOORD0.zw = u_xlat4.xy / u_xlat0.xy;\n    vs_TEXCOORD2 = u_xlat1;\n    vs_TEXCOORD0.xy = in_TEXCOORD0.xy;\n    u_xlatb0 = 0.0>=in_TEXCOORD1.y;\n    u_xlat0.x = u_xlatb0 ? 1.0 : float(0.0);\n    u_xlat5 = (-_WeightNormal) + _WeightBold;\n    u_xlat0.x = u_xlat0.x * u_xlat5 + _WeightNormal;\n    u_xlat0.x = u_xlat0.x * 0.25 + _FaceDilate;\n    u_xlat0.x = u_xlat0.x * _ScaleRatioA;\n    u_xlat0.x = (-u_xlat0.x) * 0.5 + 0.5;\n    u_xlat2.w = u_xlat0.x * u_xlat2.x + -0.5;\n    u_xlat2.y = (-u_xlat10) * 0.5 + u_xlat2.w;\n    u_xlat2.z = u_xlat10 * 0.5 + u_xlat2.w;\n    vs_TEXCOORD1 = u_xlat2;\n    return;\n}\n\n","\n#version 100\n\n#ifdef GL_FRAGMENT_PRECISION_HIGH\n    precision highp float;\n#else\n    precision mediump float;\n#endif\nprecision highp int;\nuniform lowp sampler2D _MainTex;\nvarying mediump vec4 vs_COLOR0;\nvarying highp vec4 vs_TEXCOORD0;\nvarying mediump vec4 vs_TEXCOORD1;\n#define SV_Target0 gl_FragData[0]\nlowp float u_xlat10_0;\nmediump float u_xlat16_1;\nvoid main()\n{\n    u_xlat10_0 = texture2D(_MainTex, vs_TEXCOORD0.xy).w;\n    u_xlat16_1 = u_xlat10_0 * vs_TEXCOORD1.x + (-vs_TEXCOORD1.w);\n    u_xlat16_1 = clamp(u_xlat16_1, 0.0, 1.0);\n    SV_Target0 = vec4(u_xlat16_1) * vs_COLOR0;\n    return;\n}\n\n",0,0,0,0,0,[],[["IGNOREPROJECTOR","true"],["QUEUE","Transparent"],["RenderType","Transparent"]]],[0,"\n#version 100\n\nuniform \tvec3 _WorldSpaceCameraPos;\nuniform \tvec4 _ScreenParams;\nuniform \tvec4 hlslcc_mtx4x4unity_ObjectToWorld[4];\nuniform \tvec4 hlslcc_mtx4x4unity_WorldToObject[4];\nuniform \tvec4 hlslcc_mtx4x4glstate_matrix_projection[4];\nuniform \tvec4 hlslcc_mtx4x4unity_MatrixVP[4];\nuniform \tmediump vec4 _FaceColor;\nuniform \tfloat _FaceDilate;\nuniform \tfloat _OutlineSoftness;\nuniform \tmediump vec4 _OutlineColor;\nuniform \tfloat _OutlineWidth;\nuniform \tfloat _WeightNormal;\nuniform \tfloat _WeightBold;\nuniform \tfloat _ScaleRatioA;\nuniform \tfloat _VertexOffsetX;\nuniform \tfloat _VertexOffsetY;\nuniform \tvec4 _ClipRect;\nuniform \tfloat _MaskSoftnessX;\nuniform \tfloat _MaskSoftnessY;\nuniform \tfloat _GradientScale;\nuniform \tfloat _ScaleX;\nuniform \tfloat _ScaleY;\nuniform \tfloat _PerspectiveFilter;\nuniform \tfloat _Sharpness;\nattribute highp vec4 in_POSITION0;\nattribute highp vec3 in_NORMAL0;\nattribute mediump vec4 in_COLOR0;\nattribute highp vec2 in_TEXCOORD0;\nattribute highp vec2 in_TEXCOORD1;\nvarying mediump vec4 vs_COLOR0;\nvarying mediump vec4 vs_COLOR1;\nvarying highp vec4 vs_TEXCOORD0;\nvarying mediump vec4 vs_TEXCOORD1;\nvarying mediump vec4 vs_TEXCOORD2;\nvec2 u_xlat0;\nbool u_xlatb0;\nvec4 u_xlat1;\nvec4 u_xlat2;\nvec4 u_xlat3;\nmediump vec4 u_xlat16_3;\nvec4 u_xlat4;\nfloat u_xlat5;\nfloat u_xlat7;\nfloat u_xlat10;\nfloat u_xlat12;\nfloat u_xlat15;\nbool u_xlatb15;\nvoid main()\n{\n    u_xlat0.xy = in_POSITION0.xy + vec2(_VertexOffsetX, _VertexOffsetY);\n    u_xlat1 = u_xlat0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];\n    u_xlat1 = hlslcc_mtx4x4unity_ObjectToWorld[0] * u_xlat0.xxxx + u_xlat1;\n    u_xlat1 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat1;\n    u_xlat2 = u_xlat1 + hlslcc_mtx4x4unity_ObjectToWorld[3];\n    u_xlat1.xyz = hlslcc_mtx4x4unity_ObjectToWorld[3].xyz * in_POSITION0.www + u_xlat1.xyz;\n    u_xlat1.xyz = (-u_xlat1.xyz) + _WorldSpaceCameraPos.xyz;\n    u_xlat3 = u_xlat2.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];\n    u_xlat3 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat2.xxxx + u_xlat3;\n    u_xlat3 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat2.zzzz + u_xlat3;\n    u_xlat2 = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat2.wwww + u_xlat3;\n    gl_Position = u_xlat2;\n    u_xlat16_3 = in_COLOR0 * _FaceColor;\n    u_xlat16_3.xyz = u_xlat16_3.www * u_xlat16_3.xyz;\n    vs_COLOR0 = u_xlat16_3;\n    u_xlat10 = dot(u_xlat1.xyz, u_xlat1.xyz);\n    u_xlat10 = inversesqrt(u_xlat10);\n    u_xlat1.xyz = vec3(u_xlat10) * u_xlat1.xyz;\n    u_xlat2.x = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[0].xyz);\n    u_xlat2.y = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[1].xyz);\n    u_xlat2.z = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[2].xyz);\n    u_xlat10 = dot(u_xlat2.xyz, u_xlat2.xyz);\n    u_xlat10 = inversesqrt(u_xlat10);\n    u_xlat2.xyz = vec3(u_xlat10) * u_xlat2.xyz;\n    u_xlat10 = dot(u_xlat2.xyz, u_xlat1.xyz);\n    u_xlat1.xy = _ScreenParams.yy * hlslcc_mtx4x4glstate_matrix_projection[1].xy;\n    u_xlat1.xy = hlslcc_mtx4x4glstate_matrix_projection[0].xy * _ScreenParams.xx + u_xlat1.xy;\n    u_xlat1.xy = abs(u_xlat1.xy) * vec2(_ScaleX, _ScaleY);\n    u_xlat1.xy = u_xlat2.ww / u_xlat1.xy;\n    u_xlat15 = dot(u_xlat1.xy, u_xlat1.xy);\n    u_xlat1.xy = vec2(_MaskSoftnessX, _MaskSoftnessY) * vec2(0.25, 0.25) + u_xlat1.xy;\n    u_xlat1.zw = vec2(0.25, 0.25) / u_xlat1.xy;\n    u_xlat15 = inversesqrt(u_xlat15);\n    u_xlat2.x = abs(in_TEXCOORD1.y) * _GradientScale;\n    u_xlat7 = _Sharpness + 1.0;\n    u_xlat2.x = u_xlat7 * u_xlat2.x;\n    u_xlat7 = u_xlat15 * u_xlat2.x;\n    u_xlat12 = (-_PerspectiveFilter) + 1.0;\n    u_xlat12 = u_xlat12 * abs(u_xlat7);\n    u_xlat15 = u_xlat15 * u_xlat2.x + (-u_xlat12);\n    u_xlat10 = abs(u_xlat10) * u_xlat15 + u_xlat12;\n    u_xlatb15 = hlslcc_mtx4x4glstate_matrix_projection[3].w==0.0;\n    u_xlat10 = (u_xlatb15) ? u_xlat10 : u_xlat7;\n    u_xlat15 = _OutlineSoftness * _ScaleRatioA;\n    u_xlat15 = u_xlat15 * u_xlat10 + 1.0;\n    u_xlat2.x = u_xlat10 / u_xlat15;\n    u_xlat10 = _OutlineWidth * _ScaleRatioA;\n    u_xlat10 = u_xlat2.x * u_xlat10;\n    u_xlat15 = min(u_xlat10, 1.0);\n    u_xlat15 = sqrt(u_xlat15);\n    u_xlat4.x = in_COLOR0.w * _OutlineColor.w;\n    u_xlat4.xyz = _OutlineColor.xyz * u_xlat4.xxx + (-u_xlat16_3.xyz);\n    u_xlat4.w = _OutlineColor.w * in_COLOR0.w + (-u_xlat16_3.w);\n    u_xlat3 = vec4(u_xlat15) * u_xlat4 + u_xlat16_3;\n    vs_COLOR1 = u_xlat3;\n    u_xlat3 = max(_ClipRect, vec4(-2e+10, -2e+10, -2e+10, -2e+10));\n    u_xlat3 = min(u_xlat3, vec4(2e+10, 2e+10, 2e+10, 2e+10));\n    u_xlat4.xy = u_xlat0.xy + (-u_xlat3.xy);\n    u_xlat0.xy = u_xlat0.xy * vec2(2.0, 2.0) + (-u_xlat3.xy);\n    u_xlat1.xy = (-u_xlat3.zw) + u_xlat0.xy;\n    u_xlat0.xy = (-u_xlat3.xy) + u_xlat3.zw;\n    vs_TEXCOORD0.zw = u_xlat4.xy / u_xlat0.xy;\n    vs_TEXCOORD2 = u_xlat1;\n    vs_TEXCOORD0.xy = in_TEXCOORD0.xy;\n    u_xlatb0 = 0.0>=in_TEXCOORD1.y;\n    u_xlat0.x = u_xlatb0 ? 1.0 : float(0.0);\n    u_xlat5 = (-_WeightNormal) + _WeightBold;\n    u_xlat0.x = u_xlat0.x * u_xlat5 + _WeightNormal;\n    u_xlat0.x = u_xlat0.x * 0.25 + _FaceDilate;\n    u_xlat0.x = u_xlat0.x * _ScaleRatioA;\n    u_xlat0.x = (-u_xlat0.x) * 0.5 + 0.5;\n    u_xlat2.w = u_xlat0.x * u_xlat2.x + -0.5;\n    u_xlat2.y = (-u_xlat10) * 0.5 + u_xlat2.w;\n    u_xlat2.z = u_xlat10 * 0.5 + u_xlat2.w;\n    vs_TEXCOORD1 = u_xlat2;\n    return;\n}\n\n","\n#version 100\n\n#ifdef GL_FRAGMENT_PRECISION_HIGH\n    precision highp float;\n#else\n    precision mediump float;\n#endif\nprecision highp int;\nuniform lowp sampler2D _MainTex;\nvarying mediump vec4 vs_COLOR0;\nvarying highp vec4 vs_TEXCOORD0;\nvarying mediump vec4 vs_TEXCOORD1;\n#define SV_Target0 gl_FragData[0]\nmediump vec4 u_xlat16_0;\nlowp float u_xlat10_0;\nmediump float u_xlat16_1;\nbool u_xlatb2;\nmediump float u_xlat16_4;\nvoid main()\n{\n    u_xlat10_0 = texture2D(_MainTex, vs_TEXCOORD0.xy).w;\n    u_xlat16_1 = u_xlat10_0 * vs_TEXCOORD1.x + (-vs_TEXCOORD1.w);\n    u_xlat16_1 = clamp(u_xlat16_1, 0.0, 1.0);\n    u_xlat16_4 = vs_COLOR0.w * u_xlat16_1 + -0.00100000005;\n    u_xlat16_0 = vec4(u_xlat16_1) * vs_COLOR0;\n    SV_Target0 = u_xlat16_0;\n    u_xlatb2 = u_xlat16_4<0.0;\n    if(u_xlatb2){discard;}\n    return;\n}\n\n",0,0,1,0,0,["UNITY_UI_ALPHACLIP"],[["IGNOREPROJECTOR","true"],["QUEUE","Transparent"],["RenderType","Transparent"]]],[0,"\n#version 100\n\nuniform \tvec3 _WorldSpaceCameraPos;\nuniform \tvec4 _ScreenParams;\nuniform \tvec4 hlslcc_mtx4x4unity_ObjectToWorld[4];\nuniform \tvec4 hlslcc_mtx4x4unity_WorldToObject[4];\nuniform \tvec4 hlslcc_mtx4x4glstate_matrix_projection[4];\nuniform \tvec4 hlslcc_mtx4x4unity_MatrixVP[4];\nuniform \tmediump vec4 _FaceColor;\nuniform \tfloat _FaceDilate;\nuniform \tfloat _OutlineSoftness;\nuniform \tmediump vec4 _OutlineColor;\nuniform \tfloat _OutlineWidth;\nuniform \tfloat _WeightNormal;\nuniform \tfloat _WeightBold;\nuniform \tfloat _ScaleRatioA;\nuniform \tfloat _VertexOffsetX;\nuniform \tfloat _VertexOffsetY;\nuniform \tvec4 _ClipRect;\nuniform \tfloat _MaskSoftnessX;\nuniform \tfloat _MaskSoftnessY;\nuniform \tfloat _GradientScale;\nuniform \tfloat _ScaleX;\nuniform \tfloat _ScaleY;\nuniform \tfloat _PerspectiveFilter;\nuniform \tfloat _Sharpness;\nattribute highp vec4 in_POSITION0;\nattribute highp vec3 in_NORMAL0;\nattribute mediump vec4 in_COLOR0;\nattribute highp vec2 in_TEXCOORD0;\nattribute highp vec2 in_TEXCOORD1;\nvarying mediump vec4 vs_COLOR0;\nvarying mediump vec4 vs_COLOR1;\nvarying highp vec4 vs_TEXCOORD0;\nvarying mediump vec4 vs_TEXCOORD1;\nvarying mediump vec4 vs_TEXCOORD2;\nvec2 u_xlat0;\nbool u_xlatb0;\nvec4 u_xlat1;\nvec4 u_xlat2;\nvec4 u_xlat3;\nmediump vec4 u_xlat16_3;\nvec4 u_xlat4;\nfloat u_xlat5;\nfloat u_xlat7;\nfloat u_xlat10;\nfloat u_xlat12;\nfloat u_xlat15;\nbool u_xlatb15;\nvoid main()\n{\n    u_xlat0.xy = in_POSITION0.xy + vec2(_VertexOffsetX, _VertexOffsetY);\n    u_xlat1 = u_xlat0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];\n    u_xlat1 = hlslcc_mtx4x4unity_ObjectToWorld[0] * u_xlat0.xxxx + u_xlat1;\n    u_xlat1 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat1;\n    u_xlat2 = u_xlat1 + hlslcc_mtx4x4unity_ObjectToWorld[3];\n    u_xlat1.xyz = hlslcc_mtx4x4unity_ObjectToWorld[3].xyz * in_POSITION0.www + u_xlat1.xyz;\n    u_xlat1.xyz = (-u_xlat1.xyz) + _WorldSpaceCameraPos.xyz;\n    u_xlat3 = u_xlat2.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];\n    u_xlat3 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat2.xxxx + u_xlat3;\n    u_xlat3 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat2.zzzz + u_xlat3;\n    u_xlat2 = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat2.wwww + u_xlat3;\n    gl_Position = u_xlat2;\n    u_xlat16_3 = in_COLOR0 * _FaceColor;\n    u_xlat16_3.xyz = u_xlat16_3.www * u_xlat16_3.xyz;\n    vs_COLOR0 = u_xlat16_3;\n    u_xlat10 = dot(u_xlat1.xyz, u_xlat1.xyz);\n    u_xlat10 = inversesqrt(u_xlat10);\n    u_xlat1.xyz = vec3(u_xlat10) * u_xlat1.xyz;\n    u_xlat2.x = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[0].xyz);\n    u_xlat2.y = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[1].xyz);\n    u_xlat2.z = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[2].xyz);\n    u_xlat10 = dot(u_xlat2.xyz, u_xlat2.xyz);\n    u_xlat10 = inversesqrt(u_xlat10);\n    u_xlat2.xyz = vec3(u_xlat10) * u_xlat2.xyz;\n    u_xlat10 = dot(u_xlat2.xyz, u_xlat1.xyz);\n    u_xlat1.xy = _ScreenParams.yy * hlslcc_mtx4x4glstate_matrix_projection[1].xy;\n    u_xlat1.xy = hlslcc_mtx4x4glstate_matrix_projection[0].xy * _ScreenParams.xx + u_xlat1.xy;\n    u_xlat1.xy = abs(u_xlat1.xy) * vec2(_ScaleX, _ScaleY);\n    u_xlat1.xy = u_xlat2.ww / u_xlat1.xy;\n    u_xlat15 = dot(u_xlat1.xy, u_xlat1.xy);\n    u_xlat1.xy = vec2(_MaskSoftnessX, _MaskSoftnessY) * vec2(0.25, 0.25) + u_xlat1.xy;\n    u_xlat1.zw = vec2(0.25, 0.25) / u_xlat1.xy;\n    u_xlat15 = inversesqrt(u_xlat15);\n    u_xlat2.x = abs(in_TEXCOORD1.y) * _GradientScale;\n    u_xlat7 = _Sharpness + 1.0;\n    u_xlat2.x = u_xlat7 * u_xlat2.x;\n    u_xlat7 = u_xlat15 * u_xlat2.x;\n    u_xlat12 = (-_PerspectiveFilter) + 1.0;\n    u_xlat12 = u_xlat12 * abs(u_xlat7);\n    u_xlat15 = u_xlat15 * u_xlat2.x + (-u_xlat12);\n    u_xlat10 = abs(u_xlat10) * u_xlat15 + u_xlat12;\n    u_xlatb15 = hlslcc_mtx4x4glstate_matrix_projection[3].w==0.0;\n    u_xlat10 = (u_xlatb15) ? u_xlat10 : u_xlat7;\n    u_xlat15 = _OutlineSoftness * _ScaleRatioA;\n    u_xlat15 = u_xlat15 * u_xlat10 + 1.0;\n    u_xlat2.x = u_xlat10 / u_xlat15;\n    u_xlat10 = _OutlineWidth * _ScaleRatioA;\n    u_xlat10 = u_xlat2.x * u_xlat10;\n    u_xlat15 = min(u_xlat10, 1.0);\n    u_xlat15 = sqrt(u_xlat15);\n    u_xlat4.x = in_COLOR0.w * _OutlineColor.w;\n    u_xlat4.xyz = _OutlineColor.xyz * u_xlat4.xxx + (-u_xlat16_3.xyz);\n    u_xlat4.w = _OutlineColor.w * in_COLOR0.w + (-u_xlat16_3.w);\n    u_xlat3 = vec4(u_xlat15) * u_xlat4 + u_xlat16_3;\n    vs_COLOR1 = u_xlat3;\n    u_xlat3 = max(_ClipRect, vec4(-2e+10, -2e+10, -2e+10, -2e+10));\n    u_xlat3 = min(u_xlat3, vec4(2e+10, 2e+10, 2e+10, 2e+10));\n    u_xlat4.xy = u_xlat0.xy + (-u_xlat3.xy);\n    u_xlat0.xy = u_xlat0.xy * vec2(2.0, 2.0) + (-u_xlat3.xy);\n    u_xlat1.xy = (-u_xlat3.zw) + u_xlat0.xy;\n    u_xlat0.xy = (-u_xlat3.xy) + u_xlat3.zw;\n    vs_TEXCOORD0.zw = u_xlat4.xy / u_xlat0.xy;\n    vs_TEXCOORD2 = u_xlat1;\n    vs_TEXCOORD0.xy = in_TEXCOORD0.xy;\n    u_xlatb0 = 0.0>=in_TEXCOORD1.y;\n    u_xlat0.x = u_xlatb0 ? 1.0 : float(0.0);\n    u_xlat5 = (-_WeightNormal) + _WeightBold;\n    u_xlat0.x = u_xlat0.x * u_xlat5 + _WeightNormal;\n    u_xlat0.x = u_xlat0.x * 0.25 + _FaceDilate;\n    u_xlat0.x = u_xlat0.x * _ScaleRatioA;\n    u_xlat0.x = (-u_xlat0.x) * 0.5 + 0.5;\n    u_xlat2.w = u_xlat0.x * u_xlat2.x + -0.5;\n    u_xlat2.y = (-u_xlat10) * 0.5 + u_xlat2.w;\n    u_xlat2.z = u_xlat10 * 0.5 + u_xlat2.w;\n    vs_TEXCOORD1 = u_xlat2;\n    return;\n}\n\n","\n#version 100\n\n#ifdef GL_FRAGMENT_PRECISION_HIGH\n    precision highp float;\n#else\n    precision mediump float;\n#endif\nprecision highp int;\nuniform \tvec4 _ClipRect;\nuniform lowp sampler2D _MainTex;\nvarying mediump vec4 vs_COLOR0;\nvarying highp vec4 vs_TEXCOORD0;\nvarying mediump vec4 vs_TEXCOORD1;\nvarying mediump vec4 vs_TEXCOORD2;\n#define SV_Target0 gl_FragData[0]\nvec2 u_xlat0;\nmediump vec4 u_xlat16_0;\nlowp float u_xlat10_0;\nmediump float u_xlat16_1;\nmediump float u_xlat16_3;\nvoid main()\n{\n    u_xlat0.xy = (-_ClipRect.xy) + _ClipRect.zw;\n    u_xlat0.xy = u_xlat0.xy + -abs(vs_TEXCOORD2.xy);\n    u_xlat0.xy = u_xlat0.xy * vs_TEXCOORD2.zw;\n    u_xlat0.xy = clamp(u_xlat0.xy, 0.0, 1.0);\n    u_xlat16_1 = u_xlat0.y * u_xlat0.x;\n    u_xlat10_0 = texture2D(_MainTex, vs_TEXCOORD0.xy).w;\n    u_xlat16_3 = u_xlat10_0 * vs_TEXCOORD1.x + (-vs_TEXCOORD1.w);\n    u_xlat16_3 = clamp(u_xlat16_3, 0.0, 1.0);\n    u_xlat16_0 = vec4(u_xlat16_3) * vs_COLOR0;\n    SV_Target0 = vec4(u_xlat16_1) * u_xlat16_0;\n    return;\n}\n\n",0,0,2,0,0,["UNITY_UI_CLIP_RECT"],[["IGNOREPROJECTOR","true"],["QUEUE","Transparent"],["RenderType","Transparent"]]],[0,"\n#version 100\n\nuniform \tvec3 _WorldSpaceCameraPos;\nuniform \tvec4 _ScreenParams;\nuniform \tvec4 hlslcc_mtx4x4unity_ObjectToWorld[4];\nuniform \tvec4 hlslcc_mtx4x4unity_WorldToObject[4];\nuniform \tvec4 hlslcc_mtx4x4glstate_matrix_projection[4];\nuniform \tvec4 hlslcc_mtx4x4unity_MatrixVP[4];\nuniform \tmediump vec4 _FaceColor;\nuniform \tfloat _FaceDilate;\nuniform \tfloat _OutlineSoftness;\nuniform \tmediump vec4 _OutlineColor;\nuniform \tfloat _OutlineWidth;\nuniform \tfloat _WeightNormal;\nuniform \tfloat _WeightBold;\nuniform \tfloat _ScaleRatioA;\nuniform \tfloat _VertexOffsetX;\nuniform \tfloat _VertexOffsetY;\nuniform \tvec4 _ClipRect;\nuniform \tfloat _MaskSoftnessX;\nuniform \tfloat _MaskSoftnessY;\nuniform \tfloat _GradientScale;\nuniform \tfloat _ScaleX;\nuniform \tfloat _ScaleY;\nuniform \tfloat _PerspectiveFilter;\nuniform \tfloat _Sharpness;\nattribute highp vec4 in_POSITION0;\nattribute highp vec3 in_NORMAL0;\nattribute mediump vec4 in_COLOR0;\nattribute highp vec2 in_TEXCOORD0;\nattribute highp vec2 in_TEXCOORD1;\nvarying mediump vec4 vs_COLOR0;\nvarying mediump vec4 vs_COLOR1;\nvarying highp vec4 vs_TEXCOORD0;\nvarying mediump vec4 vs_TEXCOORD1;\nvarying mediump vec4 vs_TEXCOORD2;\nvec2 u_xlat0;\nbool u_xlatb0;\nvec4 u_xlat1;\nvec4 u_xlat2;\nvec4 u_xlat3;\nmediump vec4 u_xlat16_3;\nvec4 u_xlat4;\nfloat u_xlat5;\nfloat u_xlat7;\nfloat u_xlat10;\nfloat u_xlat12;\nfloat u_xlat15;\nbool u_xlatb15;\nvoid main()\n{\n    u_xlat0.xy = in_POSITION0.xy + vec2(_VertexOffsetX, _VertexOffsetY);\n    u_xlat1 = u_xlat0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];\n    u_xlat1 = hlslcc_mtx4x4unity_ObjectToWorld[0] * u_xlat0.xxxx + u_xlat1;\n    u_xlat1 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat1;\n    u_xlat2 = u_xlat1 + hlslcc_mtx4x4unity_ObjectToWorld[3];\n    u_xlat1.xyz = hlslcc_mtx4x4unity_ObjectToWorld[3].xyz * in_POSITION0.www + u_xlat1.xyz;\n    u_xlat1.xyz = (-u_xlat1.xyz) + _WorldSpaceCameraPos.xyz;\n    u_xlat3 = u_xlat2.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];\n    u_xlat3 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat2.xxxx + u_xlat3;\n    u_xlat3 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat2.zzzz + u_xlat3;\n    u_xlat2 = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat2.wwww + u_xlat3;\n    gl_Position = u_xlat2;\n    u_xlat16_3 = in_COLOR0 * _FaceColor;\n    u_xlat16_3.xyz = u_xlat16_3.www * u_xlat16_3.xyz;\n    vs_COLOR0 = u_xlat16_3;\n    u_xlat10 = dot(u_xlat1.xyz, u_xlat1.xyz);\n    u_xlat10 = inversesqrt(u_xlat10);\n    u_xlat1.xyz = vec3(u_xlat10) * u_xlat1.xyz;\n    u_xlat2.x = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[0].xyz);\n    u_xlat2.y = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[1].xyz);\n    u_xlat2.z = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[2].xyz);\n    u_xlat10 = dot(u_xlat2.xyz, u_xlat2.xyz);\n    u_xlat10 = inversesqrt(u_xlat10);\n    u_xlat2.xyz = vec3(u_xlat10) * u_xlat2.xyz;\n    u_xlat10 = dot(u_xlat2.xyz, u_xlat1.xyz);\n    u_xlat1.xy = _ScreenParams.yy * hlslcc_mtx4x4glstate_matrix_projection[1].xy;\n    u_xlat1.xy = hlslcc_mtx4x4glstate_matrix_projection[0].xy * _ScreenParams.xx + u_xlat1.xy;\n    u_xlat1.xy = abs(u_xlat1.xy) * vec2(_ScaleX, _ScaleY);\n    u_xlat1.xy = u_xlat2.ww / u_xlat1.xy;\n    u_xlat15 = dot(u_xlat1.xy, u_xlat1.xy);\n    u_xlat1.xy = vec2(_MaskSoftnessX, _MaskSoftnessY) * vec2(0.25, 0.25) + u_xlat1.xy;\n    u_xlat1.zw = vec2(0.25, 0.25) / u_xlat1.xy;\n    u_xlat15 = inversesqrt(u_xlat15);\n    u_xlat2.x = abs(in_TEXCOORD1.y) * _GradientScale;\n    u_xlat7 = _Sharpness + 1.0;\n    u_xlat2.x = u_xlat7 * u_xlat2.x;\n    u_xlat7 = u_xlat15 * u_xlat2.x;\n    u_xlat12 = (-_PerspectiveFilter) + 1.0;\n    u_xlat12 = u_xlat12 * abs(u_xlat7);\n    u_xlat15 = u_xlat15 * u_xlat2.x + (-u_xlat12);\n    u_xlat10 = abs(u_xlat10) * u_xlat15 + u_xlat12;\n    u_xlatb15 = hlslcc_mtx4x4glstate_matrix_projection[3].w==0.0;\n    u_xlat10 = (u_xlatb15) ? u_xlat10 : u_xlat7;\n    u_xlat15 = _OutlineSoftness * _ScaleRatioA;\n    u_xlat15 = u_xlat15 * u_xlat10 + 1.0;\n    u_xlat2.x = u_xlat10 / u_xlat15;\n    u_xlat10 = _OutlineWidth * _ScaleRatioA;\n    u_xlat10 = u_xlat2.x * u_xlat10;\n    u_xlat15 = min(u_xlat10, 1.0);\n    u_xlat15 = sqrt(u_xlat15);\n    u_xlat4.x = in_COLOR0.w * _OutlineColor.w;\n    u_xlat4.xyz = _OutlineColor.xyz * u_xlat4.xxx + (-u_xlat16_3.xyz);\n    u_xlat4.w = _OutlineColor.w * in_COLOR0.w + (-u_xlat16_3.w);\n    u_xlat3 = vec4(u_xlat15) * u_xlat4 + u_xlat16_3;\n    vs_COLOR1 = u_xlat3;\n    u_xlat3 = max(_ClipRect, vec4(-2e+10, -2e+10, -2e+10, -2e+10));\n    u_xlat3 = min(u_xlat3, vec4(2e+10, 2e+10, 2e+10, 2e+10));\n    u_xlat4.xy = u_xlat0.xy + (-u_xlat3.xy);\n    u_xlat0.xy = u_xlat0.xy * vec2(2.0, 2.0) + (-u_xlat3.xy);\n    u_xlat1.xy = (-u_xlat3.zw) + u_xlat0.xy;\n    u_xlat0.xy = (-u_xlat3.xy) + u_xlat3.zw;\n    vs_TEXCOORD0.zw = u_xlat4.xy / u_xlat0.xy;\n    vs_TEXCOORD2 = u_xlat1;\n    vs_TEXCOORD0.xy = in_TEXCOORD0.xy;\n    u_xlatb0 = 0.0>=in_TEXCOORD1.y;\n    u_xlat0.x = u_xlatb0 ? 1.0 : float(0.0);\n    u_xlat5 = (-_WeightNormal) + _WeightBold;\n    u_xlat0.x = u_xlat0.x * u_xlat5 + _WeightNormal;\n    u_xlat0.x = u_xlat0.x * 0.25 + _FaceDilate;\n    u_xlat0.x = u_xlat0.x * _ScaleRatioA;\n    u_xlat0.x = (-u_xlat0.x) * 0.5 + 0.5;\n    u_xlat2.w = u_xlat0.x * u_xlat2.x + -0.5;\n    u_xlat2.y = (-u_xlat10) * 0.5 + u_xlat2.w;\n    u_xlat2.z = u_xlat10 * 0.5 + u_xlat2.w;\n    vs_TEXCOORD1 = u_xlat2;\n    return;\n}\n\n","\n#version 100\n\n#ifdef GL_FRAGMENT_PRECISION_HIGH\n    precision highp float;\n#else\n    precision mediump float;\n#endif\nprecision highp int;\nuniform \tvec4 _ClipRect;\nuniform lowp sampler2D _MainTex;\nvarying mediump vec4 vs_COLOR0;\nvarying highp vec4 vs_TEXCOORD0;\nvarying mediump vec4 vs_TEXCOORD1;\nvarying mediump vec4 vs_TEXCOORD2;\n#define SV_Target0 gl_FragData[0]\nvec2 u_xlat0;\nmediump vec4 u_xlat16_0;\nlowp float u_xlat10_0;\nmediump float u_xlat16_1;\nbool u_xlatb2;\nmediump float u_xlat16_4;\nvoid main()\n{\n    u_xlat0.xy = (-_ClipRect.xy) + _ClipRect.zw;\n    u_xlat0.xy = u_xlat0.xy + -abs(vs_TEXCOORD2.xy);\n    u_xlat0.xy = u_xlat0.xy * vs_TEXCOORD2.zw;\n    u_xlat0.xy = clamp(u_xlat0.xy, 0.0, 1.0);\n    u_xlat16_1 = u_xlat0.y * u_xlat0.x;\n    u_xlat10_0 = texture2D(_MainTex, vs_TEXCOORD0.xy).w;\n    u_xlat16_4 = u_xlat10_0 * vs_TEXCOORD1.x + (-vs_TEXCOORD1.w);\n    u_xlat16_4 = clamp(u_xlat16_4, 0.0, 1.0);\n    u_xlat16_0 = vec4(u_xlat16_4) * vs_COLOR0;\n    u_xlat16_4 = u_xlat16_0.w * u_xlat16_1 + -0.00100000005;\n    u_xlat16_0 = vec4(u_xlat16_1) * u_xlat16_0;\n    SV_Target0 = u_xlat16_0;\n    u_xlatb2 = u_xlat16_4<0.0;\n    if(u_xlatb2){discard;}\n    return;\n}\n\n",0,0,3,0,0,["UNITY_UI_ALPHACLIP","UNITY_UI_CLIP_RECT"],[["IGNOREPROJECTOR","true"],["QUEUE","Transparent"],["RenderType","Transparent"]]],[0,"\n#version 100\n\nuniform \tvec3 _WorldSpaceCameraPos;\nuniform \tvec4 _ScreenParams;\nuniform \tvec4 hlslcc_mtx4x4unity_ObjectToWorld[4];\nuniform \tvec4 hlslcc_mtx4x4unity_WorldToObject[4];\nuniform \tvec4 hlslcc_mtx4x4glstate_matrix_projection[4];\nuniform \tvec4 hlslcc_mtx4x4unity_MatrixVP[4];\nuniform \tmediump vec4 _FaceColor;\nuniform \tfloat _FaceDilate;\nuniform \tfloat _OutlineSoftness;\nuniform \tmediump vec4 _OutlineColor;\nuniform \tfloat _OutlineWidth;\nuniform \tfloat _UnderlayOffsetX;\nuniform \tfloat _UnderlayOffsetY;\nuniform \tfloat _UnderlayDilate;\nuniform \tfloat _UnderlaySoftness;\nuniform \tfloat _WeightNormal;\nuniform \tfloat _WeightBold;\nuniform \tfloat _ScaleRatioA;\nuniform \tfloat _ScaleRatioC;\nuniform \tfloat _VertexOffsetX;\nuniform \tfloat _VertexOffsetY;\nuniform \tvec4 _ClipRect;\nuniform \tfloat _MaskSoftnessX;\nuniform \tfloat _MaskSoftnessY;\nuniform \tfloat _TextureWidth;\nuniform \tfloat _TextureHeight;\nuniform \tfloat _GradientScale;\nuniform \tfloat _ScaleX;\nuniform \tfloat _ScaleY;\nuniform \tfloat _PerspectiveFilter;\nuniform \tfloat _Sharpness;\nattribute highp vec4 in_POSITION0;\nattribute highp vec3 in_NORMAL0;\nattribute mediump vec4 in_COLOR0;\nattribute highp vec2 in_TEXCOORD0;\nattribute highp vec2 in_TEXCOORD1;\nvarying mediump vec4 vs_COLOR0;\nvarying mediump vec4 vs_COLOR1;\nvarying highp vec4 vs_TEXCOORD0;\nvarying mediump vec4 vs_TEXCOORD1;\nvarying mediump vec4 vs_TEXCOORD2;\nvarying highp vec4 vs_TEXCOORD3;\nvarying mediump vec2 vs_TEXCOORD4;\nvec2 u_xlat0;\nbool u_xlatb0;\nvec4 u_xlat1;\nvec4 u_xlat2;\nvec4 u_xlat3;\nmediump vec4 u_xlat16_3;\nvec4 u_xlat4;\nmediump vec4 u_xlat16_4;\nvec4 u_xlat5;\nmediump vec3 u_xlat16_5;\nmediump vec4 u_xlat16_6;\nvec2 u_xlat7;\nvec3 u_xlat8;\nfloat u_xlat10;\nfloat u_xlat16;\nfloat u_xlat18;\nfloat u_xlat24;\nbool u_xlatb24;\nvoid main()\n{\n    u_xlat0.xy = in_POSITION0.xy + vec2(_VertexOffsetX, _VertexOffsetY);\n    u_xlat1 = u_xlat0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];\n    u_xlat1 = hlslcc_mtx4x4unity_ObjectToWorld[0] * u_xlat0.xxxx + u_xlat1;\n    u_xlat1 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat1;\n    u_xlat2 = u_xlat1 + hlslcc_mtx4x4unity_ObjectToWorld[3];\n    u_xlat1.xyz = hlslcc_mtx4x4unity_ObjectToWorld[3].xyz * in_POSITION0.www + u_xlat1.xyz;\n    u_xlat1.xyz = (-u_xlat1.xyz) + _WorldSpaceCameraPos.xyz;\n    u_xlat3 = u_xlat2.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];\n    u_xlat3 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat2.xxxx + u_xlat3;\n    u_xlat3 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat2.zzzz + u_xlat3;\n    u_xlat2 = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat2.wwww + u_xlat3;\n    gl_Position = u_xlat2;\n    vs_COLOR0.w = _FaceColor.w;\n    u_xlat16_3.xyz = in_COLOR0.xyz;\n    u_xlat16_3.w = 1.0;\n    u_xlat16_4 = u_xlat16_3 * _FaceColor;\n    u_xlat16_5.xyz = u_xlat16_4.www * u_xlat16_4.xyz;\n    vs_COLOR0.xyz = u_xlat16_5.xyz;\n    u_xlat5.xyz = (-u_xlat16_5.xyz);\n    u_xlat5.w = (-u_xlat16_4.w);\n    u_xlat16_6.xyz = _OutlineColor.www * _OutlineColor.xyz;\n    u_xlat16_6.w = _OutlineColor.w;\n    u_xlat5 = u_xlat5 + u_xlat16_6;\n    u_xlat16 = dot(u_xlat1.xyz, u_xlat1.xyz);\n    u_xlat16 = inversesqrt(u_xlat16);\n    u_xlat1.xyz = vec3(u_xlat16) * u_xlat1.xyz;\n    u_xlat2.x = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[0].xyz);\n    u_xlat2.y = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[1].xyz);\n    u_xlat2.z = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[2].xyz);\n    u_xlat16 = dot(u_xlat2.xyz, u_xlat2.xyz);\n    u_xlat16 = inversesqrt(u_xlat16);\n    u_xlat2.xyz = vec3(u_xlat16) * u_xlat2.xyz;\n    u_xlat16 = dot(u_xlat2.xyz, u_xlat1.xyz);\n    u_xlat1.xy = _ScreenParams.yy * hlslcc_mtx4x4glstate_matrix_projection[1].xy;\n    u_xlat1.xy = hlslcc_mtx4x4glstate_matrix_projection[0].xy * _ScreenParams.xx + u_xlat1.xy;\n    u_xlat1.xy = abs(u_xlat1.xy) * vec2(_ScaleX, _ScaleY);\n    u_xlat1.xy = u_xlat2.ww / u_xlat1.xy;\n    u_xlat24 = dot(u_xlat1.xy, u_xlat1.xy);\n    u_xlat1.xy = vec2(_MaskSoftnessX, _MaskSoftnessY) * vec2(0.25, 0.25) + u_xlat1.xy;\n    u_xlat1.zw = vec2(0.25, 0.25) / u_xlat1.xy;\n    u_xlat24 = inversesqrt(u_xlat24);\n    u_xlat2.x = abs(in_TEXCOORD1.y) * _GradientScale;\n    u_xlat10 = _Sharpness + 1.0;\n    u_xlat2.x = u_xlat10 * u_xlat2.x;\n    u_xlat10 = u_xlat24 * u_xlat2.x;\n    u_xlat18 = (-_PerspectiveFilter) + 1.0;\n    u_xlat18 = u_xlat18 * abs(u_xlat10);\n    u_xlat24 = u_xlat24 * u_xlat2.x + (-u_xlat18);\n    u_xlat16 = abs(u_xlat16) * u_xlat24 + u_xlat18;\n    u_xlatb24 = hlslcc_mtx4x4glstate_matrix_projection[3].w==0.0;\n    u_xlat16 = (u_xlatb24) ? u_xlat16 : u_xlat10;\n    u_xlat24 = _OutlineSoftness * _ScaleRatioA;\n    u_xlat24 = u_xlat24 * u_xlat16 + 1.0;\n    u_xlat2.x = u_xlat16 / u_xlat24;\n    u_xlat24 = _OutlineWidth * _ScaleRatioA;\n    u_xlat24 = u_xlat2.x * u_xlat24;\n    u_xlat7.x = min(u_xlat24, 1.0);\n    u_xlat7.x = sqrt(u_xlat7.x);\n    u_xlat5 = u_xlat5 * u_xlat7.xxxx;\n    u_xlat4.xyz = u_xlat16_4.xyz * u_xlat16_4.www + u_xlat5.xyz;\n    u_xlat4.w = u_xlat16_3.w * _FaceColor.w + u_xlat5.w;\n    vs_COLOR1 = u_xlat4;\n    u_xlat3 = max(_ClipRect, vec4(-2e+10, -2e+10, -2e+10, -2e+10));\n    u_xlat3 = min(u_xlat3, vec4(2e+10, 2e+10, 2e+10, 2e+10));\n    u_xlat7.xy = u_xlat0.xy + (-u_xlat3.xy);\n    u_xlat0.xy = u_xlat0.xy * vec2(2.0, 2.0) + (-u_xlat3.xy);\n    u_xlat1.xy = (-u_xlat3.zw) + u_xlat0.xy;\n    u_xlat0.xy = (-u_xlat3.xy) + u_xlat3.zw;\n    vs_TEXCOORD0.zw = u_xlat7.xy / u_xlat0.xy;\n    vs_TEXCOORD2 = u_xlat1;\n    vs_TEXCOORD0.xy = in_TEXCOORD0.xy;\n    u_xlatb0 = 0.0>=in_TEXCOORD1.y;\n    u_xlat0.x = u_xlatb0 ? 1.0 : float(0.0);\n    u_xlat8.x = (-_WeightNormal) + _WeightBold;\n    u_xlat0.x = u_xlat0.x * u_xlat8.x + _WeightNormal;\n    u_xlat0.x = u_xlat0.x * 0.25 + _FaceDilate;\n    u_xlat0.x = u_xlat0.x * _ScaleRatioA;\n    u_xlat0.x = (-u_xlat0.x) * 0.5 + 0.5;\n    u_xlat2.w = u_xlat0.x * u_xlat2.x + -0.5;\n    u_xlat2.y = (-u_xlat24) * 0.5 + u_xlat2.w;\n    u_xlat2.z = u_xlat24 * 0.5 + u_xlat2.w;\n    vs_TEXCOORD1 = u_xlat2;\n    vs_TEXCOORD3.z = in_COLOR0.w;\n    vs_TEXCOORD3.w = 0.0;\n    u_xlat1 = vec4(_UnderlaySoftness, _UnderlayDilate, _UnderlayOffsetX, _UnderlayOffsetY) * vec4(vec4(_ScaleRatioC, _ScaleRatioC, _ScaleRatioC, _ScaleRatioC));\n    u_xlat8.xz = (-u_xlat1.zw) * vec2(_GradientScale);\n    u_xlat8.xz = u_xlat8.xz / vec2(_TextureWidth, _TextureHeight);\n    vs_TEXCOORD3.xy = u_xlat8.xz + in_TEXCOORD0.xy;\n    u_xlat8.x = u_xlat1.x * u_xlat16 + 1.0;\n    u_xlat2.x = u_xlat16 / u_xlat8.x;\n    u_xlat8.x = u_xlat1.y * u_xlat2.x;\n    u_xlat0.x = u_xlat0.x * u_xlat2.x + -0.5;\n    u_xlat2.y = (-u_xlat8.x) * 0.5 + u_xlat0.x;\n    vs_TEXCOORD4.xy = u_xlat2.xy;\n    return;\n}\n\n","\n#version 100\n\n#ifdef GL_FRAGMENT_PRECISION_HIGH\n    precision highp float;\n#else\n    precision mediump float;\n#endif\nprecision highp int;\nuniform \tmediump vec4 _UnderlayColor;\nuniform lowp sampler2D _MainTex;\nvarying mediump vec4 vs_COLOR0;\nvarying mediump vec4 vs_COLOR1;\nvarying highp vec4 vs_TEXCOORD0;\nvarying mediump vec4 vs_TEXCOORD1;\nvarying highp vec4 vs_TEXCOORD3;\nvarying mediump vec2 vs_TEXCOORD4;\n#define SV_Target0 gl_FragData[0]\nvec4 u_xlat0;\nmediump vec4 u_xlat16_0;\nlowp float u_xlat10_0;\nmediump vec4 u_xlat16_1;\nmediump vec4 u_xlat16_2;\nlowp float u_xlat10_2;\nmediump vec2 u_xlat16_3;\nvoid main()\n{\n    u_xlat10_0 = texture2D(_MainTex, vs_TEXCOORD3.xy).w;\n    u_xlat16_1.x = u_xlat10_0 * vs_TEXCOORD4.x + (-vs_TEXCOORD4.y);\n    u_xlat16_1.x = clamp(u_xlat16_1.x, 0.0, 1.0);\n    u_xlat16_0.xyz = _UnderlayColor.www * _UnderlayColor.xyz;\n    u_xlat16_0.w = _UnderlayColor.w;\n    u_xlat0 = u_xlat16_1.xxxx * u_xlat16_0;\n    u_xlat16_1 = vs_COLOR0 + (-vs_COLOR1);\n    u_xlat10_2 = texture2D(_MainTex, vs_TEXCOORD0.xy).w;\n    u_xlat16_3.xy = vec2(u_xlat10_2) * vs_TEXCOORD1.xx + (-vs_TEXCOORD1.zy);\n    u_xlat16_3.xy = clamp(u_xlat16_3.xy, 0.0, 1.0);\n    u_xlat16_1 = u_xlat16_3.xxxx * u_xlat16_1 + vs_COLOR1;\n    u_xlat16_2 = u_xlat16_3.yyyy * u_xlat16_1;\n    u_xlat16_1.x = (-u_xlat16_1.w) * u_xlat16_3.y + 1.0;\n    u_xlat0 = u_xlat0 * u_xlat16_1.xxxx + u_xlat16_2;\n    u_xlat0 = u_xlat0 * vs_TEXCOORD3.zzzz;\n    SV_Target0 = u_xlat0;\n    return;\n}\n\n",0,0,0,0,0,["OUTLINE_ON","UNDERLAY_ON"],[["IGNOREPROJECTOR","true"],["QUEUE","Transparent"],["RenderType","Transparent"]]],[0,"\n#version 100\n\nuniform \tvec3 _WorldSpaceCameraPos;\nuniform \tvec4 _ScreenParams;\nuniform \tvec4 hlslcc_mtx4x4unity_ObjectToWorld[4];\nuniform \tvec4 hlslcc_mtx4x4unity_WorldToObject[4];\nuniform \tvec4 hlslcc_mtx4x4glstate_matrix_projection[4];\nuniform \tvec4 hlslcc_mtx4x4unity_MatrixVP[4];\nuniform \tmediump vec4 _FaceColor;\nuniform \tfloat _FaceDilate;\nuniform \tfloat _OutlineSoftness;\nuniform \tmediump vec4 _OutlineColor;\nuniform \tfloat _OutlineWidth;\nuniform \tfloat _WeightNormal;\nuniform \tfloat _WeightBold;\nuniform \tfloat _ScaleRatioA;\nuniform \tfloat _VertexOffsetX;\nuniform \tfloat _VertexOffsetY;\nuniform \tvec4 _ClipRect;\nuniform \tfloat _MaskSoftnessX;\nuniform \tfloat _MaskSoftnessY;\nuniform \tfloat _GradientScale;\nuniform \tfloat _ScaleX;\nuniform \tfloat _ScaleY;\nuniform \tfloat _PerspectiveFilter;\nuniform \tfloat _Sharpness;\nattribute highp vec4 in_POSITION0;\nattribute highp vec3 in_NORMAL0;\nattribute mediump vec4 in_COLOR0;\nattribute highp vec2 in_TEXCOORD0;\nattribute highp vec2 in_TEXCOORD1;\nvarying mediump vec4 vs_COLOR0;\nvarying mediump vec4 vs_COLOR1;\nvarying highp vec4 vs_TEXCOORD0;\nvarying mediump vec4 vs_TEXCOORD1;\nvarying mediump vec4 vs_TEXCOORD2;\nvec2 u_xlat0;\nbool u_xlatb0;\nvec4 u_xlat1;\nvec4 u_xlat2;\nvec4 u_xlat3;\nmediump vec4 u_xlat16_3;\nvec4 u_xlat4;\nfloat u_xlat5;\nfloat u_xlat7;\nfloat u_xlat10;\nfloat u_xlat12;\nfloat u_xlat15;\nbool u_xlatb15;\nvoid main()\n{\n    u_xlat0.xy = in_POSITION0.xy + vec2(_VertexOffsetX, _VertexOffsetY);\n    u_xlat1 = u_xlat0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];\n    u_xlat1 = hlslcc_mtx4x4unity_ObjectToWorld[0] * u_xlat0.xxxx + u_xlat1;\n    u_xlat1 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat1;\n    u_xlat2 = u_xlat1 + hlslcc_mtx4x4unity_ObjectToWorld[3];\n    u_xlat1.xyz = hlslcc_mtx4x4unity_ObjectToWorld[3].xyz * in_POSITION0.www + u_xlat1.xyz;\n    u_xlat1.xyz = (-u_xlat1.xyz) + _WorldSpaceCameraPos.xyz;\n    u_xlat3 = u_xlat2.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];\n    u_xlat3 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat2.xxxx + u_xlat3;\n    u_xlat3 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat2.zzzz + u_xlat3;\n    u_xlat2 = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat2.wwww + u_xlat3;\n    gl_Position = u_xlat2;\n    u_xlat16_3 = in_COLOR0 * _FaceColor;\n    u_xlat16_3.xyz = u_xlat16_3.www * u_xlat16_3.xyz;\n    vs_COLOR0 = u_xlat16_3;\n    u_xlat10 = dot(u_xlat1.xyz, u_xlat1.xyz);\n    u_xlat10 = inversesqrt(u_xlat10);\n    u_xlat1.xyz = vec3(u_xlat10) * u_xlat1.xyz;\n    u_xlat2.x = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[0].xyz);\n    u_xlat2.y = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[1].xyz);\n    u_xlat2.z = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[2].xyz);\n    u_xlat10 = dot(u_xlat2.xyz, u_xlat2.xyz);\n    u_xlat10 = inversesqrt(u_xlat10);\n    u_xlat2.xyz = vec3(u_xlat10) * u_xlat2.xyz;\n    u_xlat10 = dot(u_xlat2.xyz, u_xlat1.xyz);\n    u_xlat1.xy = _ScreenParams.yy * hlslcc_mtx4x4glstate_matrix_projection[1].xy;\n    u_xlat1.xy = hlslcc_mtx4x4glstate_matrix_projection[0].xy * _ScreenParams.xx + u_xlat1.xy;\n    u_xlat1.xy = abs(u_xlat1.xy) * vec2(_ScaleX, _ScaleY);\n    u_xlat1.xy = u_xlat2.ww / u_xlat1.xy;\n    u_xlat15 = dot(u_xlat1.xy, u_xlat1.xy);\n    u_xlat1.xy = vec2(_MaskSoftnessX, _MaskSoftnessY) * vec2(0.25, 0.25) + u_xlat1.xy;\n    u_xlat1.zw = vec2(0.25, 0.25) / u_xlat1.xy;\n    u_xlat15 = inversesqrt(u_xlat15);\n    u_xlat2.x = abs(in_TEXCOORD1.y) * _GradientScale;\n    u_xlat7 = _Sharpness + 1.0;\n    u_xlat2.x = u_xlat7 * u_xlat2.x;\n    u_xlat7 = u_xlat15 * u_xlat2.x;\n    u_xlat12 = (-_PerspectiveFilter) + 1.0;\n    u_xlat12 = u_xlat12 * abs(u_xlat7);\n    u_xlat15 = u_xlat15 * u_xlat2.x + (-u_xlat12);\n    u_xlat10 = abs(u_xlat10) * u_xlat15 + u_xlat12;\n    u_xlatb15 = hlslcc_mtx4x4glstate_matrix_projection[3].w==0.0;\n    u_xlat10 = (u_xlatb15) ? u_xlat10 : u_xlat7;\n    u_xlat15 = _OutlineSoftness * _ScaleRatioA;\n    u_xlat15 = u_xlat15 * u_xlat10 + 1.0;\n    u_xlat2.x = u_xlat10 / u_xlat15;\n    u_xlat10 = _OutlineWidth * _ScaleRatioA;\n    u_xlat10 = u_xlat2.x * u_xlat10;\n    u_xlat15 = min(u_xlat10, 1.0);\n    u_xlat15 = sqrt(u_xlat15);\n    u_xlat4.x = in_COLOR0.w * _OutlineColor.w;\n    u_xlat4.xyz = _OutlineColor.xyz * u_xlat4.xxx + (-u_xlat16_3.xyz);\n    u_xlat4.w = _OutlineColor.w * in_COLOR0.w + (-u_xlat16_3.w);\n    u_xlat3 = vec4(u_xlat15) * u_xlat4 + u_xlat16_3;\n    vs_COLOR1 = u_xlat3;\n    u_xlat3 = max(_ClipRect, vec4(-2e+10, -2e+10, -2e+10, -2e+10));\n    u_xlat3 = min(u_xlat3, vec4(2e+10, 2e+10, 2e+10, 2e+10));\n    u_xlat4.xy = u_xlat0.xy + (-u_xlat3.xy);\n    u_xlat0.xy = u_xlat0.xy * vec2(2.0, 2.0) + (-u_xlat3.xy);\n    u_xlat1.xy = (-u_xlat3.zw) + u_xlat0.xy;\n    u_xlat0.xy = (-u_xlat3.xy) + u_xlat3.zw;\n    vs_TEXCOORD0.zw = u_xlat4.xy / u_xlat0.xy;\n    vs_TEXCOORD2 = u_xlat1;\n    vs_TEXCOORD0.xy = in_TEXCOORD0.xy;\n    u_xlatb0 = 0.0>=in_TEXCOORD1.y;\n    u_xlat0.x = u_xlatb0 ? 1.0 : float(0.0);\n    u_xlat5 = (-_WeightNormal) + _WeightBold;\n    u_xlat0.x = u_xlat0.x * u_xlat5 + _WeightNormal;\n    u_xlat0.x = u_xlat0.x * 0.25 + _FaceDilate;\n    u_xlat0.x = u_xlat0.x * _ScaleRatioA;\n    u_xlat0.x = (-u_xlat0.x) * 0.5 + 0.5;\n    u_xlat2.w = u_xlat0.x * u_xlat2.x + -0.5;\n    u_xlat2.y = (-u_xlat10) * 0.5 + u_xlat2.w;\n    u_xlat2.z = u_xlat10 * 0.5 + u_xlat2.w;\n    vs_TEXCOORD1 = u_xlat2;\n    return;\n}\n\n","\n#version 100\n\n#ifdef GL_FRAGMENT_PRECISION_HIGH\n    precision highp float;\n#else\n    precision mediump float;\n#endif\nprecision highp int;\nuniform lowp sampler2D _MainTex;\nvarying mediump vec4 vs_COLOR0;\nvarying mediump vec4 vs_COLOR1;\nvarying highp vec4 vs_TEXCOORD0;\nvarying mediump vec4 vs_TEXCOORD1;\n#define SV_Target0 gl_FragData[0]\nmediump vec4 u_xlat16_0;\nlowp float u_xlat10_1;\nmediump vec2 u_xlat16_2;\nvoid main()\n{\n    u_xlat16_0 = vs_COLOR0 + (-vs_COLOR1);\n    u_xlat10_1 = texture2D(_MainTex, vs_TEXCOORD0.xy).w;\n    u_xlat16_2.xy = vec2(u_xlat10_1) * vs_TEXCOORD1.xx + (-vs_TEXCOORD1.zy);\n    u_xlat16_2.xy = clamp(u_xlat16_2.xy, 0.0, 1.0);\n    u_xlat16_0 = u_xlat16_2.xxxx * u_xlat16_0 + vs_COLOR1;\n    SV_Target0 = u_xlat16_2.yyyy * u_xlat16_0;\n    return;\n}\n\n",0,0,0,0,0,["OUTLINE_ON"],[["IGNOREPROJECTOR","true"],["QUEUE","Transparent"],["RenderType","Transparent"]]],[0,"\n#version 100\n\nuniform \tvec3 _WorldSpaceCameraPos;\nuniform \tvec4 _ScreenParams;\nuniform \tvec4 hlslcc_mtx4x4unity_ObjectToWorld[4];\nuniform \tvec4 hlslcc_mtx4x4unity_WorldToObject[4];\nuniform \tvec4 hlslcc_mtx4x4glstate_matrix_projection[4];\nuniform \tvec4 hlslcc_mtx4x4unity_MatrixVP[4];\nuniform \tmediump vec4 _FaceColor;\nuniform \tfloat _FaceDilate;\nuniform \tfloat _OutlineSoftness;\nuniform \tmediump vec4 _OutlineColor;\nuniform \tfloat _OutlineWidth;\nuniform \tfloat _UnderlayOffsetX;\nuniform \tfloat _UnderlayOffsetY;\nuniform \tfloat _UnderlayDilate;\nuniform \tfloat _UnderlaySoftness;\nuniform \tfloat _WeightNormal;\nuniform \tfloat _WeightBold;\nuniform \tfloat _ScaleRatioA;\nuniform \tfloat _ScaleRatioC;\nuniform \tfloat _VertexOffsetX;\nuniform \tfloat _VertexOffsetY;\nuniform \tvec4 _ClipRect;\nuniform \tfloat _MaskSoftnessX;\nuniform \tfloat _MaskSoftnessY;\nuniform \tfloat _TextureWidth;\nuniform \tfloat _TextureHeight;\nuniform \tfloat _GradientScale;\nuniform \tfloat _ScaleX;\nuniform \tfloat _ScaleY;\nuniform \tfloat _PerspectiveFilter;\nuniform \tfloat _Sharpness;\nattribute highp vec4 in_POSITION0;\nattribute highp vec3 in_NORMAL0;\nattribute mediump vec4 in_COLOR0;\nattribute highp vec2 in_TEXCOORD0;\nattribute highp vec2 in_TEXCOORD1;\nvarying mediump vec4 vs_COLOR0;\nvarying mediump vec4 vs_COLOR1;\nvarying highp vec4 vs_TEXCOORD0;\nvarying mediump vec4 vs_TEXCOORD1;\nvarying mediump vec4 vs_TEXCOORD2;\nvarying highp vec4 vs_TEXCOORD3;\nvarying mediump vec2 vs_TEXCOORD4;\nvec2 u_xlat0;\nbool u_xlatb0;\nvec4 u_xlat1;\nvec4 u_xlat2;\nvec4 u_xlat3;\nmediump vec4 u_xlat16_3;\nvec4 u_xlat4;\nmediump vec4 u_xlat16_4;\nvec4 u_xlat5;\nmediump vec3 u_xlat16_5;\nmediump vec4 u_xlat16_6;\nvec2 u_xlat7;\nvec3 u_xlat8;\nfloat u_xlat10;\nfloat u_xlat16;\nfloat u_xlat18;\nfloat u_xlat24;\nbool u_xlatb24;\nvoid main()\n{\n    u_xlat0.xy = in_POSITION0.xy + vec2(_VertexOffsetX, _VertexOffsetY);\n    u_xlat1 = u_xlat0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];\n    u_xlat1 = hlslcc_mtx4x4unity_ObjectToWorld[0] * u_xlat0.xxxx + u_xlat1;\n    u_xlat1 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat1;\n    u_xlat2 = u_xlat1 + hlslcc_mtx4x4unity_ObjectToWorld[3];\n    u_xlat1.xyz = hlslcc_mtx4x4unity_ObjectToWorld[3].xyz * in_POSITION0.www + u_xlat1.xyz;\n    u_xlat1.xyz = (-u_xlat1.xyz) + _WorldSpaceCameraPos.xyz;\n    u_xlat3 = u_xlat2.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];\n    u_xlat3 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat2.xxxx + u_xlat3;\n    u_xlat3 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat2.zzzz + u_xlat3;\n    u_xlat2 = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat2.wwww + u_xlat3;\n    gl_Position = u_xlat2;\n    vs_COLOR0.w = _FaceColor.w;\n    u_xlat16_3.xyz = in_COLOR0.xyz;\n    u_xlat16_3.w = 1.0;\n    u_xlat16_4 = u_xlat16_3 * _FaceColor;\n    u_xlat16_5.xyz = u_xlat16_4.www * u_xlat16_4.xyz;\n    vs_COLOR0.xyz = u_xlat16_5.xyz;\n    u_xlat5.xyz = (-u_xlat16_5.xyz);\n    u_xlat5.w = (-u_xlat16_4.w);\n    u_xlat16_6.xyz = _OutlineColor.www * _OutlineColor.xyz;\n    u_xlat16_6.w = _OutlineColor.w;\n    u_xlat5 = u_xlat5 + u_xlat16_6;\n    u_xlat16 = dot(u_xlat1.xyz, u_xlat1.xyz);\n    u_xlat16 = inversesqrt(u_xlat16);\n    u_xlat1.xyz = vec3(u_xlat16) * u_xlat1.xyz;\n    u_xlat2.x = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[0].xyz);\n    u_xlat2.y = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[1].xyz);\n    u_xlat2.z = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[2].xyz);\n    u_xlat16 = dot(u_xlat2.xyz, u_xlat2.xyz);\n    u_xlat16 = inversesqrt(u_xlat16);\n    u_xlat2.xyz = vec3(u_xlat16) * u_xlat2.xyz;\n    u_xlat16 = dot(u_xlat2.xyz, u_xlat1.xyz);\n    u_xlat1.xy = _ScreenParams.yy * hlslcc_mtx4x4glstate_matrix_projection[1].xy;\n    u_xlat1.xy = hlslcc_mtx4x4glstate_matrix_projection[0].xy * _ScreenParams.xx + u_xlat1.xy;\n    u_xlat1.xy = abs(u_xlat1.xy) * vec2(_ScaleX, _ScaleY);\n    u_xlat1.xy = u_xlat2.ww / u_xlat1.xy;\n    u_xlat24 = dot(u_xlat1.xy, u_xlat1.xy);\n    u_xlat1.xy = vec2(_MaskSoftnessX, _MaskSoftnessY) * vec2(0.25, 0.25) + u_xlat1.xy;\n    u_xlat1.zw = vec2(0.25, 0.25) / u_xlat1.xy;\n    u_xlat24 = inversesqrt(u_xlat24);\n    u_xlat2.x = abs(in_TEXCOORD1.y) * _GradientScale;\n    u_xlat10 = _Sharpness + 1.0;\n    u_xlat2.x = u_xlat10 * u_xlat2.x;\n    u_xlat10 = u_xlat24 * u_xlat2.x;\n    u_xlat18 = (-_PerspectiveFilter) + 1.0;\n    u_xlat18 = u_xlat18 * abs(u_xlat10);\n    u_xlat24 = u_xlat24 * u_xlat2.x + (-u_xlat18);\n    u_xlat16 = abs(u_xlat16) * u_xlat24 + u_xlat18;\n    u_xlatb24 = hlslcc_mtx4x4glstate_matrix_projection[3].w==0.0;\n    u_xlat16 = (u_xlatb24) ? u_xlat16 : u_xlat10;\n    u_xlat24 = _OutlineSoftness * _ScaleRatioA;\n    u_xlat24 = u_xlat24 * u_xlat16 + 1.0;\n    u_xlat2.x = u_xlat16 / u_xlat24;\n    u_xlat24 = _OutlineWidth * _ScaleRatioA;\n    u_xlat24 = u_xlat2.x * u_xlat24;\n    u_xlat7.x = min(u_xlat24, 1.0);\n    u_xlat7.x = sqrt(u_xlat7.x);\n    u_xlat5 = u_xlat5 * u_xlat7.xxxx;\n    u_xlat4.xyz = u_xlat16_4.xyz * u_xlat16_4.www + u_xlat5.xyz;\n    u_xlat4.w = u_xlat16_3.w * _FaceColor.w + u_xlat5.w;\n    vs_COLOR1 = u_xlat4;\n    u_xlat3 = max(_ClipRect, vec4(-2e+10, -2e+10, -2e+10, -2e+10));\n    u_xlat3 = min(u_xlat3, vec4(2e+10, 2e+10, 2e+10, 2e+10));\n    u_xlat7.xy = u_xlat0.xy + (-u_xlat3.xy);\n    u_xlat0.xy = u_xlat0.xy * vec2(2.0, 2.0) + (-u_xlat3.xy);\n    u_xlat1.xy = (-u_xlat3.zw) + u_xlat0.xy;\n    u_xlat0.xy = (-u_xlat3.xy) + u_xlat3.zw;\n    vs_TEXCOORD0.zw = u_xlat7.xy / u_xlat0.xy;\n    vs_TEXCOORD2 = u_xlat1;\n    vs_TEXCOORD0.xy = in_TEXCOORD0.xy;\n    u_xlatb0 = 0.0>=in_TEXCOORD1.y;\n    u_xlat0.x = u_xlatb0 ? 1.0 : float(0.0);\n    u_xlat8.x = (-_WeightNormal) + _WeightBold;\n    u_xlat0.x = u_xlat0.x * u_xlat8.x + _WeightNormal;\n    u_xlat0.x = u_xlat0.x * 0.25 + _FaceDilate;\n    u_xlat0.x = u_xlat0.x * _ScaleRatioA;\n    u_xlat0.x = (-u_xlat0.x) * 0.5 + 0.5;\n    u_xlat2.w = u_xlat0.x * u_xlat2.x + -0.5;\n    u_xlat2.y = (-u_xlat24) * 0.5 + u_xlat2.w;\n    u_xlat2.z = u_xlat24 * 0.5 + u_xlat2.w;\n    vs_TEXCOORD1 = u_xlat2;\n    vs_TEXCOORD3.z = in_COLOR0.w;\n    vs_TEXCOORD3.w = 0.0;\n    u_xlat1 = vec4(_UnderlaySoftness, _UnderlayDilate, _UnderlayOffsetX, _UnderlayOffsetY) * vec4(vec4(_ScaleRatioC, _ScaleRatioC, _ScaleRatioC, _ScaleRatioC));\n    u_xlat8.xz = (-u_xlat1.zw) * vec2(_GradientScale);\n    u_xlat8.xz = u_xlat8.xz / vec2(_TextureWidth, _TextureHeight);\n    vs_TEXCOORD3.xy = u_xlat8.xz + in_TEXCOORD0.xy;\n    u_xlat8.x = u_xlat1.x * u_xlat16 + 1.0;\n    u_xlat2.x = u_xlat16 / u_xlat8.x;\n    u_xlat8.x = u_xlat1.y * u_xlat2.x;\n    u_xlat0.x = u_xlat0.x * u_xlat2.x + -0.5;\n    u_xlat2.y = (-u_xlat8.x) * 0.5 + u_xlat0.x;\n    vs_TEXCOORD4.xy = u_xlat2.xy;\n    return;\n}\n\n","\n#version 100\n\n#ifdef GL_FRAGMENT_PRECISION_HIGH\n    precision highp float;\n#else\n    precision mediump float;\n#endif\nprecision highp int;\nuniform \tmediump vec4 _UnderlayColor;\nuniform lowp sampler2D _MainTex;\nvarying mediump vec4 vs_COLOR0;\nvarying mediump vec4 vs_COLOR1;\nvarying highp vec4 vs_TEXCOORD0;\nvarying mediump vec4 vs_TEXCOORD1;\nvarying highp vec4 vs_TEXCOORD3;\nvarying mediump vec2 vs_TEXCOORD4;\n#define SV_Target0 gl_FragData[0]\nvec4 u_xlat0;\nmediump vec4 u_xlat16_0;\nlowp float u_xlat10_0;\nmediump vec4 u_xlat16_1;\nmediump vec4 u_xlat16_2;\nlowp float u_xlat10_2;\nmediump vec2 u_xlat16_3;\nbool u_xlatb4;\nvoid main()\n{\n    u_xlat10_0 = texture2D(_MainTex, vs_TEXCOORD3.xy).w;\n    u_xlat16_1.x = u_xlat10_0 * vs_TEXCOORD4.x + (-vs_TEXCOORD4.y);\n    u_xlat16_1.x = clamp(u_xlat16_1.x, 0.0, 1.0);\n    u_xlat16_0.xyz = _UnderlayColor.www * _UnderlayColor.xyz;\n    u_xlat16_0.w = _UnderlayColor.w;\n    u_xlat0 = u_xlat16_1.xxxx * u_xlat16_0;\n    u_xlat16_1 = vs_COLOR0 + (-vs_COLOR1);\n    u_xlat10_2 = texture2D(_MainTex, vs_TEXCOORD0.xy).w;\n    u_xlat16_3.xy = vec2(u_xlat10_2) * vs_TEXCOORD1.xx + (-vs_TEXCOORD1.zy);\n    u_xlat16_3.xy = clamp(u_xlat16_3.xy, 0.0, 1.0);\n    u_xlat16_1 = u_xlat16_3.xxxx * u_xlat16_1 + vs_COLOR1;\n    u_xlat16_2 = u_xlat16_3.yyyy * u_xlat16_1;\n    u_xlat16_1.x = (-u_xlat16_1.w) * u_xlat16_3.y + 1.0;\n    u_xlat0 = u_xlat0 * u_xlat16_1.xxxx + u_xlat16_2;\n    u_xlat16_1.x = u_xlat0.w * vs_TEXCOORD3.z + -0.00100000005;\n    u_xlat0 = u_xlat0 * vs_TEXCOORD3.zzzz;\n    SV_Target0 = u_xlat0;\n    u_xlatb4 = u_xlat16_1.x<0.0;\n    if(u_xlatb4){discard;}\n    return;\n}\n\n",0,0,1,0,0,["UNITY_UI_ALPHACLIP","OUTLINE_ON","UNDERLAY_ON"],[["IGNOREPROJECTOR","true"],["QUEUE","Transparent"],["RenderType","Transparent"]]],[0,"\n#version 100\n\nuniform \tvec3 _WorldSpaceCameraPos;\nuniform \tvec4 _ScreenParams;\nuniform \tvec4 hlslcc_mtx4x4unity_ObjectToWorld[4];\nuniform \tvec4 hlslcc_mtx4x4unity_WorldToObject[4];\nuniform \tvec4 hlslcc_mtx4x4glstate_matrix_projection[4];\nuniform \tvec4 hlslcc_mtx4x4unity_MatrixVP[4];\nuniform \tmediump vec4 _FaceColor;\nuniform \tfloat _FaceDilate;\nuniform \tfloat _OutlineSoftness;\nuniform \tmediump vec4 _OutlineColor;\nuniform \tfloat _OutlineWidth;\nuniform \tfloat _WeightNormal;\nuniform \tfloat _WeightBold;\nuniform \tfloat _ScaleRatioA;\nuniform \tfloat _VertexOffsetX;\nuniform \tfloat _VertexOffsetY;\nuniform \tvec4 _ClipRect;\nuniform \tfloat _MaskSoftnessX;\nuniform \tfloat _MaskSoftnessY;\nuniform \tfloat _GradientScale;\nuniform \tfloat _ScaleX;\nuniform \tfloat _ScaleY;\nuniform \tfloat _PerspectiveFilter;\nuniform \tfloat _Sharpness;\nattribute highp vec4 in_POSITION0;\nattribute highp vec3 in_NORMAL0;\nattribute mediump vec4 in_COLOR0;\nattribute highp vec2 in_TEXCOORD0;\nattribute highp vec2 in_TEXCOORD1;\nvarying mediump vec4 vs_COLOR0;\nvarying mediump vec4 vs_COLOR1;\nvarying highp vec4 vs_TEXCOORD0;\nvarying mediump vec4 vs_TEXCOORD1;\nvarying mediump vec4 vs_TEXCOORD2;\nvec2 u_xlat0;\nbool u_xlatb0;\nvec4 u_xlat1;\nvec4 u_xlat2;\nvec4 u_xlat3;\nmediump vec4 u_xlat16_3;\nvec4 u_xlat4;\nfloat u_xlat5;\nfloat u_xlat7;\nfloat u_xlat10;\nfloat u_xlat12;\nfloat u_xlat15;\nbool u_xlatb15;\nvoid main()\n{\n    u_xlat0.xy = in_POSITION0.xy + vec2(_VertexOffsetX, _VertexOffsetY);\n    u_xlat1 = u_xlat0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];\n    u_xlat1 = hlslcc_mtx4x4unity_ObjectToWorld[0] * u_xlat0.xxxx + u_xlat1;\n    u_xlat1 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat1;\n    u_xlat2 = u_xlat1 + hlslcc_mtx4x4unity_ObjectToWorld[3];\n    u_xlat1.xyz = hlslcc_mtx4x4unity_ObjectToWorld[3].xyz * in_POSITION0.www + u_xlat1.xyz;\n    u_xlat1.xyz = (-u_xlat1.xyz) + _WorldSpaceCameraPos.xyz;\n    u_xlat3 = u_xlat2.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];\n    u_xlat3 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat2.xxxx + u_xlat3;\n    u_xlat3 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat2.zzzz + u_xlat3;\n    u_xlat2 = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat2.wwww + u_xlat3;\n    gl_Position = u_xlat2;\n    u_xlat16_3 = in_COLOR0 * _FaceColor;\n    u_xlat16_3.xyz = u_xlat16_3.www * u_xlat16_3.xyz;\n    vs_COLOR0 = u_xlat16_3;\n    u_xlat10 = dot(u_xlat1.xyz, u_xlat1.xyz);\n    u_xlat10 = inversesqrt(u_xlat10);\n    u_xlat1.xyz = vec3(u_xlat10) * u_xlat1.xyz;\n    u_xlat2.x = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[0].xyz);\n    u_xlat2.y = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[1].xyz);\n    u_xlat2.z = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[2].xyz);\n    u_xlat10 = dot(u_xlat2.xyz, u_xlat2.xyz);\n    u_xlat10 = inversesqrt(u_xlat10);\n    u_xlat2.xyz = vec3(u_xlat10) * u_xlat2.xyz;\n    u_xlat10 = dot(u_xlat2.xyz, u_xlat1.xyz);\n    u_xlat1.xy = _ScreenParams.yy * hlslcc_mtx4x4glstate_matrix_projection[1].xy;\n    u_xlat1.xy = hlslcc_mtx4x4glstate_matrix_projection[0].xy * _ScreenParams.xx + u_xlat1.xy;\n    u_xlat1.xy = abs(u_xlat1.xy) * vec2(_ScaleX, _ScaleY);\n    u_xlat1.xy = u_xlat2.ww / u_xlat1.xy;\n    u_xlat15 = dot(u_xlat1.xy, u_xlat1.xy);\n    u_xlat1.xy = vec2(_MaskSoftnessX, _MaskSoftnessY) * vec2(0.25, 0.25) + u_xlat1.xy;\n    u_xlat1.zw = vec2(0.25, 0.25) / u_xlat1.xy;\n    u_xlat15 = inversesqrt(u_xlat15);\n    u_xlat2.x = abs(in_TEXCOORD1.y) * _GradientScale;\n    u_xlat7 = _Sharpness + 1.0;\n    u_xlat2.x = u_xlat7 * u_xlat2.x;\n    u_xlat7 = u_xlat15 * u_xlat2.x;\n    u_xlat12 = (-_PerspectiveFilter) + 1.0;\n    u_xlat12 = u_xlat12 * abs(u_xlat7);\n    u_xlat15 = u_xlat15 * u_xlat2.x + (-u_xlat12);\n    u_xlat10 = abs(u_xlat10) * u_xlat15 + u_xlat12;\n    u_xlatb15 = hlslcc_mtx4x4glstate_matrix_projection[3].w==0.0;\n    u_xlat10 = (u_xlatb15) ? u_xlat10 : u_xlat7;\n    u_xlat15 = _OutlineSoftness * _ScaleRatioA;\n    u_xlat15 = u_xlat15 * u_xlat10 + 1.0;\n    u_xlat2.x = u_xlat10 / u_xlat15;\n    u_xlat10 = _OutlineWidth * _ScaleRatioA;\n    u_xlat10 = u_xlat2.x * u_xlat10;\n    u_xlat15 = min(u_xlat10, 1.0);\n    u_xlat15 = sqrt(u_xlat15);\n    u_xlat4.x = in_COLOR0.w * _OutlineColor.w;\n    u_xlat4.xyz = _OutlineColor.xyz * u_xlat4.xxx + (-u_xlat16_3.xyz);\n    u_xlat4.w = _OutlineColor.w * in_COLOR0.w + (-u_xlat16_3.w);\n    u_xlat3 = vec4(u_xlat15) * u_xlat4 + u_xlat16_3;\n    vs_COLOR1 = u_xlat3;\n    u_xlat3 = max(_ClipRect, vec4(-2e+10, -2e+10, -2e+10, -2e+10));\n    u_xlat3 = min(u_xlat3, vec4(2e+10, 2e+10, 2e+10, 2e+10));\n    u_xlat4.xy = u_xlat0.xy + (-u_xlat3.xy);\n    u_xlat0.xy = u_xlat0.xy * vec2(2.0, 2.0) + (-u_xlat3.xy);\n    u_xlat1.xy = (-u_xlat3.zw) + u_xlat0.xy;\n    u_xlat0.xy = (-u_xlat3.xy) + u_xlat3.zw;\n    vs_TEXCOORD0.zw = u_xlat4.xy / u_xlat0.xy;\n    vs_TEXCOORD2 = u_xlat1;\n    vs_TEXCOORD0.xy = in_TEXCOORD0.xy;\n    u_xlatb0 = 0.0>=in_TEXCOORD1.y;\n    u_xlat0.x = u_xlatb0 ? 1.0 : float(0.0);\n    u_xlat5 = (-_WeightNormal) + _WeightBold;\n    u_xlat0.x = u_xlat0.x * u_xlat5 + _WeightNormal;\n    u_xlat0.x = u_xlat0.x * 0.25 + _FaceDilate;\n    u_xlat0.x = u_xlat0.x * _ScaleRatioA;\n    u_xlat0.x = (-u_xlat0.x) * 0.5 + 0.5;\n    u_xlat2.w = u_xlat0.x * u_xlat2.x + -0.5;\n    u_xlat2.y = (-u_xlat10) * 0.5 + u_xlat2.w;\n    u_xlat2.z = u_xlat10 * 0.5 + u_xlat2.w;\n    vs_TEXCOORD1 = u_xlat2;\n    return;\n}\n\n","\n#version 100\n\n#ifdef GL_FRAGMENT_PRECISION_HIGH\n    precision highp float;\n#else\n    precision mediump float;\n#endif\nprecision highp int;\nuniform lowp sampler2D _MainTex;\nvarying mediump vec4 vs_COLOR0;\nvarying mediump vec4 vs_COLOR1;\nvarying highp vec4 vs_TEXCOORD0;\nvarying mediump vec4 vs_TEXCOORD1;\n#define SV_Target0 gl_FragData[0]\nmediump vec4 u_xlat16_0;\nlowp float u_xlat10_1;\nbool u_xlatb1;\nmediump vec2 u_xlat16_2;\nvoid main()\n{\n    u_xlat16_0 = vs_COLOR0 + (-vs_COLOR1);\n    u_xlat10_1 = texture2D(_MainTex, vs_TEXCOORD0.xy).w;\n    u_xlat16_2.xy = vec2(u_xlat10_1) * vs_TEXCOORD1.xx + (-vs_TEXCOORD1.zy);\n    u_xlat16_2.xy = clamp(u_xlat16_2.xy, 0.0, 1.0);\n    u_xlat16_0 = u_xlat16_2.xxxx * u_xlat16_0 + vs_COLOR1;\n    u_xlat16_2.x = u_xlat16_0.w * u_xlat16_2.y + -0.00100000005;\n    u_xlat16_0 = u_xlat16_2.yyyy * u_xlat16_0;\n    SV_Target0 = u_xlat16_0;\n    u_xlatb1 = u_xlat16_2.x<0.0;\n    if(u_xlatb1){discard;}\n    return;\n}\n\n",0,0,1,0,0,["UNITY_UI_ALPHACLIP","OUTLINE_ON"],[["IGNOREPROJECTOR","true"],["QUEUE","Transparent"],["RenderType","Transparent"]]],[0,"\n#version 100\n\nuniform \tvec3 _WorldSpaceCameraPos;\nuniform \tvec4 _ScreenParams;\nuniform \tvec4 hlslcc_mtx4x4unity_ObjectToWorld[4];\nuniform \tvec4 hlslcc_mtx4x4unity_WorldToObject[4];\nuniform \tvec4 hlslcc_mtx4x4glstate_matrix_projection[4];\nuniform \tvec4 hlslcc_mtx4x4unity_MatrixVP[4];\nuniform \tmediump vec4 _FaceColor;\nuniform \tfloat _FaceDilate;\nuniform \tfloat _OutlineSoftness;\nuniform \tmediump vec4 _OutlineColor;\nuniform \tfloat _OutlineWidth;\nuniform \tfloat _UnderlayOffsetX;\nuniform \tfloat _UnderlayOffsetY;\nuniform \tfloat _UnderlayDilate;\nuniform \tfloat _UnderlaySoftness;\nuniform \tfloat _WeightNormal;\nuniform \tfloat _WeightBold;\nuniform \tfloat _ScaleRatioA;\nuniform \tfloat _ScaleRatioC;\nuniform \tfloat _VertexOffsetX;\nuniform \tfloat _VertexOffsetY;\nuniform \tvec4 _ClipRect;\nuniform \tfloat _MaskSoftnessX;\nuniform \tfloat _MaskSoftnessY;\nuniform \tfloat _TextureWidth;\nuniform \tfloat _TextureHeight;\nuniform \tfloat _GradientScale;\nuniform \tfloat _ScaleX;\nuniform \tfloat _ScaleY;\nuniform \tfloat _PerspectiveFilter;\nuniform \tfloat _Sharpness;\nattribute highp vec4 in_POSITION0;\nattribute highp vec3 in_NORMAL0;\nattribute mediump vec4 in_COLOR0;\nattribute highp vec2 in_TEXCOORD0;\nattribute highp vec2 in_TEXCOORD1;\nvarying mediump vec4 vs_COLOR0;\nvarying mediump vec4 vs_COLOR1;\nvarying highp vec4 vs_TEXCOORD0;\nvarying mediump vec4 vs_TEXCOORD1;\nvarying mediump vec4 vs_TEXCOORD2;\nvarying highp vec4 vs_TEXCOORD3;\nvarying mediump vec2 vs_TEXCOORD4;\nvec2 u_xlat0;\nbool u_xlatb0;\nvec4 u_xlat1;\nvec4 u_xlat2;\nvec4 u_xlat3;\nmediump vec4 u_xlat16_3;\nvec4 u_xlat4;\nmediump vec4 u_xlat16_4;\nvec4 u_xlat5;\nmediump vec3 u_xlat16_5;\nmediump vec4 u_xlat16_6;\nvec2 u_xlat7;\nvec3 u_xlat8;\nfloat u_xlat10;\nfloat u_xlat16;\nfloat u_xlat18;\nfloat u_xlat24;\nbool u_xlatb24;\nvoid main()\n{\n    u_xlat0.xy = in_POSITION0.xy + vec2(_VertexOffsetX, _VertexOffsetY);\n    u_xlat1 = u_xlat0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];\n    u_xlat1 = hlslcc_mtx4x4unity_ObjectToWorld[0] * u_xlat0.xxxx + u_xlat1;\n    u_xlat1 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat1;\n    u_xlat2 = u_xlat1 + hlslcc_mtx4x4unity_ObjectToWorld[3];\n    u_xlat1.xyz = hlslcc_mtx4x4unity_ObjectToWorld[3].xyz * in_POSITION0.www + u_xlat1.xyz;\n    u_xlat1.xyz = (-u_xlat1.xyz) + _WorldSpaceCameraPos.xyz;\n    u_xlat3 = u_xlat2.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];\n    u_xlat3 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat2.xxxx + u_xlat3;\n    u_xlat3 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat2.zzzz + u_xlat3;\n    u_xlat2 = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat2.wwww + u_xlat3;\n    gl_Position = u_xlat2;\n    vs_COLOR0.w = _FaceColor.w;\n    u_xlat16_3.xyz = in_COLOR0.xyz;\n    u_xlat16_3.w = 1.0;\n    u_xlat16_4 = u_xlat16_3 * _FaceColor;\n    u_xlat16_5.xyz = u_xlat16_4.www * u_xlat16_4.xyz;\n    vs_COLOR0.xyz = u_xlat16_5.xyz;\n    u_xlat5.xyz = (-u_xlat16_5.xyz);\n    u_xlat5.w = (-u_xlat16_4.w);\n    u_xlat16_6.xyz = _OutlineColor.www * _OutlineColor.xyz;\n    u_xlat16_6.w = _OutlineColor.w;\n    u_xlat5 = u_xlat5 + u_xlat16_6;\n    u_xlat16 = dot(u_xlat1.xyz, u_xlat1.xyz);\n    u_xlat16 = inversesqrt(u_xlat16);\n    u_xlat1.xyz = vec3(u_xlat16) * u_xlat1.xyz;\n    u_xlat2.x = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[0].xyz);\n    u_xlat2.y = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[1].xyz);\n    u_xlat2.z = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[2].xyz);\n    u_xlat16 = dot(u_xlat2.xyz, u_xlat2.xyz);\n    u_xlat16 = inversesqrt(u_xlat16);\n    u_xlat2.xyz = vec3(u_xlat16) * u_xlat2.xyz;\n    u_xlat16 = dot(u_xlat2.xyz, u_xlat1.xyz);\n    u_xlat1.xy = _ScreenParams.yy * hlslcc_mtx4x4glstate_matrix_projection[1].xy;\n    u_xlat1.xy = hlslcc_mtx4x4glstate_matrix_projection[0].xy * _ScreenParams.xx + u_xlat1.xy;\n    u_xlat1.xy = abs(u_xlat1.xy) * vec2(_ScaleX, _ScaleY);\n    u_xlat1.xy = u_xlat2.ww / u_xlat1.xy;\n    u_xlat24 = dot(u_xlat1.xy, u_xlat1.xy);\n    u_xlat1.xy = vec2(_MaskSoftnessX, _MaskSoftnessY) * vec2(0.25, 0.25) + u_xlat1.xy;\n    u_xlat1.zw = vec2(0.25, 0.25) / u_xlat1.xy;\n    u_xlat24 = inversesqrt(u_xlat24);\n    u_xlat2.x = abs(in_TEXCOORD1.y) * _GradientScale;\n    u_xlat10 = _Sharpness + 1.0;\n    u_xlat2.x = u_xlat10 * u_xlat2.x;\n    u_xlat10 = u_xlat24 * u_xlat2.x;\n    u_xlat18 = (-_PerspectiveFilter) + 1.0;\n    u_xlat18 = u_xlat18 * abs(u_xlat10);\n    u_xlat24 = u_xlat24 * u_xlat2.x + (-u_xlat18);\n    u_xlat16 = abs(u_xlat16) * u_xlat24 + u_xlat18;\n    u_xlatb24 = hlslcc_mtx4x4glstate_matrix_projection[3].w==0.0;\n    u_xlat16 = (u_xlatb24) ? u_xlat16 : u_xlat10;\n    u_xlat24 = _OutlineSoftness * _ScaleRatioA;\n    u_xlat24 = u_xlat24 * u_xlat16 + 1.0;\n    u_xlat2.x = u_xlat16 / u_xlat24;\n    u_xlat24 = _OutlineWidth * _ScaleRatioA;\n    u_xlat24 = u_xlat2.x * u_xlat24;\n    u_xlat7.x = min(u_xlat24, 1.0);\n    u_xlat7.x = sqrt(u_xlat7.x);\n    u_xlat5 = u_xlat5 * u_xlat7.xxxx;\n    u_xlat4.xyz = u_xlat16_4.xyz * u_xlat16_4.www + u_xlat5.xyz;\n    u_xlat4.w = u_xlat16_3.w * _FaceColor.w + u_xlat5.w;\n    vs_COLOR1 = u_xlat4;\n    u_xlat3 = max(_ClipRect, vec4(-2e+10, -2e+10, -2e+10, -2e+10));\n    u_xlat3 = min(u_xlat3, vec4(2e+10, 2e+10, 2e+10, 2e+10));\n    u_xlat7.xy = u_xlat0.xy + (-u_xlat3.xy);\n    u_xlat0.xy = u_xlat0.xy * vec2(2.0, 2.0) + (-u_xlat3.xy);\n    u_xlat1.xy = (-u_xlat3.zw) + u_xlat0.xy;\n    u_xlat0.xy = (-u_xlat3.xy) + u_xlat3.zw;\n    vs_TEXCOORD0.zw = u_xlat7.xy / u_xlat0.xy;\n    vs_TEXCOORD2 = u_xlat1;\n    vs_TEXCOORD0.xy = in_TEXCOORD0.xy;\n    u_xlatb0 = 0.0>=in_TEXCOORD1.y;\n    u_xlat0.x = u_xlatb0 ? 1.0 : float(0.0);\n    u_xlat8.x = (-_WeightNormal) + _WeightBold;\n    u_xlat0.x = u_xlat0.x * u_xlat8.x + _WeightNormal;\n    u_xlat0.x = u_xlat0.x * 0.25 + _FaceDilate;\n    u_xlat0.x = u_xlat0.x * _ScaleRatioA;\n    u_xlat0.x = (-u_xlat0.x) * 0.5 + 0.5;\n    u_xlat2.w = u_xlat0.x * u_xlat2.x + -0.5;\n    u_xlat2.y = (-u_xlat24) * 0.5 + u_xlat2.w;\n    u_xlat2.z = u_xlat24 * 0.5 + u_xlat2.w;\n    vs_TEXCOORD1 = u_xlat2;\n    vs_TEXCOORD3.z = in_COLOR0.w;\n    vs_TEXCOORD3.w = 0.0;\n    u_xlat1 = vec4(_UnderlaySoftness, _UnderlayDilate, _UnderlayOffsetX, _UnderlayOffsetY) * vec4(vec4(_ScaleRatioC, _ScaleRatioC, _ScaleRatioC, _ScaleRatioC));\n    u_xlat8.xz = (-u_xlat1.zw) * vec2(_GradientScale);\n    u_xlat8.xz = u_xlat8.xz / vec2(_TextureWidth, _TextureHeight);\n    vs_TEXCOORD3.xy = u_xlat8.xz + in_TEXCOORD0.xy;\n    u_xlat8.x = u_xlat1.x * u_xlat16 + 1.0;\n    u_xlat2.x = u_xlat16 / u_xlat8.x;\n    u_xlat8.x = u_xlat1.y * u_xlat2.x;\n    u_xlat0.x = u_xlat0.x * u_xlat2.x + -0.5;\n    u_xlat2.y = (-u_xlat8.x) * 0.5 + u_xlat0.x;\n    vs_TEXCOORD4.xy = u_xlat2.xy;\n    return;\n}\n\n","\n#version 100\n\n#ifdef GL_FRAGMENT_PRECISION_HIGH\n    precision highp float;\n#else\n    precision mediump float;\n#endif\nprecision highp int;\nuniform \tmediump vec4 _UnderlayColor;\nuniform \tvec4 _ClipRect;\nuniform lowp sampler2D _MainTex;\nvarying mediump vec4 vs_COLOR0;\nvarying mediump vec4 vs_COLOR1;\nvarying highp vec4 vs_TEXCOORD0;\nvarying mediump vec4 vs_TEXCOORD1;\nvarying mediump vec4 vs_TEXCOORD2;\nvarying highp vec4 vs_TEXCOORD3;\nvarying mediump vec2 vs_TEXCOORD4;\n#define SV_Target0 gl_FragData[0]\nvec4 u_xlat0;\nmediump vec4 u_xlat16_0;\nlowp float u_xlat10_0;\nmediump vec4 u_xlat16_1;\nmediump vec4 u_xlat16_2;\nlowp float u_xlat10_2;\nmediump vec2 u_xlat16_3;\nvec2 u_xlat4;\nvoid main()\n{\n    u_xlat10_0 = texture2D(_MainTex, vs_TEXCOORD3.xy).w;\n    u_xlat16_1.x = u_xlat10_0 * vs_TEXCOORD4.x + (-vs_TEXCOORD4.y);\n    u_xlat16_1.x = clamp(u_xlat16_1.x, 0.0, 1.0);\n    u_xlat16_0.xyz = _UnderlayColor.www * _UnderlayColor.xyz;\n    u_xlat16_0.w = _UnderlayColor.w;\n    u_xlat0 = u_xlat16_1.xxxx * u_xlat16_0;\n    u_xlat16_1 = vs_COLOR0 + (-vs_COLOR1);\n    u_xlat10_2 = texture2D(_MainTex, vs_TEXCOORD0.xy).w;\n    u_xlat16_3.xy = vec2(u_xlat10_2) * vs_TEXCOORD1.xx + (-vs_TEXCOORD1.zy);\n    u_xlat16_3.xy = clamp(u_xlat16_3.xy, 0.0, 1.0);\n    u_xlat16_1 = u_xlat16_3.xxxx * u_xlat16_1 + vs_COLOR1;\n    u_xlat16_2 = u_xlat16_3.yyyy * u_xlat16_1;\n    u_xlat16_1.x = (-u_xlat16_1.w) * u_xlat16_3.y + 1.0;\n    u_xlat0 = u_xlat0 * u_xlat16_1.xxxx + u_xlat16_2;\n    u_xlat4.xy = (-_ClipRect.xy) + _ClipRect.zw;\n    u_xlat4.xy = u_xlat4.xy + -abs(vs_TEXCOORD2.xy);\n    u_xlat4.xy = u_xlat4.xy * vs_TEXCOORD2.zw;\n    u_xlat4.xy = clamp(u_xlat4.xy, 0.0, 1.0);\n    u_xlat16_1.x = u_xlat4.y * u_xlat4.x;\n    u_xlat16_0 = u_xlat0 * u_xlat16_1.xxxx;\n    u_xlat0 = u_xlat16_0 * vs_TEXCOORD3.zzzz;\n    SV_Target0 = u_xlat0;\n    return;\n}\n\n",0,0,2,0,0,["UNITY_UI_CLIP_RECT","OUTLINE_ON","UNDERLAY_ON"],[["IGNOREPROJECTOR","true"],["QUEUE","Transparent"],["RenderType","Transparent"]]],[0,"\n#version 100\n\nuniform \tvec3 _WorldSpaceCameraPos;\nuniform \tvec4 _ScreenParams;\nuniform \tvec4 hlslcc_mtx4x4unity_ObjectToWorld[4];\nuniform \tvec4 hlslcc_mtx4x4unity_WorldToObject[4];\nuniform \tvec4 hlslcc_mtx4x4glstate_matrix_projection[4];\nuniform \tvec4 hlslcc_mtx4x4unity_MatrixVP[4];\nuniform \tmediump vec4 _FaceColor;\nuniform \tfloat _FaceDilate;\nuniform \tfloat _OutlineSoftness;\nuniform \tmediump vec4 _OutlineColor;\nuniform \tfloat _OutlineWidth;\nuniform \tfloat _WeightNormal;\nuniform \tfloat _WeightBold;\nuniform \tfloat _ScaleRatioA;\nuniform \tfloat _VertexOffsetX;\nuniform \tfloat _VertexOffsetY;\nuniform \tvec4 _ClipRect;\nuniform \tfloat _MaskSoftnessX;\nuniform \tfloat _MaskSoftnessY;\nuniform \tfloat _GradientScale;\nuniform \tfloat _ScaleX;\nuniform \tfloat _ScaleY;\nuniform \tfloat _PerspectiveFilter;\nuniform \tfloat _Sharpness;\nattribute highp vec4 in_POSITION0;\nattribute highp vec3 in_NORMAL0;\nattribute mediump vec4 in_COLOR0;\nattribute highp vec2 in_TEXCOORD0;\nattribute highp vec2 in_TEXCOORD1;\nvarying mediump vec4 vs_COLOR0;\nvarying mediump vec4 vs_COLOR1;\nvarying highp vec4 vs_TEXCOORD0;\nvarying mediump vec4 vs_TEXCOORD1;\nvarying mediump vec4 vs_TEXCOORD2;\nvec2 u_xlat0;\nbool u_xlatb0;\nvec4 u_xlat1;\nvec4 u_xlat2;\nvec4 u_xlat3;\nmediump vec4 u_xlat16_3;\nvec4 u_xlat4;\nfloat u_xlat5;\nfloat u_xlat7;\nfloat u_xlat10;\nfloat u_xlat12;\nfloat u_xlat15;\nbool u_xlatb15;\nvoid main()\n{\n    u_xlat0.xy = in_POSITION0.xy + vec2(_VertexOffsetX, _VertexOffsetY);\n    u_xlat1 = u_xlat0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];\n    u_xlat1 = hlslcc_mtx4x4unity_ObjectToWorld[0] * u_xlat0.xxxx + u_xlat1;\n    u_xlat1 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat1;\n    u_xlat2 = u_xlat1 + hlslcc_mtx4x4unity_ObjectToWorld[3];\n    u_xlat1.xyz = hlslcc_mtx4x4unity_ObjectToWorld[3].xyz * in_POSITION0.www + u_xlat1.xyz;\n    u_xlat1.xyz = (-u_xlat1.xyz) + _WorldSpaceCameraPos.xyz;\n    u_xlat3 = u_xlat2.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];\n    u_xlat3 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat2.xxxx + u_xlat3;\n    u_xlat3 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat2.zzzz + u_xlat3;\n    u_xlat2 = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat2.wwww + u_xlat3;\n    gl_Position = u_xlat2;\n    u_xlat16_3 = in_COLOR0 * _FaceColor;\n    u_xlat16_3.xyz = u_xlat16_3.www * u_xlat16_3.xyz;\n    vs_COLOR0 = u_xlat16_3;\n    u_xlat10 = dot(u_xlat1.xyz, u_xlat1.xyz);\n    u_xlat10 = inversesqrt(u_xlat10);\n    u_xlat1.xyz = vec3(u_xlat10) * u_xlat1.xyz;\n    u_xlat2.x = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[0].xyz);\n    u_xlat2.y = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[1].xyz);\n    u_xlat2.z = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[2].xyz);\n    u_xlat10 = dot(u_xlat2.xyz, u_xlat2.xyz);\n    u_xlat10 = inversesqrt(u_xlat10);\n    u_xlat2.xyz = vec3(u_xlat10) * u_xlat2.xyz;\n    u_xlat10 = dot(u_xlat2.xyz, u_xlat1.xyz);\n    u_xlat1.xy = _ScreenParams.yy * hlslcc_mtx4x4glstate_matrix_projection[1].xy;\n    u_xlat1.xy = hlslcc_mtx4x4glstate_matrix_projection[0].xy * _ScreenParams.xx + u_xlat1.xy;\n    u_xlat1.xy = abs(u_xlat1.xy) * vec2(_ScaleX, _ScaleY);\n    u_xlat1.xy = u_xlat2.ww / u_xlat1.xy;\n    u_xlat15 = dot(u_xlat1.xy, u_xlat1.xy);\n    u_xlat1.xy = vec2(_MaskSoftnessX, _MaskSoftnessY) * vec2(0.25, 0.25) + u_xlat1.xy;\n    u_xlat1.zw = vec2(0.25, 0.25) / u_xlat1.xy;\n    u_xlat15 = inversesqrt(u_xlat15);\n    u_xlat2.x = abs(in_TEXCOORD1.y) * _GradientScale;\n    u_xlat7 = _Sharpness + 1.0;\n    u_xlat2.x = u_xlat7 * u_xlat2.x;\n    u_xlat7 = u_xlat15 * u_xlat2.x;\n    u_xlat12 = (-_PerspectiveFilter) + 1.0;\n    u_xlat12 = u_xlat12 * abs(u_xlat7);\n    u_xlat15 = u_xlat15 * u_xlat2.x + (-u_xlat12);\n    u_xlat10 = abs(u_xlat10) * u_xlat15 + u_xlat12;\n    u_xlatb15 = hlslcc_mtx4x4glstate_matrix_projection[3].w==0.0;\n    u_xlat10 = (u_xlatb15) ? u_xlat10 : u_xlat7;\n    u_xlat15 = _OutlineSoftness * _ScaleRatioA;\n    u_xlat15 = u_xlat15 * u_xlat10 + 1.0;\n    u_xlat2.x = u_xlat10 / u_xlat15;\n    u_xlat10 = _OutlineWidth * _ScaleRatioA;\n    u_xlat10 = u_xlat2.x * u_xlat10;\n    u_xlat15 = min(u_xlat10, 1.0);\n    u_xlat15 = sqrt(u_xlat15);\n    u_xlat4.x = in_COLOR0.w * _OutlineColor.w;\n    u_xlat4.xyz = _OutlineColor.xyz * u_xlat4.xxx + (-u_xlat16_3.xyz);\n    u_xlat4.w = _OutlineColor.w * in_COLOR0.w + (-u_xlat16_3.w);\n    u_xlat3 = vec4(u_xlat15) * u_xlat4 + u_xlat16_3;\n    vs_COLOR1 = u_xlat3;\n    u_xlat3 = max(_ClipRect, vec4(-2e+10, -2e+10, -2e+10, -2e+10));\n    u_xlat3 = min(u_xlat3, vec4(2e+10, 2e+10, 2e+10, 2e+10));\n    u_xlat4.xy = u_xlat0.xy + (-u_xlat3.xy);\n    u_xlat0.xy = u_xlat0.xy * vec2(2.0, 2.0) + (-u_xlat3.xy);\n    u_xlat1.xy = (-u_xlat3.zw) + u_xlat0.xy;\n    u_xlat0.xy = (-u_xlat3.xy) + u_xlat3.zw;\n    vs_TEXCOORD0.zw = u_xlat4.xy / u_xlat0.xy;\n    vs_TEXCOORD2 = u_xlat1;\n    vs_TEXCOORD0.xy = in_TEXCOORD0.xy;\n    u_xlatb0 = 0.0>=in_TEXCOORD1.y;\n    u_xlat0.x = u_xlatb0 ? 1.0 : float(0.0);\n    u_xlat5 = (-_WeightNormal) + _WeightBold;\n    u_xlat0.x = u_xlat0.x * u_xlat5 + _WeightNormal;\n    u_xlat0.x = u_xlat0.x * 0.25 + _FaceDilate;\n    u_xlat0.x = u_xlat0.x * _ScaleRatioA;\n    u_xlat0.x = (-u_xlat0.x) * 0.5 + 0.5;\n    u_xlat2.w = u_xlat0.x * u_xlat2.x + -0.5;\n    u_xlat2.y = (-u_xlat10) * 0.5 + u_xlat2.w;\n    u_xlat2.z = u_xlat10 * 0.5 + u_xlat2.w;\n    vs_TEXCOORD1 = u_xlat2;\n    return;\n}\n\n","\n#version 100\n\n#ifdef GL_FRAGMENT_PRECISION_HIGH\n    precision highp float;\n#else\n    precision mediump float;\n#endif\nprecision highp int;\nuniform \tvec4 _ClipRect;\nuniform lowp sampler2D _MainTex;\nvarying mediump vec4 vs_COLOR0;\nvarying mediump vec4 vs_COLOR1;\nvarying highp vec4 vs_TEXCOORD0;\nvarying mediump vec4 vs_TEXCOORD1;\nvarying mediump vec4 vs_TEXCOORD2;\n#define SV_Target0 gl_FragData[0]\nmediump vec4 u_xlat16_0;\nvec2 u_xlat1;\nlowp float u_xlat10_1;\nmediump vec2 u_xlat16_2;\nvoid main()\n{\n    u_xlat16_0 = vs_COLOR0 + (-vs_COLOR1);\n    u_xlat10_1 = texture2D(_MainTex, vs_TEXCOORD0.xy).w;\n    u_xlat16_2.xy = vec2(u_xlat10_1) * vs_TEXCOORD1.xx + (-vs_TEXCOORD1.zy);\n    u_xlat16_2.xy = clamp(u_xlat16_2.xy, 0.0, 1.0);\n    u_xlat16_0 = u_xlat16_2.xxxx * u_xlat16_0 + vs_COLOR1;\n    u_xlat16_0 = u_xlat16_2.yyyy * u_xlat16_0;\n    u_xlat1.xy = (-_ClipRect.xy) + _ClipRect.zw;\n    u_xlat1.xy = u_xlat1.xy + -abs(vs_TEXCOORD2.xy);\n    u_xlat1.xy = u_xlat1.xy * vs_TEXCOORD2.zw;\n    u_xlat1.xy = clamp(u_xlat1.xy, 0.0, 1.0);\n    u_xlat16_2.x = u_xlat1.y * u_xlat1.x;\n    SV_Target0 = u_xlat16_0 * u_xlat16_2.xxxx;\n    return;\n}\n\n",0,0,2,0,0,["UNITY_UI_CLIP_RECT","OUTLINE_ON"],[["IGNOREPROJECTOR","true"],["QUEUE","Transparent"],["RenderType","Transparent"]]],[0,"\n#version 100\n\nuniform \tvec3 _WorldSpaceCameraPos;\nuniform \tvec4 _ScreenParams;\nuniform \tvec4 hlslcc_mtx4x4unity_ObjectToWorld[4];\nuniform \tvec4 hlslcc_mtx4x4unity_WorldToObject[4];\nuniform \tvec4 hlslcc_mtx4x4glstate_matrix_projection[4];\nuniform \tvec4 hlslcc_mtx4x4unity_MatrixVP[4];\nuniform \tmediump vec4 _FaceColor;\nuniform \tfloat _FaceDilate;\nuniform \tfloat _OutlineSoftness;\nuniform \tmediump vec4 _OutlineColor;\nuniform \tfloat _OutlineWidth;\nuniform \tfloat _UnderlayOffsetX;\nuniform \tfloat _UnderlayOffsetY;\nuniform \tfloat _UnderlayDilate;\nuniform \tfloat _UnderlaySoftness;\nuniform \tfloat _WeightNormal;\nuniform \tfloat _WeightBold;\nuniform \tfloat _ScaleRatioA;\nuniform \tfloat _ScaleRatioC;\nuniform \tfloat _VertexOffsetX;\nuniform \tfloat _VertexOffsetY;\nuniform \tvec4 _ClipRect;\nuniform \tfloat _MaskSoftnessX;\nuniform \tfloat _MaskSoftnessY;\nuniform \tfloat _TextureWidth;\nuniform \tfloat _TextureHeight;\nuniform \tfloat _GradientScale;\nuniform \tfloat _ScaleX;\nuniform \tfloat _ScaleY;\nuniform \tfloat _PerspectiveFilter;\nuniform \tfloat _Sharpness;\nattribute highp vec4 in_POSITION0;\nattribute highp vec3 in_NORMAL0;\nattribute mediump vec4 in_COLOR0;\nattribute highp vec2 in_TEXCOORD0;\nattribute highp vec2 in_TEXCOORD1;\nvarying mediump vec4 vs_COLOR0;\nvarying mediump vec4 vs_COLOR1;\nvarying highp vec4 vs_TEXCOORD0;\nvarying mediump vec4 vs_TEXCOORD1;\nvarying mediump vec4 vs_TEXCOORD2;\nvarying highp vec4 vs_TEXCOORD3;\nvarying mediump vec2 vs_TEXCOORD4;\nvec2 u_xlat0;\nbool u_xlatb0;\nvec4 u_xlat1;\nvec4 u_xlat2;\nvec4 u_xlat3;\nmediump vec4 u_xlat16_3;\nvec4 u_xlat4;\nmediump vec4 u_xlat16_4;\nvec4 u_xlat5;\nmediump vec3 u_xlat16_5;\nmediump vec4 u_xlat16_6;\nvec2 u_xlat7;\nvec3 u_xlat8;\nfloat u_xlat10;\nfloat u_xlat16;\nfloat u_xlat18;\nfloat u_xlat24;\nbool u_xlatb24;\nvoid main()\n{\n    u_xlat0.xy = in_POSITION0.xy + vec2(_VertexOffsetX, _VertexOffsetY);\n    u_xlat1 = u_xlat0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];\n    u_xlat1 = hlslcc_mtx4x4unity_ObjectToWorld[0] * u_xlat0.xxxx + u_xlat1;\n    u_xlat1 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat1;\n    u_xlat2 = u_xlat1 + hlslcc_mtx4x4unity_ObjectToWorld[3];\n    u_xlat1.xyz = hlslcc_mtx4x4unity_ObjectToWorld[3].xyz * in_POSITION0.www + u_xlat1.xyz;\n    u_xlat1.xyz = (-u_xlat1.xyz) + _WorldSpaceCameraPos.xyz;\n    u_xlat3 = u_xlat2.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];\n    u_xlat3 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat2.xxxx + u_xlat3;\n    u_xlat3 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat2.zzzz + u_xlat3;\n    u_xlat2 = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat2.wwww + u_xlat3;\n    gl_Position = u_xlat2;\n    vs_COLOR0.w = _FaceColor.w;\n    u_xlat16_3.xyz = in_COLOR0.xyz;\n    u_xlat16_3.w = 1.0;\n    u_xlat16_4 = u_xlat16_3 * _FaceColor;\n    u_xlat16_5.xyz = u_xlat16_4.www * u_xlat16_4.xyz;\n    vs_COLOR0.xyz = u_xlat16_5.xyz;\n    u_xlat5.xyz = (-u_xlat16_5.xyz);\n    u_xlat5.w = (-u_xlat16_4.w);\n    u_xlat16_6.xyz = _OutlineColor.www * _OutlineColor.xyz;\n    u_xlat16_6.w = _OutlineColor.w;\n    u_xlat5 = u_xlat5 + u_xlat16_6;\n    u_xlat16 = dot(u_xlat1.xyz, u_xlat1.xyz);\n    u_xlat16 = inversesqrt(u_xlat16);\n    u_xlat1.xyz = vec3(u_xlat16) * u_xlat1.xyz;\n    u_xlat2.x = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[0].xyz);\n    u_xlat2.y = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[1].xyz);\n    u_xlat2.z = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[2].xyz);\n    u_xlat16 = dot(u_xlat2.xyz, u_xlat2.xyz);\n    u_xlat16 = inversesqrt(u_xlat16);\n    u_xlat2.xyz = vec3(u_xlat16) * u_xlat2.xyz;\n    u_xlat16 = dot(u_xlat2.xyz, u_xlat1.xyz);\n    u_xlat1.xy = _ScreenParams.yy * hlslcc_mtx4x4glstate_matrix_projection[1].xy;\n    u_xlat1.xy = hlslcc_mtx4x4glstate_matrix_projection[0].xy * _ScreenParams.xx + u_xlat1.xy;\n    u_xlat1.xy = abs(u_xlat1.xy) * vec2(_ScaleX, _ScaleY);\n    u_xlat1.xy = u_xlat2.ww / u_xlat1.xy;\n    u_xlat24 = dot(u_xlat1.xy, u_xlat1.xy);\n    u_xlat1.xy = vec2(_MaskSoftnessX, _MaskSoftnessY) * vec2(0.25, 0.25) + u_xlat1.xy;\n    u_xlat1.zw = vec2(0.25, 0.25) / u_xlat1.xy;\n    u_xlat24 = inversesqrt(u_xlat24);\n    u_xlat2.x = abs(in_TEXCOORD1.y) * _GradientScale;\n    u_xlat10 = _Sharpness + 1.0;\n    u_xlat2.x = u_xlat10 * u_xlat2.x;\n    u_xlat10 = u_xlat24 * u_xlat2.x;\n    u_xlat18 = (-_PerspectiveFilter) + 1.0;\n    u_xlat18 = u_xlat18 * abs(u_xlat10);\n    u_xlat24 = u_xlat24 * u_xlat2.x + (-u_xlat18);\n    u_xlat16 = abs(u_xlat16) * u_xlat24 + u_xlat18;\n    u_xlatb24 = hlslcc_mtx4x4glstate_matrix_projection[3].w==0.0;\n    u_xlat16 = (u_xlatb24) ? u_xlat16 : u_xlat10;\n    u_xlat24 = _OutlineSoftness * _ScaleRatioA;\n    u_xlat24 = u_xlat24 * u_xlat16 + 1.0;\n    u_xlat2.x = u_xlat16 / u_xlat24;\n    u_xlat24 = _OutlineWidth * _ScaleRatioA;\n    u_xlat24 = u_xlat2.x * u_xlat24;\n    u_xlat7.x = min(u_xlat24, 1.0);\n    u_xlat7.x = sqrt(u_xlat7.x);\n    u_xlat5 = u_xlat5 * u_xlat7.xxxx;\n    u_xlat4.xyz = u_xlat16_4.xyz * u_xlat16_4.www + u_xlat5.xyz;\n    u_xlat4.w = u_xlat16_3.w * _FaceColor.w + u_xlat5.w;\n    vs_COLOR1 = u_xlat4;\n    u_xlat3 = max(_ClipRect, vec4(-2e+10, -2e+10, -2e+10, -2e+10));\n    u_xlat3 = min(u_xlat3, vec4(2e+10, 2e+10, 2e+10, 2e+10));\n    u_xlat7.xy = u_xlat0.xy + (-u_xlat3.xy);\n    u_xlat0.xy = u_xlat0.xy * vec2(2.0, 2.0) + (-u_xlat3.xy);\n    u_xlat1.xy = (-u_xlat3.zw) + u_xlat0.xy;\n    u_xlat0.xy = (-u_xlat3.xy) + u_xlat3.zw;\n    vs_TEXCOORD0.zw = u_xlat7.xy / u_xlat0.xy;\n    vs_TEXCOORD2 = u_xlat1;\n    vs_TEXCOORD0.xy = in_TEXCOORD0.xy;\n    u_xlatb0 = 0.0>=in_TEXCOORD1.y;\n    u_xlat0.x = u_xlatb0 ? 1.0 : float(0.0);\n    u_xlat8.x = (-_WeightNormal) + _WeightBold;\n    u_xlat0.x = u_xlat0.x * u_xlat8.x + _WeightNormal;\n    u_xlat0.x = u_xlat0.x * 0.25 + _FaceDilate;\n    u_xlat0.x = u_xlat0.x * _ScaleRatioA;\n    u_xlat0.x = (-u_xlat0.x) * 0.5 + 0.5;\n    u_xlat2.w = u_xlat0.x * u_xlat2.x + -0.5;\n    u_xlat2.y = (-u_xlat24) * 0.5 + u_xlat2.w;\n    u_xlat2.z = u_xlat24 * 0.5 + u_xlat2.w;\n    vs_TEXCOORD1 = u_xlat2;\n    vs_TEXCOORD3.z = in_COLOR0.w;\n    vs_TEXCOORD3.w = 0.0;\n    u_xlat1 = vec4(_UnderlaySoftness, _UnderlayDilate, _UnderlayOffsetX, _UnderlayOffsetY) * vec4(vec4(_ScaleRatioC, _ScaleRatioC, _ScaleRatioC, _ScaleRatioC));\n    u_xlat8.xz = (-u_xlat1.zw) * vec2(_GradientScale);\n    u_xlat8.xz = u_xlat8.xz / vec2(_TextureWidth, _TextureHeight);\n    vs_TEXCOORD3.xy = u_xlat8.xz + in_TEXCOORD0.xy;\n    u_xlat8.x = u_xlat1.x * u_xlat16 + 1.0;\n    u_xlat2.x = u_xlat16 / u_xlat8.x;\n    u_xlat8.x = u_xlat1.y * u_xlat2.x;\n    u_xlat0.x = u_xlat0.x * u_xlat2.x + -0.5;\n    u_xlat2.y = (-u_xlat8.x) * 0.5 + u_xlat0.x;\n    vs_TEXCOORD4.xy = u_xlat2.xy;\n    return;\n}\n\n","\n#version 100\n\n#ifdef GL_FRAGMENT_PRECISION_HIGH\n    precision highp float;\n#else\n    precision mediump float;\n#endif\nprecision highp int;\nuniform \tmediump vec4 _UnderlayColor;\nuniform \tvec4 _ClipRect;\nuniform lowp sampler2D _MainTex;\nvarying mediump vec4 vs_COLOR0;\nvarying mediump vec4 vs_COLOR1;\nvarying highp vec4 vs_TEXCOORD0;\nvarying mediump vec4 vs_TEXCOORD1;\nvarying mediump vec4 vs_TEXCOORD2;\nvarying highp vec4 vs_TEXCOORD3;\nvarying mediump vec2 vs_TEXCOORD4;\n#define SV_Target0 gl_FragData[0]\nvec4 u_xlat0;\nmediump vec4 u_xlat16_0;\nlowp float u_xlat10_0;\nmediump vec4 u_xlat16_1;\nmediump vec4 u_xlat16_2;\nlowp float u_xlat10_2;\nmediump vec2 u_xlat16_3;\nvec2 u_xlat4;\nbool u_xlatb4;\nvoid main()\n{\n    u_xlat10_0 = texture2D(_MainTex, vs_TEXCOORD3.xy).w;\n    u_xlat16_1.x = u_xlat10_0 * vs_TEXCOORD4.x + (-vs_TEXCOORD4.y);\n    u_xlat16_1.x = clamp(u_xlat16_1.x, 0.0, 1.0);\n    u_xlat16_0.xyz = _UnderlayColor.www * _UnderlayColor.xyz;\n    u_xlat16_0.w = _UnderlayColor.w;\n    u_xlat0 = u_xlat16_1.xxxx * u_xlat16_0;\n    u_xlat16_1 = vs_COLOR0 + (-vs_COLOR1);\n    u_xlat10_2 = texture2D(_MainTex, vs_TEXCOORD0.xy).w;\n    u_xlat16_3.xy = vec2(u_xlat10_2) * vs_TEXCOORD1.xx + (-vs_TEXCOORD1.zy);\n    u_xlat16_3.xy = clamp(u_xlat16_3.xy, 0.0, 1.0);\n    u_xlat16_1 = u_xlat16_3.xxxx * u_xlat16_1 + vs_COLOR1;\n    u_xlat16_2 = u_xlat16_3.yyyy * u_xlat16_1;\n    u_xlat16_1.x = (-u_xlat16_1.w) * u_xlat16_3.y + 1.0;\n    u_xlat0 = u_xlat0 * u_xlat16_1.xxxx + u_xlat16_2;\n    u_xlat4.xy = (-_ClipRect.xy) + _ClipRect.zw;\n    u_xlat4.xy = u_xlat4.xy + -abs(vs_TEXCOORD2.xy);\n    u_xlat4.xy = u_xlat4.xy * vs_TEXCOORD2.zw;\n    u_xlat4.xy = clamp(u_xlat4.xy, 0.0, 1.0);\n    u_xlat16_1.x = u_xlat4.y * u_xlat4.x;\n    u_xlat16_0 = u_xlat0 * u_xlat16_1.xxxx;\n    u_xlat16_1.x = u_xlat16_0.w * vs_TEXCOORD3.z + -0.00100000005;\n    u_xlat0 = u_xlat16_0 * vs_TEXCOORD3.zzzz;\n    SV_Target0 = u_xlat0;\n    u_xlatb4 = u_xlat16_1.x<0.0;\n    if(u_xlatb4){discard;}\n    return;\n}\n\n",0,0,3,0,0,["UNITY_UI_ALPHACLIP","UNITY_UI_CLIP_RECT","OUTLINE_ON","UNDERLAY_ON"],[["IGNOREPROJECTOR","true"],["QUEUE","Transparent"],["RenderType","Transparent"]]],[0,"\n#version 100\n\nuniform \tvec3 _WorldSpaceCameraPos;\nuniform \tvec4 _ScreenParams;\nuniform \tvec4 hlslcc_mtx4x4unity_ObjectToWorld[4];\nuniform \tvec4 hlslcc_mtx4x4unity_WorldToObject[4];\nuniform \tvec4 hlslcc_mtx4x4glstate_matrix_projection[4];\nuniform \tvec4 hlslcc_mtx4x4unity_MatrixVP[4];\nuniform \tmediump vec4 _FaceColor;\nuniform \tfloat _FaceDilate;\nuniform \tfloat _OutlineSoftness;\nuniform \tmediump vec4 _OutlineColor;\nuniform \tfloat _OutlineWidth;\nuniform \tfloat _WeightNormal;\nuniform \tfloat _WeightBold;\nuniform \tfloat _ScaleRatioA;\nuniform \tfloat _VertexOffsetX;\nuniform \tfloat _VertexOffsetY;\nuniform \tvec4 _ClipRect;\nuniform \tfloat _MaskSoftnessX;\nuniform \tfloat _MaskSoftnessY;\nuniform \tfloat _GradientScale;\nuniform \tfloat _ScaleX;\nuniform \tfloat _ScaleY;\nuniform \tfloat _PerspectiveFilter;\nuniform \tfloat _Sharpness;\nattribute highp vec4 in_POSITION0;\nattribute highp vec3 in_NORMAL0;\nattribute mediump vec4 in_COLOR0;\nattribute highp vec2 in_TEXCOORD0;\nattribute highp vec2 in_TEXCOORD1;\nvarying mediump vec4 vs_COLOR0;\nvarying mediump vec4 vs_COLOR1;\nvarying highp vec4 vs_TEXCOORD0;\nvarying mediump vec4 vs_TEXCOORD1;\nvarying mediump vec4 vs_TEXCOORD2;\nvec2 u_xlat0;\nbool u_xlatb0;\nvec4 u_xlat1;\nvec4 u_xlat2;\nvec4 u_xlat3;\nmediump vec4 u_xlat16_3;\nvec4 u_xlat4;\nfloat u_xlat5;\nfloat u_xlat7;\nfloat u_xlat10;\nfloat u_xlat12;\nfloat u_xlat15;\nbool u_xlatb15;\nvoid main()\n{\n    u_xlat0.xy = in_POSITION0.xy + vec2(_VertexOffsetX, _VertexOffsetY);\n    u_xlat1 = u_xlat0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];\n    u_xlat1 = hlslcc_mtx4x4unity_ObjectToWorld[0] * u_xlat0.xxxx + u_xlat1;\n    u_xlat1 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat1;\n    u_xlat2 = u_xlat1 + hlslcc_mtx4x4unity_ObjectToWorld[3];\n    u_xlat1.xyz = hlslcc_mtx4x4unity_ObjectToWorld[3].xyz * in_POSITION0.www + u_xlat1.xyz;\n    u_xlat1.xyz = (-u_xlat1.xyz) + _WorldSpaceCameraPos.xyz;\n    u_xlat3 = u_xlat2.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];\n    u_xlat3 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat2.xxxx + u_xlat3;\n    u_xlat3 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat2.zzzz + u_xlat3;\n    u_xlat2 = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat2.wwww + u_xlat3;\n    gl_Position = u_xlat2;\n    u_xlat16_3 = in_COLOR0 * _FaceColor;\n    u_xlat16_3.xyz = u_xlat16_3.www * u_xlat16_3.xyz;\n    vs_COLOR0 = u_xlat16_3;\n    u_xlat10 = dot(u_xlat1.xyz, u_xlat1.xyz);\n    u_xlat10 = inversesqrt(u_xlat10);\n    u_xlat1.xyz = vec3(u_xlat10) * u_xlat1.xyz;\n    u_xlat2.x = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[0].xyz);\n    u_xlat2.y = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[1].xyz);\n    u_xlat2.z = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[2].xyz);\n    u_xlat10 = dot(u_xlat2.xyz, u_xlat2.xyz);\n    u_xlat10 = inversesqrt(u_xlat10);\n    u_xlat2.xyz = vec3(u_xlat10) * u_xlat2.xyz;\n    u_xlat10 = dot(u_xlat2.xyz, u_xlat1.xyz);\n    u_xlat1.xy = _ScreenParams.yy * hlslcc_mtx4x4glstate_matrix_projection[1].xy;\n    u_xlat1.xy = hlslcc_mtx4x4glstate_matrix_projection[0].xy * _ScreenParams.xx + u_xlat1.xy;\n    u_xlat1.xy = abs(u_xlat1.xy) * vec2(_ScaleX, _ScaleY);\n    u_xlat1.xy = u_xlat2.ww / u_xlat1.xy;\n    u_xlat15 = dot(u_xlat1.xy, u_xlat1.xy);\n    u_xlat1.xy = vec2(_MaskSoftnessX, _MaskSoftnessY) * vec2(0.25, 0.25) + u_xlat1.xy;\n    u_xlat1.zw = vec2(0.25, 0.25) / u_xlat1.xy;\n    u_xlat15 = inversesqrt(u_xlat15);\n    u_xlat2.x = abs(in_TEXCOORD1.y) * _GradientScale;\n    u_xlat7 = _Sharpness + 1.0;\n    u_xlat2.x = u_xlat7 * u_xlat2.x;\n    u_xlat7 = u_xlat15 * u_xlat2.x;\n    u_xlat12 = (-_PerspectiveFilter) + 1.0;\n    u_xlat12 = u_xlat12 * abs(u_xlat7);\n    u_xlat15 = u_xlat15 * u_xlat2.x + (-u_xlat12);\n    u_xlat10 = abs(u_xlat10) * u_xlat15 + u_xlat12;\n    u_xlatb15 = hlslcc_mtx4x4glstate_matrix_projection[3].w==0.0;\n    u_xlat10 = (u_xlatb15) ? u_xlat10 : u_xlat7;\n    u_xlat15 = _OutlineSoftness * _ScaleRatioA;\n    u_xlat15 = u_xlat15 * u_xlat10 + 1.0;\n    u_xlat2.x = u_xlat10 / u_xlat15;\n    u_xlat10 = _OutlineWidth * _ScaleRatioA;\n    u_xlat10 = u_xlat2.x * u_xlat10;\n    u_xlat15 = min(u_xlat10, 1.0);\n    u_xlat15 = sqrt(u_xlat15);\n    u_xlat4.x = in_COLOR0.w * _OutlineColor.w;\n    u_xlat4.xyz = _OutlineColor.xyz * u_xlat4.xxx + (-u_xlat16_3.xyz);\n    u_xlat4.w = _OutlineColor.w * in_COLOR0.w + (-u_xlat16_3.w);\n    u_xlat3 = vec4(u_xlat15) * u_xlat4 + u_xlat16_3;\n    vs_COLOR1 = u_xlat3;\n    u_xlat3 = max(_ClipRect, vec4(-2e+10, -2e+10, -2e+10, -2e+10));\n    u_xlat3 = min(u_xlat3, vec4(2e+10, 2e+10, 2e+10, 2e+10));\n    u_xlat4.xy = u_xlat0.xy + (-u_xlat3.xy);\n    u_xlat0.xy = u_xlat0.xy * vec2(2.0, 2.0) + (-u_xlat3.xy);\n    u_xlat1.xy = (-u_xlat3.zw) + u_xlat0.xy;\n    u_xlat0.xy = (-u_xlat3.xy) + u_xlat3.zw;\n    vs_TEXCOORD0.zw = u_xlat4.xy / u_xlat0.xy;\n    vs_TEXCOORD2 = u_xlat1;\n    vs_TEXCOORD0.xy = in_TEXCOORD0.xy;\n    u_xlatb0 = 0.0>=in_TEXCOORD1.y;\n    u_xlat0.x = u_xlatb0 ? 1.0 : float(0.0);\n    u_xlat5 = (-_WeightNormal) + _WeightBold;\n    u_xlat0.x = u_xlat0.x * u_xlat5 + _WeightNormal;\n    u_xlat0.x = u_xlat0.x * 0.25 + _FaceDilate;\n    u_xlat0.x = u_xlat0.x * _ScaleRatioA;\n    u_xlat0.x = (-u_xlat0.x) * 0.5 + 0.5;\n    u_xlat2.w = u_xlat0.x * u_xlat2.x + -0.5;\n    u_xlat2.y = (-u_xlat10) * 0.5 + u_xlat2.w;\n    u_xlat2.z = u_xlat10 * 0.5 + u_xlat2.w;\n    vs_TEXCOORD1 = u_xlat2;\n    return;\n}\n\n","\n#version 100\n\n#ifdef GL_FRAGMENT_PRECISION_HIGH\n    precision highp float;\n#else\n    precision mediump float;\n#endif\nprecision highp int;\nuniform \tvec4 _ClipRect;\nuniform lowp sampler2D _MainTex;\nvarying mediump vec4 vs_COLOR0;\nvarying mediump vec4 vs_COLOR1;\nvarying highp vec4 vs_TEXCOORD0;\nvarying mediump vec4 vs_TEXCOORD1;\nvarying mediump vec4 vs_TEXCOORD2;\n#define SV_Target0 gl_FragData[0]\nmediump vec4 u_xlat16_0;\nvec2 u_xlat1;\nlowp float u_xlat10_1;\nbool u_xlatb1;\nmediump vec2 u_xlat16_2;\nmediump float u_xlat16_5;\nvoid main()\n{\n    u_xlat16_0 = vs_COLOR0 + (-vs_COLOR1);\n    u_xlat10_1 = texture2D(_MainTex, vs_TEXCOORD0.xy).w;\n    u_xlat16_2.xy = vec2(u_xlat10_1) * vs_TEXCOORD1.xx + (-vs_TEXCOORD1.zy);\n    u_xlat16_2.xy = clamp(u_xlat16_2.xy, 0.0, 1.0);\n    u_xlat16_0 = u_xlat16_2.xxxx * u_xlat16_0 + vs_COLOR1;\n    u_xlat16_0 = u_xlat16_2.yyyy * u_xlat16_0;\n    u_xlat1.xy = (-_ClipRect.xy) + _ClipRect.zw;\n    u_xlat1.xy = u_xlat1.xy + -abs(vs_TEXCOORD2.xy);\n    u_xlat1.xy = u_xlat1.xy * vs_TEXCOORD2.zw;\n    u_xlat1.xy = clamp(u_xlat1.xy, 0.0, 1.0);\n    u_xlat16_2.x = u_xlat1.y * u_xlat1.x;\n    u_xlat16_5 = u_xlat16_0.w * u_xlat16_2.x + -0.00100000005;\n    u_xlat16_0 = u_xlat16_0 * u_xlat16_2.xxxx;\n    SV_Target0 = u_xlat16_0;\n    u_xlatb1 = u_xlat16_5<0.0;\n    if(u_xlatb1){discard;}\n    return;\n}\n\n",0,0,3,0,0,["UNITY_UI_ALPHACLIP","UNITY_UI_CLIP_RECT","OUTLINE_ON"],[["IGNOREPROJECTOR","true"],["QUEUE","Transparent"],["RenderType","Transparent"]]]],["OUTLINE_ON","STEREO_CUBEMAP_RENDER_ON","STEREO_INSTANCING_ON","STEREO_MULTIVIEW_ON","UNDERLAY_INNER","UNDERLAY_ON","UNITY_SINGLE_PASS_STEREO","UNITY_UI_ALPHACLIP","UNITY_UI_CLIP_RECT","__"],[[["__","OUTLINE_ON"]],[["__","UNDERLAY_ON","UNDERLAY_INNER"]],[["__","UNITY_UI_CLIP_RECT"]],[["__","UNITY_UI_ALPHACLIP"]]],0,0,5,0,0,0,0,[["IGNOREPROJECTOR","true"],["QUEUE","Transparent"],["RenderType","Transparent"]],[null,null],"",33,-1]],[["IGNOREPROJECTOR","true"],["QUEUE","Transparent"],["RenderType","Transparent"]],0]],0,408,"Assets/TextMesh Pro/Shaders/TMP_SDF-Mobile.shader",["OUTLINE_ON","UNDERLAY_INNER","UNDERLAY_ON","UNITY_UI_ALPHACLIP","UNITY_UI_CLIP_RECT","STEREO_CUBEMAP_RENDER_ON","STEREO_INSTANCING_ON","STEREO_MULTIVIEW_ON","UNITY_SINGLE_PASS_STEREO","__"],null,null,[],5],[[[0,[["TextMeshPro/Mobile/Distance Field - Masking",[[0,"\n#version 100\n\nuniform \tvec3 _WorldSpaceCameraPos;\nuniform \tvec4 _ScreenParams;\nuniform \tvec4 hlslcc_mtx4x4unity_ObjectToWorld[4];\nuniform \tvec4 hlslcc_mtx4x4unity_WorldToObject[4];\nuniform \tvec4 hlslcc_mtx4x4glstate_matrix_projection[4];\nuniform \tvec4 hlslcc_mtx4x4unity_MatrixVP[4];\nuniform \tmediump vec4 _FaceColor;\nuniform \tfloat _FaceDilate;\nuniform \tfloat _OutlineSoftness;\nuniform \tmediump vec4 _OutlineColor;\nuniform \tfloat _OutlineWidth;\nuniform \tfloat _WeightNormal;\nuniform \tfloat _WeightBold;\nuniform \tfloat _ScaleRatioA;\nuniform \tfloat _VertexOffsetX;\nuniform \tfloat _VertexOffsetY;\nuniform \tvec4 _ClipRect;\nuniform \tfloat _MaskSoftnessX;\nuniform \tfloat _MaskSoftnessY;\nuniform \tfloat _GradientScale;\nuniform \tfloat _ScaleX;\nuniform \tfloat _ScaleY;\nuniform \tfloat _PerspectiveFilter;\nuniform \tfloat _Sharpness;\nattribute highp vec4 in_POSITION0;\nattribute highp vec3 in_NORMAL0;\nattribute mediump vec4 in_COLOR0;\nattribute highp vec2 in_TEXCOORD0;\nattribute highp vec2 in_TEXCOORD1;\nvarying mediump vec4 vs_COLOR0;\nvarying mediump vec4 vs_COLOR1;\nvarying highp vec4 vs_TEXCOORD0;\nvarying mediump vec4 vs_TEXCOORD1;\nvarying mediump vec4 vs_TEXCOORD2;\nvec2 u_xlat0;\nbool u_xlatb0;\nvec4 u_xlat1;\nvec4 u_xlat2;\nvec4 u_xlat3;\nmediump vec4 u_xlat16_3;\nvec4 u_xlat4;\nfloat u_xlat5;\nfloat u_xlat7;\nfloat u_xlat10;\nfloat u_xlat12;\nfloat u_xlat15;\nbool u_xlatb15;\nvoid main()\n{\n    u_xlat0.xy = in_POSITION0.xy + vec2(_VertexOffsetX, _VertexOffsetY);\n    u_xlat1 = u_xlat0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];\n    u_xlat1 = hlslcc_mtx4x4unity_ObjectToWorld[0] * u_xlat0.xxxx + u_xlat1;\n    u_xlat1 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat1;\n    u_xlat2 = u_xlat1 + hlslcc_mtx4x4unity_ObjectToWorld[3];\n    u_xlat1.xyz = hlslcc_mtx4x4unity_ObjectToWorld[3].xyz * in_POSITION0.www + u_xlat1.xyz;\n    u_xlat1.xyz = (-u_xlat1.xyz) + _WorldSpaceCameraPos.xyz;\n    u_xlat3 = u_xlat2.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];\n    u_xlat3 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat2.xxxx + u_xlat3;\n    u_xlat3 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat2.zzzz + u_xlat3;\n    u_xlat2 = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat2.wwww + u_xlat3;\n    gl_Position = u_xlat2;\n    u_xlat16_3 = in_COLOR0 * _FaceColor;\n    u_xlat16_3.xyz = u_xlat16_3.www * u_xlat16_3.xyz;\n    vs_COLOR0 = u_xlat16_3;\n    u_xlat10 = dot(u_xlat1.xyz, u_xlat1.xyz);\n    u_xlat10 = inversesqrt(u_xlat10);\n    u_xlat1.xyz = vec3(u_xlat10) * u_xlat1.xyz;\n    u_xlat2.x = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[0].xyz);\n    u_xlat2.y = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[1].xyz);\n    u_xlat2.z = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[2].xyz);\n    u_xlat10 = dot(u_xlat2.xyz, u_xlat2.xyz);\n    u_xlat10 = inversesqrt(u_xlat10);\n    u_xlat2.xyz = vec3(u_xlat10) * u_xlat2.xyz;\n    u_xlat10 = dot(u_xlat2.xyz, u_xlat1.xyz);\n    u_xlat1.xy = _ScreenParams.yy * hlslcc_mtx4x4glstate_matrix_projection[1].xy;\n    u_xlat1.xy = hlslcc_mtx4x4glstate_matrix_projection[0].xy * _ScreenParams.xx + u_xlat1.xy;\n    u_xlat1.xy = abs(u_xlat1.xy) * vec2(_ScaleX, _ScaleY);\n    u_xlat1.xy = u_xlat2.ww / u_xlat1.xy;\n    u_xlat15 = dot(u_xlat1.xy, u_xlat1.xy);\n    u_xlat1.xy = vec2(_MaskSoftnessX, _MaskSoftnessY) * vec2(0.25, 0.25) + u_xlat1.xy;\n    u_xlat1.zw = vec2(0.25, 0.25) / u_xlat1.xy;\n    u_xlat15 = inversesqrt(u_xlat15);\n    u_xlat2.x = abs(in_TEXCOORD1.y) * _GradientScale;\n    u_xlat7 = _Sharpness + 1.0;\n    u_xlat2.x = u_xlat7 * u_xlat2.x;\n    u_xlat7 = u_xlat15 * u_xlat2.x;\n    u_xlat12 = (-_PerspectiveFilter) + 1.0;\n    u_xlat12 = u_xlat12 * abs(u_xlat7);\n    u_xlat15 = u_xlat15 * u_xlat2.x + (-u_xlat12);\n    u_xlat10 = abs(u_xlat10) * u_xlat15 + u_xlat12;\n    u_xlatb15 = hlslcc_mtx4x4glstate_matrix_projection[3].w==0.0;\n    u_xlat10 = (u_xlatb15) ? u_xlat10 : u_xlat7;\n    u_xlat15 = _OutlineSoftness * _ScaleRatioA;\n    u_xlat15 = u_xlat15 * u_xlat10 + 1.0;\n    u_xlat2.x = u_xlat10 / u_xlat15;\n    u_xlat10 = _OutlineWidth * _ScaleRatioA;\n    u_xlat10 = u_xlat2.x * u_xlat10;\n    u_xlat15 = min(u_xlat10, 1.0);\n    u_xlat15 = sqrt(u_xlat15);\n    u_xlat4.x = in_COLOR0.w * _OutlineColor.w;\n    u_xlat4.xyz = _OutlineColor.xyz * u_xlat4.xxx + (-u_xlat16_3.xyz);\n    u_xlat4.w = _OutlineColor.w * in_COLOR0.w + (-u_xlat16_3.w);\n    u_xlat3 = vec4(u_xlat15) * u_xlat4 + u_xlat16_3;\n    vs_COLOR1 = u_xlat3;\n    u_xlat3 = max(_ClipRect, vec4(-2e+10, -2e+10, -2e+10, -2e+10));\n    u_xlat3 = min(u_xlat3, vec4(2e+10, 2e+10, 2e+10, 2e+10));\n    u_xlat4.xy = u_xlat0.xy + (-u_xlat3.xy);\n    u_xlat0.xy = u_xlat0.xy * vec2(2.0, 2.0) + (-u_xlat3.xy);\n    u_xlat1.xy = (-u_xlat3.zw) + u_xlat0.xy;\n    u_xlat0.xy = (-u_xlat3.xy) + u_xlat3.zw;\n    vs_TEXCOORD0.zw = u_xlat4.xy / u_xlat0.xy;\n    vs_TEXCOORD2 = u_xlat1;\n    vs_TEXCOORD0.xy = in_TEXCOORD0.xy;\n    u_xlatb0 = 0.0>=in_TEXCOORD1.y;\n    u_xlat0.x = u_xlatb0 ? 1.0 : float(0.0);\n    u_xlat5 = (-_WeightNormal) + _WeightBold;\n    u_xlat0.x = u_xlat0.x * u_xlat5 + _WeightNormal;\n    u_xlat0.x = u_xlat0.x * 0.25 + _FaceDilate;\n    u_xlat0.x = u_xlat0.x * _ScaleRatioA;\n    u_xlat0.x = (-u_xlat0.x) * 0.5 + 0.5;\n    u_xlat2.w = u_xlat0.x * u_xlat2.x + -0.5;\n    u_xlat2.y = (-u_xlat10) * 0.5 + u_xlat2.w;\n    u_xlat2.z = u_xlat10 * 0.5 + u_xlat2.w;\n    vs_TEXCOORD1 = u_xlat2;\n    return;\n}\n\n","\n#version 100\n\n#ifdef GL_FRAGMENT_PRECISION_HIGH\n    precision highp float;\n#else\n    precision mediump float;\n#endif\nprecision highp int;\nuniform \tvec4 _ClipRect;\nuniform \tfloat _MaskWipeControl;\nuniform \tfloat _MaskEdgeSoftness;\nuniform \tmediump vec4 _MaskEdgeColor;\nuniform \tint _MaskInverse;\nuniform lowp sampler2D _MainTex;\nuniform lowp sampler2D _MaskTex;\nvarying mediump vec4 vs_COLOR0;\nvarying highp vec4 vs_TEXCOORD0;\nvarying mediump vec4 vs_TEXCOORD1;\nvarying mediump vec4 vs_TEXCOORD2;\n#define SV_Target0 gl_FragData[0]\nvec4 u_xlat0;\nmediump vec4 u_xlat16_0;\nlowp float u_xlat10_0;\nmediump float u_xlat16_1;\nmediump vec3 u_xlat16_2;\nvec3 u_xlat3;\nfloat u_xlat4;\nlowp float u_xlat10_4;\nmediump float u_xlat16_6;\nfloat u_xlat18;\nvoid main()\n{\n    u_xlat0.xy = (-_ClipRect.xy) + _ClipRect.zw;\n    u_xlat0.xy = u_xlat0.xy + -abs(vs_TEXCOORD2.xy);\n    u_xlat0.xy = u_xlat0.xy * vs_TEXCOORD2.zw;\n    u_xlat0.xy = clamp(u_xlat0.xy, 0.0, 1.0);\n    u_xlat16_1 = u_xlat0.y * u_xlat0.x;\n    u_xlat10_0 = texture2D(_MainTex, vs_TEXCOORD0.xy).w;\n    u_xlat16_6 = u_xlat10_0 * vs_TEXCOORD1.x + (-vs_TEXCOORD1.w);\n    u_xlat16_6 = clamp(u_xlat16_6, 0.0, 1.0);\n    u_xlat16_0 = vec4(u_xlat16_6) * vs_COLOR0;\n    u_xlat16_6 = u_xlat16_1 * u_xlat16_0.w;\n    u_xlat16_2.xyz = vec3(u_xlat16_6) * _MaskEdgeColor.xyz;\n    u_xlat3.xyz = u_xlat16_0.xyz * vec3(u_xlat16_1) + (-u_xlat16_2.xyz);\n    u_xlat18 = (_MaskInverse != 0) ? 1.0 : 0.0;\n    u_xlat10_4 = texture2D(_MaskTex, vs_TEXCOORD0.zw).w;\n    u_xlat18 = u_xlat18 + (-u_xlat10_4);\n    u_xlat4 = (-_MaskWipeControl) + 1.0;\n    u_xlat18 = u_xlat4 * _MaskEdgeSoftness + abs(u_xlat18);\n    u_xlat18 = u_xlat18 + (-_MaskWipeControl);\n    u_xlat18 = u_xlat18 / _MaskEdgeSoftness;\n    u_xlat18 = clamp(u_xlat18, 0.0, 1.0);\n    u_xlat3.xyz = vec3(u_xlat18) * u_xlat3.xyz + u_xlat16_2.xyz;\n    u_xlat0.xyz = vec3(u_xlat18) * u_xlat3.xyz;\n    u_xlat0.w = u_xlat16_6 * u_xlat18;\n    SV_Target0 = u_xlat0;\n    return;\n}\n\n",0,0,0,0,0,[],[["IGNOREPROJECTOR","true"],["QUEUE","Transparent"],["RenderType","Transparent"]]],[0,"\n#version 100\n\nuniform \tvec3 _WorldSpaceCameraPos;\nuniform \tvec4 _ScreenParams;\nuniform \tvec4 hlslcc_mtx4x4unity_ObjectToWorld[4];\nuniform \tvec4 hlslcc_mtx4x4unity_WorldToObject[4];\nuniform \tvec4 hlslcc_mtx4x4glstate_matrix_projection[4];\nuniform \tvec4 hlslcc_mtx4x4unity_MatrixVP[4];\nuniform \tmediump vec4 _FaceColor;\nuniform \tfloat _FaceDilate;\nuniform \tfloat _OutlineSoftness;\nuniform \tmediump vec4 _OutlineColor;\nuniform \tfloat _OutlineWidth;\nuniform \tfloat _WeightNormal;\nuniform \tfloat _WeightBold;\nuniform \tfloat _ScaleRatioA;\nuniform \tfloat _VertexOffsetX;\nuniform \tfloat _VertexOffsetY;\nuniform \tvec4 _ClipRect;\nuniform \tfloat _MaskSoftnessX;\nuniform \tfloat _MaskSoftnessY;\nuniform \tfloat _GradientScale;\nuniform \tfloat _ScaleX;\nuniform \tfloat _ScaleY;\nuniform \tfloat _PerspectiveFilter;\nuniform \tfloat _Sharpness;\nattribute highp vec4 in_POSITION0;\nattribute highp vec3 in_NORMAL0;\nattribute mediump vec4 in_COLOR0;\nattribute highp vec2 in_TEXCOORD0;\nattribute highp vec2 in_TEXCOORD1;\nvarying mediump vec4 vs_COLOR0;\nvarying mediump vec4 vs_COLOR1;\nvarying highp vec4 vs_TEXCOORD0;\nvarying mediump vec4 vs_TEXCOORD1;\nvarying mediump vec4 vs_TEXCOORD2;\nvec2 u_xlat0;\nbool u_xlatb0;\nvec4 u_xlat1;\nvec4 u_xlat2;\nvec4 u_xlat3;\nmediump vec4 u_xlat16_3;\nvec4 u_xlat4;\nfloat u_xlat5;\nfloat u_xlat7;\nfloat u_xlat10;\nfloat u_xlat12;\nfloat u_xlat15;\nbool u_xlatb15;\nvoid main()\n{\n    u_xlat0.xy = in_POSITION0.xy + vec2(_VertexOffsetX, _VertexOffsetY);\n    u_xlat1 = u_xlat0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];\n    u_xlat1 = hlslcc_mtx4x4unity_ObjectToWorld[0] * u_xlat0.xxxx + u_xlat1;\n    u_xlat1 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat1;\n    u_xlat2 = u_xlat1 + hlslcc_mtx4x4unity_ObjectToWorld[3];\n    u_xlat1.xyz = hlslcc_mtx4x4unity_ObjectToWorld[3].xyz * in_POSITION0.www + u_xlat1.xyz;\n    u_xlat1.xyz = (-u_xlat1.xyz) + _WorldSpaceCameraPos.xyz;\n    u_xlat3 = u_xlat2.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];\n    u_xlat3 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat2.xxxx + u_xlat3;\n    u_xlat3 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat2.zzzz + u_xlat3;\n    u_xlat2 = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat2.wwww + u_xlat3;\n    gl_Position = u_xlat2;\n    u_xlat16_3 = in_COLOR0 * _FaceColor;\n    u_xlat16_3.xyz = u_xlat16_3.www * u_xlat16_3.xyz;\n    vs_COLOR0 = u_xlat16_3;\n    u_xlat10 = dot(u_xlat1.xyz, u_xlat1.xyz);\n    u_xlat10 = inversesqrt(u_xlat10);\n    u_xlat1.xyz = vec3(u_xlat10) * u_xlat1.xyz;\n    u_xlat2.x = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[0].xyz);\n    u_xlat2.y = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[1].xyz);\n    u_xlat2.z = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[2].xyz);\n    u_xlat10 = dot(u_xlat2.xyz, u_xlat2.xyz);\n    u_xlat10 = inversesqrt(u_xlat10);\n    u_xlat2.xyz = vec3(u_xlat10) * u_xlat2.xyz;\n    u_xlat10 = dot(u_xlat2.xyz, u_xlat1.xyz);\n    u_xlat1.xy = _ScreenParams.yy * hlslcc_mtx4x4glstate_matrix_projection[1].xy;\n    u_xlat1.xy = hlslcc_mtx4x4glstate_matrix_projection[0].xy * _ScreenParams.xx + u_xlat1.xy;\n    u_xlat1.xy = abs(u_xlat1.xy) * vec2(_ScaleX, _ScaleY);\n    u_xlat1.xy = u_xlat2.ww / u_xlat1.xy;\n    u_xlat15 = dot(u_xlat1.xy, u_xlat1.xy);\n    u_xlat1.xy = vec2(_MaskSoftnessX, _MaskSoftnessY) * vec2(0.25, 0.25) + u_xlat1.xy;\n    u_xlat1.zw = vec2(0.25, 0.25) / u_xlat1.xy;\n    u_xlat15 = inversesqrt(u_xlat15);\n    u_xlat2.x = abs(in_TEXCOORD1.y) * _GradientScale;\n    u_xlat7 = _Sharpness + 1.0;\n    u_xlat2.x = u_xlat7 * u_xlat2.x;\n    u_xlat7 = u_xlat15 * u_xlat2.x;\n    u_xlat12 = (-_PerspectiveFilter) + 1.0;\n    u_xlat12 = u_xlat12 * abs(u_xlat7);\n    u_xlat15 = u_xlat15 * u_xlat2.x + (-u_xlat12);\n    u_xlat10 = abs(u_xlat10) * u_xlat15 + u_xlat12;\n    u_xlatb15 = hlslcc_mtx4x4glstate_matrix_projection[3].w==0.0;\n    u_xlat10 = (u_xlatb15) ? u_xlat10 : u_xlat7;\n    u_xlat15 = _OutlineSoftness * _ScaleRatioA;\n    u_xlat15 = u_xlat15 * u_xlat10 + 1.0;\n    u_xlat2.x = u_xlat10 / u_xlat15;\n    u_xlat10 = _OutlineWidth * _ScaleRatioA;\n    u_xlat10 = u_xlat2.x * u_xlat10;\n    u_xlat15 = min(u_xlat10, 1.0);\n    u_xlat15 = sqrt(u_xlat15);\n    u_xlat4.x = in_COLOR0.w * _OutlineColor.w;\n    u_xlat4.xyz = _OutlineColor.xyz * u_xlat4.xxx + (-u_xlat16_3.xyz);\n    u_xlat4.w = _OutlineColor.w * in_COLOR0.w + (-u_xlat16_3.w);\n    u_xlat3 = vec4(u_xlat15) * u_xlat4 + u_xlat16_3;\n    vs_COLOR1 = u_xlat3;\n    u_xlat3 = max(_ClipRect, vec4(-2e+10, -2e+10, -2e+10, -2e+10));\n    u_xlat3 = min(u_xlat3, vec4(2e+10, 2e+10, 2e+10, 2e+10));\n    u_xlat4.xy = u_xlat0.xy + (-u_xlat3.xy);\n    u_xlat0.xy = u_xlat0.xy * vec2(2.0, 2.0) + (-u_xlat3.xy);\n    u_xlat1.xy = (-u_xlat3.zw) + u_xlat0.xy;\n    u_xlat0.xy = (-u_xlat3.xy) + u_xlat3.zw;\n    vs_TEXCOORD0.zw = u_xlat4.xy / u_xlat0.xy;\n    vs_TEXCOORD2 = u_xlat1;\n    vs_TEXCOORD0.xy = in_TEXCOORD0.xy;\n    u_xlatb0 = 0.0>=in_TEXCOORD1.y;\n    u_xlat0.x = u_xlatb0 ? 1.0 : float(0.0);\n    u_xlat5 = (-_WeightNormal) + _WeightBold;\n    u_xlat0.x = u_xlat0.x * u_xlat5 + _WeightNormal;\n    u_xlat0.x = u_xlat0.x * 0.25 + _FaceDilate;\n    u_xlat0.x = u_xlat0.x * _ScaleRatioA;\n    u_xlat0.x = (-u_xlat0.x) * 0.5 + 0.5;\n    u_xlat2.w = u_xlat0.x * u_xlat2.x + -0.5;\n    u_xlat2.y = (-u_xlat10) * 0.5 + u_xlat2.w;\n    u_xlat2.z = u_xlat10 * 0.5 + u_xlat2.w;\n    vs_TEXCOORD1 = u_xlat2;\n    return;\n}\n\n","\n#version 100\n\n#ifdef GL_FRAGMENT_PRECISION_HIGH\n    precision highp float;\n#else\n    precision mediump float;\n#endif\nprecision highp int;\nuniform \tvec4 _ClipRect;\nuniform \tfloat _MaskWipeControl;\nuniform \tfloat _MaskEdgeSoftness;\nuniform \tmediump vec4 _MaskEdgeColor;\nuniform \tint _MaskInverse;\nuniform lowp sampler2D _MainTex;\nuniform lowp sampler2D _MaskTex;\nvarying mediump vec4 vs_COLOR0;\nvarying highp vec4 vs_TEXCOORD0;\nvarying mediump vec4 vs_TEXCOORD1;\nvarying mediump vec4 vs_TEXCOORD2;\n#define SV_Target0 gl_FragData[0]\nfloat u_xlat0;\nmediump float u_xlat16_1;\nmediump vec4 u_xlat16_2;\nmediump vec3 u_xlat16_3;\nvec4 u_xlat4;\nvec3 u_xlat5;\nlowp float u_xlat10_5;\nbool u_xlatb5;\nmediump float u_xlat16_6;\nmediump float u_xlat16_11;\nvoid main()\n{\n    u_xlat0 = (_MaskInverse != 0) ? 1.0 : 0.0;\n    u_xlat10_5 = texture2D(_MaskTex, vs_TEXCOORD0.zw).w;\n    u_xlat0 = (-u_xlat10_5) + u_xlat0;\n    u_xlat5.x = (-_MaskWipeControl) + 1.0;\n    u_xlat0 = u_xlat5.x * _MaskEdgeSoftness + abs(u_xlat0);\n    u_xlat0 = u_xlat0 + (-_MaskWipeControl);\n    u_xlat0 = u_xlat0 / _MaskEdgeSoftness;\n    u_xlat0 = clamp(u_xlat0, 0.0, 1.0);\n    u_xlat5.xy = (-_ClipRect.xy) + _ClipRect.zw;\n    u_xlat5.xy = u_xlat5.xy + -abs(vs_TEXCOORD2.xy);\n    u_xlat5.xy = u_xlat5.xy * vs_TEXCOORD2.zw;\n    u_xlat5.xy = clamp(u_xlat5.xy, 0.0, 1.0);\n    u_xlat16_1 = u_xlat5.y * u_xlat5.x;\n    u_xlat10_5 = texture2D(_MainTex, vs_TEXCOORD0.xy).w;\n    u_xlat16_6 = u_xlat10_5 * vs_TEXCOORD1.x + (-vs_TEXCOORD1.w);\n    u_xlat16_6 = clamp(u_xlat16_6, 0.0, 1.0);\n    u_xlat16_2 = vec4(u_xlat16_6) * vs_COLOR0;\n    u_xlat16_6 = u_xlat16_1 * u_xlat16_2.w;\n    u_xlat16_11 = u_xlat16_6 * u_xlat0 + -0.00100000005;\n    u_xlatb5 = u_xlat16_11<0.0;\n    if(u_xlatb5){discard;}\n    u_xlat16_3.xyz = vec3(u_xlat16_6) * _MaskEdgeColor.xyz;\n    u_xlat4.w = u_xlat0 * u_xlat16_6;\n    u_xlat5.xyz = u_xlat16_2.xyz * vec3(u_xlat16_1) + (-u_xlat16_3.xyz);\n    u_xlat5.xyz = vec3(u_xlat0) * u_xlat5.xyz + u_xlat16_3.xyz;\n    u_xlat4.xyz = vec3(u_xlat0) * u_xlat5.xyz;\n    SV_Target0 = u_xlat4;\n    return;\n}\n\n",0,0,1,0,0,["UNITY_UI_ALPHACLIP"],[["IGNOREPROJECTOR","true"],["QUEUE","Transparent"],["RenderType","Transparent"]]],[0,"\n#version 100\n\nuniform \tvec3 _WorldSpaceCameraPos;\nuniform \tvec4 _ScreenParams;\nuniform \tvec4 hlslcc_mtx4x4unity_ObjectToWorld[4];\nuniform \tvec4 hlslcc_mtx4x4unity_WorldToObject[4];\nuniform \tvec4 hlslcc_mtx4x4glstate_matrix_projection[4];\nuniform \tvec4 hlslcc_mtx4x4unity_MatrixVP[4];\nuniform \tmediump vec4 _FaceColor;\nuniform \tfloat _FaceDilate;\nuniform \tfloat _OutlineSoftness;\nuniform \tmediump vec4 _OutlineColor;\nuniform \tfloat _OutlineWidth;\nuniform \tfloat _WeightNormal;\nuniform \tfloat _WeightBold;\nuniform \tfloat _ScaleRatioA;\nuniform \tfloat _VertexOffsetX;\nuniform \tfloat _VertexOffsetY;\nuniform \tvec4 _ClipRect;\nuniform \tfloat _MaskSoftnessX;\nuniform \tfloat _MaskSoftnessY;\nuniform \tfloat _GradientScale;\nuniform \tfloat _ScaleX;\nuniform \tfloat _ScaleY;\nuniform \tfloat _PerspectiveFilter;\nuniform \tfloat _Sharpness;\nattribute highp vec4 in_POSITION0;\nattribute highp vec3 in_NORMAL0;\nattribute mediump vec4 in_COLOR0;\nattribute highp vec2 in_TEXCOORD0;\nattribute highp vec2 in_TEXCOORD1;\nvarying mediump vec4 vs_COLOR0;\nvarying mediump vec4 vs_COLOR1;\nvarying highp vec4 vs_TEXCOORD0;\nvarying mediump vec4 vs_TEXCOORD1;\nvarying mediump vec4 vs_TEXCOORD2;\nvec2 u_xlat0;\nbool u_xlatb0;\nvec4 u_xlat1;\nvec4 u_xlat2;\nvec4 u_xlat3;\nmediump vec4 u_xlat16_3;\nvec4 u_xlat4;\nfloat u_xlat5;\nfloat u_xlat7;\nfloat u_xlat10;\nfloat u_xlat12;\nfloat u_xlat15;\nbool u_xlatb15;\nvoid main()\n{\n    u_xlat0.xy = in_POSITION0.xy + vec2(_VertexOffsetX, _VertexOffsetY);\n    u_xlat1 = u_xlat0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];\n    u_xlat1 = hlslcc_mtx4x4unity_ObjectToWorld[0] * u_xlat0.xxxx + u_xlat1;\n    u_xlat1 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat1;\n    u_xlat2 = u_xlat1 + hlslcc_mtx4x4unity_ObjectToWorld[3];\n    u_xlat1.xyz = hlslcc_mtx4x4unity_ObjectToWorld[3].xyz * in_POSITION0.www + u_xlat1.xyz;\n    u_xlat1.xyz = (-u_xlat1.xyz) + _WorldSpaceCameraPos.xyz;\n    u_xlat3 = u_xlat2.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];\n    u_xlat3 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat2.xxxx + u_xlat3;\n    u_xlat3 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat2.zzzz + u_xlat3;\n    u_xlat2 = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat2.wwww + u_xlat3;\n    gl_Position = u_xlat2;\n    u_xlat16_3 = in_COLOR0 * _FaceColor;\n    u_xlat16_3.xyz = u_xlat16_3.www * u_xlat16_3.xyz;\n    vs_COLOR0 = u_xlat16_3;\n    u_xlat10 = dot(u_xlat1.xyz, u_xlat1.xyz);\n    u_xlat10 = inversesqrt(u_xlat10);\n    u_xlat1.xyz = vec3(u_xlat10) * u_xlat1.xyz;\n    u_xlat2.x = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[0].xyz);\n    u_xlat2.y = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[1].xyz);\n    u_xlat2.z = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[2].xyz);\n    u_xlat10 = dot(u_xlat2.xyz, u_xlat2.xyz);\n    u_xlat10 = inversesqrt(u_xlat10);\n    u_xlat2.xyz = vec3(u_xlat10) * u_xlat2.xyz;\n    u_xlat10 = dot(u_xlat2.xyz, u_xlat1.xyz);\n    u_xlat1.xy = _ScreenParams.yy * hlslcc_mtx4x4glstate_matrix_projection[1].xy;\n    u_xlat1.xy = hlslcc_mtx4x4glstate_matrix_projection[0].xy * _ScreenParams.xx + u_xlat1.xy;\n    u_xlat1.xy = abs(u_xlat1.xy) * vec2(_ScaleX, _ScaleY);\n    u_xlat1.xy = u_xlat2.ww / u_xlat1.xy;\n    u_xlat15 = dot(u_xlat1.xy, u_xlat1.xy);\n    u_xlat1.xy = vec2(_MaskSoftnessX, _MaskSoftnessY) * vec2(0.25, 0.25) + u_xlat1.xy;\n    u_xlat1.zw = vec2(0.25, 0.25) / u_xlat1.xy;\n    u_xlat15 = inversesqrt(u_xlat15);\n    u_xlat2.x = abs(in_TEXCOORD1.y) * _GradientScale;\n    u_xlat7 = _Sharpness + 1.0;\n    u_xlat2.x = u_xlat7 * u_xlat2.x;\n    u_xlat7 = u_xlat15 * u_xlat2.x;\n    u_xlat12 = (-_PerspectiveFilter) + 1.0;\n    u_xlat12 = u_xlat12 * abs(u_xlat7);\n    u_xlat15 = u_xlat15 * u_xlat2.x + (-u_xlat12);\n    u_xlat10 = abs(u_xlat10) * u_xlat15 + u_xlat12;\n    u_xlatb15 = hlslcc_mtx4x4glstate_matrix_projection[3].w==0.0;\n    u_xlat10 = (u_xlatb15) ? u_xlat10 : u_xlat7;\n    u_xlat15 = _OutlineSoftness * _ScaleRatioA;\n    u_xlat15 = u_xlat15 * u_xlat10 + 1.0;\n    u_xlat2.x = u_xlat10 / u_xlat15;\n    u_xlat10 = _OutlineWidth * _ScaleRatioA;\n    u_xlat10 = u_xlat2.x * u_xlat10;\n    u_xlat15 = min(u_xlat10, 1.0);\n    u_xlat15 = sqrt(u_xlat15);\n    u_xlat4.x = in_COLOR0.w * _OutlineColor.w;\n    u_xlat4.xyz = _OutlineColor.xyz * u_xlat4.xxx + (-u_xlat16_3.xyz);\n    u_xlat4.w = _OutlineColor.w * in_COLOR0.w + (-u_xlat16_3.w);\n    u_xlat3 = vec4(u_xlat15) * u_xlat4 + u_xlat16_3;\n    vs_COLOR1 = u_xlat3;\n    u_xlat3 = max(_ClipRect, vec4(-2e+10, -2e+10, -2e+10, -2e+10));\n    u_xlat3 = min(u_xlat3, vec4(2e+10, 2e+10, 2e+10, 2e+10));\n    u_xlat4.xy = u_xlat0.xy + (-u_xlat3.xy);\n    u_xlat0.xy = u_xlat0.xy * vec2(2.0, 2.0) + (-u_xlat3.xy);\n    u_xlat1.xy = (-u_xlat3.zw) + u_xlat0.xy;\n    u_xlat0.xy = (-u_xlat3.xy) + u_xlat3.zw;\n    vs_TEXCOORD0.zw = u_xlat4.xy / u_xlat0.xy;\n    vs_TEXCOORD2 = u_xlat1;\n    vs_TEXCOORD0.xy = in_TEXCOORD0.xy;\n    u_xlatb0 = 0.0>=in_TEXCOORD1.y;\n    u_xlat0.x = u_xlatb0 ? 1.0 : float(0.0);\n    u_xlat5 = (-_WeightNormal) + _WeightBold;\n    u_xlat0.x = u_xlat0.x * u_xlat5 + _WeightNormal;\n    u_xlat0.x = u_xlat0.x * 0.25 + _FaceDilate;\n    u_xlat0.x = u_xlat0.x * _ScaleRatioA;\n    u_xlat0.x = (-u_xlat0.x) * 0.5 + 0.5;\n    u_xlat2.w = u_xlat0.x * u_xlat2.x + -0.5;\n    u_xlat2.y = (-u_xlat10) * 0.5 + u_xlat2.w;\n    u_xlat2.z = u_xlat10 * 0.5 + u_xlat2.w;\n    vs_TEXCOORD1 = u_xlat2;\n    return;\n}\n\n","\n#version 100\n\n#ifdef GL_FRAGMENT_PRECISION_HIGH\n    precision highp float;\n#else\n    precision mediump float;\n#endif\nprecision highp int;\nuniform \tvec4 _ClipRect;\nuniform \tfloat _MaskWipeControl;\nuniform \tfloat _MaskEdgeSoftness;\nuniform \tmediump vec4 _MaskEdgeColor;\nuniform \tint _MaskInverse;\nuniform lowp sampler2D _MainTex;\nuniform lowp sampler2D _MaskTex;\nvarying mediump vec4 vs_COLOR0;\nvarying highp vec4 vs_TEXCOORD0;\nvarying mediump vec4 vs_TEXCOORD1;\nvarying mediump vec4 vs_TEXCOORD2;\n#define SV_Target0 gl_FragData[0]\nvec4 u_xlat0;\nmediump vec4 u_xlat16_0;\nlowp float u_xlat10_0;\nmediump float u_xlat16_1;\nmediump vec3 u_xlat16_2;\nvec3 u_xlat3;\nfloat u_xlat4;\nlowp float u_xlat10_4;\nmediump float u_xlat16_6;\nfloat u_xlat18;\nvoid main()\n{\n    u_xlat0.xy = (-_ClipRect.xy) + _ClipRect.zw;\n    u_xlat0.xy = u_xlat0.xy + -abs(vs_TEXCOORD2.xy);\n    u_xlat0.xy = u_xlat0.xy * vs_TEXCOORD2.zw;\n    u_xlat0.xy = clamp(u_xlat0.xy, 0.0, 1.0);\n    u_xlat16_1 = u_xlat0.y * u_xlat0.x;\n    u_xlat10_0 = texture2D(_MainTex, vs_TEXCOORD0.xy).w;\n    u_xlat16_6 = u_xlat10_0 * vs_TEXCOORD1.x + (-vs_TEXCOORD1.w);\n    u_xlat16_6 = clamp(u_xlat16_6, 0.0, 1.0);\n    u_xlat16_0 = vec4(u_xlat16_6) * vs_COLOR0;\n    u_xlat16_6 = u_xlat16_1 * u_xlat16_0.w;\n    u_xlat16_2.xyz = vec3(u_xlat16_6) * _MaskEdgeColor.xyz;\n    u_xlat3.xyz = u_xlat16_0.xyz * vec3(u_xlat16_1) + (-u_xlat16_2.xyz);\n    u_xlat18 = (_MaskInverse != 0) ? 1.0 : 0.0;\n    u_xlat10_4 = texture2D(_MaskTex, vs_TEXCOORD0.zw).w;\n    u_xlat18 = u_xlat18 + (-u_xlat10_4);\n    u_xlat4 = (-_MaskWipeControl) + 1.0;\n    u_xlat18 = u_xlat4 * _MaskEdgeSoftness + abs(u_xlat18);\n    u_xlat18 = u_xlat18 + (-_MaskWipeControl);\n    u_xlat18 = u_xlat18 / _MaskEdgeSoftness;\n    u_xlat18 = clamp(u_xlat18, 0.0, 1.0);\n    u_xlat3.xyz = vec3(u_xlat18) * u_xlat3.xyz + u_xlat16_2.xyz;\n    u_xlat0.xyz = vec3(u_xlat18) * u_xlat3.xyz;\n    u_xlat0.w = u_xlat16_6 * u_xlat18;\n    SV_Target0 = u_xlat0;\n    return;\n}\n\n",0,0,2,0,0,["UNITY_UI_CLIP_RECT"],[["IGNOREPROJECTOR","true"],["QUEUE","Transparent"],["RenderType","Transparent"]]],[0,"\n#version 100\n\nuniform \tvec3 _WorldSpaceCameraPos;\nuniform \tvec4 _ScreenParams;\nuniform \tvec4 hlslcc_mtx4x4unity_ObjectToWorld[4];\nuniform \tvec4 hlslcc_mtx4x4unity_WorldToObject[4];\nuniform \tvec4 hlslcc_mtx4x4glstate_matrix_projection[4];\nuniform \tvec4 hlslcc_mtx4x4unity_MatrixVP[4];\nuniform \tmediump vec4 _FaceColor;\nuniform \tfloat _FaceDilate;\nuniform \tfloat _OutlineSoftness;\nuniform \tmediump vec4 _OutlineColor;\nuniform \tfloat _OutlineWidth;\nuniform \tfloat _WeightNormal;\nuniform \tfloat _WeightBold;\nuniform \tfloat _ScaleRatioA;\nuniform \tfloat _VertexOffsetX;\nuniform \tfloat _VertexOffsetY;\nuniform \tvec4 _ClipRect;\nuniform \tfloat _MaskSoftnessX;\nuniform \tfloat _MaskSoftnessY;\nuniform \tfloat _GradientScale;\nuniform \tfloat _ScaleX;\nuniform \tfloat _ScaleY;\nuniform \tfloat _PerspectiveFilter;\nuniform \tfloat _Sharpness;\nattribute highp vec4 in_POSITION0;\nattribute highp vec3 in_NORMAL0;\nattribute mediump vec4 in_COLOR0;\nattribute highp vec2 in_TEXCOORD0;\nattribute highp vec2 in_TEXCOORD1;\nvarying mediump vec4 vs_COLOR0;\nvarying mediump vec4 vs_COLOR1;\nvarying highp vec4 vs_TEXCOORD0;\nvarying mediump vec4 vs_TEXCOORD1;\nvarying mediump vec4 vs_TEXCOORD2;\nvec2 u_xlat0;\nbool u_xlatb0;\nvec4 u_xlat1;\nvec4 u_xlat2;\nvec4 u_xlat3;\nmediump vec4 u_xlat16_3;\nvec4 u_xlat4;\nfloat u_xlat5;\nfloat u_xlat7;\nfloat u_xlat10;\nfloat u_xlat12;\nfloat u_xlat15;\nbool u_xlatb15;\nvoid main()\n{\n    u_xlat0.xy = in_POSITION0.xy + vec2(_VertexOffsetX, _VertexOffsetY);\n    u_xlat1 = u_xlat0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];\n    u_xlat1 = hlslcc_mtx4x4unity_ObjectToWorld[0] * u_xlat0.xxxx + u_xlat1;\n    u_xlat1 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat1;\n    u_xlat2 = u_xlat1 + hlslcc_mtx4x4unity_ObjectToWorld[3];\n    u_xlat1.xyz = hlslcc_mtx4x4unity_ObjectToWorld[3].xyz * in_POSITION0.www + u_xlat1.xyz;\n    u_xlat1.xyz = (-u_xlat1.xyz) + _WorldSpaceCameraPos.xyz;\n    u_xlat3 = u_xlat2.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];\n    u_xlat3 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat2.xxxx + u_xlat3;\n    u_xlat3 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat2.zzzz + u_xlat3;\n    u_xlat2 = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat2.wwww + u_xlat3;\n    gl_Position = u_xlat2;\n    u_xlat16_3 = in_COLOR0 * _FaceColor;\n    u_xlat16_3.xyz = u_xlat16_3.www * u_xlat16_3.xyz;\n    vs_COLOR0 = u_xlat16_3;\n    u_xlat10 = dot(u_xlat1.xyz, u_xlat1.xyz);\n    u_xlat10 = inversesqrt(u_xlat10);\n    u_xlat1.xyz = vec3(u_xlat10) * u_xlat1.xyz;\n    u_xlat2.x = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[0].xyz);\n    u_xlat2.y = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[1].xyz);\n    u_xlat2.z = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[2].xyz);\n    u_xlat10 = dot(u_xlat2.xyz, u_xlat2.xyz);\n    u_xlat10 = inversesqrt(u_xlat10);\n    u_xlat2.xyz = vec3(u_xlat10) * u_xlat2.xyz;\n    u_xlat10 = dot(u_xlat2.xyz, u_xlat1.xyz);\n    u_xlat1.xy = _ScreenParams.yy * hlslcc_mtx4x4glstate_matrix_projection[1].xy;\n    u_xlat1.xy = hlslcc_mtx4x4glstate_matrix_projection[0].xy * _ScreenParams.xx + u_xlat1.xy;\n    u_xlat1.xy = abs(u_xlat1.xy) * vec2(_ScaleX, _ScaleY);\n    u_xlat1.xy = u_xlat2.ww / u_xlat1.xy;\n    u_xlat15 = dot(u_xlat1.xy, u_xlat1.xy);\n    u_xlat1.xy = vec2(_MaskSoftnessX, _MaskSoftnessY) * vec2(0.25, 0.25) + u_xlat1.xy;\n    u_xlat1.zw = vec2(0.25, 0.25) / u_xlat1.xy;\n    u_xlat15 = inversesqrt(u_xlat15);\n    u_xlat2.x = abs(in_TEXCOORD1.y) * _GradientScale;\n    u_xlat7 = _Sharpness + 1.0;\n    u_xlat2.x = u_xlat7 * u_xlat2.x;\n    u_xlat7 = u_xlat15 * u_xlat2.x;\n    u_xlat12 = (-_PerspectiveFilter) + 1.0;\n    u_xlat12 = u_xlat12 * abs(u_xlat7);\n    u_xlat15 = u_xlat15 * u_xlat2.x + (-u_xlat12);\n    u_xlat10 = abs(u_xlat10) * u_xlat15 + u_xlat12;\n    u_xlatb15 = hlslcc_mtx4x4glstate_matrix_projection[3].w==0.0;\n    u_xlat10 = (u_xlatb15) ? u_xlat10 : u_xlat7;\n    u_xlat15 = _OutlineSoftness * _ScaleRatioA;\n    u_xlat15 = u_xlat15 * u_xlat10 + 1.0;\n    u_xlat2.x = u_xlat10 / u_xlat15;\n    u_xlat10 = _OutlineWidth * _ScaleRatioA;\n    u_xlat10 = u_xlat2.x * u_xlat10;\n    u_xlat15 = min(u_xlat10, 1.0);\n    u_xlat15 = sqrt(u_xlat15);\n    u_xlat4.x = in_COLOR0.w * _OutlineColor.w;\n    u_xlat4.xyz = _OutlineColor.xyz * u_xlat4.xxx + (-u_xlat16_3.xyz);\n    u_xlat4.w = _OutlineColor.w * in_COLOR0.w + (-u_xlat16_3.w);\n    u_xlat3 = vec4(u_xlat15) * u_xlat4 + u_xlat16_3;\n    vs_COLOR1 = u_xlat3;\n    u_xlat3 = max(_ClipRect, vec4(-2e+10, -2e+10, -2e+10, -2e+10));\n    u_xlat3 = min(u_xlat3, vec4(2e+10, 2e+10, 2e+10, 2e+10));\n    u_xlat4.xy = u_xlat0.xy + (-u_xlat3.xy);\n    u_xlat0.xy = u_xlat0.xy * vec2(2.0, 2.0) + (-u_xlat3.xy);\n    u_xlat1.xy = (-u_xlat3.zw) + u_xlat0.xy;\n    u_xlat0.xy = (-u_xlat3.xy) + u_xlat3.zw;\n    vs_TEXCOORD0.zw = u_xlat4.xy / u_xlat0.xy;\n    vs_TEXCOORD2 = u_xlat1;\n    vs_TEXCOORD0.xy = in_TEXCOORD0.xy;\n    u_xlatb0 = 0.0>=in_TEXCOORD1.y;\n    u_xlat0.x = u_xlatb0 ? 1.0 : float(0.0);\n    u_xlat5 = (-_WeightNormal) + _WeightBold;\n    u_xlat0.x = u_xlat0.x * u_xlat5 + _WeightNormal;\n    u_xlat0.x = u_xlat0.x * 0.25 + _FaceDilate;\n    u_xlat0.x = u_xlat0.x * _ScaleRatioA;\n    u_xlat0.x = (-u_xlat0.x) * 0.5 + 0.5;\n    u_xlat2.w = u_xlat0.x * u_xlat2.x + -0.5;\n    u_xlat2.y = (-u_xlat10) * 0.5 + u_xlat2.w;\n    u_xlat2.z = u_xlat10 * 0.5 + u_xlat2.w;\n    vs_TEXCOORD1 = u_xlat2;\n    return;\n}\n\n","\n#version 100\n\n#ifdef GL_FRAGMENT_PRECISION_HIGH\n    precision highp float;\n#else\n    precision mediump float;\n#endif\nprecision highp int;\nuniform \tvec4 _ClipRect;\nuniform \tfloat _MaskWipeControl;\nuniform \tfloat _MaskEdgeSoftness;\nuniform \tmediump vec4 _MaskEdgeColor;\nuniform \tint _MaskInverse;\nuniform lowp sampler2D _MainTex;\nuniform lowp sampler2D _MaskTex;\nvarying mediump vec4 vs_COLOR0;\nvarying highp vec4 vs_TEXCOORD0;\nvarying mediump vec4 vs_TEXCOORD1;\nvarying mediump vec4 vs_TEXCOORD2;\n#define SV_Target0 gl_FragData[0]\nfloat u_xlat0;\nmediump float u_xlat16_1;\nmediump vec4 u_xlat16_2;\nmediump vec3 u_xlat16_3;\nvec4 u_xlat4;\nvec3 u_xlat5;\nlowp float u_xlat10_5;\nbool u_xlatb5;\nmediump float u_xlat16_6;\nmediump float u_xlat16_11;\nvoid main()\n{\n    u_xlat0 = (_MaskInverse != 0) ? 1.0 : 0.0;\n    u_xlat10_5 = texture2D(_MaskTex, vs_TEXCOORD0.zw).w;\n    u_xlat0 = (-u_xlat10_5) + u_xlat0;\n    u_xlat5.x = (-_MaskWipeControl) + 1.0;\n    u_xlat0 = u_xlat5.x * _MaskEdgeSoftness + abs(u_xlat0);\n    u_xlat0 = u_xlat0 + (-_MaskWipeControl);\n    u_xlat0 = u_xlat0 / _MaskEdgeSoftness;\n    u_xlat0 = clamp(u_xlat0, 0.0, 1.0);\n    u_xlat5.xy = (-_ClipRect.xy) + _ClipRect.zw;\n    u_xlat5.xy = u_xlat5.xy + -abs(vs_TEXCOORD2.xy);\n    u_xlat5.xy = u_xlat5.xy * vs_TEXCOORD2.zw;\n    u_xlat5.xy = clamp(u_xlat5.xy, 0.0, 1.0);\n    u_xlat16_1 = u_xlat5.y * u_xlat5.x;\n    u_xlat10_5 = texture2D(_MainTex, vs_TEXCOORD0.xy).w;\n    u_xlat16_6 = u_xlat10_5 * vs_TEXCOORD1.x + (-vs_TEXCOORD1.w);\n    u_xlat16_6 = clamp(u_xlat16_6, 0.0, 1.0);\n    u_xlat16_2 = vec4(u_xlat16_6) * vs_COLOR0;\n    u_xlat16_6 = u_xlat16_1 * u_xlat16_2.w;\n    u_xlat16_11 = u_xlat16_6 * u_xlat0 + -0.00100000005;\n    u_xlatb5 = u_xlat16_11<0.0;\n    if(u_xlatb5){discard;}\n    u_xlat16_3.xyz = vec3(u_xlat16_6) * _MaskEdgeColor.xyz;\n    u_xlat4.w = u_xlat0 * u_xlat16_6;\n    u_xlat5.xyz = u_xlat16_2.xyz * vec3(u_xlat16_1) + (-u_xlat16_3.xyz);\n    u_xlat5.xyz = vec3(u_xlat0) * u_xlat5.xyz + u_xlat16_3.xyz;\n    u_xlat4.xyz = vec3(u_xlat0) * u_xlat5.xyz;\n    SV_Target0 = u_xlat4;\n    return;\n}\n\n",0,0,3,0,0,["UNITY_UI_ALPHACLIP","UNITY_UI_CLIP_RECT"],[["IGNOREPROJECTOR","true"],["QUEUE","Transparent"],["RenderType","Transparent"]]]],["OUTLINE_ON","STEREO_CUBEMAP_RENDER_ON","STEREO_INSTANCING_ON","STEREO_MULTIVIEW_ON","UNDERLAY_INNER","UNDERLAY_ON","UNITY_SINGLE_PASS_STEREO","UNITY_UI_ALPHACLIP","UNITY_UI_CLIP_RECT","__"],[[["__","OUTLINE_ON"]],[["__","UNDERLAY_ON","UNDERLAY_INNER"]],[["__","UNITY_UI_CLIP_RECT"]],[["__","UNITY_UI_ALPHACLIP"]]],0,0,5,0,0,0,0,[["IGNOREPROJECTOR","true"],["QUEUE","Transparent"],["RenderType","Transparent"]],null,"",33,-1]],[["IGNOREPROJECTOR","true"],["QUEUE","Transparent"],["RenderType","Transparent"]],0]],0,418,"Assets/TextMesh Pro/Shaders/TMP_SDF-Mobile Masking.shader",["OUTLINE_ON","UNDERLAY_INNER","UNDERLAY_ON","UNITY_UI_ALPHACLIP","UNITY_UI_CLIP_RECT","STEREO_CUBEMAP_RENDER_ON","STEREO_INSTANCING_ON","STEREO_MULTIVIEW_ON","UNITY_SINGLE_PASS_STEREO","__"],null,null,[],5],[[[0,[["TextMeshPro/Mobile/Distance Field (Surface)",[[0,"\n#version 100\n\nuniform \tvec3 _WorldSpaceCameraPos;\nuniform \tvec4 _ScreenParams;\nuniform \tmediump vec4 unity_SHBr;\nuniform \tmediump vec4 unity_SHBg;\nuniform \tmediump vec4 unity_SHBb;\nuniform \tmediump vec4 unity_SHC;\nuniform \tvec4 hlslcc_mtx4x4unity_ObjectToWorld[4];\nuniform \tvec4 hlslcc_mtx4x4unity_WorldToObject[4];\nuniform \tvec4 unity_WorldTransformParams;\nuniform \tvec4 hlslcc_mtx4x4glstate_matrix_projection[4];\nuniform \tvec4 hlslcc_mtx4x4unity_MatrixVP[4];\nuniform \tfloat _FaceDilate;\nuniform \tvec4 hlslcc_mtx4x4_EnvMatrix[4];\nuniform \tfloat _WeightNormal;\nuniform \tfloat _WeightBold;\nuniform \tfloat _ScaleRatioA;\nuniform \tfloat _VertexOffsetX;\nuniform \tfloat _VertexOffsetY;\nuniform \tfloat _GradientScale;\nuniform \tfloat _ScaleX;\nuniform \tfloat _ScaleY;\nuniform \tfloat _PerspectiveFilter;\nuniform \tfloat _Sharpness;\nuniform \tvec4 _MainTex_ST;\nuniform \tvec4 _FaceTex_ST;\nuniform \tvec4 _OutlineTex_ST;\nattribute highp vec4 in_POSITION0;\nattribute highp vec4 in_TANGENT0;\nattribute highp vec3 in_NORMAL0;\nattribute highp vec4 in_TEXCOORD0;\nattribute highp vec4 in_TEXCOORD1;\nattribute mediump vec4 in_COLOR0;\nvarying highp vec4 vs_TEXCOORD0;\nvarying highp vec2 vs_TEXCOORD1;\nvarying highp vec2 vs_TEXCOORD5;\nvarying highp vec4 vs_TEXCOORD2;\nvarying highp vec4 vs_TEXCOORD3;\nvarying highp vec4 vs_TEXCOORD4;\nvarying mediump vec4 vs_COLOR0;\nvarying highp vec3 vs_TEXCOORD6;\nvarying mediump vec3 vs_TEXCOORD7;\nvec4 u_xlat0;\nmediump vec4 u_xlat16_0;\nint u_xlati0;\nvec4 u_xlat1;\nvec4 u_xlat2;\nvec4 u_xlat3;\nvec3 u_xlat4;\nmediump float u_xlat16_5;\nmediump vec3 u_xlat16_6;\nint u_xlati7;\nvec3 u_xlat9;\nfloat u_xlat21;\nbool u_xlatb21;\nfloat u_xlat22;\nvoid main()\n{\n    u_xlat0.xy = in_POSITION0.xy + vec2(_VertexOffsetX, _VertexOffsetY);\n    u_xlat1 = u_xlat0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];\n    u_xlat1 = hlslcc_mtx4x4unity_ObjectToWorld[0] * u_xlat0.xxxx + u_xlat1;\n    u_xlat1 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat1;\n    u_xlat2 = u_xlat1 + hlslcc_mtx4x4unity_ObjectToWorld[3];\n    u_xlat1.xyz = hlslcc_mtx4x4unity_ObjectToWorld[3].xyz * in_POSITION0.www + u_xlat1.xyz;\n    u_xlat3 = u_xlat2.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];\n    u_xlat3 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat2.xxxx + u_xlat3;\n    u_xlat3 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat2.zzzz + u_xlat3;\n    gl_Position = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat2.wwww + u_xlat3;\n    u_xlat21 = in_TEXCOORD1.x * 0.000244140625;\n    u_xlat3.x = floor(u_xlat21);\n    u_xlat3.y = (-u_xlat3.x) * 4096.0 + in_TEXCOORD1.x;\n    u_xlat3.xy = u_xlat3.xy * vec2(0.001953125, 0.001953125);\n    vs_TEXCOORD0.zw = u_xlat3.xy * _FaceTex_ST.xy + _FaceTex_ST.zw;\n    vs_TEXCOORD1.xy = u_xlat3.xy * _OutlineTex_ST.xy + _OutlineTex_ST.zw;\n    vs_TEXCOORD0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;\n    u_xlatb21 = 0.0>=in_TEXCOORD1.y;\n    u_xlat21 = u_xlatb21 ? 1.0 : float(0.0);\n    u_xlat22 = (-_WeightNormal) + _WeightBold;\n    u_xlat21 = u_xlat21 * u_xlat22 + _WeightNormal;\n    u_xlat21 = u_xlat21 * 0.25 + _FaceDilate;\n    u_xlat21 = u_xlat21 * _ScaleRatioA;\n    vs_TEXCOORD5.x = u_xlat21 * 0.5;\n    u_xlat21 = u_xlat2.y * hlslcc_mtx4x4unity_MatrixVP[1].w;\n    u_xlat21 = hlslcc_mtx4x4unity_MatrixVP[0].w * u_xlat2.x + u_xlat21;\n    u_xlat21 = hlslcc_mtx4x4unity_MatrixVP[2].w * u_xlat2.z + u_xlat21;\n    u_xlat21 = hlslcc_mtx4x4unity_MatrixVP[3].w * u_xlat2.w + u_xlat21;\n    u_xlat2.xy = _ScreenParams.yy * hlslcc_mtx4x4glstate_matrix_projection[1].xy;\n    u_xlat2.xy = hlslcc_mtx4x4glstate_matrix_projection[0].xy * _ScreenParams.xx + u_xlat2.xy;\n    u_xlat2.xy = u_xlat2.xy * vec2(_ScaleX, _ScaleY);\n    u_xlat2.xy = vec2(u_xlat21) / u_xlat2.xy;\n    u_xlat21 = dot(u_xlat2.xy, u_xlat2.xy);\n    u_xlat21 = inversesqrt(u_xlat21);\n    u_xlat22 = abs(in_TEXCOORD1.y) * _GradientScale;\n    u_xlat2.x = _Sharpness + 1.0;\n    u_xlat22 = u_xlat22 * u_xlat2.x;\n    u_xlat2.x = u_xlat21 * u_xlat22;\n    u_xlat9.x = (-_PerspectiveFilter) + 1.0;\n    u_xlat2.x = u_xlat9.x * u_xlat2.x;\n    u_xlat21 = u_xlat21 * u_xlat22 + (-u_xlat2.x);\n    u_xlat9.xyz = _WorldSpaceCameraPos.yyy * hlslcc_mtx4x4unity_WorldToObject[1].xyz;\n    u_xlat9.xyz = hlslcc_mtx4x4unity_WorldToObject[0].xyz * _WorldSpaceCameraPos.xxx + u_xlat9.xyz;\n    u_xlat9.xyz = hlslcc_mtx4x4unity_WorldToObject[2].xyz * _WorldSpaceCameraPos.zzz + u_xlat9.xyz;\n    u_xlat9.xyz = u_xlat9.xyz + hlslcc_mtx4x4unity_WorldToObject[3].xyz;\n    u_xlat0.z = in_POSITION0.z;\n    u_xlat0.xyz = (-u_xlat0.xyz) + u_xlat9.xyz;\n    u_xlat0.x = dot(in_NORMAL0.xyz, u_xlat0.xyz);\n    u_xlati7 = int((0.0<u_xlat0.x) ? -1 : 0);\n    u_xlati0 = int((u_xlat0.x<0.0) ? -1 : 0);\n    u_xlati0 = (-u_xlati7) + u_xlati0;\n    u_xlat0.x = float(u_xlati0);\n    u_xlat0.xyz = u_xlat0.xxx * in_NORMAL0.xyz;\n    u_xlat3.x = dot(u_xlat0.xyz, hlslcc_mtx4x4unity_WorldToObject[0].xyz);\n    u_xlat3.y = dot(u_xlat0.xyz, hlslcc_mtx4x4unity_WorldToObject[1].xyz);\n    u_xlat3.z = dot(u_xlat0.xyz, hlslcc_mtx4x4unity_WorldToObject[2].xyz);\n    u_xlat0.x = dot(u_xlat3.xyz, u_xlat3.xyz);\n    u_xlat0.x = inversesqrt(u_xlat0.x);\n    u_xlat3 = u_xlat0.xxxx * u_xlat3.xyzz;\n    u_xlat0.xyz = (-u_xlat1.xyz) + _WorldSpaceCameraPos.xyz;\n    u_xlat22 = dot(u_xlat0.xyz, u_xlat0.xyz);\n    u_xlat22 = inversesqrt(u_xlat22);\n    u_xlat9.xyz = u_xlat0.xyz * vec3(u_xlat22);\n    u_xlat22 = dot(u_xlat3.xyw, u_xlat9.xyz);\n    vs_TEXCOORD5.y = abs(u_xlat22) * u_xlat21 + u_xlat2.x;\n    vs_TEXCOORD2.w = u_xlat1.x;\n    u_xlat2.xyz = in_TANGENT0.yyy * hlslcc_mtx4x4unity_ObjectToWorld[1].yzx;\n    u_xlat2.xyz = hlslcc_mtx4x4unity_ObjectToWorld[0].yzx * in_TANGENT0.xxx + u_xlat2.xyz;\n    u_xlat2.xyz = hlslcc_mtx4x4unity_ObjectToWorld[2].yzx * in_TANGENT0.zzz + u_xlat2.xyz;\n    u_xlat21 = dot(u_xlat2.xyz, u_xlat2.xyz);\n    u_xlat21 = inversesqrt(u_xlat21);\n    u_xlat2.xyz = vec3(u_xlat21) * u_xlat2.xyz;\n    u_xlat4.xyz = u_xlat2.xyz * u_xlat3.wxy;\n    u_xlat4.xyz = u_xlat3.ywx * u_xlat2.yzx + (-u_xlat4.xyz);\n    u_xlat21 = in_TANGENT0.w * unity_WorldTransformParams.w;\n    u_xlat4.xyz = vec3(u_xlat21) * u_xlat4.xyz;\n    vs_TEXCOORD2.y = u_xlat4.x;\n    vs_TEXCOORD2.z = u_xlat3.x;\n    vs_TEXCOORD2.x = u_xlat2.z;\n    vs_TEXCOORD3.x = u_xlat2.x;\n    vs_TEXCOORD4.x = u_xlat2.y;\n    vs_TEXCOORD3.w = u_xlat1.y;\n    vs_TEXCOORD4.w = u_xlat1.z;\n    vs_TEXCOORD3.z = u_xlat3.y;\n    vs_TEXCOORD3.y = u_xlat4.y;\n    vs_TEXCOORD4.y = u_xlat4.z;\n    vs_TEXCOORD4.z = u_xlat3.w;\n    vs_COLOR0 = in_COLOR0;\n    u_xlat1.xyz = u_xlat0.yyy * hlslcc_mtx4x4_EnvMatrix[1].xyz;\n    u_xlat0.xyw = hlslcc_mtx4x4_EnvMatrix[0].xyz * u_xlat0.xxx + u_xlat1.xyz;\n    vs_TEXCOORD6.xyz = hlslcc_mtx4x4_EnvMatrix[2].xyz * u_xlat0.zzz + u_xlat0.xyw;\n    u_xlat16_5 = u_xlat3.y * u_xlat3.y;\n    u_xlat16_5 = u_xlat3.x * u_xlat3.x + (-u_xlat16_5);\n    u_xlat16_0 = u_xlat3.ywzx * u_xlat3;\n    u_xlat16_6.x = dot(unity_SHBr, u_xlat16_0);\n    u_xlat16_6.y = dot(unity_SHBg, u_xlat16_0);\n    u_xlat16_6.z = dot(unity_SHBb, u_xlat16_0);\n    vs_TEXCOORD7.xyz = unity_SHC.xyz * vec3(u_xlat16_5) + u_xlat16_6.xyz;\n    return;\n}\n\n","\n#version 100\n\n#ifdef GL_FRAGMENT_PRECISION_HIGH\n    precision highp float;\n#else\n    precision mediump float;\n#endif\nprecision highp int;\nuniform \tvec4 _Time;\nuniform \tmediump vec4 _WorldSpaceLightPos0;\nuniform \tmediump vec4 unity_SHAr;\nuniform \tmediump vec4 unity_SHAg;\nuniform \tmediump vec4 unity_SHAb;\nuniform \tmediump vec4 _LightColor0;\nuniform \tfloat _FaceUVSpeedX;\nuniform \tfloat _FaceUVSpeedY;\nuniform \tmediump vec4 _FaceColor;\nuniform \tfloat _OutlineSoftness;\nuniform \tfloat _OutlineUVSpeedX;\nuniform \tfloat _OutlineUVSpeedY;\nuniform \tmediump vec4 _OutlineColor;\nuniform \tfloat _OutlineWidth;\nuniform \tfloat _ScaleRatioA;\nuniform lowp sampler2D _MainTex;\nuniform lowp sampler2D _FaceTex;\nuniform lowp sampler2D _OutlineTex;\nvarying highp vec4 vs_TEXCOORD0;\nvarying highp vec2 vs_TEXCOORD1;\nvarying highp vec2 vs_TEXCOORD5;\nvarying highp vec4 vs_TEXCOORD2;\nvarying highp vec4 vs_TEXCOORD3;\nvarying highp vec4 vs_TEXCOORD4;\nvarying mediump vec4 vs_COLOR0;\nvarying mediump vec3 vs_TEXCOORD7;\n#define SV_Target0 gl_FragData[0]\nvec4 u_xlat0;\nmediump vec4 u_xlat16_0;\nlowp vec4 u_xlat10_0;\nmediump vec4 u_xlat16_1;\nfloat u_xlat2;\nmediump vec4 u_xlat16_2;\nvec3 u_xlat3;\nlowp vec4 u_xlat10_3;\nvec4 u_xlat4;\nvec4 u_xlat5;\nmediump vec4 u_xlat16_6;\nfloat u_xlat7;\nmediump vec3 u_xlat16_8;\nfloat u_xlat9;\nfloat u_xlat10;\nmediump float u_xlat16_15;\nvec2 u_xlat16;\nfloat u_xlat24;\nvoid main()\n{\n    u_xlat10_0.x = texture2D(_MainTex, vs_TEXCOORD0.xy).w;\n    u_xlat0.x = (-u_xlat10_0.x) + 0.5;\n    u_xlat0.x = u_xlat0.x + (-vs_TEXCOORD5.x);\n    u_xlat0.x = u_xlat0.x * vs_TEXCOORD5.y + 0.5;\n    u_xlat7 = _OutlineWidth * _ScaleRatioA;\n    u_xlat7 = u_xlat7 * vs_TEXCOORD5.y;\n    u_xlat16_1.x = u_xlat7 * 0.5 + u_xlat0.x;\n    u_xlat16_1.x = clamp(u_xlat16_1.x, 0.0, 1.0);\n    u_xlat16_8.x = (-u_xlat7) * 0.5 + u_xlat0.x;\n    u_xlat16_15 = min(u_xlat7, 1.0);\n    u_xlat16_15 = sqrt(u_xlat16_15);\n    u_xlat16_1.x = u_xlat16_15 * u_xlat16_1.x;\n    u_xlat0.xy = vec2(_OutlineUVSpeedX, _OutlineUVSpeedY) * _Time.yy + vs_TEXCOORD1.xy;\n    u_xlat10_0 = texture2D(_OutlineTex, u_xlat0.xy);\n    u_xlat0.xyz = u_xlat10_0.xyz * _OutlineColor.xyz;\n    u_xlat2 = vs_COLOR0.w * _OutlineColor.w;\n    u_xlat9 = u_xlat10_0.w * u_xlat2;\n    u_xlat16.xy = vec2(_FaceUVSpeedX, _FaceUVSpeedY) * _Time.yy + vs_TEXCOORD0.zw;\n    u_xlat10_3 = texture2D(_FaceTex, u_xlat16.xy);\n    u_xlat4 = vs_COLOR0 * _FaceColor;\n    u_xlat5 = u_xlat10_3 * u_xlat4;\n    u_xlat16_6.xyz = u_xlat5.www * u_xlat5.xyz;\n    u_xlat16_6.xyz = u_xlat0.xyz * vec3(u_xlat9) + (-u_xlat16_6.xyz);\n    u_xlat16_6.w = u_xlat2 * u_xlat10_0.w + (-u_xlat5.w);\n    u_xlat16_0 = u_xlat16_1.xxxx * u_xlat16_6;\n    u_xlat16_2.w = u_xlat4.w * u_xlat10_3.w + u_xlat16_0.w;\n    u_xlat16_2.xyz = u_xlat5.xyz * u_xlat5.www + u_xlat16_0.xyz;\n    u_xlat3.x = _OutlineSoftness * _ScaleRatioA;\n    u_xlat10 = u_xlat3.x * vs_TEXCOORD5.y;\n    u_xlat16_1.x = u_xlat3.x * vs_TEXCOORD5.y + 1.0;\n    u_xlat16_8.x = u_xlat10 * 0.5 + u_xlat16_8.x;\n    u_xlat16_1.x = u_xlat16_8.x / u_xlat16_1.x;\n    u_xlat16_1.x = clamp(u_xlat16_1.x, 0.0, 1.0);\n    u_xlat16_1.x = (-u_xlat16_1.x) + 1.0;\n    u_xlat16_0 = u_xlat16_1.xxxx * u_xlat16_2;\n    u_xlat3.x = max(u_xlat16_0.w, 9.99999975e-05);\n    u_xlat3.xyz = u_xlat16_0.xyz / u_xlat3.xxx;\n    SV_Target0.w = u_xlat16_0.w;\n    u_xlat4.x = vs_TEXCOORD2.z;\n    u_xlat4.y = vs_TEXCOORD3.z;\n    u_xlat4.z = vs_TEXCOORD4.z;\n    u_xlat24 = dot(u_xlat4.xyz, u_xlat4.xyz);\n    u_xlat24 = inversesqrt(u_xlat24);\n    u_xlat0.xyz = vec3(u_xlat24) * u_xlat4.xyz;\n    u_xlat16_1.x = dot(u_xlat0.xyz, _WorldSpaceLightPos0.xyz);\n    u_xlat0.w = 1.0;\n    u_xlat16_6.x = dot(unity_SHAr, u_xlat0);\n    u_xlat16_6.y = dot(unity_SHAg, u_xlat0);\n    u_xlat16_6.z = dot(unity_SHAb, u_xlat0);\n    u_xlat16_1.yzw = u_xlat16_6.xyz + vs_TEXCOORD7.xyz;\n    u_xlat16_1 = max(u_xlat16_1, vec4(0.0, 0.0, 0.0, 0.0));\n    u_xlat4.xyz = log2(u_xlat16_1.yzw);\n    u_xlat4.xyz = u_xlat4.xyz * vec3(0.416666657, 0.416666657, 0.416666657);\n    u_xlat4.xyz = exp2(u_xlat4.xyz);\n    u_xlat4.xyz = u_xlat4.xyz * vec3(1.05499995, 1.05499995, 1.05499995) + vec3(-0.0549999997, -0.0549999997, -0.0549999997);\n    u_xlat4.xyz = max(u_xlat4.xyz, vec3(0.0, 0.0, 0.0));\n    u_xlat16_8.xyz = u_xlat3.xyz * u_xlat4.xyz;\n    u_xlat16_6.xyz = u_xlat3.xyz * _LightColor0.xyz;\n    SV_Target0.xyz = u_xlat16_6.xyz * u_xlat16_1.xxx + u_xlat16_8.xyz;\n    return;\n}\n\n",0,0,0,0,0,["DIRECTIONAL"],[["IGNOREPROJECTOR","true"],["LIGHTMODE","FORWARDBASE"],["QUEUE","Transparent"],["RenderType","Transparent"]]],[0,"\n#version 100\n\nuniform \tvec3 _WorldSpaceCameraPos;\nuniform \tvec4 _ScreenParams;\nuniform \tmediump vec4 unity_SHBr;\nuniform \tmediump vec4 unity_SHBg;\nuniform \tmediump vec4 unity_SHBb;\nuniform \tmediump vec4 unity_SHC;\nuniform \tvec4 hlslcc_mtx4x4unity_ObjectToWorld[4];\nuniform \tvec4 hlslcc_mtx4x4unity_WorldToObject[4];\nuniform \tvec4 unity_WorldTransformParams;\nuniform \tvec4 hlslcc_mtx4x4glstate_matrix_projection[4];\nuniform \tvec4 hlslcc_mtx4x4unity_MatrixVP[4];\nuniform \tfloat _FaceDilate;\nuniform \tvec4 hlslcc_mtx4x4_EnvMatrix[4];\nuniform \tfloat _WeightNormal;\nuniform \tfloat _WeightBold;\nuniform \tfloat _ScaleRatioA;\nuniform \tfloat _VertexOffsetX;\nuniform \tfloat _VertexOffsetY;\nuniform \tfloat _GradientScale;\nuniform \tfloat _ScaleX;\nuniform \tfloat _ScaleY;\nuniform \tfloat _PerspectiveFilter;\nuniform \tfloat _Sharpness;\nuniform \tvec4 _MainTex_ST;\nuniform \tvec4 _FaceTex_ST;\nuniform \tvec4 _OutlineTex_ST;\nattribute highp vec4 in_POSITION0;\nattribute highp vec4 in_TANGENT0;\nattribute highp vec3 in_NORMAL0;\nattribute highp vec4 in_TEXCOORD0;\nattribute highp vec4 in_TEXCOORD1;\nattribute mediump vec4 in_COLOR0;\nvarying highp vec4 vs_TEXCOORD0;\nvarying highp vec2 vs_TEXCOORD1;\nvarying highp vec2 vs_TEXCOORD5;\nvarying highp vec4 vs_TEXCOORD2;\nvarying highp vec4 vs_TEXCOORD3;\nvarying highp vec4 vs_TEXCOORD4;\nvarying mediump vec4 vs_COLOR0;\nvarying highp vec3 vs_TEXCOORD6;\nvarying mediump vec3 vs_TEXCOORD7;\nvec4 u_xlat0;\nmediump vec4 u_xlat16_0;\nint u_xlati0;\nvec4 u_xlat1;\nvec4 u_xlat2;\nvec4 u_xlat3;\nvec3 u_xlat4;\nmediump float u_xlat16_5;\nmediump vec3 u_xlat16_6;\nint u_xlati7;\nvec3 u_xlat9;\nfloat u_xlat21;\nbool u_xlatb21;\nfloat u_xlat22;\nvoid main()\n{\n    u_xlat0.xy = in_POSITION0.xy + vec2(_VertexOffsetX, _VertexOffsetY);\n    u_xlat1 = u_xlat0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];\n    u_xlat1 = hlslcc_mtx4x4unity_ObjectToWorld[0] * u_xlat0.xxxx + u_xlat1;\n    u_xlat1 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat1;\n    u_xlat2 = u_xlat1 + hlslcc_mtx4x4unity_ObjectToWorld[3];\n    u_xlat1.xyz = hlslcc_mtx4x4unity_ObjectToWorld[3].xyz * in_POSITION0.www + u_xlat1.xyz;\n    u_xlat3 = u_xlat2.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];\n    u_xlat3 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat2.xxxx + u_xlat3;\n    u_xlat3 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat2.zzzz + u_xlat3;\n    gl_Position = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat2.wwww + u_xlat3;\n    u_xlat21 = in_TEXCOORD1.x * 0.000244140625;\n    u_xlat3.x = floor(u_xlat21);\n    u_xlat3.y = (-u_xlat3.x) * 4096.0 + in_TEXCOORD1.x;\n    u_xlat3.xy = u_xlat3.xy * vec2(0.001953125, 0.001953125);\n    vs_TEXCOORD0.zw = u_xlat3.xy * _FaceTex_ST.xy + _FaceTex_ST.zw;\n    vs_TEXCOORD1.xy = u_xlat3.xy * _OutlineTex_ST.xy + _OutlineTex_ST.zw;\n    vs_TEXCOORD0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;\n    u_xlatb21 = 0.0>=in_TEXCOORD1.y;\n    u_xlat21 = u_xlatb21 ? 1.0 : float(0.0);\n    u_xlat22 = (-_WeightNormal) + _WeightBold;\n    u_xlat21 = u_xlat21 * u_xlat22 + _WeightNormal;\n    u_xlat21 = u_xlat21 * 0.25 + _FaceDilate;\n    u_xlat21 = u_xlat21 * _ScaleRatioA;\n    vs_TEXCOORD5.x = u_xlat21 * 0.5;\n    u_xlat21 = u_xlat2.y * hlslcc_mtx4x4unity_MatrixVP[1].w;\n    u_xlat21 = hlslcc_mtx4x4unity_MatrixVP[0].w * u_xlat2.x + u_xlat21;\n    u_xlat21 = hlslcc_mtx4x4unity_MatrixVP[2].w * u_xlat2.z + u_xlat21;\n    u_xlat21 = hlslcc_mtx4x4unity_MatrixVP[3].w * u_xlat2.w + u_xlat21;\n    u_xlat2.xy = _ScreenParams.yy * hlslcc_mtx4x4glstate_matrix_projection[1].xy;\n    u_xlat2.xy = hlslcc_mtx4x4glstate_matrix_projection[0].xy * _ScreenParams.xx + u_xlat2.xy;\n    u_xlat2.xy = u_xlat2.xy * vec2(_ScaleX, _ScaleY);\n    u_xlat2.xy = vec2(u_xlat21) / u_xlat2.xy;\n    u_xlat21 = dot(u_xlat2.xy, u_xlat2.xy);\n    u_xlat21 = inversesqrt(u_xlat21);\n    u_xlat22 = abs(in_TEXCOORD1.y) * _GradientScale;\n    u_xlat2.x = _Sharpness + 1.0;\n    u_xlat22 = u_xlat22 * u_xlat2.x;\n    u_xlat2.x = u_xlat21 * u_xlat22;\n    u_xlat9.x = (-_PerspectiveFilter) + 1.0;\n    u_xlat2.x = u_xlat9.x * u_xlat2.x;\n    u_xlat21 = u_xlat21 * u_xlat22 + (-u_xlat2.x);\n    u_xlat9.xyz = _WorldSpaceCameraPos.yyy * hlslcc_mtx4x4unity_WorldToObject[1].xyz;\n    u_xlat9.xyz = hlslcc_mtx4x4unity_WorldToObject[0].xyz * _WorldSpaceCameraPos.xxx + u_xlat9.xyz;\n    u_xlat9.xyz = hlslcc_mtx4x4unity_WorldToObject[2].xyz * _WorldSpaceCameraPos.zzz + u_xlat9.xyz;\n    u_xlat9.xyz = u_xlat9.xyz + hlslcc_mtx4x4unity_WorldToObject[3].xyz;\n    u_xlat0.z = in_POSITION0.z;\n    u_xlat0.xyz = (-u_xlat0.xyz) + u_xlat9.xyz;\n    u_xlat0.x = dot(in_NORMAL0.xyz, u_xlat0.xyz);\n    u_xlati7 = int((0.0<u_xlat0.x) ? -1 : 0);\n    u_xlati0 = int((u_xlat0.x<0.0) ? -1 : 0);\n    u_xlati0 = (-u_xlati7) + u_xlati0;\n    u_xlat0.x = float(u_xlati0);\n    u_xlat0.xyz = u_xlat0.xxx * in_NORMAL0.xyz;\n    u_xlat3.x = dot(u_xlat0.xyz, hlslcc_mtx4x4unity_WorldToObject[0].xyz);\n    u_xlat3.y = dot(u_xlat0.xyz, hlslcc_mtx4x4unity_WorldToObject[1].xyz);\n    u_xlat3.z = dot(u_xlat0.xyz, hlslcc_mtx4x4unity_WorldToObject[2].xyz);\n    u_xlat0.x = dot(u_xlat3.xyz, u_xlat3.xyz);\n    u_xlat0.x = inversesqrt(u_xlat0.x);\n    u_xlat3 = u_xlat0.xxxx * u_xlat3.xyzz;\n    u_xlat0.xyz = (-u_xlat1.xyz) + _WorldSpaceCameraPos.xyz;\n    u_xlat22 = dot(u_xlat0.xyz, u_xlat0.xyz);\n    u_xlat22 = inversesqrt(u_xlat22);\n    u_xlat9.xyz = u_xlat0.xyz * vec3(u_xlat22);\n    u_xlat22 = dot(u_xlat3.xyw, u_xlat9.xyz);\n    vs_TEXCOORD5.y = abs(u_xlat22) * u_xlat21 + u_xlat2.x;\n    vs_TEXCOORD2.w = u_xlat1.x;\n    u_xlat2.xyz = in_TANGENT0.yyy * hlslcc_mtx4x4unity_ObjectToWorld[1].yzx;\n    u_xlat2.xyz = hlslcc_mtx4x4unity_ObjectToWorld[0].yzx * in_TANGENT0.xxx + u_xlat2.xyz;\n    u_xlat2.xyz = hlslcc_mtx4x4unity_ObjectToWorld[2].yzx * in_TANGENT0.zzz + u_xlat2.xyz;\n    u_xlat21 = dot(u_xlat2.xyz, u_xlat2.xyz);\n    u_xlat21 = inversesqrt(u_xlat21);\n    u_xlat2.xyz = vec3(u_xlat21) * u_xlat2.xyz;\n    u_xlat4.xyz = u_xlat2.xyz * u_xlat3.wxy;\n    u_xlat4.xyz = u_xlat3.ywx * u_xlat2.yzx + (-u_xlat4.xyz);\n    u_xlat21 = in_TANGENT0.w * unity_WorldTransformParams.w;\n    u_xlat4.xyz = vec3(u_xlat21) * u_xlat4.xyz;\n    vs_TEXCOORD2.y = u_xlat4.x;\n    vs_TEXCOORD2.z = u_xlat3.x;\n    vs_TEXCOORD2.x = u_xlat2.z;\n    vs_TEXCOORD3.x = u_xlat2.x;\n    vs_TEXCOORD4.x = u_xlat2.y;\n    vs_TEXCOORD3.w = u_xlat1.y;\n    vs_TEXCOORD4.w = u_xlat1.z;\n    vs_TEXCOORD3.z = u_xlat3.y;\n    vs_TEXCOORD3.y = u_xlat4.y;\n    vs_TEXCOORD4.y = u_xlat4.z;\n    vs_TEXCOORD4.z = u_xlat3.w;\n    vs_COLOR0 = in_COLOR0;\n    u_xlat1.xyz = u_xlat0.yyy * hlslcc_mtx4x4_EnvMatrix[1].xyz;\n    u_xlat0.xyw = hlslcc_mtx4x4_EnvMatrix[0].xyz * u_xlat0.xxx + u_xlat1.xyz;\n    vs_TEXCOORD6.xyz = hlslcc_mtx4x4_EnvMatrix[2].xyz * u_xlat0.zzz + u_xlat0.xyw;\n    u_xlat16_5 = u_xlat3.y * u_xlat3.y;\n    u_xlat16_5 = u_xlat3.x * u_xlat3.x + (-u_xlat16_5);\n    u_xlat16_0 = u_xlat3.ywzx * u_xlat3;\n    u_xlat16_6.x = dot(unity_SHBr, u_xlat16_0);\n    u_xlat16_6.y = dot(unity_SHBg, u_xlat16_0);\n    u_xlat16_6.z = dot(unity_SHBb, u_xlat16_0);\n    vs_TEXCOORD7.xyz = unity_SHC.xyz * vec3(u_xlat16_5) + u_xlat16_6.xyz;\n    return;\n}\n\n","\n#version 100\n\n#ifdef GL_FRAGMENT_PRECISION_HIGH\n    precision highp float;\n#else\n    precision mediump float;\n#endif\nprecision highp int;\nuniform \tvec4 _Time;\nuniform \tmediump vec4 _WorldSpaceLightPos0;\nuniform \tmediump vec4 unity_SHAr;\nuniform \tmediump vec4 unity_SHAg;\nuniform \tmediump vec4 unity_SHAb;\nuniform \tmediump vec4 _LightColor0;\nuniform \tfloat _FaceUVSpeedX;\nuniform \tfloat _FaceUVSpeedY;\nuniform \tmediump vec4 _FaceColor;\nuniform \tfloat _OutlineSoftness;\nuniform \tfloat _OutlineUVSpeedX;\nuniform \tfloat _OutlineUVSpeedY;\nuniform \tmediump vec4 _OutlineColor;\nuniform \tfloat _OutlineWidth;\nuniform \tfloat _ScaleRatioA;\nuniform lowp sampler2D _MainTex;\nuniform lowp sampler2D _FaceTex;\nuniform lowp sampler2D _OutlineTex;\nvarying highp vec4 vs_TEXCOORD0;\nvarying highp vec2 vs_TEXCOORD1;\nvarying highp vec2 vs_TEXCOORD5;\nvarying highp vec4 vs_TEXCOORD2;\nvarying highp vec4 vs_TEXCOORD3;\nvarying highp vec4 vs_TEXCOORD4;\nvarying mediump vec4 vs_COLOR0;\nvarying mediump vec3 vs_TEXCOORD7;\n#define SV_Target0 gl_FragData[0]\nvec4 u_xlat0;\nmediump vec4 u_xlat16_0;\nlowp vec4 u_xlat10_0;\nmediump vec4 u_xlat16_1;\nfloat u_xlat2;\nmediump vec4 u_xlat16_2;\nvec3 u_xlat3;\nlowp vec4 u_xlat10_3;\nvec4 u_xlat4;\nvec4 u_xlat5;\nmediump vec4 u_xlat16_6;\nfloat u_xlat7;\nmediump vec3 u_xlat16_8;\nfloat u_xlat9;\nfloat u_xlat10;\nmediump float u_xlat16_15;\nvec2 u_xlat16;\nfloat u_xlat24;\nvoid main()\n{\n    u_xlat10_0.x = texture2D(_MainTex, vs_TEXCOORD0.xy).w;\n    u_xlat0.x = (-u_xlat10_0.x) + 0.5;\n    u_xlat0.x = u_xlat0.x + (-vs_TEXCOORD5.x);\n    u_xlat0.x = u_xlat0.x * vs_TEXCOORD5.y + 0.5;\n    u_xlat7 = _OutlineWidth * _ScaleRatioA;\n    u_xlat7 = u_xlat7 * vs_TEXCOORD5.y;\n    u_xlat16_1.x = u_xlat7 * 0.5 + u_xlat0.x;\n    u_xlat16_1.x = clamp(u_xlat16_1.x, 0.0, 1.0);\n    u_xlat16_8.x = (-u_xlat7) * 0.5 + u_xlat0.x;\n    u_xlat16_15 = min(u_xlat7, 1.0);\n    u_xlat16_15 = sqrt(u_xlat16_15);\n    u_xlat16_1.x = u_xlat16_15 * u_xlat16_1.x;\n    u_xlat0.xy = vec2(_OutlineUVSpeedX, _OutlineUVSpeedY) * _Time.yy + vs_TEXCOORD1.xy;\n    u_xlat10_0 = texture2D(_OutlineTex, u_xlat0.xy);\n    u_xlat0.xyz = u_xlat10_0.xyz * _OutlineColor.xyz;\n    u_xlat2 = vs_COLOR0.w * _OutlineColor.w;\n    u_xlat9 = u_xlat10_0.w * u_xlat2;\n    u_xlat16.xy = vec2(_FaceUVSpeedX, _FaceUVSpeedY) * _Time.yy + vs_TEXCOORD0.zw;\n    u_xlat10_3 = texture2D(_FaceTex, u_xlat16.xy);\n    u_xlat4 = vs_COLOR0 * _FaceColor;\n    u_xlat5 = u_xlat10_3 * u_xlat4;\n    u_xlat16_6.xyz = u_xlat5.www * u_xlat5.xyz;\n    u_xlat16_6.xyz = u_xlat0.xyz * vec3(u_xlat9) + (-u_xlat16_6.xyz);\n    u_xlat16_6.w = u_xlat2 * u_xlat10_0.w + (-u_xlat5.w);\n    u_xlat16_0 = u_xlat16_1.xxxx * u_xlat16_6;\n    u_xlat16_2.w = u_xlat4.w * u_xlat10_3.w + u_xlat16_0.w;\n    u_xlat16_2.xyz = u_xlat5.xyz * u_xlat5.www + u_xlat16_0.xyz;\n    u_xlat3.x = _OutlineSoftness * _ScaleRatioA;\n    u_xlat10 = u_xlat3.x * vs_TEXCOORD5.y;\n    u_xlat16_1.x = u_xlat3.x * vs_TEXCOORD5.y + 1.0;\n    u_xlat16_8.x = u_xlat10 * 0.5 + u_xlat16_8.x;\n    u_xlat16_1.x = u_xlat16_8.x / u_xlat16_1.x;\n    u_xlat16_1.x = clamp(u_xlat16_1.x, 0.0, 1.0);\n    u_xlat16_1.x = (-u_xlat16_1.x) + 1.0;\n    u_xlat16_0 = u_xlat16_1.xxxx * u_xlat16_2;\n    u_xlat3.x = max(u_xlat16_0.w, 9.99999975e-05);\n    u_xlat3.xyz = u_xlat16_0.xyz / u_xlat3.xxx;\n    SV_Target0.w = u_xlat16_0.w;\n    u_xlat4.x = vs_TEXCOORD2.z;\n    u_xlat4.y = vs_TEXCOORD3.z;\n    u_xlat4.z = vs_TEXCOORD4.z;\n    u_xlat24 = dot(u_xlat4.xyz, u_xlat4.xyz);\n    u_xlat24 = inversesqrt(u_xlat24);\n    u_xlat0.xyz = vec3(u_xlat24) * u_xlat4.xyz;\n    u_xlat16_1.x = dot(u_xlat0.xyz, _WorldSpaceLightPos0.xyz);\n    u_xlat0.w = 1.0;\n    u_xlat16_6.x = dot(unity_SHAr, u_xlat0);\n    u_xlat16_6.y = dot(unity_SHAg, u_xlat0);\n    u_xlat16_6.z = dot(unity_SHAb, u_xlat0);\n    u_xlat16_1.yzw = u_xlat16_6.xyz + vs_TEXCOORD7.xyz;\n    u_xlat16_1 = max(u_xlat16_1, vec4(0.0, 0.0, 0.0, 0.0));\n    u_xlat4.xyz = log2(u_xlat16_1.yzw);\n    u_xlat4.xyz = u_xlat4.xyz * vec3(0.416666657, 0.416666657, 0.416666657);\n    u_xlat4.xyz = exp2(u_xlat4.xyz);\n    u_xlat4.xyz = u_xlat4.xyz * vec3(1.05499995, 1.05499995, 1.05499995) + vec3(-0.0549999997, -0.0549999997, -0.0549999997);\n    u_xlat4.xyz = max(u_xlat4.xyz, vec3(0.0, 0.0, 0.0));\n    u_xlat16_8.xyz = u_xlat3.xyz * u_xlat4.xyz;\n    u_xlat16_6.xyz = u_xlat3.xyz * _LightColor0.xyz;\n    SV_Target0.xyz = u_xlat16_6.xyz * u_xlat16_1.xxx + u_xlat16_8.xyz;\n    return;\n}\n\n",0,0,1,0,0,["DIRECTIONAL","LIGHTPROBE_SH"],[["IGNOREPROJECTOR","true"],["LIGHTMODE","FORWARDBASE"],["QUEUE","Transparent"],["RenderType","Transparent"]]],[0,"\n#version 100\n\nuniform \tvec3 _WorldSpaceCameraPos;\nuniform \tvec4 _ScreenParams;\nuniform \tvec4 unity_4LightPosX0;\nuniform \tvec4 unity_4LightPosY0;\nuniform \tvec4 unity_4LightPosZ0;\nuniform \tmediump vec4 unity_4LightAtten0;\nuniform \tmediump vec4 unity_LightColor[8];\nuniform \tmediump vec4 unity_SHBr;\nuniform \tmediump vec4 unity_SHBg;\nuniform \tmediump vec4 unity_SHBb;\nuniform \tmediump vec4 unity_SHC;\nuniform \tvec4 hlslcc_mtx4x4unity_ObjectToWorld[4];\nuniform \tvec4 hlslcc_mtx4x4unity_WorldToObject[4];\nuniform \tvec4 unity_WorldTransformParams;\nuniform \tvec4 hlslcc_mtx4x4glstate_matrix_projection[4];\nuniform \tvec4 hlslcc_mtx4x4unity_MatrixVP[4];\nuniform \tfloat _FaceDilate;\nuniform \tvec4 hlslcc_mtx4x4_EnvMatrix[4];\nuniform \tfloat _WeightNormal;\nuniform \tfloat _WeightBold;\nuniform \tfloat _ScaleRatioA;\nuniform \tfloat _VertexOffsetX;\nuniform \tfloat _VertexOffsetY;\nuniform \tfloat _GradientScale;\nuniform \tfloat _ScaleX;\nuniform \tfloat _ScaleY;\nuniform \tfloat _PerspectiveFilter;\nuniform \tfloat _Sharpness;\nuniform \tvec4 _MainTex_ST;\nuniform \tvec4 _FaceTex_ST;\nuniform \tvec4 _OutlineTex_ST;\nattribute highp vec4 in_POSITION0;\nattribute highp vec4 in_TANGENT0;\nattribute highp vec3 in_NORMAL0;\nattribute highp vec4 in_TEXCOORD0;\nattribute highp vec4 in_TEXCOORD1;\nattribute mediump vec4 in_COLOR0;\nvarying highp vec4 vs_TEXCOORD0;\nvarying highp vec2 vs_TEXCOORD1;\nvarying highp vec2 vs_TEXCOORD5;\nvarying highp vec4 vs_TEXCOORD2;\nvarying highp vec4 vs_TEXCOORD3;\nvarying highp vec4 vs_TEXCOORD4;\nvarying mediump vec4 vs_COLOR0;\nvarying highp vec3 vs_TEXCOORD6;\nvarying mediump vec3 vs_TEXCOORD7;\nvec4 u_xlat0;\nint u_xlati0;\nvec4 u_xlat1;\nvec4 u_xlat2;\nmediump vec4 u_xlat16_2;\nvec4 u_xlat3;\nvec4 u_xlat4;\nmediump vec3 u_xlat16_5;\nmediump vec3 u_xlat16_6;\nint u_xlati7;\nvec3 u_xlat9;\nfloat u_xlat21;\nbool u_xlatb21;\nfloat u_xlat22;\nvoid main()\n{\n    u_xlat0.xy = in_POSITION0.xy + vec2(_VertexOffsetX, _VertexOffsetY);\n    u_xlat1 = u_xlat0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];\n    u_xlat1 = hlslcc_mtx4x4unity_ObjectToWorld[0] * u_xlat0.xxxx + u_xlat1;\n    u_xlat1 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat1;\n    u_xlat2 = u_xlat1 + hlslcc_mtx4x4unity_ObjectToWorld[3];\n    u_xlat1.xyz = hlslcc_mtx4x4unity_ObjectToWorld[3].xyz * in_POSITION0.www + u_xlat1.xyz;\n    u_xlat3 = u_xlat2.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];\n    u_xlat3 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat2.xxxx + u_xlat3;\n    u_xlat3 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat2.zzzz + u_xlat3;\n    gl_Position = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat2.wwww + u_xlat3;\n    u_xlat21 = in_TEXCOORD1.x * 0.000244140625;\n    u_xlat3.x = floor(u_xlat21);\n    u_xlat3.y = (-u_xlat3.x) * 4096.0 + in_TEXCOORD1.x;\n    u_xlat3.xy = u_xlat3.xy * vec2(0.001953125, 0.001953125);\n    vs_TEXCOORD0.zw = u_xlat3.xy * _FaceTex_ST.xy + _FaceTex_ST.zw;\n    vs_TEXCOORD1.xy = u_xlat3.xy * _OutlineTex_ST.xy + _OutlineTex_ST.zw;\n    vs_TEXCOORD0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;\n    u_xlatb21 = 0.0>=in_TEXCOORD1.y;\n    u_xlat21 = u_xlatb21 ? 1.0 : float(0.0);\n    u_xlat22 = (-_WeightNormal) + _WeightBold;\n    u_xlat21 = u_xlat21 * u_xlat22 + _WeightNormal;\n    u_xlat21 = u_xlat21 * 0.25 + _FaceDilate;\n    u_xlat21 = u_xlat21 * _ScaleRatioA;\n    vs_TEXCOORD5.x = u_xlat21 * 0.5;\n    u_xlat21 = u_xlat2.y * hlslcc_mtx4x4unity_MatrixVP[1].w;\n    u_xlat21 = hlslcc_mtx4x4unity_MatrixVP[0].w * u_xlat2.x + u_xlat21;\n    u_xlat21 = hlslcc_mtx4x4unity_MatrixVP[2].w * u_xlat2.z + u_xlat21;\n    u_xlat21 = hlslcc_mtx4x4unity_MatrixVP[3].w * u_xlat2.w + u_xlat21;\n    u_xlat2.xy = _ScreenParams.yy * hlslcc_mtx4x4glstate_matrix_projection[1].xy;\n    u_xlat2.xy = hlslcc_mtx4x4glstate_matrix_projection[0].xy * _ScreenParams.xx + u_xlat2.xy;\n    u_xlat2.xy = u_xlat2.xy * vec2(_ScaleX, _ScaleY);\n    u_xlat2.xy = vec2(u_xlat21) / u_xlat2.xy;\n    u_xlat21 = dot(u_xlat2.xy, u_xlat2.xy);\n    u_xlat21 = inversesqrt(u_xlat21);\n    u_xlat22 = abs(in_TEXCOORD1.y) * _GradientScale;\n    u_xlat2.x = _Sharpness + 1.0;\n    u_xlat22 = u_xlat22 * u_xlat2.x;\n    u_xlat2.x = u_xlat21 * u_xlat22;\n    u_xlat9.x = (-_PerspectiveFilter) + 1.0;\n    u_xlat2.x = u_xlat9.x * u_xlat2.x;\n    u_xlat21 = u_xlat21 * u_xlat22 + (-u_xlat2.x);\n    u_xlat9.xyz = _WorldSpaceCameraPos.yyy * hlslcc_mtx4x4unity_WorldToObject[1].xyz;\n    u_xlat9.xyz = hlslcc_mtx4x4unity_WorldToObject[0].xyz * _WorldSpaceCameraPos.xxx + u_xlat9.xyz;\n    u_xlat9.xyz = hlslcc_mtx4x4unity_WorldToObject[2].xyz * _WorldSpaceCameraPos.zzz + u_xlat9.xyz;\n    u_xlat9.xyz = u_xlat9.xyz + hlslcc_mtx4x4unity_WorldToObject[3].xyz;\n    u_xlat0.z = in_POSITION0.z;\n    u_xlat0.xyz = (-u_xlat0.xyz) + u_xlat9.xyz;\n    u_xlat0.x = dot(in_NORMAL0.xyz, u_xlat0.xyz);\n    u_xlati7 = int((0.0<u_xlat0.x) ? -1 : 0);\n    u_xlati0 = int((u_xlat0.x<0.0) ? -1 : 0);\n    u_xlati0 = (-u_xlati7) + u_xlati0;\n    u_xlat0.x = float(u_xlati0);\n    u_xlat0.xyz = u_xlat0.xxx * in_NORMAL0.xyz;\n    u_xlat3.x = dot(u_xlat0.xyz, hlslcc_mtx4x4unity_WorldToObject[0].xyz);\n    u_xlat3.y = dot(u_xlat0.xyz, hlslcc_mtx4x4unity_WorldToObject[1].xyz);\n    u_xlat3.z = dot(u_xlat0.xyz, hlslcc_mtx4x4unity_WorldToObject[2].xyz);\n    u_xlat0.x = dot(u_xlat3.xyz, u_xlat3.xyz);\n    u_xlat0.x = inversesqrt(u_xlat0.x);\n    u_xlat3 = u_xlat0.xxxx * u_xlat3.xyzz;\n    u_xlat0.xyz = (-u_xlat1.xyz) + _WorldSpaceCameraPos.xyz;\n    u_xlat22 = dot(u_xlat0.xyz, u_xlat0.xyz);\n    u_xlat22 = inversesqrt(u_xlat22);\n    u_xlat9.xyz = u_xlat0.xyz * vec3(u_xlat22);\n    u_xlat22 = dot(u_xlat3.xyw, u_xlat9.xyz);\n    vs_TEXCOORD5.y = abs(u_xlat22) * u_xlat21 + u_xlat2.x;\n    u_xlat2.xyz = in_TANGENT0.yyy * hlslcc_mtx4x4unity_ObjectToWorld[1].yzx;\n    u_xlat2.xyz = hlslcc_mtx4x4unity_ObjectToWorld[0].yzx * in_TANGENT0.xxx + u_xlat2.xyz;\n    u_xlat2.xyz = hlslcc_mtx4x4unity_ObjectToWorld[2].yzx * in_TANGENT0.zzz + u_xlat2.xyz;\n    u_xlat21 = dot(u_xlat2.xyz, u_xlat2.xyz);\n    u_xlat21 = inversesqrt(u_xlat21);\n    u_xlat2.xyz = vec3(u_xlat21) * u_xlat2.xyz;\n    u_xlat4.xyz = u_xlat2.xyz * u_xlat3.wxy;\n    u_xlat4.xyz = u_xlat3.ywx * u_xlat2.yzx + (-u_xlat4.xyz);\n    u_xlat21 = in_TANGENT0.w * unity_WorldTransformParams.w;\n    u_xlat4.xyz = vec3(u_xlat21) * u_xlat4.xyz;\n    vs_TEXCOORD2.y = u_xlat4.x;\n    vs_TEXCOORD2.z = u_xlat3.x;\n    vs_TEXCOORD2.x = u_xlat2.z;\n    vs_TEXCOORD2.w = u_xlat1.x;\n    vs_TEXCOORD3.x = u_xlat2.x;\n    vs_TEXCOORD4.x = u_xlat2.y;\n    vs_TEXCOORD3.z = u_xlat3.y;\n    vs_TEXCOORD3.y = u_xlat4.y;\n    vs_TEXCOORD4.y = u_xlat4.z;\n    vs_TEXCOORD3.w = u_xlat1.y;\n    vs_TEXCOORD4.z = u_xlat3.w;\n    vs_TEXCOORD4.w = u_xlat1.z;\n    vs_COLOR0 = in_COLOR0;\n    u_xlat2.xyz = u_xlat0.yyy * hlslcc_mtx4x4_EnvMatrix[1].xyz;\n    u_xlat0.xyw = hlslcc_mtx4x4_EnvMatrix[0].xyz * u_xlat0.xxx + u_xlat2.xyz;\n    vs_TEXCOORD6.xyz = hlslcc_mtx4x4_EnvMatrix[2].xyz * u_xlat0.zzz + u_xlat0.xyw;\n    u_xlat0 = (-u_xlat1.yyyy) + unity_4LightPosY0;\n    u_xlat2 = u_xlat3.yyyy * u_xlat0;\n    u_xlat0 = u_xlat0 * u_xlat0;\n    u_xlat4 = (-u_xlat1.xxxx) + unity_4LightPosX0;\n    u_xlat1 = (-u_xlat1.zzzz) + unity_4LightPosZ0;\n    u_xlat2 = u_xlat4 * u_xlat3.xxxx + u_xlat2;\n    u_xlat0 = u_xlat4 * u_xlat4 + u_xlat0;\n    u_xlat0 = u_xlat1 * u_xlat1 + u_xlat0;\n    u_xlat1 = u_xlat1 * u_xlat3.wwzw + u_xlat2;\n    u_xlat0 = max(u_xlat0, vec4(9.99999997e-07, 9.99999997e-07, 9.99999997e-07, 9.99999997e-07));\n    u_xlat2 = inversesqrt(u_xlat0);\n    u_xlat0 = u_xlat0 * unity_4LightAtten0 + vec4(1.0, 1.0, 1.0, 1.0);\n    u_xlat0 = vec4(1.0, 1.0, 1.0, 1.0) / u_xlat0;\n    u_xlat1 = u_xlat1 * u_xlat2;\n    u_xlat1 = max(u_xlat1, vec4(0.0, 0.0, 0.0, 0.0));\n    u_xlat0 = u_xlat0 * u_xlat1;\n    u_xlat1.xyz = u_xlat0.yyy * unity_LightColor[1].xyz;\n    u_xlat1.xyz = unity_LightColor[0].xyz * u_xlat0.xxx + u_xlat1.xyz;\n    u_xlat0.xyz = unity_LightColor[2].xyz * u_xlat0.zzz + u_xlat1.xyz;\n    u_xlat0.xyz = unity_LightColor[3].xyz * u_xlat0.www + u_xlat0.xyz;\n    u_xlat1.xyz = u_xlat0.xyz * vec3(0.305306017, 0.305306017, 0.305306017) + vec3(0.682171106, 0.682171106, 0.682171106);\n    u_xlat1.xyz = u_xlat0.xyz * u_xlat1.xyz + vec3(0.0125228781, 0.0125228781, 0.0125228781);\n    u_xlat16_5.x = u_xlat3.y * u_xlat3.y;\n    u_xlat16_5.x = u_xlat3.x * u_xlat3.x + (-u_xlat16_5.x);\n    u_xlat16_2 = u_xlat3.ywzx * u_xlat3;\n    u_xlat16_6.x = dot(unity_SHBr, u_xlat16_2);\n    u_xlat16_6.y = dot(unity_SHBg, u_xlat16_2);\n    u_xlat16_6.z = dot(unity_SHBb, u_xlat16_2);\n    u_xlat16_5.xyz = unity_SHC.xyz * u_xlat16_5.xxx + u_xlat16_6.xyz;\n    vs_TEXCOORD7.xyz = u_xlat0.xyz * u_xlat1.xyz + u_xlat16_5.xyz;\n    return;\n}\n\n","\n#version 100\n\n#ifdef GL_FRAGMENT_PRECISION_HIGH\n    precision highp float;\n#else\n    precision mediump float;\n#endif\nprecision highp int;\nuniform \tvec4 _Time;\nuniform \tmediump vec4 _WorldSpaceLightPos0;\nuniform \tmediump vec4 unity_SHAr;\nuniform \tmediump vec4 unity_SHAg;\nuniform \tmediump vec4 unity_SHAb;\nuniform \tmediump vec4 _LightColor0;\nuniform \tfloat _FaceUVSpeedX;\nuniform \tfloat _FaceUVSpeedY;\nuniform \tmediump vec4 _FaceColor;\nuniform \tfloat _OutlineSoftness;\nuniform \tfloat _OutlineUVSpeedX;\nuniform \tfloat _OutlineUVSpeedY;\nuniform \tmediump vec4 _OutlineColor;\nuniform \tfloat _OutlineWidth;\nuniform \tfloat _ScaleRatioA;\nuniform lowp sampler2D _MainTex;\nuniform lowp sampler2D _FaceTex;\nuniform lowp sampler2D _OutlineTex;\nvarying highp vec4 vs_TEXCOORD0;\nvarying highp vec2 vs_TEXCOORD1;\nvarying highp vec2 vs_TEXCOORD5;\nvarying highp vec4 vs_TEXCOORD2;\nvarying highp vec4 vs_TEXCOORD3;\nvarying highp vec4 vs_TEXCOORD4;\nvarying mediump vec4 vs_COLOR0;\nvarying mediump vec3 vs_TEXCOORD7;\n#define SV_Target0 gl_FragData[0]\nvec4 u_xlat0;\nmediump vec4 u_xlat16_0;\nlowp vec4 u_xlat10_0;\nmediump vec4 u_xlat16_1;\nfloat u_xlat2;\nmediump vec4 u_xlat16_2;\nvec3 u_xlat3;\nlowp vec4 u_xlat10_3;\nvec4 u_xlat4;\nvec4 u_xlat5;\nmediump vec4 u_xlat16_6;\nfloat u_xlat7;\nmediump vec3 u_xlat16_8;\nfloat u_xlat9;\nfloat u_xlat10;\nmediump float u_xlat16_15;\nvec2 u_xlat16;\nfloat u_xlat24;\nvoid main()\n{\n    u_xlat10_0.x = texture2D(_MainTex, vs_TEXCOORD0.xy).w;\n    u_xlat0.x = (-u_xlat10_0.x) + 0.5;\n    u_xlat0.x = u_xlat0.x + (-vs_TEXCOORD5.x);\n    u_xlat0.x = u_xlat0.x * vs_TEXCOORD5.y + 0.5;\n    u_xlat7 = _OutlineWidth * _ScaleRatioA;\n    u_xlat7 = u_xlat7 * vs_TEXCOORD5.y;\n    u_xlat16_1.x = u_xlat7 * 0.5 + u_xlat0.x;\n    u_xlat16_1.x = clamp(u_xlat16_1.x, 0.0, 1.0);\n    u_xlat16_8.x = (-u_xlat7) * 0.5 + u_xlat0.x;\n    u_xlat16_15 = min(u_xlat7, 1.0);\n    u_xlat16_15 = sqrt(u_xlat16_15);\n    u_xlat16_1.x = u_xlat16_15 * u_xlat16_1.x;\n    u_xlat0.xy = vec2(_OutlineUVSpeedX, _OutlineUVSpeedY) * _Time.yy + vs_TEXCOORD1.xy;\n    u_xlat10_0 = texture2D(_OutlineTex, u_xlat0.xy);\n    u_xlat0.xyz = u_xlat10_0.xyz * _OutlineColor.xyz;\n    u_xlat2 = vs_COLOR0.w * _OutlineColor.w;\n    u_xlat9 = u_xlat10_0.w * u_xlat2;\n    u_xlat16.xy = vec2(_FaceUVSpeedX, _FaceUVSpeedY) * _Time.yy + vs_TEXCOORD0.zw;\n    u_xlat10_3 = texture2D(_FaceTex, u_xlat16.xy);\n    u_xlat4 = vs_COLOR0 * _FaceColor;\n    u_xlat5 = u_xlat10_3 * u_xlat4;\n    u_xlat16_6.xyz = u_xlat5.www * u_xlat5.xyz;\n    u_xlat16_6.xyz = u_xlat0.xyz * vec3(u_xlat9) + (-u_xlat16_6.xyz);\n    u_xlat16_6.w = u_xlat2 * u_xlat10_0.w + (-u_xlat5.w);\n    u_xlat16_0 = u_xlat16_1.xxxx * u_xlat16_6;\n    u_xlat16_2.w = u_xlat4.w * u_xlat10_3.w + u_xlat16_0.w;\n    u_xlat16_2.xyz = u_xlat5.xyz * u_xlat5.www + u_xlat16_0.xyz;\n    u_xlat3.x = _OutlineSoftness * _ScaleRatioA;\n    u_xlat10 = u_xlat3.x * vs_TEXCOORD5.y;\n    u_xlat16_1.x = u_xlat3.x * vs_TEXCOORD5.y + 1.0;\n    u_xlat16_8.x = u_xlat10 * 0.5 + u_xlat16_8.x;\n    u_xlat16_1.x = u_xlat16_8.x / u_xlat16_1.x;\n    u_xlat16_1.x = clamp(u_xlat16_1.x, 0.0, 1.0);\n    u_xlat16_1.x = (-u_xlat16_1.x) + 1.0;\n    u_xlat16_0 = u_xlat16_1.xxxx * u_xlat16_2;\n    u_xlat3.x = max(u_xlat16_0.w, 9.99999975e-05);\n    u_xlat3.xyz = u_xlat16_0.xyz / u_xlat3.xxx;\n    SV_Target0.w = u_xlat16_0.w;\n    u_xlat4.x = vs_TEXCOORD2.z;\n    u_xlat4.y = vs_TEXCOORD3.z;\n    u_xlat4.z = vs_TEXCOORD4.z;\n    u_xlat24 = dot(u_xlat4.xyz, u_xlat4.xyz);\n    u_xlat24 = inversesqrt(u_xlat24);\n    u_xlat0.xyz = vec3(u_xlat24) * u_xlat4.xyz;\n    u_xlat16_1.x = dot(u_xlat0.xyz, _WorldSpaceLightPos0.xyz);\n    u_xlat0.w = 1.0;\n    u_xlat16_6.x = dot(unity_SHAr, u_xlat0);\n    u_xlat16_6.y = dot(unity_SHAg, u_xlat0);\n    u_xlat16_6.z = dot(unity_SHAb, u_xlat0);\n    u_xlat16_1.yzw = u_xlat16_6.xyz + vs_TEXCOORD7.xyz;\n    u_xlat16_1 = max(u_xlat16_1, vec4(0.0, 0.0, 0.0, 0.0));\n    u_xlat4.xyz = log2(u_xlat16_1.yzw);\n    u_xlat4.xyz = u_xlat4.xyz * vec3(0.416666657, 0.416666657, 0.416666657);\n    u_xlat4.xyz = exp2(u_xlat4.xyz);\n    u_xlat4.xyz = u_xlat4.xyz * vec3(1.05499995, 1.05499995, 1.05499995) + vec3(-0.0549999997, -0.0549999997, -0.0549999997);\n    u_xlat4.xyz = max(u_xlat4.xyz, vec3(0.0, 0.0, 0.0));\n    u_xlat16_8.xyz = u_xlat3.xyz * u_xlat4.xyz;\n    u_xlat16_6.xyz = u_xlat3.xyz * _LightColor0.xyz;\n    SV_Target0.xyz = u_xlat16_6.xyz * u_xlat16_1.xxx + u_xlat16_8.xyz;\n    return;\n}\n\n",0,0,2,0,0,["DIRECTIONAL","LIGHTPROBE_SH","VERTEXLIGHT_ON"],[["IGNOREPROJECTOR","true"],["LIGHTMODE","FORWARDBASE"],["QUEUE","Transparent"],["RenderType","Transparent"]]]],["DIRECTIONAL","FOG_EXP","FOG_EXP2","FOG_LINEAR","GLOW_ON","INSTANCING_ON","LIGHTPROBE_SH","STEREO_CUBEMAP_RENDER_ON","STEREO_INSTANCING_ON","STEREO_MULTIVIEW_ON","UNITY_SINGLE_PASS_STEREO","VERTEXLIGHT_ON","__"],[[["__","GLOW_ON"]],[["__","INSTANCING_ON"]],[["__","FOG_LINEAR","FOG_EXP","FOG_EXP2"]],[["DIRECTIONAL"]],[["DIRECTIONAL","LIGHTPROBE_SH"]],[["DIRECTIONAL","VERTEXLIGHT_ON","LIGHTPROBE_SH"]]],3,0,5,0,0,0,0,[["IGNOREPROJECTOR","true"],["LIGHTMODE","FORWARDBASE"],["QUEUE","Transparent"],["RenderType","Transparent"]],null,"",227,-1],["TextMeshPro/Mobile/Distance Field (Surface)",[[0,"\n#version 100\n\nuniform \tvec4 unity_LightShadowBias;\nuniform \tvec4 hlslcc_mtx4x4unity_ObjectToWorld[4];\nuniform \tvec4 hlslcc_mtx4x4unity_MatrixVP[4];\nuniform \tvec4 _MainTex_ST;\nuniform \tvec4 _OutlineTex_ST;\nuniform \tfloat _OutlineWidth;\nuniform \tfloat _FaceDilate;\nuniform \tfloat _ScaleRatioA;\nattribute highp vec4 in_POSITION0;\nattribute highp vec4 in_TEXCOORD0;\nvarying highp vec2 vs_TEXCOORD1;\nvarying highp vec2 vs_TEXCOORD3;\nvarying highp float vs_TEXCOORD2;\nvec4 u_xlat0;\nvec4 u_xlat1;\nfloat u_xlat4;\nvoid main()\n{\n    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];\n    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;\n    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;\n    u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];\n    u_xlat1 = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];\n    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat0.xxxx + u_xlat1;\n    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat0.zzzz + u_xlat1;\n    u_xlat0 = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat0.wwww + u_xlat1;\n    u_xlat1.x = unity_LightShadowBias.x / u_xlat0.w;\n    u_xlat1.x = clamp(u_xlat1.x, 0.0, 1.0);\n    u_xlat4 = u_xlat0.z + u_xlat1.x;\n    u_xlat1.x = max((-u_xlat0.w), u_xlat4);\n    gl_Position.xyw = u_xlat0.xyw;\n    u_xlat0.x = (-u_xlat4) + u_xlat1.x;\n    gl_Position.z = unity_LightShadowBias.y * u_xlat0.x + u_xlat4;\n    vs_TEXCOORD1.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;\n    vs_TEXCOORD3.xy = in_TEXCOORD0.xy * _OutlineTex_ST.xy + _OutlineTex_ST.zw;\n    u_xlat0.x = (-_OutlineWidth) * _ScaleRatioA + 1.0;\n    u_xlat0.x = (-_FaceDilate) * _ScaleRatioA + u_xlat0.x;\n    vs_TEXCOORD2 = u_xlat0.x * 0.5;\n    return;\n}\n\n","\n#version 100\n\n#ifdef GL_FRAGMENT_PRECISION_HIGH\n    precision highp float;\n#else\n    precision mediump float;\n#endif\nprecision highp int;\nuniform lowp sampler2D _MainTex;\nvarying highp vec2 vs_TEXCOORD1;\nvarying highp float vs_TEXCOORD2;\n#define SV_Target0 gl_FragData[0]\nfloat u_xlat0;\nlowp float u_xlat10_0;\nbool u_xlatb0;\nvoid main()\n{\n    u_xlat10_0 = texture2D(_MainTex, vs_TEXCOORD1.xy).w;\n    u_xlat0 = u_xlat10_0 + (-vs_TEXCOORD2);\n    u_xlatb0 = u_xlat0<0.0;\n    if(u_xlatb0){discard;}\n    SV_Target0 = vec4(0.0, 0.0, 0.0, 0.0);\n    return;\n}\n\n",0,0,0,1,0,["SHADOWS_DEPTH"],[["IGNOREPROJECTOR","true"],["LIGHTMODE","SHADOWCASTER"],["QUEUE","Transparent"],["RenderType","Transparent"],["SHADOWSUPPORT","true"]]]],["SHADOWS_CUBE","SHADOWS_DEPTH","STEREO_CUBEMAP_RENDER_ON","STEREO_INSTANCING_ON","STEREO_MULTIVIEW_ON","UNITY_SINGLE_PASS_STEREO"],[[["SHADOWS_DEPTH"]],[["SHADOWS_CUBE"]]],2,0,5,0,1,0,1,[["IGNOREPROJECTOR","true"],["LIGHTMODE","SHADOWCASTER"],["QUEUE","Transparent"],["RenderType","Transparent"],["SHADOWSUPPORT","true"]],null,"",33,-1]],[["IGNOREPROJECTOR","true"],["QUEUE","Transparent"],["RenderType","Transparent"]],0]],0,422,"Assets/TextMesh Pro/Shaders/TMP_SDF-Surface-Mobile.shader",["DIRECTIONAL","FOG_EXP","FOG_EXP2","FOG_LINEAR","GLOW_ON","LIGHTPROBE_SH","VERTEXLIGHT_ON","SHADOWS_DEPTH","INSTANCING_ON","STEREO_CUBEMAP_RENDER_ON","STEREO_INSTANCING_ON","STEREO_MULTIVIEW_ON","UNITY_SINGLE_PASS_STEREO","__","SHADOWS_CUBE"],null,null,[],5],[[[0,[["TextMeshPro/Mobile/Distance Field Overlay",[[0,"\n#version 100\n\nuniform \tvec3 _WorldSpaceCameraPos;\nuniform \tvec4 _ScreenParams;\nuniform \tvec4 hlslcc_mtx4x4unity_ObjectToWorld[4];\nuniform \tvec4 hlslcc_mtx4x4unity_WorldToObject[4];\nuniform \tvec4 hlslcc_mtx4x4glstate_matrix_projection[4];\nuniform \tvec4 hlslcc_mtx4x4unity_MatrixVP[4];\nuniform \tmediump vec4 _FaceColor;\nuniform \tfloat _FaceDilate;\nuniform \tfloat _OutlineSoftness;\nuniform \tmediump vec4 _OutlineColor;\nuniform \tfloat _OutlineWidth;\nuniform \tfloat _WeightNormal;\nuniform \tfloat _WeightBold;\nuniform \tfloat _ScaleRatioA;\nuniform \tfloat _VertexOffsetX;\nuniform \tfloat _VertexOffsetY;\nuniform \tvec4 _ClipRect;\nuniform \tfloat _MaskSoftnessX;\nuniform \tfloat _MaskSoftnessY;\nuniform \tfloat _GradientScale;\nuniform \tfloat _ScaleX;\nuniform \tfloat _ScaleY;\nuniform \tfloat _PerspectiveFilter;\nuniform \tfloat _Sharpness;\nattribute highp vec4 in_POSITION0;\nattribute highp vec3 in_NORMAL0;\nattribute mediump vec4 in_COLOR0;\nattribute highp vec2 in_TEXCOORD0;\nattribute highp vec2 in_TEXCOORD1;\nvarying mediump vec4 vs_COLOR0;\nvarying mediump vec4 vs_COLOR1;\nvarying highp vec4 vs_TEXCOORD0;\nvarying mediump vec4 vs_TEXCOORD1;\nvarying mediump vec4 vs_TEXCOORD2;\nvec2 u_xlat0;\nbool u_xlatb0;\nvec4 u_xlat1;\nvec4 u_xlat2;\nvec4 u_xlat3;\nmediump vec4 u_xlat16_3;\nvec4 u_xlat4;\nfloat u_xlat5;\nfloat u_xlat7;\nfloat u_xlat10;\nfloat u_xlat12;\nfloat u_xlat15;\nbool u_xlatb15;\nvoid main()\n{\n    u_xlat0.xy = in_POSITION0.xy + vec2(_VertexOffsetX, _VertexOffsetY);\n    u_xlat1 = u_xlat0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];\n    u_xlat1 = hlslcc_mtx4x4unity_ObjectToWorld[0] * u_xlat0.xxxx + u_xlat1;\n    u_xlat1 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat1;\n    u_xlat2 = u_xlat1 + hlslcc_mtx4x4unity_ObjectToWorld[3];\n    u_xlat1.xyz = hlslcc_mtx4x4unity_ObjectToWorld[3].xyz * in_POSITION0.www + u_xlat1.xyz;\n    u_xlat1.xyz = (-u_xlat1.xyz) + _WorldSpaceCameraPos.xyz;\n    u_xlat3 = u_xlat2.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];\n    u_xlat3 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat2.xxxx + u_xlat3;\n    u_xlat3 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat2.zzzz + u_xlat3;\n    u_xlat2 = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat2.wwww + u_xlat3;\n    gl_Position = u_xlat2;\n    u_xlat16_3 = in_COLOR0 * _FaceColor;\n    u_xlat16_3.xyz = u_xlat16_3.www * u_xlat16_3.xyz;\n    vs_COLOR0 = u_xlat16_3;\n    u_xlat10 = dot(u_xlat1.xyz, u_xlat1.xyz);\n    u_xlat10 = inversesqrt(u_xlat10);\n    u_xlat1.xyz = vec3(u_xlat10) * u_xlat1.xyz;\n    u_xlat2.x = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[0].xyz);\n    u_xlat2.y = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[1].xyz);\n    u_xlat2.z = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[2].xyz);\n    u_xlat10 = dot(u_xlat2.xyz, u_xlat2.xyz);\n    u_xlat10 = inversesqrt(u_xlat10);\n    u_xlat2.xyz = vec3(u_xlat10) * u_xlat2.xyz;\n    u_xlat10 = dot(u_xlat2.xyz, u_xlat1.xyz);\n    u_xlat1.xy = _ScreenParams.yy * hlslcc_mtx4x4glstate_matrix_projection[1].xy;\n    u_xlat1.xy = hlslcc_mtx4x4glstate_matrix_projection[0].xy * _ScreenParams.xx + u_xlat1.xy;\n    u_xlat1.xy = abs(u_xlat1.xy) * vec2(_ScaleX, _ScaleY);\n    u_xlat1.xy = u_xlat2.ww / u_xlat1.xy;\n    u_xlat15 = dot(u_xlat1.xy, u_xlat1.xy);\n    u_xlat1.xy = vec2(_MaskSoftnessX, _MaskSoftnessY) * vec2(0.25, 0.25) + u_xlat1.xy;\n    u_xlat1.zw = vec2(0.25, 0.25) / u_xlat1.xy;\n    u_xlat15 = inversesqrt(u_xlat15);\n    u_xlat2.x = abs(in_TEXCOORD1.y) * _GradientScale;\n    u_xlat7 = _Sharpness + 1.0;\n    u_xlat2.x = u_xlat7 * u_xlat2.x;\n    u_xlat7 = u_xlat15 * u_xlat2.x;\n    u_xlat12 = (-_PerspectiveFilter) + 1.0;\n    u_xlat12 = u_xlat12 * abs(u_xlat7);\n    u_xlat15 = u_xlat15 * u_xlat2.x + (-u_xlat12);\n    u_xlat10 = abs(u_xlat10) * u_xlat15 + u_xlat12;\n    u_xlatb15 = hlslcc_mtx4x4glstate_matrix_projection[3].w==0.0;\n    u_xlat10 = (u_xlatb15) ? u_xlat10 : u_xlat7;\n    u_xlat15 = _OutlineSoftness * _ScaleRatioA;\n    u_xlat15 = u_xlat15 * u_xlat10 + 1.0;\n    u_xlat2.x = u_xlat10 / u_xlat15;\n    u_xlat10 = _OutlineWidth * _ScaleRatioA;\n    u_xlat10 = u_xlat2.x * u_xlat10;\n    u_xlat15 = min(u_xlat10, 1.0);\n    u_xlat15 = sqrt(u_xlat15);\n    u_xlat4.x = in_COLOR0.w * _OutlineColor.w;\n    u_xlat4.xyz = _OutlineColor.xyz * u_xlat4.xxx + (-u_xlat16_3.xyz);\n    u_xlat4.w = _OutlineColor.w * in_COLOR0.w + (-u_xlat16_3.w);\n    u_xlat3 = vec4(u_xlat15) * u_xlat4 + u_xlat16_3;\n    vs_COLOR1 = u_xlat3;\n    u_xlat3 = max(_ClipRect, vec4(-2e+10, -2e+10, -2e+10, -2e+10));\n    u_xlat3 = min(u_xlat3, vec4(2e+10, 2e+10, 2e+10, 2e+10));\n    u_xlat4.xy = u_xlat0.xy + (-u_xlat3.xy);\n    u_xlat0.xy = u_xlat0.xy * vec2(2.0, 2.0) + (-u_xlat3.xy);\n    u_xlat1.xy = (-u_xlat3.zw) + u_xlat0.xy;\n    u_xlat0.xy = (-u_xlat3.xy) + u_xlat3.zw;\n    vs_TEXCOORD0.zw = u_xlat4.xy / u_xlat0.xy;\n    vs_TEXCOORD2 = u_xlat1;\n    vs_TEXCOORD0.xy = in_TEXCOORD0.xy;\n    u_xlatb0 = 0.0>=in_TEXCOORD1.y;\n    u_xlat0.x = u_xlatb0 ? 1.0 : float(0.0);\n    u_xlat5 = (-_WeightNormal) + _WeightBold;\n    u_xlat0.x = u_xlat0.x * u_xlat5 + _WeightNormal;\n    u_xlat0.x = u_xlat0.x * 0.25 + _FaceDilate;\n    u_xlat0.x = u_xlat0.x * _ScaleRatioA;\n    u_xlat0.x = (-u_xlat0.x) * 0.5 + 0.5;\n    u_xlat2.w = u_xlat0.x * u_xlat2.x + -0.5;\n    u_xlat2.y = (-u_xlat10) * 0.5 + u_xlat2.w;\n    u_xlat2.z = u_xlat10 * 0.5 + u_xlat2.w;\n    vs_TEXCOORD1 = u_xlat2;\n    return;\n}\n\n","\n#version 100\n\n#ifdef GL_FRAGMENT_PRECISION_HIGH\n    precision highp float;\n#else\n    precision mediump float;\n#endif\nprecision highp int;\nuniform lowp sampler2D _MainTex;\nvarying mediump vec4 vs_COLOR0;\nvarying highp vec4 vs_TEXCOORD0;\nvarying mediump vec4 vs_TEXCOORD1;\n#define SV_Target0 gl_FragData[0]\nlowp float u_xlat10_0;\nmediump float u_xlat16_1;\nvoid main()\n{\n    u_xlat10_0 = texture2D(_MainTex, vs_TEXCOORD0.xy).w;\n    u_xlat16_1 = u_xlat10_0 * vs_TEXCOORD1.x + (-vs_TEXCOORD1.w);\n    u_xlat16_1 = clamp(u_xlat16_1, 0.0, 1.0);\n    SV_Target0 = vec4(u_xlat16_1) * vs_COLOR0;\n    return;\n}\n\n",0,0,0,0,0,[],[["IGNOREPROJECTOR","true"],["QUEUE","Overlay"],["RenderType","Transparent"]]],[0,"\n#version 100\n\nuniform \tvec3 _WorldSpaceCameraPos;\nuniform \tvec4 _ScreenParams;\nuniform \tvec4 hlslcc_mtx4x4unity_ObjectToWorld[4];\nuniform \tvec4 hlslcc_mtx4x4unity_WorldToObject[4];\nuniform \tvec4 hlslcc_mtx4x4glstate_matrix_projection[4];\nuniform \tvec4 hlslcc_mtx4x4unity_MatrixVP[4];\nuniform \tmediump vec4 _FaceColor;\nuniform \tfloat _FaceDilate;\nuniform \tfloat _OutlineSoftness;\nuniform \tmediump vec4 _OutlineColor;\nuniform \tfloat _OutlineWidth;\nuniform \tfloat _WeightNormal;\nuniform \tfloat _WeightBold;\nuniform \tfloat _ScaleRatioA;\nuniform \tfloat _VertexOffsetX;\nuniform \tfloat _VertexOffsetY;\nuniform \tvec4 _ClipRect;\nuniform \tfloat _MaskSoftnessX;\nuniform \tfloat _MaskSoftnessY;\nuniform \tfloat _GradientScale;\nuniform \tfloat _ScaleX;\nuniform \tfloat _ScaleY;\nuniform \tfloat _PerspectiveFilter;\nuniform \tfloat _Sharpness;\nattribute highp vec4 in_POSITION0;\nattribute highp vec3 in_NORMAL0;\nattribute mediump vec4 in_COLOR0;\nattribute highp vec2 in_TEXCOORD0;\nattribute highp vec2 in_TEXCOORD1;\nvarying mediump vec4 vs_COLOR0;\nvarying mediump vec4 vs_COLOR1;\nvarying highp vec4 vs_TEXCOORD0;\nvarying mediump vec4 vs_TEXCOORD1;\nvarying mediump vec4 vs_TEXCOORD2;\nvec2 u_xlat0;\nbool u_xlatb0;\nvec4 u_xlat1;\nvec4 u_xlat2;\nvec4 u_xlat3;\nmediump vec4 u_xlat16_3;\nvec4 u_xlat4;\nfloat u_xlat5;\nfloat u_xlat7;\nfloat u_xlat10;\nfloat u_xlat12;\nfloat u_xlat15;\nbool u_xlatb15;\nvoid main()\n{\n    u_xlat0.xy = in_POSITION0.xy + vec2(_VertexOffsetX, _VertexOffsetY);\n    u_xlat1 = u_xlat0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];\n    u_xlat1 = hlslcc_mtx4x4unity_ObjectToWorld[0] * u_xlat0.xxxx + u_xlat1;\n    u_xlat1 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat1;\n    u_xlat2 = u_xlat1 + hlslcc_mtx4x4unity_ObjectToWorld[3];\n    u_xlat1.xyz = hlslcc_mtx4x4unity_ObjectToWorld[3].xyz * in_POSITION0.www + u_xlat1.xyz;\n    u_xlat1.xyz = (-u_xlat1.xyz) + _WorldSpaceCameraPos.xyz;\n    u_xlat3 = u_xlat2.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];\n    u_xlat3 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat2.xxxx + u_xlat3;\n    u_xlat3 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat2.zzzz + u_xlat3;\n    u_xlat2 = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat2.wwww + u_xlat3;\n    gl_Position = u_xlat2;\n    u_xlat16_3 = in_COLOR0 * _FaceColor;\n    u_xlat16_3.xyz = u_xlat16_3.www * u_xlat16_3.xyz;\n    vs_COLOR0 = u_xlat16_3;\n    u_xlat10 = dot(u_xlat1.xyz, u_xlat1.xyz);\n    u_xlat10 = inversesqrt(u_xlat10);\n    u_xlat1.xyz = vec3(u_xlat10) * u_xlat1.xyz;\n    u_xlat2.x = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[0].xyz);\n    u_xlat2.y = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[1].xyz);\n    u_xlat2.z = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[2].xyz);\n    u_xlat10 = dot(u_xlat2.xyz, u_xlat2.xyz);\n    u_xlat10 = inversesqrt(u_xlat10);\n    u_xlat2.xyz = vec3(u_xlat10) * u_xlat2.xyz;\n    u_xlat10 = dot(u_xlat2.xyz, u_xlat1.xyz);\n    u_xlat1.xy = _ScreenParams.yy * hlslcc_mtx4x4glstate_matrix_projection[1].xy;\n    u_xlat1.xy = hlslcc_mtx4x4glstate_matrix_projection[0].xy * _ScreenParams.xx + u_xlat1.xy;\n    u_xlat1.xy = abs(u_xlat1.xy) * vec2(_ScaleX, _ScaleY);\n    u_xlat1.xy = u_xlat2.ww / u_xlat1.xy;\n    u_xlat15 = dot(u_xlat1.xy, u_xlat1.xy);\n    u_xlat1.xy = vec2(_MaskSoftnessX, _MaskSoftnessY) * vec2(0.25, 0.25) + u_xlat1.xy;\n    u_xlat1.zw = vec2(0.25, 0.25) / u_xlat1.xy;\n    u_xlat15 = inversesqrt(u_xlat15);\n    u_xlat2.x = abs(in_TEXCOORD1.y) * _GradientScale;\n    u_xlat7 = _Sharpness + 1.0;\n    u_xlat2.x = u_xlat7 * u_xlat2.x;\n    u_xlat7 = u_xlat15 * u_xlat2.x;\n    u_xlat12 = (-_PerspectiveFilter) + 1.0;\n    u_xlat12 = u_xlat12 * abs(u_xlat7);\n    u_xlat15 = u_xlat15 * u_xlat2.x + (-u_xlat12);\n    u_xlat10 = abs(u_xlat10) * u_xlat15 + u_xlat12;\n    u_xlatb15 = hlslcc_mtx4x4glstate_matrix_projection[3].w==0.0;\n    u_xlat10 = (u_xlatb15) ? u_xlat10 : u_xlat7;\n    u_xlat15 = _OutlineSoftness * _ScaleRatioA;\n    u_xlat15 = u_xlat15 * u_xlat10 + 1.0;\n    u_xlat2.x = u_xlat10 / u_xlat15;\n    u_xlat10 = _OutlineWidth * _ScaleRatioA;\n    u_xlat10 = u_xlat2.x * u_xlat10;\n    u_xlat15 = min(u_xlat10, 1.0);\n    u_xlat15 = sqrt(u_xlat15);\n    u_xlat4.x = in_COLOR0.w * _OutlineColor.w;\n    u_xlat4.xyz = _OutlineColor.xyz * u_xlat4.xxx + (-u_xlat16_3.xyz);\n    u_xlat4.w = _OutlineColor.w * in_COLOR0.w + (-u_xlat16_3.w);\n    u_xlat3 = vec4(u_xlat15) * u_xlat4 + u_xlat16_3;\n    vs_COLOR1 = u_xlat3;\n    u_xlat3 = max(_ClipRect, vec4(-2e+10, -2e+10, -2e+10, -2e+10));\n    u_xlat3 = min(u_xlat3, vec4(2e+10, 2e+10, 2e+10, 2e+10));\n    u_xlat4.xy = u_xlat0.xy + (-u_xlat3.xy);\n    u_xlat0.xy = u_xlat0.xy * vec2(2.0, 2.0) + (-u_xlat3.xy);\n    u_xlat1.xy = (-u_xlat3.zw) + u_xlat0.xy;\n    u_xlat0.xy = (-u_xlat3.xy) + u_xlat3.zw;\n    vs_TEXCOORD0.zw = u_xlat4.xy / u_xlat0.xy;\n    vs_TEXCOORD2 = u_xlat1;\n    vs_TEXCOORD0.xy = in_TEXCOORD0.xy;\n    u_xlatb0 = 0.0>=in_TEXCOORD1.y;\n    u_xlat0.x = u_xlatb0 ? 1.0 : float(0.0);\n    u_xlat5 = (-_WeightNormal) + _WeightBold;\n    u_xlat0.x = u_xlat0.x * u_xlat5 + _WeightNormal;\n    u_xlat0.x = u_xlat0.x * 0.25 + _FaceDilate;\n    u_xlat0.x = u_xlat0.x * _ScaleRatioA;\n    u_xlat0.x = (-u_xlat0.x) * 0.5 + 0.5;\n    u_xlat2.w = u_xlat0.x * u_xlat2.x + -0.5;\n    u_xlat2.y = (-u_xlat10) * 0.5 + u_xlat2.w;\n    u_xlat2.z = u_xlat10 * 0.5 + u_xlat2.w;\n    vs_TEXCOORD1 = u_xlat2;\n    return;\n}\n\n","\n#version 100\n\n#ifdef GL_FRAGMENT_PRECISION_HIGH\n    precision highp float;\n#else\n    precision mediump float;\n#endif\nprecision highp int;\nuniform lowp sampler2D _MainTex;\nvarying mediump vec4 vs_COLOR0;\nvarying highp vec4 vs_TEXCOORD0;\nvarying mediump vec4 vs_TEXCOORD1;\n#define SV_Target0 gl_FragData[0]\nmediump vec4 u_xlat16_0;\nlowp float u_xlat10_0;\nmediump float u_xlat16_1;\nbool u_xlatb2;\nmediump float u_xlat16_4;\nvoid main()\n{\n    u_xlat10_0 = texture2D(_MainTex, vs_TEXCOORD0.xy).w;\n    u_xlat16_1 = u_xlat10_0 * vs_TEXCOORD1.x + (-vs_TEXCOORD1.w);\n    u_xlat16_1 = clamp(u_xlat16_1, 0.0, 1.0);\n    u_xlat16_4 = vs_COLOR0.w * u_xlat16_1 + -0.00100000005;\n    u_xlat16_0 = vec4(u_xlat16_1) * vs_COLOR0;\n    SV_Target0 = u_xlat16_0;\n    u_xlatb2 = u_xlat16_4<0.0;\n    if(u_xlatb2){discard;}\n    return;\n}\n\n",0,0,1,0,0,["UNITY_UI_ALPHACLIP"],[["IGNOREPROJECTOR","true"],["QUEUE","Overlay"],["RenderType","Transparent"]]],[0,"\n#version 100\n\nuniform \tvec3 _WorldSpaceCameraPos;\nuniform \tvec4 _ScreenParams;\nuniform \tvec4 hlslcc_mtx4x4unity_ObjectToWorld[4];\nuniform \tvec4 hlslcc_mtx4x4unity_WorldToObject[4];\nuniform \tvec4 hlslcc_mtx4x4glstate_matrix_projection[4];\nuniform \tvec4 hlslcc_mtx4x4unity_MatrixVP[4];\nuniform \tmediump vec4 _FaceColor;\nuniform \tfloat _FaceDilate;\nuniform \tfloat _OutlineSoftness;\nuniform \tmediump vec4 _OutlineColor;\nuniform \tfloat _OutlineWidth;\nuniform \tfloat _WeightNormal;\nuniform \tfloat _WeightBold;\nuniform \tfloat _ScaleRatioA;\nuniform \tfloat _VertexOffsetX;\nuniform \tfloat _VertexOffsetY;\nuniform \tvec4 _ClipRect;\nuniform \tfloat _MaskSoftnessX;\nuniform \tfloat _MaskSoftnessY;\nuniform \tfloat _GradientScale;\nuniform \tfloat _ScaleX;\nuniform \tfloat _ScaleY;\nuniform \tfloat _PerspectiveFilter;\nuniform \tfloat _Sharpness;\nattribute highp vec4 in_POSITION0;\nattribute highp vec3 in_NORMAL0;\nattribute mediump vec4 in_COLOR0;\nattribute highp vec2 in_TEXCOORD0;\nattribute highp vec2 in_TEXCOORD1;\nvarying mediump vec4 vs_COLOR0;\nvarying mediump vec4 vs_COLOR1;\nvarying highp vec4 vs_TEXCOORD0;\nvarying mediump vec4 vs_TEXCOORD1;\nvarying mediump vec4 vs_TEXCOORD2;\nvec2 u_xlat0;\nbool u_xlatb0;\nvec4 u_xlat1;\nvec4 u_xlat2;\nvec4 u_xlat3;\nmediump vec4 u_xlat16_3;\nvec4 u_xlat4;\nfloat u_xlat5;\nfloat u_xlat7;\nfloat u_xlat10;\nfloat u_xlat12;\nfloat u_xlat15;\nbool u_xlatb15;\nvoid main()\n{\n    u_xlat0.xy = in_POSITION0.xy + vec2(_VertexOffsetX, _VertexOffsetY);\n    u_xlat1 = u_xlat0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];\n    u_xlat1 = hlslcc_mtx4x4unity_ObjectToWorld[0] * u_xlat0.xxxx + u_xlat1;\n    u_xlat1 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat1;\n    u_xlat2 = u_xlat1 + hlslcc_mtx4x4unity_ObjectToWorld[3];\n    u_xlat1.xyz = hlslcc_mtx4x4unity_ObjectToWorld[3].xyz * in_POSITION0.www + u_xlat1.xyz;\n    u_xlat1.xyz = (-u_xlat1.xyz) + _WorldSpaceCameraPos.xyz;\n    u_xlat3 = u_xlat2.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];\n    u_xlat3 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat2.xxxx + u_xlat3;\n    u_xlat3 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat2.zzzz + u_xlat3;\n    u_xlat2 = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat2.wwww + u_xlat3;\n    gl_Position = u_xlat2;\n    u_xlat16_3 = in_COLOR0 * _FaceColor;\n    u_xlat16_3.xyz = u_xlat16_3.www * u_xlat16_3.xyz;\n    vs_COLOR0 = u_xlat16_3;\n    u_xlat10 = dot(u_xlat1.xyz, u_xlat1.xyz);\n    u_xlat10 = inversesqrt(u_xlat10);\n    u_xlat1.xyz = vec3(u_xlat10) * u_xlat1.xyz;\n    u_xlat2.x = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[0].xyz);\n    u_xlat2.y = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[1].xyz);\n    u_xlat2.z = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[2].xyz);\n    u_xlat10 = dot(u_xlat2.xyz, u_xlat2.xyz);\n    u_xlat10 = inversesqrt(u_xlat10);\n    u_xlat2.xyz = vec3(u_xlat10) * u_xlat2.xyz;\n    u_xlat10 = dot(u_xlat2.xyz, u_xlat1.xyz);\n    u_xlat1.xy = _ScreenParams.yy * hlslcc_mtx4x4glstate_matrix_projection[1].xy;\n    u_xlat1.xy = hlslcc_mtx4x4glstate_matrix_projection[0].xy * _ScreenParams.xx + u_xlat1.xy;\n    u_xlat1.xy = abs(u_xlat1.xy) * vec2(_ScaleX, _ScaleY);\n    u_xlat1.xy = u_xlat2.ww / u_xlat1.xy;\n    u_xlat15 = dot(u_xlat1.xy, u_xlat1.xy);\n    u_xlat1.xy = vec2(_MaskSoftnessX, _MaskSoftnessY) * vec2(0.25, 0.25) + u_xlat1.xy;\n    u_xlat1.zw = vec2(0.25, 0.25) / u_xlat1.xy;\n    u_xlat15 = inversesqrt(u_xlat15);\n    u_xlat2.x = abs(in_TEXCOORD1.y) * _GradientScale;\n    u_xlat7 = _Sharpness + 1.0;\n    u_xlat2.x = u_xlat7 * u_xlat2.x;\n    u_xlat7 = u_xlat15 * u_xlat2.x;\n    u_xlat12 = (-_PerspectiveFilter) + 1.0;\n    u_xlat12 = u_xlat12 * abs(u_xlat7);\n    u_xlat15 = u_xlat15 * u_xlat2.x + (-u_xlat12);\n    u_xlat10 = abs(u_xlat10) * u_xlat15 + u_xlat12;\n    u_xlatb15 = hlslcc_mtx4x4glstate_matrix_projection[3].w==0.0;\n    u_xlat10 = (u_xlatb15) ? u_xlat10 : u_xlat7;\n    u_xlat15 = _OutlineSoftness * _ScaleRatioA;\n    u_xlat15 = u_xlat15 * u_xlat10 + 1.0;\n    u_xlat2.x = u_xlat10 / u_xlat15;\n    u_xlat10 = _OutlineWidth * _ScaleRatioA;\n    u_xlat10 = u_xlat2.x * u_xlat10;\n    u_xlat15 = min(u_xlat10, 1.0);\n    u_xlat15 = sqrt(u_xlat15);\n    u_xlat4.x = in_COLOR0.w * _OutlineColor.w;\n    u_xlat4.xyz = _OutlineColor.xyz * u_xlat4.xxx + (-u_xlat16_3.xyz);\n    u_xlat4.w = _OutlineColor.w * in_COLOR0.w + (-u_xlat16_3.w);\n    u_xlat3 = vec4(u_xlat15) * u_xlat4 + u_xlat16_3;\n    vs_COLOR1 = u_xlat3;\n    u_xlat3 = max(_ClipRect, vec4(-2e+10, -2e+10, -2e+10, -2e+10));\n    u_xlat3 = min(u_xlat3, vec4(2e+10, 2e+10, 2e+10, 2e+10));\n    u_xlat4.xy = u_xlat0.xy + (-u_xlat3.xy);\n    u_xlat0.xy = u_xlat0.xy * vec2(2.0, 2.0) + (-u_xlat3.xy);\n    u_xlat1.xy = (-u_xlat3.zw) + u_xlat0.xy;\n    u_xlat0.xy = (-u_xlat3.xy) + u_xlat3.zw;\n    vs_TEXCOORD0.zw = u_xlat4.xy / u_xlat0.xy;\n    vs_TEXCOORD2 = u_xlat1;\n    vs_TEXCOORD0.xy = in_TEXCOORD0.xy;\n    u_xlatb0 = 0.0>=in_TEXCOORD1.y;\n    u_xlat0.x = u_xlatb0 ? 1.0 : float(0.0);\n    u_xlat5 = (-_WeightNormal) + _WeightBold;\n    u_xlat0.x = u_xlat0.x * u_xlat5 + _WeightNormal;\n    u_xlat0.x = u_xlat0.x * 0.25 + _FaceDilate;\n    u_xlat0.x = u_xlat0.x * _ScaleRatioA;\n    u_xlat0.x = (-u_xlat0.x) * 0.5 + 0.5;\n    u_xlat2.w = u_xlat0.x * u_xlat2.x + -0.5;\n    u_xlat2.y = (-u_xlat10) * 0.5 + u_xlat2.w;\n    u_xlat2.z = u_xlat10 * 0.5 + u_xlat2.w;\n    vs_TEXCOORD1 = u_xlat2;\n    return;\n}\n\n","\n#version 100\n\n#ifdef GL_FRAGMENT_PRECISION_HIGH\n    precision highp float;\n#else\n    precision mediump float;\n#endif\nprecision highp int;\nuniform \tvec4 _ClipRect;\nuniform lowp sampler2D _MainTex;\nvarying mediump vec4 vs_COLOR0;\nvarying highp vec4 vs_TEXCOORD0;\nvarying mediump vec4 vs_TEXCOORD1;\nvarying mediump vec4 vs_TEXCOORD2;\n#define SV_Target0 gl_FragData[0]\nvec2 u_xlat0;\nmediump vec4 u_xlat16_0;\nlowp float u_xlat10_0;\nmediump float u_xlat16_1;\nmediump float u_xlat16_3;\nvoid main()\n{\n    u_xlat0.xy = (-_ClipRect.xy) + _ClipRect.zw;\n    u_xlat0.xy = u_xlat0.xy + -abs(vs_TEXCOORD2.xy);\n    u_xlat0.xy = u_xlat0.xy * vs_TEXCOORD2.zw;\n    u_xlat0.xy = clamp(u_xlat0.xy, 0.0, 1.0);\n    u_xlat16_1 = u_xlat0.y * u_xlat0.x;\n    u_xlat10_0 = texture2D(_MainTex, vs_TEXCOORD0.xy).w;\n    u_xlat16_3 = u_xlat10_0 * vs_TEXCOORD1.x + (-vs_TEXCOORD1.w);\n    u_xlat16_3 = clamp(u_xlat16_3, 0.0, 1.0);\n    u_xlat16_0 = vec4(u_xlat16_3) * vs_COLOR0;\n    SV_Target0 = vec4(u_xlat16_1) * u_xlat16_0;\n    return;\n}\n\n",0,0,2,0,0,["UNITY_UI_CLIP_RECT"],[["IGNOREPROJECTOR","true"],["QUEUE","Overlay"],["RenderType","Transparent"]]],[0,"\n#version 100\n\nuniform \tvec3 _WorldSpaceCameraPos;\nuniform \tvec4 _ScreenParams;\nuniform \tvec4 hlslcc_mtx4x4unity_ObjectToWorld[4];\nuniform \tvec4 hlslcc_mtx4x4unity_WorldToObject[4];\nuniform \tvec4 hlslcc_mtx4x4glstate_matrix_projection[4];\nuniform \tvec4 hlslcc_mtx4x4unity_MatrixVP[4];\nuniform \tmediump vec4 _FaceColor;\nuniform \tfloat _FaceDilate;\nuniform \tfloat _OutlineSoftness;\nuniform \tmediump vec4 _OutlineColor;\nuniform \tfloat _OutlineWidth;\nuniform \tfloat _WeightNormal;\nuniform \tfloat _WeightBold;\nuniform \tfloat _ScaleRatioA;\nuniform \tfloat _VertexOffsetX;\nuniform \tfloat _VertexOffsetY;\nuniform \tvec4 _ClipRect;\nuniform \tfloat _MaskSoftnessX;\nuniform \tfloat _MaskSoftnessY;\nuniform \tfloat _GradientScale;\nuniform \tfloat _ScaleX;\nuniform \tfloat _ScaleY;\nuniform \tfloat _PerspectiveFilter;\nuniform \tfloat _Sharpness;\nattribute highp vec4 in_POSITION0;\nattribute highp vec3 in_NORMAL0;\nattribute mediump vec4 in_COLOR0;\nattribute highp vec2 in_TEXCOORD0;\nattribute highp vec2 in_TEXCOORD1;\nvarying mediump vec4 vs_COLOR0;\nvarying mediump vec4 vs_COLOR1;\nvarying highp vec4 vs_TEXCOORD0;\nvarying mediump vec4 vs_TEXCOORD1;\nvarying mediump vec4 vs_TEXCOORD2;\nvec2 u_xlat0;\nbool u_xlatb0;\nvec4 u_xlat1;\nvec4 u_xlat2;\nvec4 u_xlat3;\nmediump vec4 u_xlat16_3;\nvec4 u_xlat4;\nfloat u_xlat5;\nfloat u_xlat7;\nfloat u_xlat10;\nfloat u_xlat12;\nfloat u_xlat15;\nbool u_xlatb15;\nvoid main()\n{\n    u_xlat0.xy = in_POSITION0.xy + vec2(_VertexOffsetX, _VertexOffsetY);\n    u_xlat1 = u_xlat0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];\n    u_xlat1 = hlslcc_mtx4x4unity_ObjectToWorld[0] * u_xlat0.xxxx + u_xlat1;\n    u_xlat1 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat1;\n    u_xlat2 = u_xlat1 + hlslcc_mtx4x4unity_ObjectToWorld[3];\n    u_xlat1.xyz = hlslcc_mtx4x4unity_ObjectToWorld[3].xyz * in_POSITION0.www + u_xlat1.xyz;\n    u_xlat1.xyz = (-u_xlat1.xyz) + _WorldSpaceCameraPos.xyz;\n    u_xlat3 = u_xlat2.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];\n    u_xlat3 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat2.xxxx + u_xlat3;\n    u_xlat3 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat2.zzzz + u_xlat3;\n    u_xlat2 = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat2.wwww + u_xlat3;\n    gl_Position = u_xlat2;\n    u_xlat16_3 = in_COLOR0 * _FaceColor;\n    u_xlat16_3.xyz = u_xlat16_3.www * u_xlat16_3.xyz;\n    vs_COLOR0 = u_xlat16_3;\n    u_xlat10 = dot(u_xlat1.xyz, u_xlat1.xyz);\n    u_xlat10 = inversesqrt(u_xlat10);\n    u_xlat1.xyz = vec3(u_xlat10) * u_xlat1.xyz;\n    u_xlat2.x = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[0].xyz);\n    u_xlat2.y = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[1].xyz);\n    u_xlat2.z = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[2].xyz);\n    u_xlat10 = dot(u_xlat2.xyz, u_xlat2.xyz);\n    u_xlat10 = inversesqrt(u_xlat10);\n    u_xlat2.xyz = vec3(u_xlat10) * u_xlat2.xyz;\n    u_xlat10 = dot(u_xlat2.xyz, u_xlat1.xyz);\n    u_xlat1.xy = _ScreenParams.yy * hlslcc_mtx4x4glstate_matrix_projection[1].xy;\n    u_xlat1.xy = hlslcc_mtx4x4glstate_matrix_projection[0].xy * _ScreenParams.xx + u_xlat1.xy;\n    u_xlat1.xy = abs(u_xlat1.xy) * vec2(_ScaleX, _ScaleY);\n    u_xlat1.xy = u_xlat2.ww / u_xlat1.xy;\n    u_xlat15 = dot(u_xlat1.xy, u_xlat1.xy);\n    u_xlat1.xy = vec2(_MaskSoftnessX, _MaskSoftnessY) * vec2(0.25, 0.25) + u_xlat1.xy;\n    u_xlat1.zw = vec2(0.25, 0.25) / u_xlat1.xy;\n    u_xlat15 = inversesqrt(u_xlat15);\n    u_xlat2.x = abs(in_TEXCOORD1.y) * _GradientScale;\n    u_xlat7 = _Sharpness + 1.0;\n    u_xlat2.x = u_xlat7 * u_xlat2.x;\n    u_xlat7 = u_xlat15 * u_xlat2.x;\n    u_xlat12 = (-_PerspectiveFilter) + 1.0;\n    u_xlat12 = u_xlat12 * abs(u_xlat7);\n    u_xlat15 = u_xlat15 * u_xlat2.x + (-u_xlat12);\n    u_xlat10 = abs(u_xlat10) * u_xlat15 + u_xlat12;\n    u_xlatb15 = hlslcc_mtx4x4glstate_matrix_projection[3].w==0.0;\n    u_xlat10 = (u_xlatb15) ? u_xlat10 : u_xlat7;\n    u_xlat15 = _OutlineSoftness * _ScaleRatioA;\n    u_xlat15 = u_xlat15 * u_xlat10 + 1.0;\n    u_xlat2.x = u_xlat10 / u_xlat15;\n    u_xlat10 = _OutlineWidth * _ScaleRatioA;\n    u_xlat10 = u_xlat2.x * u_xlat10;\n    u_xlat15 = min(u_xlat10, 1.0);\n    u_xlat15 = sqrt(u_xlat15);\n    u_xlat4.x = in_COLOR0.w * _OutlineColor.w;\n    u_xlat4.xyz = _OutlineColor.xyz * u_xlat4.xxx + (-u_xlat16_3.xyz);\n    u_xlat4.w = _OutlineColor.w * in_COLOR0.w + (-u_xlat16_3.w);\n    u_xlat3 = vec4(u_xlat15) * u_xlat4 + u_xlat16_3;\n    vs_COLOR1 = u_xlat3;\n    u_xlat3 = max(_ClipRect, vec4(-2e+10, -2e+10, -2e+10, -2e+10));\n    u_xlat3 = min(u_xlat3, vec4(2e+10, 2e+10, 2e+10, 2e+10));\n    u_xlat4.xy = u_xlat0.xy + (-u_xlat3.xy);\n    u_xlat0.xy = u_xlat0.xy * vec2(2.0, 2.0) + (-u_xlat3.xy);\n    u_xlat1.xy = (-u_xlat3.zw) + u_xlat0.xy;\n    u_xlat0.xy = (-u_xlat3.xy) + u_xlat3.zw;\n    vs_TEXCOORD0.zw = u_xlat4.xy / u_xlat0.xy;\n    vs_TEXCOORD2 = u_xlat1;\n    vs_TEXCOORD0.xy = in_TEXCOORD0.xy;\n    u_xlatb0 = 0.0>=in_TEXCOORD1.y;\n    u_xlat0.x = u_xlatb0 ? 1.0 : float(0.0);\n    u_xlat5 = (-_WeightNormal) + _WeightBold;\n    u_xlat0.x = u_xlat0.x * u_xlat5 + _WeightNormal;\n    u_xlat0.x = u_xlat0.x * 0.25 + _FaceDilate;\n    u_xlat0.x = u_xlat0.x * _ScaleRatioA;\n    u_xlat0.x = (-u_xlat0.x) * 0.5 + 0.5;\n    u_xlat2.w = u_xlat0.x * u_xlat2.x + -0.5;\n    u_xlat2.y = (-u_xlat10) * 0.5 + u_xlat2.w;\n    u_xlat2.z = u_xlat10 * 0.5 + u_xlat2.w;\n    vs_TEXCOORD1 = u_xlat2;\n    return;\n}\n\n","\n#version 100\n\n#ifdef GL_FRAGMENT_PRECISION_HIGH\n    precision highp float;\n#else\n    precision mediump float;\n#endif\nprecision highp int;\nuniform \tvec4 _ClipRect;\nuniform lowp sampler2D _MainTex;\nvarying mediump vec4 vs_COLOR0;\nvarying highp vec4 vs_TEXCOORD0;\nvarying mediump vec4 vs_TEXCOORD1;\nvarying mediump vec4 vs_TEXCOORD2;\n#define SV_Target0 gl_FragData[0]\nvec2 u_xlat0;\nmediump vec4 u_xlat16_0;\nlowp float u_xlat10_0;\nmediump float u_xlat16_1;\nbool u_xlatb2;\nmediump float u_xlat16_4;\nvoid main()\n{\n    u_xlat0.xy = (-_ClipRect.xy) + _ClipRect.zw;\n    u_xlat0.xy = u_xlat0.xy + -abs(vs_TEXCOORD2.xy);\n    u_xlat0.xy = u_xlat0.xy * vs_TEXCOORD2.zw;\n    u_xlat0.xy = clamp(u_xlat0.xy, 0.0, 1.0);\n    u_xlat16_1 = u_xlat0.y * u_xlat0.x;\n    u_xlat10_0 = texture2D(_MainTex, vs_TEXCOORD0.xy).w;\n    u_xlat16_4 = u_xlat10_0 * vs_TEXCOORD1.x + (-vs_TEXCOORD1.w);\n    u_xlat16_4 = clamp(u_xlat16_4, 0.0, 1.0);\n    u_xlat16_0 = vec4(u_xlat16_4) * vs_COLOR0;\n    u_xlat16_4 = u_xlat16_0.w * u_xlat16_1 + -0.00100000005;\n    u_xlat16_0 = vec4(u_xlat16_1) * u_xlat16_0;\n    SV_Target0 = u_xlat16_0;\n    u_xlatb2 = u_xlat16_4<0.0;\n    if(u_xlatb2){discard;}\n    return;\n}\n\n",0,0,3,0,0,["UNITY_UI_ALPHACLIP","UNITY_UI_CLIP_RECT"],[["IGNOREPROJECTOR","true"],["QUEUE","Overlay"],["RenderType","Transparent"]]]],["OUTLINE_ON","STEREO_CUBEMAP_RENDER_ON","STEREO_INSTANCING_ON","STEREO_MULTIVIEW_ON","UNDERLAY_INNER","UNDERLAY_ON","UNITY_SINGLE_PASS_STEREO","UNITY_UI_ALPHACLIP","UNITY_UI_CLIP_RECT","__"],[[["__","OUTLINE_ON"]],[["__","UNDERLAY_ON","UNDERLAY_INNER"]],[["__","UNITY_UI_CLIP_RECT"]],[["__","UNITY_UI_ALPHACLIP"]]],0,0,5,0,0,0,0,[["IGNOREPROJECTOR","true"],["QUEUE","Overlay"],["RenderType","Transparent"]],null,"",33,-1]],[["IGNOREPROJECTOR","true"],["QUEUE","Overlay"],["RenderType","Transparent"]],0]],0,428,"Assets/TextMesh Pro/Shaders/TMP_SDF-Mobile Overlay.shader",["OUTLINE_ON","UNDERLAY_INNER","UNDERLAY_ON","UNITY_UI_ALPHACLIP","UNITY_UI_CLIP_RECT","STEREO_CUBEMAP_RENDER_ON","STEREO_INSTANCING_ON","STEREO_MULTIVIEW_ON","UNITY_SINGLE_PASS_STEREO","__"],null,null,[],5],[[[0,[["TextMeshPro/Mobile/Distance Field SSD",[[0,"\n#version 100\n\nuniform \tvec4 hlslcc_mtx4x4unity_ObjectToWorld[4];\nuniform \tvec4 hlslcc_mtx4x4unity_MatrixVP[4];\nuniform \tmediump vec4 _FaceColor;\nuniform \tfloat _FaceDilate;\nuniform \tmediump vec4 _OutlineColor;\nuniform \tfloat _OutlineWidth;\nuniform \tfloat _WeightNormal;\nuniform \tfloat _WeightBold;\nuniform \tfloat _ScaleRatioA;\nuniform \tfloat _VertexOffsetX;\nuniform \tfloat _VertexOffsetY;\nuniform \tvec4 _ClipRect;\nuniform \tfloat _TextureWidth;\nuniform \tfloat _GradientScale;\nuniform \tfloat _Sharpness;\nattribute highp vec4 in_POSITION0;\nattribute highp vec4 in_COLOR0;\nattribute highp vec2 in_TEXCOORD0;\nattribute highp vec2 in_TEXCOORD1;\nvarying highp vec4 vs_COLOR0;\nvarying highp vec4 vs_COLOR1;\nvarying highp vec4 vs_TEXCOORD0;\nvarying highp vec4 vs_TEXCOORD1;\nvarying highp vec2 vs_TEXCOORD2;\nvec2 u_xlat0;\nbool u_xlatb0;\nvec4 u_xlat1;\nvec4 u_xlat2;\nfloat u_xlat3;\nvec2 u_xlat6;\nvoid main()\n{\n    u_xlat0.xy = in_POSITION0.xy + vec2(_VertexOffsetX, _VertexOffsetY);\n    u_xlat1 = u_xlat0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];\n    u_xlat1 = hlslcc_mtx4x4unity_ObjectToWorld[0] * u_xlat0.xxxx + u_xlat1;\n    u_xlat1 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat1;\n    u_xlat1 = u_xlat1 + hlslcc_mtx4x4unity_ObjectToWorld[3];\n    u_xlat2 = u_xlat1.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];\n    u_xlat2 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat1.xxxx + u_xlat2;\n    u_xlat2 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat1.zzzz + u_xlat2;\n    gl_Position = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat1.wwww + u_xlat2;\n    u_xlat1 = in_COLOR0 * _FaceColor;\n    vs_COLOR0.xyz = u_xlat1.www * u_xlat1.xyz;\n    vs_COLOR0.w = u_xlat1.w;\n    u_xlat6.x = in_COLOR0.w * _OutlineColor.w;\n    vs_COLOR1.xyz = u_xlat6.xxx * _OutlineColor.xyz;\n    vs_COLOR1.w = u_xlat6.x;\n    u_xlat1 = max(_ClipRect, vec4(-2e+10, -2e+10, -2e+10, -2e+10));\n    u_xlat1 = min(u_xlat1, vec4(2e+10, 2e+10, 2e+10, 2e+10));\n    u_xlat0.xy = u_xlat0.xy + (-u_xlat1.xy);\n    u_xlat6.xy = (-u_xlat1.xy) + u_xlat1.zw;\n    vs_TEXCOORD0.zw = u_xlat0.xy / u_xlat6.xy;\n    vs_TEXCOORD0.xy = in_TEXCOORD0.xy;\n    u_xlatb0 = 0.0>=in_TEXCOORD1.y;\n    u_xlat0.x = u_xlatb0 ? 1.0 : float(0.0);\n    u_xlat3 = (-_WeightNormal) + _WeightBold;\n    u_xlat0.x = u_xlat0.x * u_xlat3 + _WeightNormal;\n    u_xlat0.x = u_xlat0.x * 0.25 + _FaceDilate;\n    u_xlat0.x = u_xlat0.x * _ScaleRatioA;\n    vs_TEXCOORD1.x = (-u_xlat0.x) * 0.5 + 0.5;\n    u_xlat0.x = _GradientScale * 1.33329999;\n    u_xlat3 = _Sharpness + 1.0;\n    u_xlat0.x = u_xlat3 * u_xlat0.x;\n    vs_TEXCOORD1.y = u_xlat0.x / _TextureWidth;\n    u_xlat0.x = _OutlineWidth * _ScaleRatioA;\n    vs_TEXCOORD1.z = u_xlat0.x * 0.5;\n    vs_TEXCOORD1.w = 0.0;\n    vs_TEXCOORD2.xy = vec2(0.0, 0.0);\n    return;\n}\n\n","\n#version 100\n#ifdef GL_OES_standard_derivatives\n#extension GL_OES_standard_derivatives : enable\n#endif\n\n#ifdef GL_FRAGMENT_PRECISION_HIGH\n    precision highp float;\n#else\n    precision mediump float;\n#endif\nprecision highp int;\nuniform \tfloat _OutlineSoftness;\nuniform \tfloat _ScaleRatioA;\nuniform lowp sampler2D _MainTex;\nvarying highp vec4 vs_COLOR0;\nvarying highp vec4 vs_TEXCOORD0;\nvarying highp vec4 vs_TEXCOORD1;\n#define SV_Target0 gl_FragData[0]\nvec2 u_xlat0;\nfloat u_xlat1;\nlowp float u_xlat10_1;\nvec2 u_xlat2;\nvoid main()\n{\n    u_xlat0.xy = dFdx(vs_TEXCOORD0.xy);\n    u_xlat2.xy = dFdy(vs_TEXCOORD0.yx);\n    u_xlat1 = u_xlat2.y * u_xlat0.y;\n    u_xlat0.x = u_xlat0.x * u_xlat2.x + (-u_xlat1);\n    u_xlat0.x = inversesqrt(abs(u_xlat0.x));\n    u_xlat0.x = u_xlat0.x * vs_TEXCOORD1.y;\n    u_xlat1 = _OutlineSoftness * _ScaleRatioA;\n    u_xlat1 = u_xlat1 * u_xlat0.x + 1.0;\n    u_xlat0.x = u_xlat0.x / u_xlat1;\n    u_xlat10_1 = texture2D(_MainTex, vs_TEXCOORD0.xy).w;\n    u_xlat1 = u_xlat10_1 + (-vs_TEXCOORD1.x);\n    u_xlat0.x = u_xlat1 * u_xlat0.x + 0.5;\n    u_xlat0.x = clamp(u_xlat0.x, 0.0, 1.0);\n    SV_Target0 = u_xlat0.xxxx * vs_COLOR0;\n    return;\n}\n\n",0,0,0,0,0,[],[["IGNOREPROJECTOR","true"],["QUEUE","Transparent"],["RenderType","Transparent"]]],[0,"\n#version 100\n\nuniform \tvec4 hlslcc_mtx4x4unity_ObjectToWorld[4];\nuniform \tvec4 hlslcc_mtx4x4unity_MatrixVP[4];\nuniform \tmediump vec4 _FaceColor;\nuniform \tfloat _FaceDilate;\nuniform \tmediump vec4 _OutlineColor;\nuniform \tfloat _OutlineWidth;\nuniform \tfloat _WeightNormal;\nuniform \tfloat _WeightBold;\nuniform \tfloat _ScaleRatioA;\nuniform \tfloat _VertexOffsetX;\nuniform \tfloat _VertexOffsetY;\nuniform \tvec4 _ClipRect;\nuniform \tfloat _TextureWidth;\nuniform \tfloat _GradientScale;\nuniform \tfloat _Sharpness;\nattribute highp vec4 in_POSITION0;\nattribute highp vec4 in_COLOR0;\nattribute highp vec2 in_TEXCOORD0;\nattribute highp vec2 in_TEXCOORD1;\nvarying highp vec4 vs_COLOR0;\nvarying highp vec4 vs_COLOR1;\nvarying highp vec4 vs_TEXCOORD0;\nvarying highp vec4 vs_TEXCOORD1;\nvarying highp vec2 vs_TEXCOORD2;\nvec2 u_xlat0;\nbool u_xlatb0;\nvec4 u_xlat1;\nvec4 u_xlat2;\nfloat u_xlat3;\nvec2 u_xlat6;\nvoid main()\n{\n    u_xlat0.xy = in_POSITION0.xy + vec2(_VertexOffsetX, _VertexOffsetY);\n    u_xlat1 = u_xlat0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];\n    u_xlat1 = hlslcc_mtx4x4unity_ObjectToWorld[0] * u_xlat0.xxxx + u_xlat1;\n    u_xlat1 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat1;\n    u_xlat1 = u_xlat1 + hlslcc_mtx4x4unity_ObjectToWorld[3];\n    u_xlat2 = u_xlat1.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];\n    u_xlat2 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat1.xxxx + u_xlat2;\n    u_xlat2 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat1.zzzz + u_xlat2;\n    gl_Position = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat1.wwww + u_xlat2;\n    u_xlat1 = in_COLOR0 * _FaceColor;\n    vs_COLOR0.xyz = u_xlat1.www * u_xlat1.xyz;\n    vs_COLOR0.w = u_xlat1.w;\n    u_xlat6.x = in_COLOR0.w * _OutlineColor.w;\n    vs_COLOR1.xyz = u_xlat6.xxx * _OutlineColor.xyz;\n    vs_COLOR1.w = u_xlat6.x;\n    u_xlat1 = max(_ClipRect, vec4(-2e+10, -2e+10, -2e+10, -2e+10));\n    u_xlat1 = min(u_xlat1, vec4(2e+10, 2e+10, 2e+10, 2e+10));\n    u_xlat0.xy = u_xlat0.xy + (-u_xlat1.xy);\n    u_xlat6.xy = (-u_xlat1.xy) + u_xlat1.zw;\n    vs_TEXCOORD0.zw = u_xlat0.xy / u_xlat6.xy;\n    vs_TEXCOORD0.xy = in_TEXCOORD0.xy;\n    u_xlatb0 = 0.0>=in_TEXCOORD1.y;\n    u_xlat0.x = u_xlatb0 ? 1.0 : float(0.0);\n    u_xlat3 = (-_WeightNormal) + _WeightBold;\n    u_xlat0.x = u_xlat0.x * u_xlat3 + _WeightNormal;\n    u_xlat0.x = u_xlat0.x * 0.25 + _FaceDilate;\n    u_xlat0.x = u_xlat0.x * _ScaleRatioA;\n    vs_TEXCOORD1.x = (-u_xlat0.x) * 0.5 + 0.5;\n    u_xlat0.x = _GradientScale * 1.33329999;\n    u_xlat3 = _Sharpness + 1.0;\n    u_xlat0.x = u_xlat3 * u_xlat0.x;\n    vs_TEXCOORD1.y = u_xlat0.x / _TextureWidth;\n    u_xlat0.x = _OutlineWidth * _ScaleRatioA;\n    vs_TEXCOORD1.z = u_xlat0.x * 0.5;\n    vs_TEXCOORD1.w = 0.0;\n    vs_TEXCOORD2.xy = vec2(0.0, 0.0);\n    return;\n}\n\n","\n#version 100\n#ifdef GL_OES_standard_derivatives\n#extension GL_OES_standard_derivatives : enable\n#endif\n\n#ifdef GL_FRAGMENT_PRECISION_HIGH\n    precision highp float;\n#else\n    precision mediump float;\n#endif\nprecision highp int;\nuniform \tfloat _OutlineSoftness;\nuniform \tfloat _ScaleRatioA;\nuniform lowp sampler2D _MainTex;\nvarying highp vec4 vs_COLOR0;\nvarying highp vec4 vs_TEXCOORD0;\nvarying highp vec4 vs_TEXCOORD1;\n#define SV_Target0 gl_FragData[0]\nvec2 u_xlat0;\nbool u_xlatb0;\nvec4 u_xlat1;\nfloat u_xlat2;\nlowp float u_xlat10_2;\nvec2 u_xlat4;\nvoid main()\n{\n    u_xlat0.xy = dFdx(vs_TEXCOORD0.xy);\n    u_xlat4.xy = dFdy(vs_TEXCOORD0.yx);\n    u_xlat2 = u_xlat4.y * u_xlat0.y;\n    u_xlat0.x = u_xlat0.x * u_xlat4.x + (-u_xlat2);\n    u_xlat0.x = inversesqrt(abs(u_xlat0.x));\n    u_xlat0.x = u_xlat0.x * vs_TEXCOORD1.y;\n    u_xlat2 = _OutlineSoftness * _ScaleRatioA;\n    u_xlat2 = u_xlat2 * u_xlat0.x + 1.0;\n    u_xlat0.x = u_xlat0.x / u_xlat2;\n    u_xlat10_2 = texture2D(_MainTex, vs_TEXCOORD0.xy).w;\n    u_xlat2 = u_xlat10_2 + (-vs_TEXCOORD1.x);\n    u_xlat0.x = u_xlat2 * u_xlat0.x + 0.5;\n    u_xlat0.x = clamp(u_xlat0.x, 0.0, 1.0);\n    u_xlat2 = vs_COLOR0.w * u_xlat0.x + -0.00100000005;\n    u_xlat1 = u_xlat0.xxxx * vs_COLOR0;\n    SV_Target0 = u_xlat1;\n    u_xlatb0 = u_xlat2<0.0;\n    if(u_xlatb0){discard;}\n    return;\n}\n\n",0,0,1,0,0,["UNITY_UI_ALPHACLIP"],[["IGNOREPROJECTOR","true"],["QUEUE","Transparent"],["RenderType","Transparent"]]],[0,"\n#version 100\n\nuniform \tvec4 hlslcc_mtx4x4unity_ObjectToWorld[4];\nuniform \tvec4 hlslcc_mtx4x4unity_MatrixVP[4];\nuniform \tmediump vec4 _FaceColor;\nuniform \tfloat _FaceDilate;\nuniform \tmediump vec4 _OutlineColor;\nuniform \tfloat _OutlineWidth;\nuniform \tfloat _WeightNormal;\nuniform \tfloat _WeightBold;\nuniform \tfloat _ScaleRatioA;\nuniform \tfloat _VertexOffsetX;\nuniform \tfloat _VertexOffsetY;\nuniform \tvec4 _ClipRect;\nuniform \tfloat _TextureWidth;\nuniform \tfloat _GradientScale;\nuniform \tfloat _Sharpness;\nattribute highp vec4 in_POSITION0;\nattribute highp vec4 in_COLOR0;\nattribute highp vec2 in_TEXCOORD0;\nattribute highp vec2 in_TEXCOORD1;\nvarying highp vec4 vs_COLOR0;\nvarying highp vec4 vs_COLOR1;\nvarying highp vec4 vs_TEXCOORD0;\nvarying highp vec4 vs_TEXCOORD1;\nvarying highp vec2 vs_TEXCOORD2;\nvec2 u_xlat0;\nbool u_xlatb0;\nvec4 u_xlat1;\nvec4 u_xlat2;\nfloat u_xlat3;\nvec2 u_xlat6;\nvoid main()\n{\n    u_xlat0.xy = in_POSITION0.xy + vec2(_VertexOffsetX, _VertexOffsetY);\n    u_xlat1 = u_xlat0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];\n    u_xlat1 = hlslcc_mtx4x4unity_ObjectToWorld[0] * u_xlat0.xxxx + u_xlat1;\n    u_xlat1 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat1;\n    u_xlat1 = u_xlat1 + hlslcc_mtx4x4unity_ObjectToWorld[3];\n    u_xlat2 = u_xlat1.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];\n    u_xlat2 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat1.xxxx + u_xlat2;\n    u_xlat2 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat1.zzzz + u_xlat2;\n    gl_Position = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat1.wwww + u_xlat2;\n    u_xlat1 = in_COLOR0 * _FaceColor;\n    vs_COLOR0.xyz = u_xlat1.www * u_xlat1.xyz;\n    vs_COLOR0.w = u_xlat1.w;\n    u_xlat6.x = in_COLOR0.w * _OutlineColor.w;\n    vs_COLOR1.xyz = u_xlat6.xxx * _OutlineColor.xyz;\n    vs_COLOR1.w = u_xlat6.x;\n    u_xlat1 = max(_ClipRect, vec4(-2e+10, -2e+10, -2e+10, -2e+10));\n    u_xlat1 = min(u_xlat1, vec4(2e+10, 2e+10, 2e+10, 2e+10));\n    u_xlat6.xy = u_xlat0.xy + (-u_xlat1.xy);\n    u_xlat0.xy = u_xlat0.xy * vec2(2.0, 2.0) + (-u_xlat1.xy);\n    vs_TEXCOORD2.xy = (-u_xlat1.zw) + u_xlat0.xy;\n    u_xlat0.xy = (-u_xlat1.xy) + u_xlat1.zw;\n    vs_TEXCOORD0.zw = u_xlat6.xy / u_xlat0.xy;\n    vs_TEXCOORD0.xy = in_TEXCOORD0.xy;\n    u_xlatb0 = 0.0>=in_TEXCOORD1.y;\n    u_xlat0.x = u_xlatb0 ? 1.0 : float(0.0);\n    u_xlat3 = (-_WeightNormal) + _WeightBold;\n    u_xlat0.x = u_xlat0.x * u_xlat3 + _WeightNormal;\n    u_xlat0.x = u_xlat0.x * 0.25 + _FaceDilate;\n    u_xlat0.x = u_xlat0.x * _ScaleRatioA;\n    vs_TEXCOORD1.x = (-u_xlat0.x) * 0.5 + 0.5;\n    u_xlat0.x = _GradientScale * 1.33329999;\n    u_xlat3 = _Sharpness + 1.0;\n    u_xlat0.x = u_xlat3 * u_xlat0.x;\n    vs_TEXCOORD1.y = u_xlat0.x / _TextureWidth;\n    u_xlat0.x = _OutlineWidth * _ScaleRatioA;\n    vs_TEXCOORD1.z = u_xlat0.x * 0.5;\n    vs_TEXCOORD1.w = 0.0;\n    return;\n}\n\n","\n#version 100\n#ifdef GL_OES_standard_derivatives\n#extension GL_OES_standard_derivatives : enable\n#endif\n\n#ifdef GL_FRAGMENT_PRECISION_HIGH\n    precision highp float;\n#else\n    precision mediump float;\n#endif\nprecision highp int;\nuniform \tfloat _OutlineSoftness;\nuniform \tfloat _ScaleRatioA;\nuniform \tvec4 _ClipRect;\nuniform \tfloat _MaskSoftnessX;\nuniform \tfloat _MaskSoftnessY;\nuniform lowp sampler2D _MainTex;\nvarying highp vec4 vs_COLOR0;\nvarying highp vec4 vs_TEXCOORD0;\nvarying highp vec4 vs_TEXCOORD1;\nvarying highp vec2 vs_TEXCOORD2;\n#define SV_Target0 gl_FragData[0]\nvec2 u_xlat0;\nvec4 u_xlat1;\nvec2 u_xlat2;\nvec2 u_xlat4;\nlowp float u_xlat10_4;\nvoid main()\n{\n    u_xlat0.xy = dFdx(vs_TEXCOORD0.xy);\n    u_xlat4.xy = dFdy(vs_TEXCOORD0.yx);\n    u_xlat2.x = u_xlat4.y * u_xlat0.y;\n    u_xlat0.x = u_xlat0.x * u_xlat4.x + (-u_xlat2.x);\n    u_xlat0.x = inversesqrt(abs(u_xlat0.x));\n    u_xlat0.x = u_xlat0.x * vs_TEXCOORD1.y;\n    u_xlat2.x = _OutlineSoftness * _ScaleRatioA;\n    u_xlat2.x = u_xlat2.x * u_xlat0.x + 1.0;\n    u_xlat0.x = u_xlat0.x / u_xlat2.x;\n    u_xlat2.x = float(1.0) / u_xlat0.x;\n    u_xlat2.xy = vec2(_MaskSoftnessX, _MaskSoftnessY) * vec2(0.25, 0.25) + u_xlat2.xx;\n    u_xlat2.xy = vec2(0.25, 0.25) / u_xlat2.xy;\n    u_xlat1.xy = (-_ClipRect.xy) + _ClipRect.zw;\n    u_xlat1.xy = u_xlat1.xy + -abs(vs_TEXCOORD2.xy);\n    u_xlat2.xy = u_xlat2.xy * u_xlat1.xy;\n    u_xlat2.xy = clamp(u_xlat2.xy, 0.0, 1.0);\n    u_xlat2.x = u_xlat2.y * u_xlat2.x;\n    u_xlat10_4 = texture2D(_MainTex, vs_TEXCOORD0.xy).w;\n    u_xlat4.x = u_xlat10_4 + (-vs_TEXCOORD1.x);\n    u_xlat0.x = u_xlat4.x * u_xlat0.x + 0.5;\n    u_xlat0.x = clamp(u_xlat0.x, 0.0, 1.0);\n    u_xlat1 = u_xlat0.xxxx * vs_COLOR0;\n    SV_Target0 = u_xlat2.xxxx * u_xlat1;\n    return;\n}\n\n",0,0,2,0,0,["UNITY_UI_CLIP_RECT"],[["IGNOREPROJECTOR","true"],["QUEUE","Transparent"],["RenderType","Transparent"]]],[0,"\n#version 100\n\nuniform \tvec4 hlslcc_mtx4x4unity_ObjectToWorld[4];\nuniform \tvec4 hlslcc_mtx4x4unity_MatrixVP[4];\nuniform \tmediump vec4 _FaceColor;\nuniform \tfloat _FaceDilate;\nuniform \tmediump vec4 _OutlineColor;\nuniform \tfloat _OutlineWidth;\nuniform \tfloat _WeightNormal;\nuniform \tfloat _WeightBold;\nuniform \tfloat _ScaleRatioA;\nuniform \tfloat _VertexOffsetX;\nuniform \tfloat _VertexOffsetY;\nuniform \tvec4 _ClipRect;\nuniform \tfloat _TextureWidth;\nuniform \tfloat _GradientScale;\nuniform \tfloat _Sharpness;\nattribute highp vec4 in_POSITION0;\nattribute highp vec4 in_COLOR0;\nattribute highp vec2 in_TEXCOORD0;\nattribute highp vec2 in_TEXCOORD1;\nvarying highp vec4 vs_COLOR0;\nvarying highp vec4 vs_COLOR1;\nvarying highp vec4 vs_TEXCOORD0;\nvarying highp vec4 vs_TEXCOORD1;\nvarying highp vec2 vs_TEXCOORD2;\nvec2 u_xlat0;\nbool u_xlatb0;\nvec4 u_xlat1;\nvec4 u_xlat2;\nfloat u_xlat3;\nvec2 u_xlat6;\nvoid main()\n{\n    u_xlat0.xy = in_POSITION0.xy + vec2(_VertexOffsetX, _VertexOffsetY);\n    u_xlat1 = u_xlat0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];\n    u_xlat1 = hlslcc_mtx4x4unity_ObjectToWorld[0] * u_xlat0.xxxx + u_xlat1;\n    u_xlat1 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat1;\n    u_xlat1 = u_xlat1 + hlslcc_mtx4x4unity_ObjectToWorld[3];\n    u_xlat2 = u_xlat1.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];\n    u_xlat2 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat1.xxxx + u_xlat2;\n    u_xlat2 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat1.zzzz + u_xlat2;\n    gl_Position = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat1.wwww + u_xlat2;\n    u_xlat1 = in_COLOR0 * _FaceColor;\n    vs_COLOR0.xyz = u_xlat1.www * u_xlat1.xyz;\n    vs_COLOR0.w = u_xlat1.w;\n    u_xlat6.x = in_COLOR0.w * _OutlineColor.w;\n    vs_COLOR1.xyz = u_xlat6.xxx * _OutlineColor.xyz;\n    vs_COLOR1.w = u_xlat6.x;\n    u_xlat1 = max(_ClipRect, vec4(-2e+10, -2e+10, -2e+10, -2e+10));\n    u_xlat1 = min(u_xlat1, vec4(2e+10, 2e+10, 2e+10, 2e+10));\n    u_xlat6.xy = u_xlat0.xy + (-u_xlat1.xy);\n    u_xlat0.xy = u_xlat0.xy * vec2(2.0, 2.0) + (-u_xlat1.xy);\n    vs_TEXCOORD2.xy = (-u_xlat1.zw) + u_xlat0.xy;\n    u_xlat0.xy = (-u_xlat1.xy) + u_xlat1.zw;\n    vs_TEXCOORD0.zw = u_xlat6.xy / u_xlat0.xy;\n    vs_TEXCOORD0.xy = in_TEXCOORD0.xy;\n    u_xlatb0 = 0.0>=in_TEXCOORD1.y;\n    u_xlat0.x = u_xlatb0 ? 1.0 : float(0.0);\n    u_xlat3 = (-_WeightNormal) + _WeightBold;\n    u_xlat0.x = u_xlat0.x * u_xlat3 + _WeightNormal;\n    u_xlat0.x = u_xlat0.x * 0.25 + _FaceDilate;\n    u_xlat0.x = u_xlat0.x * _ScaleRatioA;\n    vs_TEXCOORD1.x = (-u_xlat0.x) * 0.5 + 0.5;\n    u_xlat0.x = _GradientScale * 1.33329999;\n    u_xlat3 = _Sharpness + 1.0;\n    u_xlat0.x = u_xlat3 * u_xlat0.x;\n    vs_TEXCOORD1.y = u_xlat0.x / _TextureWidth;\n    u_xlat0.x = _OutlineWidth * _ScaleRatioA;\n    vs_TEXCOORD1.z = u_xlat0.x * 0.5;\n    vs_TEXCOORD1.w = 0.0;\n    return;\n}\n\n","\n#version 100\n#ifdef GL_OES_standard_derivatives\n#extension GL_OES_standard_derivatives : enable\n#endif\n\n#ifdef GL_FRAGMENT_PRECISION_HIGH\n    precision highp float;\n#else\n    precision mediump float;\n#endif\nprecision highp int;\nuniform \tfloat _OutlineSoftness;\nuniform \tfloat _ScaleRatioA;\nuniform \tvec4 _ClipRect;\nuniform \tfloat _MaskSoftnessX;\nuniform \tfloat _MaskSoftnessY;\nuniform lowp sampler2D _MainTex;\nvarying highp vec4 vs_COLOR0;\nvarying highp vec4 vs_TEXCOORD0;\nvarying highp vec4 vs_TEXCOORD1;\nvarying highp vec2 vs_TEXCOORD2;\n#define SV_Target0 gl_FragData[0]\nvec2 u_xlat0;\nbool u_xlatb0;\nvec4 u_xlat1;\nvec2 u_xlat2;\nvec2 u_xlat4;\nlowp float u_xlat10_4;\nvoid main()\n{\n    u_xlat0.xy = dFdx(vs_TEXCOORD0.xy);\n    u_xlat4.xy = dFdy(vs_TEXCOORD0.yx);\n    u_xlat2.x = u_xlat4.y * u_xlat0.y;\n    u_xlat0.x = u_xlat0.x * u_xlat4.x + (-u_xlat2.x);\n    u_xlat0.x = inversesqrt(abs(u_xlat0.x));\n    u_xlat0.x = u_xlat0.x * vs_TEXCOORD1.y;\n    u_xlat2.x = _OutlineSoftness * _ScaleRatioA;\n    u_xlat2.x = u_xlat2.x * u_xlat0.x + 1.0;\n    u_xlat0.x = u_xlat0.x / u_xlat2.x;\n    u_xlat2.x = float(1.0) / u_xlat0.x;\n    u_xlat2.xy = vec2(_MaskSoftnessX, _MaskSoftnessY) * vec2(0.25, 0.25) + u_xlat2.xx;\n    u_xlat2.xy = vec2(0.25, 0.25) / u_xlat2.xy;\n    u_xlat1.xy = (-_ClipRect.xy) + _ClipRect.zw;\n    u_xlat1.xy = u_xlat1.xy + -abs(vs_TEXCOORD2.xy);\n    u_xlat2.xy = u_xlat2.xy * u_xlat1.xy;\n    u_xlat2.xy = clamp(u_xlat2.xy, 0.0, 1.0);\n    u_xlat2.x = u_xlat2.y * u_xlat2.x;\n    u_xlat10_4 = texture2D(_MainTex, vs_TEXCOORD0.xy).w;\n    u_xlat4.x = u_xlat10_4 + (-vs_TEXCOORD1.x);\n    u_xlat0.x = u_xlat4.x * u_xlat0.x + 0.5;\n    u_xlat0.x = clamp(u_xlat0.x, 0.0, 1.0);\n    u_xlat1 = u_xlat0.xxxx * vs_COLOR0;\n    u_xlat0.x = u_xlat1.w * u_xlat2.x + -0.00100000005;\n    u_xlat1 = u_xlat2.xxxx * u_xlat1;\n    SV_Target0 = u_xlat1;\n    u_xlatb0 = u_xlat0.x<0.0;\n    if(u_xlatb0){discard;}\n    return;\n}\n\n",0,0,3,0,0,["UNITY_UI_ALPHACLIP","UNITY_UI_CLIP_RECT"],[["IGNOREPROJECTOR","true"],["QUEUE","Transparent"],["RenderType","Transparent"]]]],["OUTLINE_ON","STEREO_CUBEMAP_RENDER_ON","STEREO_INSTANCING_ON","STEREO_MULTIVIEW_ON","UNDERLAY_INNER","UNDERLAY_ON","UNITY_SINGLE_PASS_STEREO","UNITY_UI_ALPHACLIP","UNITY_UI_CLIP_RECT","__"],[[["__","OUTLINE_ON"]],[["__","UNDERLAY_ON","UNDERLAY_INNER"]],[["__","UNITY_UI_CLIP_RECT"]],[["__","UNITY_UI_ALPHACLIP"]]],0,0,5,0,0,0,0,[["IGNOREPROJECTOR","true"],["QUEUE","Transparent"],["RenderType","Transparent"]],null,"",33,-1]],[["IGNOREPROJECTOR","true"],["QUEUE","Transparent"],["RenderType","Transparent"]],0]],0,430,"Assets/TextMesh Pro/Shaders/TMP_SDF-Mobile SSD.shader",["OUTLINE_ON","UNDERLAY_INNER","UNDERLAY_ON","UNITY_UI_ALPHACLIP","UNITY_UI_CLIP_RECT","STEREO_CUBEMAP_RENDER_ON","STEREO_INSTANCING_ON","STEREO_MULTIVIEW_ON","UNITY_SINGLE_PASS_STEREO","__"],null,null,[],5],[[[0,[["TextMeshPro/Sprite",[[0,"\n#version 100\n\nuniform \tvec4 hlslcc_mtx4x4unity_ObjectToWorld[4];\nuniform \tvec4 hlslcc_mtx4x4unity_MatrixVP[4];\nuniform \tmediump vec4 _Color;\nuniform \tvec4 _MainTex_ST;\nattribute highp vec4 in_POSITION0;\nattribute highp vec4 in_COLOR0;\nattribute highp vec2 in_TEXCOORD0;\nvarying mediump vec4 vs_COLOR0;\nvarying highp vec2 vs_TEXCOORD0;\nvarying highp vec4 vs_TEXCOORD1;\nvec4 u_xlat0;\nvec4 u_xlat1;\nvoid main()\n{\n    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];\n    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;\n    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;\n    u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];\n    u_xlat1 = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];\n    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat0.xxxx + u_xlat1;\n    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat0.zzzz + u_xlat1;\n    gl_Position = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat0.wwww + u_xlat1;\n    u_xlat0 = in_COLOR0 * _Color;\n    vs_COLOR0 = u_xlat0;\n    vs_TEXCOORD0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;\n    vs_TEXCOORD1 = in_POSITION0;\n    return;\n}\n\n","\n#version 100\n\n#ifdef GL_FRAGMENT_PRECISION_HIGH\n    precision highp float;\n#else\n    precision mediump float;\n#endif\nprecision highp int;\nuniform \tmediump vec4 _TextureSampleAdd;\nuniform lowp sampler2D _MainTex;\nvarying mediump vec4 vs_COLOR0;\nvarying highp vec2 vs_TEXCOORD0;\n#define SV_Target0 gl_FragData[0]\nvec4 u_xlat0;\nlowp vec4 u_xlat10_0;\nvoid main()\n{\n    u_xlat10_0 = texture2D(_MainTex, vs_TEXCOORD0.xy);\n    u_xlat0 = u_xlat10_0 + _TextureSampleAdd;\n    u_xlat0 = u_xlat0 * vs_COLOR0;\n    SV_Target0 = u_xlat0;\n    return;\n}\n\n",0,0,0,0,0,[],[["CanUseSpriteAtlas","true"],["IGNOREPROJECTOR","true"],["PreviewType","Plane"],["QUEUE","Transparent"],["RenderType","Transparent"]]],[0,"\n#version 100\n\nuniform \tvec4 hlslcc_mtx4x4unity_ObjectToWorld[4];\nuniform \tvec4 hlslcc_mtx4x4unity_MatrixVP[4];\nuniform \tmediump vec4 _Color;\nuniform \tvec4 _MainTex_ST;\nattribute highp vec4 in_POSITION0;\nattribute highp vec4 in_COLOR0;\nattribute highp vec2 in_TEXCOORD0;\nvarying mediump vec4 vs_COLOR0;\nvarying highp vec2 vs_TEXCOORD0;\nvarying highp vec4 vs_TEXCOORD1;\nvec4 u_xlat0;\nvec4 u_xlat1;\nvoid main()\n{\n    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];\n    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;\n    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;\n    u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];\n    u_xlat1 = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];\n    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat0.xxxx + u_xlat1;\n    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat0.zzzz + u_xlat1;\n    gl_Position = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat0.wwww + u_xlat1;\n    u_xlat0 = in_COLOR0 * _Color;\n    vs_COLOR0 = u_xlat0;\n    vs_TEXCOORD0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;\n    vs_TEXCOORD1 = in_POSITION0;\n    return;\n}\n\n","\n#version 100\n\n#ifdef GL_FRAGMENT_PRECISION_HIGH\n    precision highp float;\n#else\n    precision mediump float;\n#endif\nprecision highp int;\nuniform \tmediump vec4 _TextureSampleAdd;\nuniform lowp sampler2D _MainTex;\nvarying mediump vec4 vs_COLOR0;\nvarying highp vec2 vs_TEXCOORD0;\n#define SV_Target0 gl_FragData[0]\nvec4 u_xlat0;\nlowp vec4 u_xlat10_0;\nbool u_xlatb0;\nmediump float u_xlat16_1;\nvoid main()\n{\n    u_xlat10_0 = texture2D(_MainTex, vs_TEXCOORD0.xy);\n    u_xlat0 = u_xlat10_0 + _TextureSampleAdd;\n    u_xlat16_1 = u_xlat0.w * vs_COLOR0.w + -0.00100000005;\n    u_xlat0 = u_xlat0 * vs_COLOR0;\n    SV_Target0 = u_xlat0;\n    u_xlatb0 = u_xlat16_1<0.0;\n    if(u_xlatb0){discard;}\n    return;\n}\n\n",0,0,1,0,0,["UNITY_UI_ALPHACLIP"],[["CanUseSpriteAtlas","true"],["IGNOREPROJECTOR","true"],["PreviewType","Plane"],["QUEUE","Transparent"],["RenderType","Transparent"]]],[0,"\n#version 100\n\nuniform \tvec4 hlslcc_mtx4x4unity_ObjectToWorld[4];\nuniform \tvec4 hlslcc_mtx4x4unity_MatrixVP[4];\nuniform \tmediump vec4 _Color;\nuniform \tvec4 _MainTex_ST;\nattribute highp vec4 in_POSITION0;\nattribute highp vec4 in_COLOR0;\nattribute highp vec2 in_TEXCOORD0;\nvarying mediump vec4 vs_COLOR0;\nvarying highp vec2 vs_TEXCOORD0;\nvarying highp vec4 vs_TEXCOORD1;\nvec4 u_xlat0;\nvec4 u_xlat1;\nvoid main()\n{\n    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];\n    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;\n    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;\n    u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];\n    u_xlat1 = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];\n    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat0.xxxx + u_xlat1;\n    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat0.zzzz + u_xlat1;\n    gl_Position = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat0.wwww + u_xlat1;\n    u_xlat0 = in_COLOR0 * _Color;\n    vs_COLOR0 = u_xlat0;\n    vs_TEXCOORD0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;\n    vs_TEXCOORD1 = in_POSITION0;\n    return;\n}\n\n","\n#version 100\n\n#ifdef GL_FRAGMENT_PRECISION_HIGH\n    precision highp float;\n#else\n    precision mediump float;\n#endif\nprecision highp int;\nuniform \tmediump vec4 _TextureSampleAdd;\nuniform \tvec4 _ClipRect;\nuniform lowp sampler2D _MainTex;\nvarying mediump vec4 vs_COLOR0;\nvarying highp vec2 vs_TEXCOORD0;\nvarying highp vec4 vs_TEXCOORD1;\n#define SV_Target0 gl_FragData[0]\nvec4 u_xlat0;\nbvec4 u_xlatb0;\nvec4 u_xlat1;\nlowp vec4 u_xlat10_1;\nvoid main()\n{\n    u_xlatb0.xy = greaterThanEqual(vs_TEXCOORD1.xyxx, _ClipRect.xyxx).xy;\n    u_xlatb0.zw = greaterThanEqual(_ClipRect.zzzw, vs_TEXCOORD1.xxxy).zw;\n    u_xlat0.x = u_xlatb0.x ? float(1.0) : 0.0;\n    u_xlat0.y = u_xlatb0.y ? float(1.0) : 0.0;\n    u_xlat0.z = u_xlatb0.z ? float(1.0) : 0.0;\n    u_xlat0.w = u_xlatb0.w ? float(1.0) : 0.0;\n;\n    u_xlat0.xy = u_xlat0.zw * u_xlat0.xy;\n    u_xlat0.x = u_xlat0.y * u_xlat0.x;\n    u_xlat10_1 = texture2D(_MainTex, vs_TEXCOORD0.xy);\n    u_xlat1 = u_xlat10_1 + _TextureSampleAdd;\n    u_xlat1 = u_xlat1 * vs_COLOR0;\n    u_xlat1.w = u_xlat0.x * u_xlat1.w;\n    SV_Target0 = u_xlat1;\n    return;\n}\n\n",0,0,2,0,0,["UNITY_UI_CLIP_RECT"],[["CanUseSpriteAtlas","true"],["IGNOREPROJECTOR","true"],["PreviewType","Plane"],["QUEUE","Transparent"],["RenderType","Transparent"]]],[0,"\n#version 100\n\nuniform \tvec4 hlslcc_mtx4x4unity_ObjectToWorld[4];\nuniform \tvec4 hlslcc_mtx4x4unity_MatrixVP[4];\nuniform \tmediump vec4 _Color;\nuniform \tvec4 _MainTex_ST;\nattribute highp vec4 in_POSITION0;\nattribute highp vec4 in_COLOR0;\nattribute highp vec2 in_TEXCOORD0;\nvarying mediump vec4 vs_COLOR0;\nvarying highp vec2 vs_TEXCOORD0;\nvarying highp vec4 vs_TEXCOORD1;\nvec4 u_xlat0;\nvec4 u_xlat1;\nvoid main()\n{\n    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];\n    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;\n    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;\n    u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];\n    u_xlat1 = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];\n    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat0.xxxx + u_xlat1;\n    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat0.zzzz + u_xlat1;\n    gl_Position = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat0.wwww + u_xlat1;\n    u_xlat0 = in_COLOR0 * _Color;\n    vs_COLOR0 = u_xlat0;\n    vs_TEXCOORD0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;\n    vs_TEXCOORD1 = in_POSITION0;\n    return;\n}\n\n","\n#version 100\n\n#ifdef GL_FRAGMENT_PRECISION_HIGH\n    precision highp float;\n#else\n    precision mediump float;\n#endif\nprecision highp int;\nuniform \tmediump vec4 _TextureSampleAdd;\nuniform \tvec4 _ClipRect;\nuniform lowp sampler2D _MainTex;\nvarying mediump vec4 vs_COLOR0;\nvarying highp vec2 vs_TEXCOORD0;\nvarying highp vec4 vs_TEXCOORD1;\n#define SV_Target0 gl_FragData[0]\nvec4 u_xlat0;\nbvec4 u_xlatb0;\nvec4 u_xlat1;\nlowp vec4 u_xlat10_1;\nmediump float u_xlat16_2;\nvoid main()\n{\n    u_xlatb0.xy = greaterThanEqual(vs_TEXCOORD1.xyxx, _ClipRect.xyxx).xy;\n    u_xlatb0.zw = greaterThanEqual(_ClipRect.zzzw, vs_TEXCOORD1.xxxy).zw;\n    u_xlat0.x = u_xlatb0.x ? float(1.0) : 0.0;\n    u_xlat0.y = u_xlatb0.y ? float(1.0) : 0.0;\n    u_xlat0.z = u_xlatb0.z ? float(1.0) : 0.0;\n    u_xlat0.w = u_xlatb0.w ? float(1.0) : 0.0;\n;\n    u_xlat0.xy = u_xlat0.zw * u_xlat0.xy;\n    u_xlat0.x = u_xlat0.y * u_xlat0.x;\n    u_xlat10_1 = texture2D(_MainTex, vs_TEXCOORD0.xy);\n    u_xlat1 = u_xlat10_1 + _TextureSampleAdd;\n    u_xlat1 = u_xlat1 * vs_COLOR0;\n    u_xlat16_2 = u_xlat1.w * u_xlat0.x + -0.00100000005;\n    u_xlat1.w = u_xlat0.x * u_xlat1.w;\n    SV_Target0 = u_xlat1;\n    u_xlatb0.x = u_xlat16_2<0.0;\n    if(u_xlatb0.x){discard;}\n    return;\n}\n\n",0,0,3,0,0,["UNITY_UI_ALPHACLIP","UNITY_UI_CLIP_RECT"],[["CanUseSpriteAtlas","true"],["IGNOREPROJECTOR","true"],["PreviewType","Plane"],["QUEUE","Transparent"],["RenderType","Transparent"]]]],["STEREO_CUBEMAP_RENDER_ON","STEREO_INSTANCING_ON","STEREO_MULTIVIEW_ON","UNITY_SINGLE_PASS_STEREO","UNITY_UI_ALPHACLIP","UNITY_UI_CLIP_RECT","__"],[[["__","UNITY_UI_CLIP_RECT"]],[["__","UNITY_UI_ALPHACLIP"]]],0,0,5,0,0,0,0,[["CanUseSpriteAtlas","true"],["IGNOREPROJECTOR","true"],["PreviewType","Plane"],["QUEUE","Transparent"],["RenderType","Transparent"]],[null,null],"",1,-1]],[["CanUseSpriteAtlas","true"],["IGNOREPROJECTOR","true"],["PreviewType","Plane"],["QUEUE","Transparent"],["RenderType","Transparent"]],0]],0,410,"Assets/TextMesh Pro/Shaders/TMP_Sprite.shader",["UNITY_UI_ALPHACLIP","UNITY_UI_CLIP_RECT","STEREO_CUBEMAP_RENDER_ON","STEREO_INSTANCING_ON","STEREO_MULTIVIEW_ON","UNITY_SINGLE_PASS_STEREO","__"],null,null,[],5],[[[0,[["UI/Default",[[0,"\n#version 100\n\nuniform \tvec4 _ScreenParams;\nuniform \tvec4 hlslcc_mtx4x4unity_ObjectToWorld[4];\nuniform \tvec4 hlslcc_mtx4x4glstate_matrix_projection[4];\nuniform \tvec4 hlslcc_mtx4x4unity_MatrixVP[4];\nuniform \tmediump vec4 _Color;\nuniform \tvec4 _ClipRect;\nuniform \tvec4 _MainTex_ST;\nuniform \tfloat _UIMaskSoftnessX;\nuniform \tfloat _UIMaskSoftnessY;\nattribute highp vec4 in_POSITION0;\nattribute highp vec4 in_COLOR0;\nattribute highp vec2 in_TEXCOORD0;\nvarying mediump vec4 vs_COLOR0;\nvarying highp vec2 vs_TEXCOORD0;\nvarying highp vec4 vs_TEXCOORD1;\nvarying highp vec4 vs_TEXCOORD2;\nvec4 u_xlat0;\nvec4 u_xlat1;\nvoid main()\n{\n    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];\n    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;\n    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;\n    u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];\n    u_xlat1 = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];\n    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat0.xxxx + u_xlat1;\n    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat0.zzzz + u_xlat1;\n    u_xlat0 = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat0.wwww + u_xlat1;\n    gl_Position = u_xlat0;\n    u_xlat1 = in_COLOR0 * _Color;\n    vs_COLOR0 = u_xlat1;\n    vs_TEXCOORD0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;\n    vs_TEXCOORD1 = in_POSITION0;\n    u_xlat0.xy = _ScreenParams.yy * hlslcc_mtx4x4glstate_matrix_projection[1].xy;\n    u_xlat0.xy = hlslcc_mtx4x4glstate_matrix_projection[0].xy * _ScreenParams.xx + u_xlat0.xy;\n    u_xlat0.xy = u_xlat0.ww / abs(u_xlat0.xy);\n    u_xlat0.xy = vec2(_UIMaskSoftnessX, _UIMaskSoftnessY) * vec2(0.25, 0.25) + abs(u_xlat0.xy);\n    vs_TEXCOORD2.zw = vec2(0.25, 0.25) / u_xlat0.xy;\n    u_xlat0 = max(_ClipRect, vec4(-2e+10, -2e+10, -2e+10, -2e+10));\n    u_xlat0 = min(u_xlat0, vec4(2e+10, 2e+10, 2e+10, 2e+10));\n    u_xlat0.xy = in_POSITION0.xy * vec2(2.0, 2.0) + (-u_xlat0.xy);\n    vs_TEXCOORD2.xy = (-u_xlat0.zw) + u_xlat0.xy;\n    return;\n}\n\n","\n#version 100\n\n#ifdef GL_FRAGMENT_PRECISION_HIGH\n    precision highp float;\n#else\n    precision mediump float;\n#endif\nprecision highp int;\nuniform \tmediump vec4 _TextureSampleAdd;\nuniform lowp sampler2D _MainTex;\nvarying mediump vec4 vs_COLOR0;\nvarying highp vec2 vs_TEXCOORD0;\n#define SV_Target0 gl_FragData[0]\nvec4 u_xlat0;\nmediump vec4 u_xlat16_0;\nvec4 u_xlat1;\nlowp vec4 u_xlat10_1;\nfloat unity_roundEven(float x) { float y = floor(x + 0.5); return (y - x == 0.5) ? floor(0.5*y) * 2.0 : y; }\nvec2 unity_roundEven(vec2 a) { a.x = unity_roundEven(a.x); a.y = unity_roundEven(a.y); return a; }\nvec3 unity_roundEven(vec3 a) { a.x = unity_roundEven(a.x); a.y = unity_roundEven(a.y); a.z = unity_roundEven(a.z); return a; }\nvec4 unity_roundEven(vec4 a) { a.x = unity_roundEven(a.x); a.y = unity_roundEven(a.y); a.z = unity_roundEven(a.z); a.w = unity_roundEven(a.w); return a; }\n\nvoid main()\n{\n    u_xlat16_0.x = vs_COLOR0.w * 255.0;\n    u_xlat16_0.x = unity_roundEven(u_xlat16_0.x);\n    u_xlat16_0.w = u_xlat16_0.x * 0.00392156886;\n    u_xlat10_1 = texture2D(_MainTex, vs_TEXCOORD0.xy);\n    u_xlat1 = u_xlat10_1 + _TextureSampleAdd;\n    u_xlat16_0.xyz = vs_COLOR0.xyz;\n    u_xlat0 = u_xlat16_0 * u_xlat1;\n    SV_Target0.xyz = u_xlat0.www * u_xlat0.xyz;\n    SV_Target0.w = u_xlat0.w;\n    return;\n}\n\n",0,0,0,0,0,[],[["CanUseSpriteAtlas","true"],["IGNOREPROJECTOR","true"],["PreviewType","Plane"],["QUEUE","Transparent"],["RenderType","Transparent"]]],[0,"\n#version 100\n\nuniform \tvec4 _ScreenParams;\nuniform \tvec4 hlslcc_mtx4x4unity_ObjectToWorld[4];\nuniform \tvec4 hlslcc_mtx4x4glstate_matrix_projection[4];\nuniform \tvec4 hlslcc_mtx4x4unity_MatrixVP[4];\nuniform \tmediump vec4 _Color;\nuniform \tvec4 _ClipRect;\nuniform \tvec4 _MainTex_ST;\nuniform \tfloat _UIMaskSoftnessX;\nuniform \tfloat _UIMaskSoftnessY;\nattribute highp vec4 in_POSITION0;\nattribute highp vec4 in_COLOR0;\nattribute highp vec2 in_TEXCOORD0;\nvarying mediump vec4 vs_COLOR0;\nvarying highp vec2 vs_TEXCOORD0;\nvarying highp vec4 vs_TEXCOORD1;\nvarying highp vec4 vs_TEXCOORD2;\nvec4 u_xlat0;\nvec4 u_xlat1;\nvoid main()\n{\n    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];\n    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;\n    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;\n    u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];\n    u_xlat1 = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];\n    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat0.xxxx + u_xlat1;\n    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat0.zzzz + u_xlat1;\n    u_xlat0 = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat0.wwww + u_xlat1;\n    gl_Position = u_xlat0;\n    u_xlat1 = in_COLOR0 * _Color;\n    vs_COLOR0 = u_xlat1;\n    vs_TEXCOORD0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;\n    vs_TEXCOORD1 = in_POSITION0;\n    u_xlat0.xy = _ScreenParams.yy * hlslcc_mtx4x4glstate_matrix_projection[1].xy;\n    u_xlat0.xy = hlslcc_mtx4x4glstate_matrix_projection[0].xy * _ScreenParams.xx + u_xlat0.xy;\n    u_xlat0.xy = u_xlat0.ww / abs(u_xlat0.xy);\n    u_xlat0.xy = vec2(_UIMaskSoftnessX, _UIMaskSoftnessY) * vec2(0.25, 0.25) + abs(u_xlat0.xy);\n    vs_TEXCOORD2.zw = vec2(0.25, 0.25) / u_xlat0.xy;\n    u_xlat0 = max(_ClipRect, vec4(-2e+10, -2e+10, -2e+10, -2e+10));\n    u_xlat0 = min(u_xlat0, vec4(2e+10, 2e+10, 2e+10, 2e+10));\n    u_xlat0.xy = in_POSITION0.xy * vec2(2.0, 2.0) + (-u_xlat0.xy);\n    vs_TEXCOORD2.xy = (-u_xlat0.zw) + u_xlat0.xy;\n    return;\n}\n\n","\n#version 100\n\n#ifdef GL_FRAGMENT_PRECISION_HIGH\n    precision highp float;\n#else\n    precision mediump float;\n#endif\nprecision highp int;\nuniform \tmediump vec4 _TextureSampleAdd;\nuniform lowp sampler2D _MainTex;\nvarying mediump vec4 vs_COLOR0;\nvarying highp vec2 vs_TEXCOORD0;\n#define SV_Target0 gl_FragData[0]\nvec4 u_xlat0;\nmediump vec4 u_xlat16_0;\nvec4 u_xlat1;\nlowp vec4 u_xlat10_1;\nmediump float u_xlat16_2;\nbool u_xlatb3;\nfloat unity_roundEven(float x) { float y = floor(x + 0.5); return (y - x == 0.5) ? floor(0.5*y) * 2.0 : y; }\nvec2 unity_roundEven(vec2 a) { a.x = unity_roundEven(a.x); a.y = unity_roundEven(a.y); return a; }\nvec3 unity_roundEven(vec3 a) { a.x = unity_roundEven(a.x); a.y = unity_roundEven(a.y); a.z = unity_roundEven(a.z); return a; }\nvec4 unity_roundEven(vec4 a) { a.x = unity_roundEven(a.x); a.y = unity_roundEven(a.y); a.z = unity_roundEven(a.z); a.w = unity_roundEven(a.w); return a; }\n\nvoid main()\n{\n    u_xlat16_0.x = vs_COLOR0.w * 255.0;\n    u_xlat16_0.x = unity_roundEven(u_xlat16_0.x);\n    u_xlat16_0.w = u_xlat16_0.x * 0.00392156886;\n    u_xlat10_1 = texture2D(_MainTex, vs_TEXCOORD0.xy);\n    u_xlat1 = u_xlat10_1 + _TextureSampleAdd;\n    u_xlat16_2 = u_xlat16_0.w * u_xlat1.w + -0.00100000005;\n    u_xlatb3 = u_xlat16_2<0.0;\n    if(u_xlatb3){discard;}\n    u_xlat16_0.xyz = vs_COLOR0.xyz;\n    u_xlat0 = u_xlat16_0 * u_xlat1;\n    SV_Target0.xyz = u_xlat0.www * u_xlat0.xyz;\n    SV_Target0.w = u_xlat0.w;\n    return;\n}\n\n",0,0,1,0,0,["UNITY_UI_ALPHACLIP"],[["CanUseSpriteAtlas","true"],["IGNOREPROJECTOR","true"],["PreviewType","Plane"],["QUEUE","Transparent"],["RenderType","Transparent"]]],[0,"\n#version 100\n\nuniform \tvec4 _ScreenParams;\nuniform \tvec4 hlslcc_mtx4x4unity_ObjectToWorld[4];\nuniform \tvec4 hlslcc_mtx4x4glstate_matrix_projection[4];\nuniform \tvec4 hlslcc_mtx4x4unity_MatrixVP[4];\nuniform \tmediump vec4 _Color;\nuniform \tvec4 _ClipRect;\nuniform \tvec4 _MainTex_ST;\nuniform \tfloat _UIMaskSoftnessX;\nuniform \tfloat _UIMaskSoftnessY;\nattribute highp vec4 in_POSITION0;\nattribute highp vec4 in_COLOR0;\nattribute highp vec2 in_TEXCOORD0;\nvarying mediump vec4 vs_COLOR0;\nvarying highp vec2 vs_TEXCOORD0;\nvarying highp vec4 vs_TEXCOORD1;\nvarying highp vec4 vs_TEXCOORD2;\nvec4 u_xlat0;\nvec4 u_xlat1;\nvoid main()\n{\n    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];\n    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;\n    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;\n    u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];\n    u_xlat1 = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];\n    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat0.xxxx + u_xlat1;\n    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat0.zzzz + u_xlat1;\n    u_xlat0 = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat0.wwww + u_xlat1;\n    gl_Position = u_xlat0;\n    u_xlat1 = in_COLOR0 * _Color;\n    vs_COLOR0 = u_xlat1;\n    vs_TEXCOORD0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;\n    vs_TEXCOORD1 = in_POSITION0;\n    u_xlat0.xy = _ScreenParams.yy * hlslcc_mtx4x4glstate_matrix_projection[1].xy;\n    u_xlat0.xy = hlslcc_mtx4x4glstate_matrix_projection[0].xy * _ScreenParams.xx + u_xlat0.xy;\n    u_xlat0.xy = u_xlat0.ww / abs(u_xlat0.xy);\n    u_xlat0.xy = vec2(_UIMaskSoftnessX, _UIMaskSoftnessY) * vec2(0.25, 0.25) + abs(u_xlat0.xy);\n    vs_TEXCOORD2.zw = vec2(0.25, 0.25) / u_xlat0.xy;\n    u_xlat0 = max(_ClipRect, vec4(-2e+10, -2e+10, -2e+10, -2e+10));\n    u_xlat0 = min(u_xlat0, vec4(2e+10, 2e+10, 2e+10, 2e+10));\n    u_xlat0.xy = in_POSITION0.xy * vec2(2.0, 2.0) + (-u_xlat0.xy);\n    vs_TEXCOORD2.xy = (-u_xlat0.zw) + u_xlat0.xy;\n    return;\n}\n\n","\n#version 100\n\n#ifdef GL_FRAGMENT_PRECISION_HIGH\n    precision highp float;\n#else\n    precision mediump float;\n#endif\nprecision highp int;\nuniform \tmediump vec4 _TextureSampleAdd;\nuniform \tvec4 _ClipRect;\nuniform lowp sampler2D _MainTex;\nvarying mediump vec4 vs_COLOR0;\nvarying highp vec2 vs_TEXCOORD0;\nvarying highp vec4 vs_TEXCOORD2;\n#define SV_Target0 gl_FragData[0]\nvec4 u_xlat0;\nmediump vec4 u_xlat16_0;\nmediump float u_xlat16_1;\nvec4 u_xlat2;\nlowp vec4 u_xlat10_2;\nmediump float u_xlat16_4;\nfloat unity_roundEven(float x) { float y = floor(x + 0.5); return (y - x == 0.5) ? floor(0.5*y) * 2.0 : y; }\nvec2 unity_roundEven(vec2 a) { a.x = unity_roundEven(a.x); a.y = unity_roundEven(a.y); return a; }\nvec3 unity_roundEven(vec3 a) { a.x = unity_roundEven(a.x); a.y = unity_roundEven(a.y); a.z = unity_roundEven(a.z); return a; }\nvec4 unity_roundEven(vec4 a) { a.x = unity_roundEven(a.x); a.y = unity_roundEven(a.y); a.z = unity_roundEven(a.z); a.w = unity_roundEven(a.w); return a; }\n\nvoid main()\n{\n    u_xlat0.xy = (-_ClipRect.xy) + _ClipRect.zw;\n    u_xlat0.xy = u_xlat0.xy + -abs(vs_TEXCOORD2.xy);\n    u_xlat0.xy = u_xlat0.xy * vs_TEXCOORD2.zw;\n    u_xlat0.xy = clamp(u_xlat0.xy, 0.0, 1.0);\n    u_xlat16_1 = u_xlat0.y * u_xlat0.x;\n    u_xlat16_4 = vs_COLOR0.w * 255.0;\n    u_xlat16_4 = unity_roundEven(u_xlat16_4);\n    u_xlat16_0.w = u_xlat16_4 * 0.00392156886;\n    u_xlat10_2 = texture2D(_MainTex, vs_TEXCOORD0.xy);\n    u_xlat2 = u_xlat10_2 + _TextureSampleAdd;\n    u_xlat16_0.xyz = vs_COLOR0.xyz;\n    u_xlat0 = u_xlat16_0 * u_xlat2;\n    u_xlat16_1 = u_xlat16_1 * u_xlat0.w;\n    SV_Target0.xyz = u_xlat0.xyz * vec3(u_xlat16_1);\n    SV_Target0.w = u_xlat16_1;\n    return;\n}\n\n",0,0,2,0,0,["UNITY_UI_CLIP_RECT"],[["CanUseSpriteAtlas","true"],["IGNOREPROJECTOR","true"],["PreviewType","Plane"],["QUEUE","Transparent"],["RenderType","Transparent"]]],[0,"\n#version 100\n\nuniform \tvec4 _ScreenParams;\nuniform \tvec4 hlslcc_mtx4x4unity_ObjectToWorld[4];\nuniform \tvec4 hlslcc_mtx4x4glstate_matrix_projection[4];\nuniform \tvec4 hlslcc_mtx4x4unity_MatrixVP[4];\nuniform \tmediump vec4 _Color;\nuniform \tvec4 _ClipRect;\nuniform \tvec4 _MainTex_ST;\nuniform \tfloat _UIMaskSoftnessX;\nuniform \tfloat _UIMaskSoftnessY;\nattribute highp vec4 in_POSITION0;\nattribute highp vec4 in_COLOR0;\nattribute highp vec2 in_TEXCOORD0;\nvarying mediump vec4 vs_COLOR0;\nvarying highp vec2 vs_TEXCOORD0;\nvarying highp vec4 vs_TEXCOORD1;\nvarying highp vec4 vs_TEXCOORD2;\nvec4 u_xlat0;\nvec4 u_xlat1;\nvoid main()\n{\n    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];\n    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;\n    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;\n    u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];\n    u_xlat1 = u_xlat0.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];\n    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat0.xxxx + u_xlat1;\n    u_xlat1 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat0.zzzz + u_xlat1;\n    u_xlat0 = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat0.wwww + u_xlat1;\n    gl_Position = u_xlat0;\n    u_xlat1 = in_COLOR0 * _Color;\n    vs_COLOR0 = u_xlat1;\n    vs_TEXCOORD0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;\n    vs_TEXCOORD1 = in_POSITION0;\n    u_xlat0.xy = _ScreenParams.yy * hlslcc_mtx4x4glstate_matrix_projection[1].xy;\n    u_xlat0.xy = hlslcc_mtx4x4glstate_matrix_projection[0].xy * _ScreenParams.xx + u_xlat0.xy;\n    u_xlat0.xy = u_xlat0.ww / abs(u_xlat0.xy);\n    u_xlat0.xy = vec2(_UIMaskSoftnessX, _UIMaskSoftnessY) * vec2(0.25, 0.25) + abs(u_xlat0.xy);\n    vs_TEXCOORD2.zw = vec2(0.25, 0.25) / u_xlat0.xy;\n    u_xlat0 = max(_ClipRect, vec4(-2e+10, -2e+10, -2e+10, -2e+10));\n    u_xlat0 = min(u_xlat0, vec4(2e+10, 2e+10, 2e+10, 2e+10));\n    u_xlat0.xy = in_POSITION0.xy * vec2(2.0, 2.0) + (-u_xlat0.xy);\n    vs_TEXCOORD2.xy = (-u_xlat0.zw) + u_xlat0.xy;\n    return;\n}\n\n","\n#version 100\n\n#ifdef GL_FRAGMENT_PRECISION_HIGH\n    precision highp float;\n#else\n    precision mediump float;\n#endif\nprecision highp int;\nuniform \tmediump vec4 _TextureSampleAdd;\nuniform \tvec4 _ClipRect;\nuniform lowp sampler2D _MainTex;\nvarying mediump vec4 vs_COLOR0;\nvarying highp vec2 vs_TEXCOORD0;\nvarying highp vec4 vs_TEXCOORD2;\n#define SV_Target0 gl_FragData[0]\nvec4 u_xlat0;\nmediump vec4 u_xlat16_0;\nvec4 u_xlat1;\nlowp vec4 u_xlat10_1;\nbool u_xlatb1;\nmediump float u_xlat16_2;\nmediump float u_xlat16_5;\nfloat unity_roundEven(float x) { float y = floor(x + 0.5); return (y - x == 0.5) ? floor(0.5*y) * 2.0 : y; }\nvec2 unity_roundEven(vec2 a) { a.x = unity_roundEven(a.x); a.y = unity_roundEven(a.y); return a; }\nvec3 unity_roundEven(vec3 a) { a.x = unity_roundEven(a.x); a.y = unity_roundEven(a.y); a.z = unity_roundEven(a.z); return a; }\nvec4 unity_roundEven(vec4 a) { a.x = unity_roundEven(a.x); a.y = unity_roundEven(a.y); a.z = unity_roundEven(a.z); a.w = unity_roundEven(a.w); return a; }\n\nvoid main()\n{\n    u_xlat16_0.x = vs_COLOR0.w * 255.0;\n    u_xlat16_0.x = unity_roundEven(u_xlat16_0.x);\n    u_xlat16_0.w = u_xlat16_0.x * 0.00392156886;\n    u_xlat10_1 = texture2D(_MainTex, vs_TEXCOORD0.xy);\n    u_xlat1 = u_xlat10_1 + _TextureSampleAdd;\n    u_xlat16_0.xyz = vs_COLOR0.xyz;\n    u_xlat0 = u_xlat16_0 * u_xlat1;\n    u_xlat1.xy = (-_ClipRect.xy) + _ClipRect.zw;\n    u_xlat1.xy = u_xlat1.xy + -abs(vs_TEXCOORD2.xy);\n    u_xlat1.xy = u_xlat1.xy * vs_TEXCOORD2.zw;\n    u_xlat1.xy = clamp(u_xlat1.xy, 0.0, 1.0);\n    u_xlat16_2 = u_xlat1.y * u_xlat1.x;\n    u_xlat16_5 = u_xlat0.w * u_xlat16_2 + -0.00100000005;\n    u_xlat16_2 = u_xlat0.w * u_xlat16_2;\n    SV_Target0.xyz = u_xlat0.xyz * vec3(u_xlat16_2);\n    SV_Target0.w = u_xlat16_2;\n    u_xlatb1 = u_xlat16_5<0.0;\n    if(u_xlatb1){discard;}\n    return;\n}\n\n",0,0,3,0,0,["UNITY_UI_ALPHACLIP","UNITY_UI_CLIP_RECT"],[["CanUseSpriteAtlas","true"],["IGNOREPROJECTOR","true"],["PreviewType","Plane"],["QUEUE","Transparent"],["RenderType","Transparent"]]]],["STEREO_CUBEMAP_RENDER_ON","STEREO_INSTANCING_ON","STEREO_MULTIVIEW_ON","UNITY_SINGLE_PASS_STEREO","UNITY_UI_ALPHACLIP","UNITY_UI_CLIP_RECT","_"],[[["_","UNITY_UI_CLIP_RECT"]],[["_","UNITY_UI_ALPHACLIP"]]],0,0,5,0,0,0,0,[["CanUseSpriteAtlas","true"],["IGNOREPROJECTOR","true"],["PreviewType","Plane"],["QUEUE","Transparent"],["RenderType","Transparent"]],[null,null],"",1,-1]],[["CanUseSpriteAtlas","true"],["IGNOREPROJECTOR","true"],["PreviewType","Plane"],["QUEUE","Transparent"],["RenderType","Transparent"]],0]],0,30,"Resources/unity_builtin_extra",["UNITY_UI_ALPHACLIP","UNITY_UI_CLIP_RECT","STEREO_CUBEMAP_RENDER_ON","STEREO_INSTANCING_ON","STEREO_MULTIVIEW_ON","UNITY_SINGLE_PASS_STEREO","_"],null,null,[],5]],[],0,5,[0,0,0,0,0,0,0,0,0]]}],"shaders":[{"id":34,"assetBundleId":-1,"data":[[],"Hidden/InternalErrorShader",null,[],[[0,0,"",0,"",0,[4,null],[1,null],[2,null],[[1,null],[0,null],[0,null]],[[1,null],[0,null],[0,null]],[15,null],[0,null],[0,null],[0,null],[255,null],[255,null],[[0,null],[0,null],[0,null],[8,null]],[[0,null],[0,null],[0,null],[8,null]],[[0,null],[0,null],[0,null],[8,null]],[],[],[],[],[],0]],[],[],null,null,0,0,0]},{"id":410,"assetBundleId":-1,"data":[[],"TextMeshPro/Sprite",null,["UNITY_UI_ALPHACLIP","UNITY_UI_CLIP_RECT","STEREO_CUBEMAP_RENDER_ON","STEREO_INSTANCING_ON","STEREO_MULTIVIEW_ON","UNITY_SINGLE_PASS_STEREO","__"],[[0,0,"Default",0,"",0,[0,"unity_GUIZTestMode"],[0,null],[0,"_CullMode"],[[5,null],[10,null],[0,null]],[[5,null],[10,null],[0,null]],[0,"_ColorMask"],[0,null],[0,null],[0,"_Stencil"],[0,"_StencilReadMask"],[0,"_StencilWriteMask"],[[0,"_StencilOp"],[0,null],[0,null],[0,"_StencilComp"]],[[0,null],[0,null],[0,null],[8,null]],[[0,null],[0,null],[0,null],[8,null]],[["CanUseSpriteAtlas","true"],["IGNOREPROJECTOR","true"],["PreviewType","Plane"],["QUEUE","Transparent"],["RenderType","Transparent"]],["STEREO_CUBEMAP_RENDER_ON","STEREO_INSTANCING_ON","STEREO_MULTIVIEW_ON","UNITY_SINGLE_PASS_STEREO","UNITY_UI_ALPHACLIP","UNITY_UI_CLIP_RECT","__"],[[["__","UNITY_UI_CLIP_RECT"],1],[["__","UNITY_UI_ALPHACLIP"],1]],[[0,0,[],12,13,0,0],[0,0,["UNITY_UI_ALPHACLIP"],12,14,0,0],[0,0,["UNITY_UI_CLIP_RECT"],12,15,0,0],[0,0,["UNITY_UI_ALPHACLIP","UNITY_UI_CLIP_RECT"],12,16,0,0]],[],0]],[],[["_MainTex",4,0,0,0,0,"white",2],["_Color",0,1,1,1,1,"",0],["_StencilComp",2,8,0,0,0,"",0],["_Stencil",2,0,0,0,0,"",0],["_StencilOp",2,0,0,0,0,"",0],["_StencilWriteMask",2,255,0,0,0,"",0],["_StencilReadMask",2,255,0,0,0,"",0],["_CullMode",2,0,0,0,0,"",0],["_ColorMask",2,15,0,0,0,"",0],["_ClipRect",1,-32767,-32767,32767,32767,"",0],["_UseUIAlphaClip",2,0,0,0,0,"",0]],null,null,0,0,0]},{"id":412,"assetBundleId":-1,"data":[[],"TextMeshPro/Distance Field Overlay",null,["BEVEL_ON","GLOW_ON","UNDERLAY_INNER","UNDERLAY_ON","UNITY_UI_ALPHACLIP","UNITY_UI_CLIP_RECT","STEREO_CUBEMAP_RENDER_ON","STEREO_INSTANCING_ON","STEREO_MULTIVIEW_ON","UNITY_SINGLE_PASS_STEREO","__"],[[0,0,"",0,"",0,[8,null],[0,null],[0,"_CullMode"],[[1,null],[10,null],[0,null]],[[1,null],[10,null],[0,null]],[0,"_ColorMask"],[0,null],[0,null],[0,"_Stencil"],[0,"_StencilReadMask"],[0,"_StencilWriteMask"],[[0,"_StencilOp"],[0,null],[0,null],[0,"_StencilComp"]],[[0,null],[0,null],[0,null],[8,null]],[[0,null],[0,null],[0,null],[8,null]],[["IGNOREPROJECTOR","true"],["QUEUE","Overlay"],["RenderType","Transparent"]],["BEVEL_ON","GLOW_ON","STEREO_CUBEMAP_RENDER_ON","STEREO_INSTANCING_ON","STEREO_MULTIVIEW_ON","UNDERLAY_INNER","UNDERLAY_ON","UNITY_SINGLE_PASS_STEREO","UNITY_UI_ALPHACLIP","UNITY_UI_CLIP_RECT","__"],[[["__","BEVEL_ON"],1],[["__","UNDERLAY_ON","UNDERLAY_INNER"],1],[["__","GLOW_ON"],1],[["__","UNITY_UI_CLIP_RECT"],1],[["__","UNITY_UI_ALPHACLIP"],1]],[[0,0,[],17,18,0,0],[0,0,["UNITY_UI_ALPHACLIP"],17,19,0,0],[0,0,["UNITY_UI_CLIP_RECT"],17,20,0,0],[0,0,["UNITY_UI_ALPHACLIP","UNITY_UI_CLIP_RECT"],17,21,0,0]],[],0]],[],[["_FaceTex",4,0,0,0,0,"white",0],["_FaceUVSpeedX",3,0,-5,5,0,"",0],["_FaceUVSpeedY",3,0,-5,5,0,"",0],["_FaceColor",0,1,1,1,1,"",16],["_FaceDilate",3,0,-1,1,0,"",0],["_OutlineColor",0,0,0,0,1,"",16],["_OutlineTex",4,0,0,0,0,"white",0],["_OutlineUVSpeedX",3,0,-5,5,0,"",0],["_OutlineUVSpeedY",3,0,-5,5,0,"",0],["_OutlineWidth",3,0,0,1,0,"",0],["_OutlineSoftness",3,0,0,1,0,"",0],["_Bevel",3,0.5,0,1,0,"",0],["_BevelOffset",3,0,-0.5,0.5,0,"",0],["_BevelWidth",3,0,-0.5,0.5,0,"",0],["_BevelClamp",3,0,0,1,0,"",0],["_BevelRoundness",3,0,0,1,0,"",0],["_LightAngle",3,3.14159989356995,0,6.28318548202515,0,"",0],["_SpecularColor",0,1,1,1,1,"",16],["_SpecularPower",3,2,0,4,0,"",0],["_Reflectivity",3,10,5,15,0,"",0],["_Diffuse",3,0.5,0,1,0,"",0],["_Ambient",3,0.5,1,0,0,"",0],["_BumpMap",4,0,0,0,0,"bump",0],["_BumpOutline",3,0,0,1,0,"",0],["_BumpFace",3,0,0,1,0,"",0],["_ReflectFaceColor",0,0,0,0,1,"",0],["_ReflectOutlineColor",0,0,0,0,1,"",0],["_Cube",4,0,0,0,0,"black",0],["_EnvMatrixRotation",1,0,0,0,0,"",0],["_UnderlayColor",0,0,0,0,0.5,"",16],["_UnderlayOffsetX",3,0,-1,1,0,"",0],["_UnderlayOffsetY",3,0,-1,1,0,"",0],["_UnderlayDilate",3,0,-1,1,0,"",0],["_UnderlaySoftness",3,0,0,1,0,"",0],["_GlowColor",0,0,1,0,0.5,"",16],["_GlowOffset",3,0,-1,1,0,"",0],["_GlowInner",3,0.0500000007450581,0,1,0,"",0],["_GlowOuter",3,0.0500000007450581,0,1,0,"",0],["_GlowPower",3,0.75,1,0,0,"",0],["_WeightNormal",2,0,0,0,0,"",0],["_WeightBold",2,0.5,0,0,0,"",0],["_ShaderFlags",2,0,0,0,0,"",0],["_ScaleRatioA",2,1,0,0,0,"",0],["_ScaleRatioB",2,1,0,0,0,"",0],["_ScaleRatioC",2,1,0,0,0,"",0],["_MainTex",4,0,0,0,0,"white",0],["_TextureWidth",2,512,0,0,0,"",0],["_TextureHeight",2,512,0,0,0,"",0],["_GradientScale",2,5,0,0,0,"",0],["_ScaleX",2,1,0,0,0,"",0],["_ScaleY",2,1,0,0,0,"",0],["_PerspectiveFilter",3,0.875,0,1,0,"",0],["_Sharpness",3,0,-1,1,0,"",0],["_VertexOffsetX",2,0,0,0,0,"",0],["_VertexOffsetY",2,0,0,0,0,"",0],["_MaskCoord",1,0,0,32767,32767,"",0],["_ClipRect",1,-32767,-32767,32767,32767,"",0],["_MaskSoftnessX",2,0,0,0,0,"",0],["_MaskSoftnessY",2,0,0,0,0,"",0],["_StencilComp",2,8,0,0,0,"",0],["_Stencil",2,0,0,0,0,"",0],["_StencilOp",2,0,0,0,0,"",0],["_StencilWriteMask",2,255,0,0,0,"",0],["_StencilReadMask",2,255,0,0,0,"",0],["_CullMode",2,0,0,0,0,"",0],["_ColorMask",2,15,0,0,0,"",0]],0,408,0,0,0]},{"id":418,"assetBundleId":-1,"data":[[],"TextMeshPro/Mobile/Distance Field - Masking",null,["OUTLINE_ON","UNDERLAY_INNER","UNDERLAY_ON","UNITY_UI_ALPHACLIP","UNITY_UI_CLIP_RECT","STEREO_CUBEMAP_RENDER_ON","STEREO_INSTANCING_ON","STEREO_MULTIVIEW_ON","UNITY_SINGLE_PASS_STEREO","__"],[[0,0,"",0,"",0,[0,"unity_GUIZTestMode"],[0,null],[0,"_CullMode"],[[1,null],[10,null],[0,null]],[[1,null],[10,null],[0,null]],[0,"_ColorMask"],[0,null],[0,null],[0,"_Stencil"],[0,"_StencilReadMask"],[0,"_StencilWriteMask"],[[0,"_StencilOp"],[0,null],[0,null],[0,"_StencilComp"]],[[0,null],[0,null],[0,null],[8,null]],[[0,null],[0,null],[0,null],[8,null]],[["IGNOREPROJECTOR","true"],["QUEUE","Transparent"],["RenderType","Transparent"]],["OUTLINE_ON","STEREO_CUBEMAP_RENDER_ON","STEREO_INSTANCING_ON","STEREO_MULTIVIEW_ON","UNDERLAY_INNER","UNDERLAY_ON","UNITY_SINGLE_PASS_STEREO","UNITY_UI_ALPHACLIP","UNITY_UI_CLIP_RECT","__"],[[["__","OUTLINE_ON"],1],[["__","UNDERLAY_ON","UNDERLAY_INNER"],1],[["__","UNITY_UI_CLIP_RECT"],1],[["__","UNITY_UI_ALPHACLIP"],1]],[[0,0,[],22,23,0,0],[0,0,["UNITY_UI_ALPHACLIP"],22,24,0,0],[0,0,["UNITY_UI_CLIP_RECT"],22,23,0,0],[0,0,["UNITY_UI_ALPHACLIP","UNITY_UI_CLIP_RECT"],22,24,0,0]],[],0]],[],[["_FaceColor",0,1,1,1,1,"",16],["_FaceDilate",3,0,-1,1,0,"",0],["_OutlineColor",0,0,0,0,1,"",16],["_OutlineWidth",3,0,0,1,0,"",0],["_OutlineSoftness",3,0,0,1,0,"",0],["_UnderlayColor",0,0,0,0,0.5,"",16],["_UnderlayOffsetX",3,0,-1,1,0,"",0],["_UnderlayOffsetY",3,0,-1,1,0,"",0],["_UnderlayDilate",3,0,-1,1,0,"",0],["_UnderlaySoftness",3,0,0,1,0,"",0],["_WeightNormal",2,0,0,0,0,"",0],["_WeightBold",2,0.5,0,0,0,"",0],["_ShaderFlags",2,0,0,0,0,"",0],["_ScaleRatioA",2,1,0,0,0,"",0],["_ScaleRatioB",2,1,0,0,0,"",0],["_ScaleRatioC",2,1,0,0,0,"",0],["_MainTex",4,0,0,0,0,"white",0],["_TextureWidth",2,512,0,0,0,"",0],["_TextureHeight",2,512,0,0,0,"",0],["_GradientScale",2,5,0,0,0,"",0],["_ScaleX",2,1,0,0,0,"",0],["_ScaleY",2,1,0,0,0,"",0],["_PerspectiveFilter",3,0.875,0,1,0,"",0],["_Sharpness",3,0,-1,1,0,"",0],["_VertexOffsetX",2,0,0,0,0,"",0],["_VertexOffsetY",2,0,0,0,0,"",0],["_ClipRect",1,-32767,-32767,32767,32767,"",0],["_MaskSoftnessX",2,0,0,0,0,"",0],["_MaskSoftnessY",2,0,0,0,0,"",0],["_MaskTex",4,0,0,0,0,"white",0],["_MaskInverse",2,0,0,0,0,"",0],["_MaskEdgeColor",0,1,1,1,1,"",0],["_MaskEdgeSoftness",3,0.00999999977648258,0,1,0,"",0],["_MaskWipeControl",3,0.5,0,1,0,"",0],["_StencilComp",2,8,0,0,0,"",0],["_Stencil",2,0,0,0,0,"",0],["_StencilOp",2,0,0,0,0,"",0],["_StencilWriteMask",2,255,0,0,0,"",0],["_StencilReadMask",2,255,0,0,0,"",0],["_CullMode",2,0,0,0,0,"",0],["_ColorMask",2,15,0,0,0,"",0]],null,null,0,0,0]},{"id":414,"assetBundleId":-1,"data":[[],"TextMeshPro/Distance Field SSD",null,["BEVEL_ON","FORCE_LINEAR","GLOW_ON","UNDERLAY_INNER","UNDERLAY_ON","UNITY_UI_ALPHACLIP","UNITY_UI_CLIP_RECT","STEREO_CUBEMAP_RENDER_ON","STEREO_INSTANCING_ON","STEREO_MULTIVIEW_ON","UNITY_SINGLE_PASS_STEREO","__"],[[0,0,"",0,"",0,[0,"unity_GUIZTestMode"],[0,null],[0,"_CullMode"],[[1,null],[10,null],[0,null]],[[1,null],[10,null],[0,null]],[0,"_ColorMask"],[0,null],[0,null],[0,"_Stencil"],[0,"_StencilReadMask"],[0,"_StencilWriteMask"],[[0,"_StencilOp"],[0,null],[0,null],[0,"_StencilComp"]],[[0,null],[0,null],[0,null],[8,null]],[[0,null],[0,null],[0,null],[8,null]],[["IGNOREPROJECTOR","true"],["QUEUE","Transparent"],["RenderType","Transparent"]],["BEVEL_ON","FORCE_LINEAR","GLOW_ON","STEREO_CUBEMAP_RENDER_ON","STEREO_INSTANCING_ON","STEREO_MULTIVIEW_ON","UNDERLAY_INNER","UNDERLAY_ON","UNITY_SINGLE_PASS_STEREO","UNITY_UI_ALPHACLIP","UNITY_UI_CLIP_RECT","__"],[[["__","BEVEL_ON"],1],[["__","UNDERLAY_ON","UNDERLAY_INNER"],1],[["__","GLOW_ON"],1],[["__","FORCE_LINEAR"],1],[["__","UNITY_UI_CLIP_RECT"],1],[["__","UNITY_UI_ALPHACLIP"],1]],[[0,0,[],25,26,0,0],[0,0,["UNITY_UI_ALPHACLIP"],25,27,0,0],[0,0,["UNITY_UI_CLIP_RECT"],25,28,0,0],[0,0,["UNITY_UI_ALPHACLIP","UNITY_UI_CLIP_RECT"],25,29,0,0]],[],0]],[],[["_FaceTex",4,0,0,0,0,"white",0],["_FaceUVSpeedX",3,0,-5,5,0,"",0],["_FaceUVSpeedY",3,0,-5,5,0,"",0],["_FaceColor",0,1,1,1,1,"",16],["_FaceDilate",3,0,-1,1,0,"",0],["_OutlineColor",0,0,0,0,1,"",16],["_OutlineTex",4,0,0,0,0,"white",0],["_OutlineUVSpeedX",3,0,-5,5,0,"",0],["_OutlineUVSpeedY",3,0,-5,5,0,"",0],["_OutlineWidth",3,0,0,1,0,"",0],["_OutlineSoftness",3,0,0,1,0,"",0],["_Bevel",3,0.5,0,1,0,"",0],["_BevelOffset",3,0,-0.5,0.5,0,"",0],["_BevelWidth",3,0,-0.5,0.5,0,"",0],["_BevelClamp",3,0,0,1,0,"",0],["_BevelRoundness",3,0,0,1,0,"",0],["_LightAngle",3,3.14159989356995,0,6.28318548202515,0,"",0],["_SpecularColor",0,1,1,1,1,"",16],["_SpecularPower",3,2,0,4,0,"",0],["_Reflectivity",3,10,5,15,0,"",0],["_Diffuse",3,0.5,0,1,0,"",0],["_Ambient",3,0.5,1,0,0,"",0],["_BumpMap",4,0,0,0,0,"bump",0],["_BumpOutline",3,0,0,1,0,"",0],["_BumpFace",3,0,0,1,0,"",0],["_ReflectFaceColor",0,0,0,0,1,"",0],["_ReflectOutlineColor",0,0,0,0,1,"",0],["_Cube",4,0,0,0,0,"black",0],["_EnvMatrixRotation",1,0,0,0,0,"",0],["_UnderlayColor",0,0,0,0,0.5,"",16],["_UnderlayOffsetX",3,0,-1,1,0,"",0],["_UnderlayOffsetY",3,0,-1,1,0,"",0],["_UnderlayDilate",3,0,-1,1,0,"",0],["_UnderlaySoftness",3,0,0,1,0,"",0],["_GlowColor",0,0,1,0,0.5,"",16],["_GlowOffset",3,0,-1,1,0,"",0],["_GlowInner",3,0.0500000007450581,0,1,0,"",0],["_GlowOuter",3,0.0500000007450581,0,1,0,"",0],["_GlowPower",3,0.75,1,0,0,"",0],["_WeightNormal",2,0,0,0,0,"",0],["_WeightBold",2,0.5,0,0,0,"",0],["_ShaderFlags",2,0,0,0,0,"",0],["_ScaleRatioA",2,1,0,0,0,"",0],["_ScaleRatioB",2,1,0,0,0,"",0],["_ScaleRatioC",2,1,0,0,0,"",0],["_MainTex",4,0,0,0,0,"white",0],["_TextureWidth",2,512,0,0,0,"",0],["_TextureHeight",2,512,0,0,0,"",0],["_GradientScale",2,5,0,0,0,"",0],["_ScaleX",2,1,0,0,0,"",0],["_ScaleY",2,1,0,0,0,"",0],["_PerspectiveFilter",3,0.875,0,1,0,"",0],["_Sharpness",3,0,-1,1,0,"",0],["_VertexOffsetX",2,0,0,0,0,"",0],["_VertexOffsetY",2,0,0,0,0,"",0],["_MaskCoord",1,0,0,32767,32767,"",0],["_ClipRect",1,-32767,-32767,32767,32767,"",0],["_MaskSoftnessX",2,0,0,0,0,"",0],["_MaskSoftnessY",2,0,0,0,0,"",0],["_StencilComp",2,8,0,0,0,"",0],["_Stencil",2,0,0,0,0,"",0],["_StencilOp",2,0,0,0,0,"",0],["_StencilWriteMask",2,255,0,0,0,"",0],["_StencilReadMask",2,255,0,0,0,"",0],["_CullMode",2,0,0,0,0,"",0],["_ColorMask",2,15,0,0,0,"",0]],0,408,0,0,0]},{"id":420,"assetBundleId":-1,"data":[[],"TextMeshPro/Bitmap Custom Atlas",null,["UNITY_UI_ALPHACLIP","UNITY_UI_CLIP_RECT","STEREO_CUBEMAP_RENDER_ON","STEREO_INSTANCING_ON","STEREO_MULTIVIEW_ON","UNITY_SINGLE_PASS_STEREO","__"],[[0,0,"",0,"",0,[0,"unity_GUIZTestMode"],[0,null],[0,"_CullMode"],[[5,null],[10,null],[0,null]],[[5,null],[10,null],[0,null]],[0,"_ColorMask"],[0,null],[0,null],[0,"_Stencil"],[0,"_StencilReadMask"],[0,"_StencilWriteMask"],[[0,"_StencilOp"],[0,null],[0,null],[0,"_StencilComp"]],[[0,null],[0,null],[0,null],[8,null]],[[0,null],[0,null],[0,null],[8,null]],[["IGNOREPROJECTOR","true"],["QUEUE","Transparent"],["RenderType","Transparent"]],["STEREO_CUBEMAP_RENDER_ON","STEREO_INSTANCING_ON","STEREO_MULTIVIEW_ON","UNITY_SINGLE_PASS_STEREO","UNITY_UI_ALPHACLIP","UNITY_UI_CLIP_RECT","__"],[[["__","UNITY_UI_CLIP_RECT"],1],[["__","UNITY_UI_ALPHACLIP"],1]],[[0,0,[],30,31,0,0],[0,0,["UNITY_UI_ALPHACLIP"],30,32,0,0],[0,0,["UNITY_UI_CLIP_RECT"],30,33,0,0],[0,0,["UNITY_UI_ALPHACLIP","UNITY_UI_CLIP_RECT"],30,34,0,0]],[],0]],[],[["_MainTex",4,0,0,0,0,"white",0],["_FaceTex",4,0,0,0,0,"white",0],["_FaceColor",0,1,1,1,1,"",16],["_VertexOffsetX",2,0,0,0,0,"",0],["_VertexOffsetY",2,0,0,0,0,"",0],["_MaskSoftnessX",2,0,0,0,0,"",0],["_MaskSoftnessY",2,0,0,0,0,"",0],["_ClipRect",1,-32767,-32767,32767,32767,"",0],["_Padding",2,0,0,0,0,"",0],["_StencilComp",2,8,0,0,0,"",0],["_Stencil",2,0,0,0,0,"",0],["_StencilOp",2,0,0,0,0,"",0],["_StencilWriteMask",2,255,0,0,0,"",0],["_StencilReadMask",2,255,0,0,0,"",0],["_CullMode",2,0,0,0,0,"",0],["_ColorMask",2,15,0,0,0,"",0]],null,null,0,0,0]},{"id":426,"assetBundleId":-1,"data":[[],"TextMeshPro/Mobile/Bitmap",null,["UNITY_UI_ALPHACLIP","UNITY_UI_CLIP_RECT","STEREO_CUBEMAP_RENDER_ON","STEREO_INSTANCING_ON","STEREO_MULTIVIEW_ON","UNITY_SINGLE_PASS_STEREO","__"],[[0,0,"",0,"",0,[0,"unity_GUIZTestMode"],[0,null],[0,"_CullMode"],[[5,null],[10,null],[0,null]],[[5,null],[10,null],[0,null]],[0,"_ColorMask"],[0,null],[0,null],[0,"_Stencil"],[0,"_StencilReadMask"],[0,"_StencilWriteMask"],[[0,"_StencilOp"],[0,null],[0,null],[0,"_StencilComp"]],[[0,null],[0,null],[0,null],[8,null]],[[0,null],[0,null],[0,null],[8,null]],[["IGNOREPROJECTOR","true"],["QUEUE","Transparent"],["RenderType","Transparent"]],["STEREO_CUBEMAP_RENDER_ON","STEREO_INSTANCING_ON","STEREO_MULTIVIEW_ON","UNITY_SINGLE_PASS_STEREO","UNITY_UI_ALPHACLIP","UNITY_UI_CLIP_RECT","__"],[[["__","UNITY_UI_CLIP_RECT"],1],[["__","UNITY_UI_ALPHACLIP"],1]],[[0,0,[],35,36,0,0],[0,0,["UNITY_UI_ALPHACLIP"],35,37,0,0],[0,0,["UNITY_UI_CLIP_RECT"],35,38,0,0],[0,0,["UNITY_UI_ALPHACLIP","UNITY_UI_CLIP_RECT"],35,39,0,0]],[],0]],[],[["_MainTex",4,0,0,0,0,"white",0],["_Color",0,1,1,1,1,"",16],["_DiffusePower",3,1,1,4,0,"",0],["_VertexOffsetX",2,0,0,0,0,"",0],["_VertexOffsetY",2,0,0,0,0,"",0],["_MaskSoftnessX",2,0,0,0,0,"",0],["_MaskSoftnessY",2,0,0,0,0,"",0],["_ClipRect",1,-32767,-32767,32767,32767,"",0],["_StencilComp",2,8,0,0,0,"",0],["_Stencil",2,0,0,0,0,"",0],["_StencilOp",2,0,0,0,0,"",0],["_StencilWriteMask",2,255,0,0,0,"",0],["_StencilReadMask",2,255,0,0,0,"",0],["_CullMode",2,0,0,0,0,"",0],["_ColorMask",2,15,0,0,0,"",0]],null,null,0,0,0]},{"id":408,"assetBundleId":-1,"data":[[],"TextMeshPro/Mobile/Distance Field",null,["OUTLINE_ON","UNDERLAY_INNER","UNDERLAY_ON","UNITY_UI_ALPHACLIP","UNITY_UI_CLIP_RECT","STEREO_CUBEMAP_RENDER_ON","STEREO_INSTANCING_ON","STEREO_MULTIVIEW_ON","UNITY_SINGLE_PASS_STEREO","__"],[[0,0,"",0,"",0,[0,"unity_GUIZTestMode"],[0,null],[0,"_CullMode"],[[1,null],[10,null],[0,null]],[[1,null],[10,null],[0,null]],[0,"_ColorMask"],[0,null],[0,null],[0,"_Stencil"],[0,"_StencilReadMask"],[0,"_StencilWriteMask"],[[0,"_StencilOp"],[0,null],[0,null],[0,"_StencilComp"]],[[0,null],[0,null],[0,null],[8,null]],[[0,null],[0,null],[0,null],[8,null]],[["IGNOREPROJECTOR","true"],["QUEUE","Transparent"],["RenderType","Transparent"]],["OUTLINE_ON","STEREO_CUBEMAP_RENDER_ON","STEREO_INSTANCING_ON","STEREO_MULTIVIEW_ON","UNDERLAY_INNER","UNDERLAY_ON","UNITY_SINGLE_PASS_STEREO","UNITY_UI_ALPHACLIP","UNITY_UI_CLIP_RECT","__"],[[["__","OUTLINE_ON"],1],[["__","UNDERLAY_ON","UNDERLAY_INNER"],1],[["__","UNITY_UI_CLIP_RECT"],1],[["__","UNITY_UI_ALPHACLIP"],1]],[[0,0,[],22,40,0,0],[0,0,["UNITY_UI_ALPHACLIP"],22,41,0,0],[0,0,["UNITY_UI_CLIP_RECT"],22,42,0,0],[0,0,["UNITY_UI_ALPHACLIP","UNITY_UI_CLIP_RECT"],22,43,0,0],[0,0,["OUTLINE_ON","UNDERLAY_ON"],44,45,0,0],[0,0,["OUTLINE_ON"],22,46,0,0],[0,0,["UNITY_UI_ALPHACLIP","OUTLINE_ON","UNDERLAY_ON"],44,47,0,0],[0,0,["UNITY_UI_ALPHACLIP","OUTLINE_ON"],22,48,0,0],[0,0,["UNITY_UI_CLIP_RECT","OUTLINE_ON","UNDERLAY_ON"],44,49,0,0],[0,0,["UNITY_UI_CLIP_RECT","OUTLINE_ON"],22,50,0,0],[0,0,["UNITY_UI_ALPHACLIP","UNITY_UI_CLIP_RECT","OUTLINE_ON","UNDERLAY_ON"],44,51,0,0],[0,0,["UNITY_UI_ALPHACLIP","UNITY_UI_CLIP_RECT","OUTLINE_ON"],22,52,0,0]],[],0]],[],[["_FaceColor",0,1,1,1,1,"",16],["_FaceDilate",3,0,-1,1,0,"",0],["_OutlineColor",0,0,0,0,1,"",16],["_OutlineWidth",3,0,0,1,0,"",0],["_OutlineSoftness",3,0,0,1,0,"",0],["_UnderlayColor",0,0,0,0,0.5,"",16],["_UnderlayOffsetX",3,0,-1,1,0,"",0],["_UnderlayOffsetY",3,0,-1,1,0,"",0],["_UnderlayDilate",3,0,-1,1,0,"",0],["_UnderlaySoftness",3,0,0,1,0,"",0],["_WeightNormal",2,0,0,0,0,"",0],["_WeightBold",2,0.5,0,0,0,"",0],["_ShaderFlags",2,0,0,0,0,"",0],["_ScaleRatioA",2,1,0,0,0,"",0],["_ScaleRatioB",2,1,0,0,0,"",0],["_ScaleRatioC",2,1,0,0,0,"",0],["_MainTex",4,0,0,0,0,"white",0],["_TextureWidth",2,512,0,0,0,"",0],["_TextureHeight",2,512,0,0,0,"",0],["_GradientScale",2,5,0,0,0,"",0],["_ScaleX",2,1,0,0,0,"",0],["_ScaleY",2,1,0,0,0,"",0],["_PerspectiveFilter",3,0.875,0,1,0,"",0],["_Sharpness",3,0,-1,1,0,"",0],["_VertexOffsetX",2,0,0,0,0,"",0],["_VertexOffsetY",2,0,0,0,0,"",0],["_ClipRect",1,-32767,-32767,32767,32767,"",0],["_MaskSoftnessX",2,0,0,0,0,"",0],["_MaskSoftnessY",2,0,0,0,0,"",0],["_StencilComp",2,8,0,0,0,"",0],["_Stencil",2,0,0,0,0,"",0],["_StencilOp",2,0,0,0,0,"",0],["_StencilWriteMask",2,255,0,0,0,"",0],["_StencilReadMask",2,255,0,0,0,"",0],["_CullMode",2,0,0,0,0,"",0],["_ColorMask",2,15,0,0,0,"",0]],null,null,0,0,0]},{"id":416,"assetBundleId":-1,"data":[[],"TextMeshPro/Distance Field",null,["BEVEL_ON","GLOW_ON","UNDERLAY_INNER","UNDERLAY_ON","UNITY_UI_ALPHACLIP","UNITY_UI_CLIP_RECT","STEREO_CUBEMAP_RENDER_ON","STEREO_INSTANCING_ON","STEREO_MULTIVIEW_ON","UNITY_SINGLE_PASS_STEREO","__"],[[0,0,"",0,"",0,[0,"unity_GUIZTestMode"],[0,null],[0,"_CullMode"],[[1,null],[10,null],[0,null]],[[1,null],[10,null],[0,null]],[0,"_ColorMask"],[0,null],[0,null],[0,"_Stencil"],[0,"_StencilReadMask"],[0,"_StencilWriteMask"],[[0,"_StencilOp"],[0,null],[0,null],[0,"_StencilComp"]],[[0,null],[0,null],[0,null],[8,null]],[[0,null],[0,null],[0,null],[8,null]],[["IGNOREPROJECTOR","true"],["QUEUE","Transparent"],["RenderType","Transparent"]],["BEVEL_ON","GLOW_ON","STEREO_CUBEMAP_RENDER_ON","STEREO_INSTANCING_ON","STEREO_MULTIVIEW_ON","UNDERLAY_INNER","UNDERLAY_ON","UNITY_SINGLE_PASS_STEREO","UNITY_UI_ALPHACLIP","UNITY_UI_CLIP_RECT","__"],[[["__","BEVEL_ON"],1],[["__","UNDERLAY_ON","UNDERLAY_INNER"],1],[["__","GLOW_ON"],1],[["__","UNITY_UI_CLIP_RECT"],1],[["__","UNITY_UI_ALPHACLIP"],1]],[[0,0,[],17,18,0,0],[0,0,["UNITY_UI_ALPHACLIP"],17,19,0,0],[0,0,["UNITY_UI_CLIP_RECT"],17,20,0,0],[0,0,["UNITY_UI_ALPHACLIP","UNITY_UI_CLIP_RECT"],17,21,0,0]],[],0]],[],[["_FaceTex",4,0,0,0,0,"white",0],["_FaceUVSpeedX",3,0,-5,5,0,"",0],["_FaceUVSpeedY",3,0,-5,5,0,"",0],["_FaceColor",0,1,1,1,1,"",16],["_FaceDilate",3,0,-1,1,0,"",0],["_OutlineColor",0,0,0,0,1,"",16],["_OutlineTex",4,0,0,0,0,"white",0],["_OutlineUVSpeedX",3,0,-5,5,0,"",0],["_OutlineUVSpeedY",3,0,-5,5,0,"",0],["_OutlineWidth",3,0,0,1,0,"",0],["_OutlineSoftness",3,0,0,1,0,"",0],["_Bevel",3,0.5,0,1,0,"",0],["_BevelOffset",3,0,-0.5,0.5,0,"",0],["_BevelWidth",3,0,-0.5,0.5,0,"",0],["_BevelClamp",3,0,0,1,0,"",0],["_BevelRoundness",3,0,0,1,0,"",0],["_LightAngle",3,3.14159989356995,0,6.28318548202515,0,"",0],["_SpecularColor",0,1,1,1,1,"",16],["_SpecularPower",3,2,0,4,0,"",0],["_Reflectivity",3,10,5,15,0,"",0],["_Diffuse",3,0.5,0,1,0,"",0],["_Ambient",3,0.5,1,0,0,"",0],["_BumpMap",4,0,0,0,0,"bump",0],["_BumpOutline",3,0,0,1,0,"",0],["_BumpFace",3,0,0,1,0,"",0],["_ReflectFaceColor",0,0,0,0,1,"",0],["_ReflectOutlineColor",0,0,0,0,1,"",0],["_Cube",4,0,0,0,0,"black",0],["_EnvMatrixRotation",1,0,0,0,0,"",0],["_UnderlayColor",0,0,0,0,0.5,"",16],["_UnderlayOffsetX",3,0,-1,1,0,"",0],["_UnderlayOffsetY",3,0,-1,1,0,"",0],["_UnderlayDilate",3,0,-1,1,0,"",0],["_UnderlaySoftness",3,0,0,1,0,"",0],["_GlowColor",0,0,1,0,0.5,"",16],["_GlowOffset",3,0,-1,1,0,"",0],["_GlowInner",3,0.0500000007450581,0,1,0,"",0],["_GlowOuter",3,0.0500000007450581,0,1,0,"",0],["_GlowPower",3,0.75,1,0,0,"",0],["_WeightNormal",2,0,0,0,0,"",0],["_WeightBold",2,0.5,0,0,0,"",0],["_ShaderFlags",2,0,0,0,0,"",0],["_ScaleRatioA",2,1,0,0,0,"",0],["_ScaleRatioB",2,1,0,0,0,"",0],["_ScaleRatioC",2,1,0,0,0,"",0],["_MainTex",4,0,0,0,0,"white",0],["_TextureWidth",2,512,0,0,0,"",0],["_TextureHeight",2,512,0,0,0,"",0],["_GradientScale",2,5,0,0,0,"",0],["_ScaleX",2,1,0,0,0,"",0],["_ScaleY",2,1,0,0,0,"",0],["_PerspectiveFilter",3,0.875,0,1,0,"",0],["_Sharpness",3,0,-1,1,0,"",0],["_VertexOffsetX",2,0,0,0,0,"",0],["_VertexOffsetY",2,0,0,0,0,"",0],["_MaskCoord",1,0,0,32767,32767,"",0],["_ClipRect",1,-32767,-32767,32767,32767,"",0],["_MaskSoftnessX",2,0,0,0,0,"",0],["_MaskSoftnessY",2,0,0,0,0,"",0],["_StencilComp",2,8,0,0,0,"",0],["_Stencil",2,0,0,0,0,"",0],["_StencilOp",2,0,0,0,0,"",0],["_StencilWriteMask",2,255,0,0,0,"",0],["_StencilReadMask",2,255,0,0,0,"",0],["_CullMode",2,0,0,0,0,"",0],["_ColorMask",2,15,0,0,0,"",0]],0,408,0,0,0]},{"id":424,"assetBundleId":-1,"data":[[],"TextMeshPro/Bitmap",null,["UNITY_UI_ALPHACLIP","UNITY_UI_CLIP_RECT","STEREO_CUBEMAP_RENDER_ON","STEREO_INSTANCING_ON","STEREO_MULTIVIEW_ON","UNITY_SINGLE_PASS_STEREO","__"],[[0,0,"",0,"",0,[0,"unity_GUIZTestMode"],[0,null],[0,"_CullMode"],[[5,null],[10,null],[0,null]],[[5,null],[10,null],[0,null]],[0,"_ColorMask"],[0,null],[0,null],[0,"_Stencil"],[0,"_StencilReadMask"],[0,"_StencilWriteMask"],[[0,"_StencilOp"],[0,null],[0,null],[0,"_StencilComp"]],[[0,null],[0,null],[0,null],[8,null]],[[0,null],[0,null],[0,null],[8,null]],[["IGNOREPROJECTOR","true"],["QUEUE","Transparent"],["RenderType","Transparent"]],["STEREO_CUBEMAP_RENDER_ON","STEREO_INSTANCING_ON","STEREO_MULTIVIEW_ON","UNITY_SINGLE_PASS_STEREO","UNITY_UI_ALPHACLIP","UNITY_UI_CLIP_RECT","__"],[[["__","UNITY_UI_CLIP_RECT"],1],[["__","UNITY_UI_ALPHACLIP"],1]],[[0,0,[],30,53,0,0],[0,0,["UNITY_UI_ALPHACLIP"],30,54,0,0],[0,0,["UNITY_UI_CLIP_RECT"],30,55,0,0],[0,0,["UNITY_UI_ALPHACLIP","UNITY_UI_CLIP_RECT"],30,56,0,0]],[],0]],[],[["_MainTex",4,0,0,0,0,"white",0],["_FaceTex",4,0,0,0,0,"white",0],["_FaceColor",0,1,1,1,1,"",16],["_VertexOffsetX",2,0,0,0,0,"",0],["_VertexOffsetY",2,0,0,0,0,"",0],["_MaskSoftnessX",2,0,0,0,0,"",0],["_MaskSoftnessY",2,0,0,0,0,"",0],["_ClipRect",1,-32767,-32767,32767,32767,"",0],["_StencilComp",2,8,0,0,0,"",0],["_Stencil",2,0,0,0,0,"",0],["_StencilOp",2,0,0,0,0,"",0],["_StencilWriteMask",2,255,0,0,0,"",0],["_StencilReadMask",2,255,0,0,0,"",0],["_CullMode",2,0,0,0,0,"",0],["_ColorMask",2,15,0,0,0,"",0]],null,null,0,0,0]},{"id":428,"assetBundleId":-1,"data":[[],"TextMeshPro/Mobile/Distance Field Overlay",null,["OUTLINE_ON","UNDERLAY_INNER","UNDERLAY_ON","UNITY_UI_ALPHACLIP","UNITY_UI_CLIP_RECT","STEREO_CUBEMAP_RENDER_ON","STEREO_INSTANCING_ON","STEREO_MULTIVIEW_ON","UNITY_SINGLE_PASS_STEREO","__"],[[0,0,"",0,"",0,[8,null],[0,null],[0,"_CullMode"],[[1,null],[10,null],[0,null]],[[1,null],[10,null],[0,null]],[0,"_ColorMask"],[0,null],[0,null],[0,"_Stencil"],[0,"_StencilReadMask"],[0,"_StencilWriteMask"],[[0,"_StencilOp"],[0,null],[0,null],[0,"_StencilComp"]],[[0,null],[0,null],[0,null],[8,null]],[[0,null],[0,null],[0,null],[8,null]],[["IGNOREPROJECTOR","true"],["QUEUE","Overlay"],["RenderType","Transparent"]],["OUTLINE_ON","STEREO_CUBEMAP_RENDER_ON","STEREO_INSTANCING_ON","STEREO_MULTIVIEW_ON","UNDERLAY_INNER","UNDERLAY_ON","UNITY_SINGLE_PASS_STEREO","UNITY_UI_ALPHACLIP","UNITY_UI_CLIP_RECT","__"],[[["__","OUTLINE_ON"],1],[["__","UNDERLAY_ON","UNDERLAY_INNER"],1],[["__","UNITY_UI_CLIP_RECT"],1],[["__","UNITY_UI_ALPHACLIP"],1]],[[0,0,[],22,40,0,0],[0,0,["UNITY_UI_ALPHACLIP"],22,41,0,0],[0,0,["UNITY_UI_CLIP_RECT"],22,42,0,0],[0,0,["UNITY_UI_ALPHACLIP","UNITY_UI_CLIP_RECT"],22,43,0,0]],[],0]],[],[["_FaceColor",0,1,1,1,1,"",16],["_FaceDilate",3,0,-1,1,0,"",0],["_OutlineColor",0,0,0,0,1,"",16],["_OutlineWidth",3,0,0,1,0,"",0],["_OutlineSoftness",3,0,0,1,0,"",0],["_UnderlayColor",0,0,0,0,0.5,"",16],["_UnderlayOffsetX",3,0,-1,1,0,"",0],["_UnderlayOffsetY",3,0,-1,1,0,"",0],["_UnderlayDilate",3,0,-1,1,0,"",0],["_UnderlaySoftness",3,0,0,1,0,"",0],["_WeightNormal",2,0,0,0,0,"",0],["_WeightBold",2,0.5,0,0,0,"",0],["_ShaderFlags",2,0,0,0,0,"",0],["_ScaleRatioA",2,1,0,0,0,"",0],["_ScaleRatioB",2,1,0,0,0,"",0],["_ScaleRatioC",2,1,0,0,0,"",0],["_MainTex",4,0,0,0,0,"white",0],["_TextureWidth",2,512,0,0,0,"",0],["_TextureHeight",2,512,0,0,0,"",0],["_GradientScale",2,5,0,0,0,"",0],["_ScaleX",2,1,0,0,0,"",0],["_ScaleY",2,1,0,0,0,"",0],["_PerspectiveFilter",3,0.875,0,1,0,"",0],["_Sharpness",3,0,-1,1,0,"",0],["_VertexOffsetX",2,0,0,0,0,"",0],["_VertexOffsetY",2,0,0,0,0,"",0],["_ClipRect",1,-32767,-32767,32767,32767,"",0],["_MaskSoftnessX",2,0,0,0,0,"",0],["_MaskSoftnessY",2,0,0,0,0,"",0],["_StencilComp",2,8,0,0,0,"",0],["_Stencil",2,0,0,0,0,"",0],["_StencilOp",2,0,0,0,0,"",0],["_StencilWriteMask",2,255,0,0,0,"",0],["_StencilReadMask",2,255,0,0,0,"",0],["_CullMode",2,0,0,0,0,"",0],["_ColorMask",2,15,0,0,0,"",0]],null,null,0,0,0]},{"id":422,"assetBundleId":-1,"data":[[],"TextMeshPro/Mobile/Distance Field (Surface)",null,["DIRECTIONAL","FOG_EXP","FOG_EXP2","FOG_LINEAR","GLOW_ON","LIGHTPROBE_SH","VERTEXLIGHT_ON","SHADOWS_DEPTH","INSTANCING_ON","STEREO_CUBEMAP_RENDER_ON","STEREO_INSTANCING_ON","STEREO_MULTIVIEW_ON","UNITY_SINGLE_PASS_STEREO","__","SHADOWS_CUBE"],[[0,0,"FORWARD",4,"",0,[4,null],[0,null],[0,"_CullMode"],[[5,null],[10,null],[0,null]],[[5,null],[10,null],[0,null]],[14,null],[0,null],[0,null],[0,null],[255,null],[255,null],[[0,null],[0,null],[0,null],[8,null]],[[0,null],[0,null],[0,null],[8,null]],[[0,null],[0,null],[0,null],[8,null]],[["IGNOREPROJECTOR","true"],["LIGHTMODE","FORWARDBASE"],["QUEUE","Transparent"],["RenderType","Transparent"]],["DIRECTIONAL","FOG_EXP","FOG_EXP2","FOG_LINEAR","GLOW_ON","INSTANCING_ON","LIGHTPROBE_SH","STEREO_CUBEMAP_RENDER_ON","STEREO_INSTANCING_ON","STEREO_MULTIVIEW_ON","UNITY_SINGLE_PASS_STEREO","VERTEXLIGHT_ON","__"],[[["__","GLOW_ON"],1],[["__","INSTANCING_ON"],1],[["__","FOG_LINEAR","FOG_EXP","FOG_EXP2"],1],[["DIRECTIONAL"],0],[["DIRECTIONAL","LIGHTPROBE_SH"],0],[["DIRECTIONAL","VERTEXLIGHT_ON","LIGHTPROBE_SH"],0]],[[0,0,["DIRECTIONAL"],57,58,0,0],[0,0,["DIRECTIONAL","LIGHTPROBE_SH"],57,58,0,0],[0,0,["DIRECTIONAL","LIGHTPROBE_SH","VERTEXLIGHT_ON"],59,58,0,0]],[],0],[1,0,"Caster",8,"",0,[4,null],[1,null],[0,null],[[1,null],[0,null],[0,null]],[[1,null],[0,null],[0,null]],[14,null],[1,null],[1,null],[0,null],[255,null],[255,null],[[0,null],[0,null],[0,null],[8,null]],[[0,null],[0,null],[0,null],[8,null]],[[0,null],[0,null],[0,null],[8,null]],[["IGNOREPROJECTOR","true"],["LIGHTMODE","SHADOWCASTER"],["QUEUE","Transparent"],["RenderType","Transparent"],["SHADOWSUPPORT","true"]],["SHADOWS_CUBE","SHADOWS_DEPTH","STEREO_CUBEMAP_RENDER_ON","STEREO_INSTANCING_ON","STEREO_MULTIVIEW_ON","UNITY_SINGLE_PASS_STEREO"],[[["SHADOWS_DEPTH"],0],[["SHADOWS_CUBE"],0]],[[1,0,["SHADOWS_DEPTH"],60,61,0,0]],[],0]],[],[["_FaceTex",4,0,0,0,0,"white",0],["_FaceColor",0,1,1,1,1,"",16],["_FaceDilate",3,0,-1,1,0,"",0],["_OutlineColor",0,0,0,0,1,"",16],["_OutlineTex",4,0,0,0,0,"white",0],["_OutlineWidth",3,0,0,1,0,"",0],["_OutlineSoftness",3,0,0,1,0,"",0],["_GlowColor",0,0,1,0,0.5,"",16],["_GlowOffset",3,0,-1,1,0,"",0],["_GlowInner",3,0.0500000007450581,0,1,0,"",0],["_GlowOuter",3,0.0500000007450581,0,1,0,"",0],["_GlowPower",3,0.75,1,0,0,"",0],["_WeightNormal",2,0,0,0,0,"",0],["_WeightBold",2,0.5,0,0,0,"",0],["_ShaderFlags",2,0,0,0,0,"",0],["_ScaleRatioA",2,1,0,0,0,"",0],["_ScaleRatioB",2,1,0,0,0,"",0],["_ScaleRatioC",2,1,0,0,0,"",0],["_MainTex",4,0,0,0,0,"white",0],["_TextureWidth",2,512,0,0,0,"",0],["_TextureHeight",2,512,0,0,0,"",0],["_GradientScale",2,5,0,0,0,"",0],["_ScaleX",2,1,0,0,0,"",0],["_ScaleY",2,1,0,0,0,"",0],["_PerspectiveFilter",3,0.875,0,1,0,"",0],["_Sharpness",3,0,-1,1,0,"",0],["_VertexOffsetX",2,0,0,0,0,"",0],["_VertexOffsetY",2,0,0,0,0,"",0],["_CullMode",2,0,0,0,0,"",0]],null,null,0,0,0]},{"id":430,"assetBundleId":-1,"data":[[],"TextMeshPro/Mobile/Distance Field SSD",null,["OUTLINE_ON","UNDERLAY_INNER","UNDERLAY_ON","UNITY_UI_ALPHACLIP","UNITY_UI_CLIP_RECT","STEREO_CUBEMAP_RENDER_ON","STEREO_INSTANCING_ON","STEREO_MULTIVIEW_ON","UNITY_SINGLE_PASS_STEREO","__"],[[0,0,"",0,"",0,[0,"unity_GUIZTestMode"],[0,null],[0,"_CullMode"],[[1,null],[10,null],[0,null]],[[1,null],[10,null],[0,null]],[0,"_ColorMask"],[0,null],[0,null],[0,"_Stencil"],[0,"_StencilReadMask"],[0,"_StencilWriteMask"],[[0,"_StencilOp"],[0,null],[0,null],[0,"_StencilComp"]],[[0,null],[0,null],[0,null],[8,null]],[[0,null],[0,null],[0,null],[8,null]],[["IGNOREPROJECTOR","true"],["QUEUE","Transparent"],["RenderType","Transparent"]],["OUTLINE_ON","STEREO_CUBEMAP_RENDER_ON","STEREO_INSTANCING_ON","STEREO_MULTIVIEW_ON","UNDERLAY_INNER","UNDERLAY_ON","UNITY_SINGLE_PASS_STEREO","UNITY_UI_ALPHACLIP","UNITY_UI_CLIP_RECT","__"],[[["__","OUTLINE_ON"],1],[["__","UNDERLAY_ON","UNDERLAY_INNER"],1],[["__","UNITY_UI_CLIP_RECT"],1],[["__","UNITY_UI_ALPHACLIP"],1]],[[0,0,[],64,65,0,0],[0,0,["UNITY_UI_ALPHACLIP"],64,66,0,0],[0,0,["UNITY_UI_CLIP_RECT"],67,68,0,0],[0,0,["UNITY_UI_ALPHACLIP","UNITY_UI_CLIP_RECT"],67,69,0,0]],[],0]],[],[["_FaceColor",0,1,1,1,1,"",16],["_FaceDilate",3,0,-1,1,0,"",0],["_OutlineColor",0,0,0,0,1,"",16],["_OutlineWidth",3,0,0,1,0,"",0],["_OutlineSoftness",3,0,0,1,0,"",0],["_UnderlayColor",0,0,0,0,0.5,"",16],["_UnderlayOffsetX",3,0,-1,1,0,"",0],["_UnderlayOffsetY",3,0,-1,1,0,"",0],["_UnderlayDilate",3,0,-1,1,0,"",0],["_UnderlaySoftness",3,0,0,1,0,"",0],["_WeightNormal",2,0,0,0,0,"",0],["_WeightBold",2,0.5,0,0,0,"",0],["_ShaderFlags",2,0,0,0,0,"",0],["_ScaleRatioA",2,1,0,0,0,"",0],["_ScaleRatioB",2,1,0,0,0,"",0],["_ScaleRatioC",2,1,0,0,0,"",0],["_MainTex",4,0,0,0,0,"white",0],["_TextureWidth",2,512,0,0,0,"",0],["_TextureHeight",2,512,0,0,0,"",0],["_GradientScale",2,5,0,0,0,"",0],["_ScaleX",2,1,0,0,0,"",0],["_ScaleY",2,1,0,0,0,"",0],["_PerspectiveFilter",3,0.875,0,1,0,"",0],["_Sharpness",3,0,-1,1,0,"",0],["_VertexOffsetX",2,0,0,0,0,"",0],["_VertexOffsetY",2,0,0,0,0,"",0],["_ClipRect",1,-32767,-32767,32767,32767,"",0],["_MaskSoftnessX",2,0,0,0,0,"",0],["_MaskSoftnessY",2,0,0,0,0,"",0],["_MaskTex",4,0,0,0,0,"white",0],["_MaskInverse",2,0,0,0,0,"",0],["_MaskEdgeColor",0,1,1,1,1,"",0],["_MaskEdgeSoftness",3,0.00999999977648258,0,1,0,"",0],["_MaskWipeControl",3,0.5,0,1,0,"",0],["_StencilComp",2,8,0,0,0,"",0],["_Stencil",2,0,0,0,0,"",0],["_StencilOp",2,0,0,0,0,"",0],["_StencilWriteMask",2,255,0,0,0,"",0],["_StencilReadMask",2,255,0,0,0,"",0],["_CullMode",2,0,0,0,0,"",0],["_ColorMask",2,15,0,0,0,"",0]],null,null,0,0,0]},{"id":432,"assetBundleId":-1,"data":[[],"TextMeshPro/Distance Field (Surface)",null,["DIRECTIONAL","FOG_EXP","FOG_EXP2","FOG_LINEAR","GLOW_ON","LIGHTPROBE_SH","VERTEXLIGHT_ON","DIRECTIONAL_COOKIE","POINT","POINT_COOKIE","SPOT","SHADOWS_DEPTH","INSTANCING_ON","STEREO_CUBEMAP_RENDER_ON","STEREO_INSTANCING_ON","STEREO_MULTIVIEW_ON","UNITY_SINGLE_PASS_STEREO","__","SHADOWS_CUBE"],[[0,0,"FORWARD",4,"",0,[4,null],[0,null],[0,"_CullMode"],[[5,null],[10,null],[0,null]],[[5,null],[10,null],[0,null]],[14,null],[0,null],[0,null],[0,null],[255,null],[255,null],[[0,null],[0,null],[0,null],[8,null]],[[0,null],[0,null],[0,null],[8,null]],[[0,null],[0,null],[0,null],[8,null]],[["IGNOREPROJECTOR","true"],["LIGHTMODE","FORWARDBASE"],["QUEUE","Transparent"],["RenderType","Transparent"]],["DIRECTIONAL","FOG_EXP","FOG_EXP2","FOG_LINEAR","GLOW_ON","INSTANCING_ON","LIGHTPROBE_SH","STEREO_CUBEMAP_RENDER_ON","STEREO_INSTANCING_ON","STEREO_MULTIVIEW_ON","UNITY_SINGLE_PASS_STEREO","VERTEXLIGHT_ON","__"],[[["__","GLOW_ON"],1],[["__","INSTANCING_ON"],1],[["__","FOG_LINEAR","FOG_EXP","FOG_EXP2"],1],[["DIRECTIONAL"],0],[["DIRECTIONAL","LIGHTPROBE_SH"],0],[["DIRECTIONAL","VERTEXLIGHT_ON","LIGHTPROBE_SH"],0]],[[0,0,["DIRECTIONAL"],57,82,0,0],[0,0,["DIRECTIONAL","LIGHTPROBE_SH"],57,82,0,0],[0,0,["DIRECTIONAL","LIGHTPROBE_SH","VERTEXLIGHT_ON"],59,82,0,0]],[],0],[1,0,"FORWARD",5,"",0,[4,null],[0,null],[0,"_CullMode"],[[5,null],[1,null],[0,null]],[[5,null],[1,null],[0,null]],[14,null],[0,null],[0,null],[0,null],[255,null],[255,null],[[0,null],[0,null],[0,null],[8,null]],[[0,null],[0,null],[0,null],[8,null]],[[0,null],[0,null],[0,null],[8,null]],[["IGNOREPROJECTOR","true"],["LIGHTMODE","FORWARDADD"],["QUEUE","Transparent"],["RenderType","Transparent"]],["DIRECTIONAL","DIRECTIONAL_COOKIE","FOG_EXP","FOG_EXP2","FOG_LINEAR","GLOW_ON","POINT","POINT_COOKIE","SPOT","STEREO_CUBEMAP_RENDER_ON","STEREO_INSTANCING_ON","STEREO_MULTIVIEW_ON","UNITY_SINGLE_PASS_STEREO","__"],[[["__","GLOW_ON"],1],[["__","FOG_LINEAR","FOG_EXP","FOG_EXP2"],1],[["POINT"],0],[["DIRECTIONAL"],0],[["SPOT"],0],[["POINT_COOKIE"],0],[["DIRECTIONAL_COOKIE"],0]],[[1,0,["POINT"],83,84,0,0],[1,0,["DIRECTIONAL"],85,86,0,0],[1,0,["SPOT"],87,88,0,0],[1,0,["POINT_COOKIE"],83,89,0,0],[1,0,["DIRECTIONAL_COOKIE"],90,91,0,0]],[],0],[2,0,"Caster",8,"",0,[4,null],[1,null],[0,null],[[1,null],[0,null],[0,null]],[[1,null],[0,null],[0,null]],[14,null],[1,null],[1,null],[0,null],[255,null],[255,null],[[0,null],[0,null],[0,null],[8,null]],[[0,null],[0,null],[0,null],[8,null]],[[0,null],[0,null],[0,null],[8,null]],[["IGNOREPROJECTOR","true"],["LIGHTMODE","SHADOWCASTER"],["QUEUE","Transparent"],["RenderType","Transparent"],["SHADOWSUPPORT","true"]],["SHADOWS_CUBE","SHADOWS_DEPTH","STEREO_CUBEMAP_RENDER_ON","STEREO_INSTANCING_ON","STEREO_MULTIVIEW_ON","UNITY_SINGLE_PASS_STEREO"],[[["SHADOWS_DEPTH"],0],[["SHADOWS_CUBE"],0]],[[2,0,["SHADOWS_DEPTH"],60,61,0,0]],[],0]],[],[["_FaceTex",4,0,0,0,0,"white",0],["_FaceUVSpeedX",3,0,-5,5,0,"",0],["_FaceUVSpeedY",3,0,-5,5,0,"",0],["_FaceColor",0,1,1,1,1,"",16],["_FaceDilate",3,0,-1,1,0,"",0],["_OutlineColor",0,0,0,0,1,"",16],["_OutlineTex",4,0,0,0,0,"white",0],["_OutlineUVSpeedX",3,0,-5,5,0,"",0],["_OutlineUVSpeedY",3,0,-5,5,0,"",0],["_OutlineWidth",3,0,0,1,0,"",0],["_OutlineSoftness",3,0,0,1,0,"",0],["_Bevel",3,0.5,0,1,0,"",0],["_BevelOffset",3,0,-0.5,0.5,0,"",0],["_BevelWidth",3,0,-0.5,0.5,0,"",0],["_BevelClamp",3,0,0,1,0,"",0],["_BevelRoundness",3,0,0,1,0,"",0],["_BumpMap",4,0,0,0,0,"bump",0],["_BumpOutline",3,0.5,0,1,0,"",0],["_BumpFace",3,0.5,0,1,0,"",0],["_ReflectFaceColor",0,0,0,0,1,"",0],["_ReflectOutlineColor",0,0,0,0,1,"",0],["_Cube",4,0,0,0,0,"black",0],["_EnvMatrixRotation",1,0,0,0,0,"",0],["_SpecColor",0,0,0,0,1,"",16],["_FaceShininess",3,0,0,1,0,"",0],["_OutlineShininess",3,0,0,1,0,"",0],["_GlowColor",0,0,1,0,0.5,"",16],["_GlowOffset",3,0,-1,1,0,"",0],["_GlowInner",3,0.0500000007450581,0,1,0,"",0],["_GlowOuter",3,0.0500000007450581,0,1,0,"",0],["_GlowPower",3,0.75,1,0,0,"",0],["_WeightNormal",2,0,0,0,0,"",0],["_WeightBold",2,0.5,0,0,0,"",0],["_ShaderFlags",2,0,0,0,0,"",0],["_ScaleRatioA",2,1,0,0,0,"",0],["_ScaleRatioB",2,1,0,0,0,"",0],["_ScaleRatioC",2,1,0,0,0,"",0],["_MainTex",4,0,0,0,0,"white",0],["_TextureWidth",2,512,0,0,0,"",0],["_TextureHeight",2,512,0,0,0,"",0],["_GradientScale",2,5,0,0,0,"",0],["_ScaleX",2,1,0,0,0,"",0],["_ScaleY",2,1,0,0,0,"",0],["_PerspectiveFilter",3,0.875,0,1,0,"",0],["_Sharpness",3,0,-1,1,0,"",0],["_VertexOffsetX",2,0,0,0,0,"",0],["_VertexOffsetY",2,0,0,0,0,"",0],["_CullMode",2,0,0,0,0,"",0]],null,null,0,0,0]}],"sounds":[{"id":24176,"path":"Assets/Content/Sounds/tile click.wav","assetBundleId":-1,"data":["tile click"]},{"id":25238,"path":"Assets/Content/Sounds/crate crack.wav","assetBundleId":-1,"data":["crate crack"]},{"id":25394,"path":"Assets/Content/Sounds/life received.wav","assetBundleId":-1,"data":["life received"]},{"id":25090,"path":"Assets/Content/Sounds/power up.wav","assetBundleId":-1,"data":["power up"]},{"id":24182,"path":"Assets/Content/Sounds/level failed.wav","assetBundleId":-1,"data":["level failed"]},{"id":24180,"path":"Assets/Content/Sounds/level complete.wav","assetBundleId":-1,"data":["level complete"]},{"id":25534,"path":"Assets/Content/Sounds/ice crack.wav","assetBundleId":-1,"data":["ice crack"]},{"id":28646,"path":"Assets/Content/Sounds/tile click blocked.wav","assetBundleId":-1,"data":["tile click blocked"]},{"id":25794,"path":"Assets/Content/Sounds/ui_button_1.wav","assetBundleId":-1,"data":["ui_button_1"]},{"id":28032,"path":"Assets/Content/Sounds/coin pickup.wav","assetBundleId":-1,"data":["coin pickup"]},{"id":28724,"path":"Assets/Content/Sounds/coins reward.wav","assetBundleId":-1,"data":["coins reward"]},{"id":29286,"path":"Assets/Content/Sounds/rubber quick.wav","assetBundleId":-1,"data":["rubber quick"]},{"id":24178,"path":"Assets/Content/Sounds/merge sound.wav","assetBundleId":-1,"data":["merge sound"]}],"sprites":[{"id":23874,"path":"Assets/Content/Sprites/Ingredients/cinnamon.png","assetBundleId":-1,"data":["cinnamon",6,24050,[0.008203134,-0.0234375,0,0.4886719,0.253125,0],[0.4921875,0.04453125,0,0.9101563,0.5371094,0.496875,-0.0515625,0,0.9140625,0.4570313,0.496875,0.01875,0,0.9140625,0.515625,0.4148438,0.1664063,0,0.8457031,0.6386719,0.3398438,0.1945313,0,0.7832031,0.6621094,0.3328125,-0.1125,0,0.7773438,0.40625,0.2929688,0.2296875,0,0.7441406,0.6914063,0.253125,0.2296875,0,0.7109375,0.6914063,0.1851563,-0.1523438,0,0.6542969,0.3730469,0.1757813,0.215625,0,0.6464844,0.6796875,-0.13125,0.121875,0,0.390625,0.6015625,-0.1453125,0.1171875,0,0.3789063,0.5976563,-0.1617188,-0.271875,0,0.3652344,0.2734375,-0.1992188,-0.2765625,0,0.3339844,0.2695313,-0.234375,-0.2765625,0,0.3046875,0.2695313,-0.2671875,-0.2460938,0,0.2773438,0.2949219,-0.2835937,-0.20625,0,0.2636719,0.328125,-0.3960938,-0.215625,0,0.1699219,0.3203125,-0.4195313,0.0421875,0,0.1503906,0.5351563,-0.43125,-0.2132813,0,0.140625,0.3222656,-0.4734375,-0.1289063,0,0.1054688,0.3925781,-0.4804688,0.01640625,0,0.09960938,0.5136719,-0.4804688,-0.046875,0,0.09960938,0.4609375],[22,21,20,18,20,21,19,20,18,17,19,18,11,17,18,16,17,11,15,16,11,14,15,11,13,14,11,12,13,11,8,12,11,10,8,11,9,8,10,7,8,9,5,8,7,6,5,7,4,5,6,1,5,4,3,1,4,0,1,3,2,1,0],-0.0000708699226379395,-0.0000838041305541992,0.999929130077362,0.999916195869446,0.099609375,0.26953125,0.9140625,0.69140625,0,0,0,0,[0,0,0,0],[-0.6,-0.6,0.6,0.6],426.666656494141,512,512,512,512,256,256,51.0362854003906,138.042907714844]},{"id":23894,"path":"Assets/Content/Sprites/Tiles/tile_c1_t4.png","assetBundleId":-1,"data":["tile_c1_t4",6,24052,[0,0,0,0.5688889,0.5688889,0],[-0.5688889,0.5688889,0,0,1,0.5688889,-0.5688889,0,1,0,0.5688889,0.5688889,0,1,1,-0.5688889,-0.5688889,0,0,0],[3,0,1,2,1,0],0,0,1,1,0,0,1,1,0,0,0,0,[0,0,0,0],[-0.5688889,-0.5688889,0.5688889,0.5688889],112.5,128,128,128,128,64,64,0,0]},{"id":23908,"path":"Assets/Content/Sprites/Tiles/tile_c1_t1.png","assetBundleId":-1,"data":["tile_c1_t1",6,24060,[0,0,0,0.5688889,0.5688889,0],[-0.5688889,0.5688889,0,0,1,0.5688889,-0.5688889,0,1,0,0.5688889,0.5688889,0,1,1,-0.5688889,-0.5688889,0,0,0],[3,0,1,2,1,0],0,0,1,1,0,0,1,1,0,0,0,0,[0,0,0,0],[-0.5688889,-0.5688889,0.5688889,0.5688889],112.5,128,128,128,128,64,64,0,0]},{"id":23914,"path":"Assets/Content/Sprites/Tiles/tile_c1_t5.png","assetBundleId":-1,"data":["tile_c1_t5",6,24062,[0,0,0,0.5688889,0.5688889,0],[-0.5688889,0.5688889,0,0,1,0.5688889,-0.5688889,0,1,0,0.5688889,0.5688889,0,1,1,-0.5688889,-0.5688889,0,0,0],[3,0,1,2,1,0],0,0,1,1,0,0,1,1,0,0,0,0,[0,0,0,0],[-0.5688889,-0.5688889,0.5688889,0.5688889],112.5,128,128,128,128,64,64,0,0]},{"id":23940,"path":"Assets/Content/Sprites/Tiles/tile_c3_t4.png","assetBundleId":-1,"data":["tile_c3_t4",6,24068,[0,0,0,0.5688889,0.5688889,0],[-0.5688889,0.5688889,0,0,1,0.5688889,-0.5688889,0,1,0,0.5688889,0.5688889,0,1,1,-0.5688889,-0.5688889,0,0,0],[3,0,1,2,1,0],0,0,1,1,0,0,1,1,0,0,0,0,[0,0,0,0],[-0.5688889,-0.5688889,0.5688889,0.5688889],112.5,128,128,128,128,64,64,0,0]},{"id":23896,"path":"Assets/Content/Sprites/Ingredients/spinach.png","assetBundleId":-1,"data":["spinach",6,24054,[0.01992187,-0.02929688,0,0.5800781,0.3738281,0],[0.028125,-0.3867188,0,0.5234375,0.1777344,0.03046875,-0.403125,0,0.5253906,0.1640625,0.03046875,-0.3914063,0,0.5253906,0.1738281,0.00234375,-0.3867188,0,0.5019531,0.1777344,0,-0.403125,0,0.5,0.1640625,-0.00234375,-0.3890625,0,0.4980469,0.1757813,-0.00234375,-0.3984375,0,0.4980469,0.1679688,0.08203125,-0.2835937,0,0.5683594,0.2636719,0.1101563,-0.3070312,0,0.5917969,0.2441406,0.1101563,-0.2835937,0,0.5917969,0.2636719,0.04453125,-0.2789063,0,0.5371094,0.2675781,-0.1171875,-0.2789063,0,0.4023438,0.2675781,-0.1171875,-0.2859375,0,0.4023438,0.2617188,-0.1171875,-0.2929688,0,0.4023438,0.2558594,-0.1171875,-0.3070312,0,0.4023438,0.2441406,0.09140625,-0.2789063,0,0.5761719,0.2675781,0.1101563,-0.28125,0,0.5917969,0.265625,0.1804688,-0.2835937,0,0.6503906,0.2636719,0.178125,-0.2976563,0,0.6484375,0.2519531,0.1804688,-0.2929688,0,0.6503906,0.2558594,0.140625,-0.2976563,0,0.6171875,0.2519531,0.1382813,-0.2835937,0,0.6152344,0.2636719,0.1382813,-0.2859375,0,0.6152344,0.2617188,0.1382813,-0.2929688,0,0.6152344,0.2558594,0.140625,-0.2789063,0,0.6171875,0.2675781,0.1804688,-0.2789063,0,0.6503906,0.2675781,0.2929688,0.3445313,0,0.7441406,0.7871094,-0.1898438,0.3445313,0,0.3417969,0.7871094,-0.3,0.05859375,0,0.25,0.5488281,-0.3046875,-0.2367188,0,0.2460938,0.3027344,-0.3234375,0.0375,0,0.2304688,0.53125,-0.3234375,0.0234375,0,0.2304688,0.5195313,-0.3515625,0.01171875,0,0.2070313,0.5097656,-0.4171875,-0.0515625,0,0.1523438,0.4570313,-0.4171875,-0.1429688,0,0.1523438,0.3808594,0.4476563,-0.2296875,0,0.8730469,0.3085938,0.4546875,-0.2414063,0,0.8789063,0.2988281,0.4546875,-0.2296875,0,0.8789063,0.3085938,0.39375,0.02578125,0,0.828125,0.5214844,0.39375,0.0421875,0,0.828125,0.5351563,0.3890625,0.0234375,0,0.8242188,0.5195313,0.3726563,0.0234375,0,0.8105469,0.5195313,0.365625,0.028125,0,0.8046875,0.5234375,0.3117188,-0.2835937,0,0.7597656,0.2636719,0.3890625,0.05390625,0,0.8242188,0.5449219,0.3796875,0.05390625,0,0.8164063,0.5449219,0.365625,0.0421875,0,0.8046875,0.5351563,0.1125,-0.2835937,0,0.59375,0.2636719,0.1289063,-0.2835937,0,0.6074219,0.2636719,-0.01875,-0.3867188,0,0.484375,0.1777344,-0.01640625,-0.4007813,0,0.4863281,0.1660156,-0.01640625,-0.39375,0,0.4863281,0.171875,-0.046875,-0.3867188,0,0.4609375,0.1777344,-0.04921875,-0.3914063,0,0.4589844,0.1738281,-0.04921875,-0.4007813,0,0.4589844,0.1660156,0.16875,-0.3820313,0,0.640625,0.1816406,0.16875,-0.39375,0,0.640625,0.171875,0.16875,-0.3914063,0,0.640625,0.1738281,0.1640625,-0.403125,0,0.6367188,0.1640625,0.0796875,-0.3820313,0,0.5664063,0.1816406,0.0703125,-0.384375,0,0.5585938,0.1796875,0.0703125,-0.403125,0,0.5585938,0.1640625,0.5601563,-0.05859375,0,0.9667969,0.4511719,0.5742188,-0.07734375,0,0.9785156,0.4355469,0.5742188,-0.07265625,0,0.9785156,0.4394531,0.5578125,-0.05859375,0,0.9648438,0.4511719,0.6,-0.06328125,0,1,0.4472656,0.5953125,-0.0984375,0,0.9960938,0.4179688,0.6,-0.0984375,0,1,0.4179688,0.5554687,-0.009375,0,0.9628906,0.4921875,0.5109375,0.00703125,0,0.9257813,0.5058594,0.5039063,0.00703125,0,0.9199219,0.5058594,0.5015625,0.0046875,0,0.9179688,0.5039063,0.5015625,-0.0046875,0,0.9179688,0.4960938,0.5765625,-0.1335938,0,0.9804688,0.3886719,0.5765625,-0.09609375,0,0.9804688,0.4199219,0.5601563,-0.1335938,0,0.9667969,0.3886719,0.553125,-0.0609375,0,0.9609375,0.4492188,0.553125,-0.084375,0,0.9609375,0.4296875,0.4546875,-0.3210938,0,0.8789063,0.2324219,0.4453125,-0.3445313,0,0.8710938,0.2128906,0.4570313,-0.328125,0,0.8808594,0.2265625,0.4429688,-0.3210938,0,0.8691406,0.2324219,0.346875,-0.3773438,0,0.7890625,0.1855469,0.290625,-0.384375,0,0.7421875,0.1796875,0.2039063,-0.3984375,0,0.6699219,0.1679688,0.1734375,-0.3796875,0,0.6445313,0.1835938,0.1710937,-0.3984375,0,0.6425781,0.1679688,0.1265625,-0.3,0,0.6054688,0.25,0.1289063,-0.2953125,0,0.6074219,0.2539063,0.1171875,-0.3,0,0.5976563,0.25,0.1125,-0.2976563,0,0.59375,0.2519531,-0.121875,-0.2976563,0,0.3984375,0.2519531,-0.1242188,-0.2789063,0,0.3964844,0.2675781,-0.1265625,-0.2789063,0,0.3945313,0.2675781,-0.1265625,-0.2976563,0,0.3945313,0.2519531,-0.1335938,-0.2859375,0,0.3886719,0.2617188,-0.1335938,-0.290625,0,0.3886719,0.2578125,-0.478125,-0.2648438,0,0.1015625,0.2792969,-0.5015625,-0.290625,0,0.08203122,0.2578125,-0.478125,-0.290625,0,0.1015625,0.2578125,-0.5414063,-0.1289063,0,0.04882813,0.3925781,-0.5484375,-0.1265625,0,0.04296872,0.3945313,-0.5554687,-0.2601562,0,0.0371094,0.2832031,-0.5601563,-0.1265625,0,0.0332031,0.3945313,-0.5601563,-0.215625,0,0.0332031,0.3203125,0.6,-0.1992188,0,1,0.3339844,0.5953125,-0.2460938,0,0.9960938,0.2949219,0.6,-0.2367188,0,1,0.3027344,0.5929688,-0.2015625,0,0.9941406,0.3320313,0.5671875,-0.2367188,0,0.9726563,0.3027344,0.5625,-0.2789063,0,0.96875,0.2675781,0.5507813,-0.2648438,0,0.9589844,0.2792969,0.5507813,-0.2789063,0,0.9589844,0.2675781,-0.4078125,-0.2484375,0,0.1601563,0.2929688,-0.403125,-0.2648438,0,0.1640625,0.2792969,-0.403125,-0.2554688,0,0.1640625,0.2871094,-0.4265625,-0.2648438,0,0.1445313,0.2792969,-0.4664063,-0.2203125,0,0.1113281,0.3164063,-0.4710938,-0.2203125,0,0.1074219,0.3164063,-0.4734375,-0.24375,0,0.1054688,0.296875,-0.4757813,-0.2226563,0,0.1035156,0.3144531,-0.4757813,-0.225,0,0.1035156,0.3125,-0.4757813,-0.234375,0,0.1035156,0.3046875,-0.3,-0.2414063,0,0.25,0.2988281,-0.2929688,-0.2507813,0,0.2558594,0.2910156,-0.2929688,-0.24375,0,0.2558594,0.296875,-0.3,-0.253125,0,0.25,0.2890625,-0.3046875,-0.2460938,0,0.2460938,0.2949219,-0.3117188,-0.2367188,0,0.2402344,0.3027344,-0.309375,-0.2484375,0,0.2421875,0.2929688,-0.309375,-0.2390625,0,0.2421875,0.3007813,-0.3703125,-0.2484375,0,0.1914063,0.2929688,-0.4289063,-0.1828125,0,0.1425781,0.3476563,-0.4335938,-0.1828125,0,0.1386719,0.3476563,-0.4359375,-0.1851563,0,0.1367188,0.3457031,-0.4359375,-0.2296875,0,0.1367188,0.3085938,-0.4757813,-0.2179688,0,0.1035156,0.3183594,-0.478125,-0.2109375,0,0.1015625,0.3242188,-0.478125,-0.2296875,0,0.1015625,0.3085938,-0.4875,-0.2109375,0,0.09375,0.3242188,-0.4921875,-0.2132813,0,0.08984375,0.3222656,-0.4921875,-0.2296875,0,0.08984375,0.3085938,0.4476563,-0.20625,0,0.8730469,0.328125,0.4546875,-0.1945313,0,0.8789063,0.3378906,0.4546875,-0.03046875,0,0.8789063,0.4746094,-0.4382813,-0.1757813,0,0.1347656,0.3535156,-0.4429688,-0.1921875,0,0.1308594,0.3398438,-0.4382813,-0.1875,0,0.1347656,0.34375,-0.4546875,-0.1921875,0,0.1210938,0.3398438,-0.4804688,-0.1148438,0,0.09960938,0.4042969,-0.4828125,-0.1664063,0,0.09765625,0.3613281,-0.4921875,-0.1148438,0,0.08984375,0.4042969,-0.4921875,-0.1382813,0,0.08984375,0.3847656,-0.5015625,-0.028125,0,0.08203122,0.4765625,-0.4992188,-0.03984375,0,0.08398438,0.4667969,-0.4992188,-0.0328125,0,0.08398438,0.4726563,-0.5085937,-0.028125,0,0.0761719,0.4765625,-0.534375,-0.05390625,0,0.0546875,0.4550781,-0.534375,-0.09609375,0,0.0546875,0.4199219,-0.5414063,-0.1007813,0,0.04882813,0.4160156,-0.5460938,-0.06796875,0,0.04492188,0.4433594,-0.553125,-0.0796875,0,0.0390625,0.4335938,-0.553125,-0.1007813,0,0.0390625,0.4160156,-0.4828125,-0.07265625,0,0.09765625,0.4394531,-0.478125,-0.09375,0,0.1015625,0.421875,-0.4757813,-0.08203125,0,0.1035156,0.4316406,-0.4851563,-0.09609375,0,0.09570313,0.4199219,-0.4898438,-0.075,0,0.09179688,0.4375,-0.4898438,-0.09140625,0,0.09179688,0.4238281,0.5460938,-0.140625,0,0.9550781,0.3828125,0.5484375,-0.1453125,0,0.9570313,0.3789063,0.5484375,-0.1382813,0,0.9570313,0.3847656,0.5460938,-0.1476562,0,0.9550781,0.3769531,0.5484375,-0.1125,0,0.9570313,0.40625,0.5085937,-0.1125,0,0.9238281,0.40625,0.5015625,-0.2039063,0,0.9179688,0.3300781,0.4640625,-0.2296875,0,0.8867188,0.3085938,0.5648438,-0.1382813,0,0.9707031,0.3847656,0.5625,-0.159375,0,0.96875,0.3671875,0.5648438,-0.15,0,0.9707031,0.375,0.5601563,-0.1359375,0,0.9667969,0.3867188,0.5507813,-0.1359375,0,0.9589844,0.3867188,0.5460938,-0.159375,0,0.9550781,0.3671875,0.5390625,-0.084375,0,0.9492188,0.4296875,0.5460938,-0.09375,0,0.9550781,0.421875,0.5460938,-0.08671875,0,0.9550781,0.4277344,0.5390625,-0.09609375,0,0.9492188,0.4199219,0.534375,-0.0890625,0,0.9453125,0.4257813,-0.328125,0.05390625,0,0.2265625,0.5449219,-0.3234375,0.046875,0,0.2304688,0.5390625,-0.3515625,0.05390625,0,0.2070313,0.5449219,-0.3890625,-0.00703125,0,0.1757813,0.4941406,-0.4054688,-0.00703125,0,0.1621094,0.4941406,-0.4078125,0.0140625,0,0.1601563,0.5117188,-0.4101563,0.0375,0,0.1582031,0.53125,-0.4125,0.03046875,0,0.15625,0.5253906,-0.4125,0.0140625,0,0.15625,0.5117188,-0.4125,0.0046875,0,0.15625,0.5039063,-0.4125,-0.00234375,0,0.15625,0.4980469],[199,198,193,194,193,198,197,196,194,195,194,196,191,194,195,193,194,191,192,193,191,32,192,191,189,32,191,30,32,189,190,30,189,31,32,30,188,184,187,185,187,184,186,185,184,183,173,179,171,179,173,172,179,171,182,179,172,181,179,182,178,179,181,180,179,178,37,144,177,175,177,144,176,177,175,173,176,175,170,173,175,174,170,175,172,170,174,173,170,171,172,171,170,169,168,167,164,167,168,165,167,164,166,165,164,163,162,160,161,160,162,158,160,161,159,160,158,155,159,158,157,155,158,154,155,157,156,155,154,153,152,151,150,151,152,149,151,150,146,149,150,147,149,146,148,147,146,17,25,43,26,43,25,46,43,26,45,46,26,44,45,26,145,44,26,42,43,46,39,44,145,143,39,145,35,39,143,144,143,145,35,143,37,144,37,143,142,141,139,140,139,141,138,139,140,122,139,138,137,122,138,121,122,137,136,135,132,134,132,135,133,132,134,129,132,133,130,132,129,131,130,129,128,124,127,125,127,124,126,125,124,123,122,120,121,120,122,119,120,121,117,120,119,118,117,119,114,117,118,115,117,114,116,115,114,113,112,111,110,111,112,107,111,110,109,107,110,106,107,109,108,107,106,105,104,103,102,103,104,99,103,102,101,99,102,98,99,101,100,99,98,97,96,95,94,95,96,92,95,94,93,92,94,12,92,93,13,92,12,91,47,90,48,90,47,88,90,48,89,88,48,57,55,87,86,87,55,85,87,86,82,85,86,84,85,82,83,84,82,80,83,82,79,80,82,81,80,79,78,77,76,65,76,77,63,76,65,74,76,63,75,74,63,73,72,65,71,65,72,70,65,71,69,65,70,62,65,69,66,62,69,64,62,66,63,64,66,67,63,66,68,67,66,65,62,63,64,63,62,61,60,58,59,58,60,55,58,59,56,58,55,57,56,55,54,53,50,52,50,53,49,50,52,51,50,49,9,16,47,21,47,16,48,47,21,42,46,41,45,41,46,40,41,45,44,40,45,38,40,44,39,38,44,42,35,43,36,43,35,41,35,42,40,35,41,38,35,40,39,35,38,37,36,35,34,33,29,32,29,33,31,29,32,30,29,31,28,29,30,10,29,28,27,10,28,26,10,27,15,10,26,16,15,26,21,16,26,24,21,26,25,24,26,21,24,17,25,17,24,23,22,20,21,20,22,17,20,21,18,20,17,19,18,17,10,15,7,9,7,15,16,9,15,14,13,8,12,8,13,11,8,12,10,8,11,7,8,10,9,8,7,6,5,4,3,4,5,1,4,3,0,1,3,2,1,0],-0.000148702412843704,-0.000148668885231018,0.999851286411285,0.99985134601593,0.0332030951976776,0.1640625,1,0.787109375,0,0,0,0,[0,0,0,0],[-0.6,-0.6,0.6,0.6],426.666656494141,512,512,512,512,256,256,17.0761203765869,84.0761184692383]},{"id":23930,"path":"Assets/Content/Sprites/Tiles/tile_c1_t3.png","assetBundleId":-1,"data":["tile_c1_t3",6,24066,[0,0,0,0.5688889,0.5688889,0],[-0.5688889,0.5688889,0,0,1,0.5688889,-0.5688889,0,1,0,0.5688889,0.5688889,0,1,1,-0.5688889,-0.5688889,0,0,0],[3,0,1,2,1,0],0,0,1,1,0,0,1,1,0,0,0,0,[0,0,0,0],[-0.5688889,-0.5688889,0.5688889,0.5688889],112.5,128,128,128,128,64,64,0,0]},{"id":23904,"path":"Assets/Content/Sprites/Ingredients/apple.png","assetBundleId":-1,"data":["apple",6,24058,[-0.003515631,0.1136719,0,0.4675781,0.4230469,0],[-0.3375,0.253125,0,0.21875,0.7109375,-0.3445313,0.2320313,0,0.2128906,0.6933594,-0.3398438,0.2414063,0,0.2167969,0.7011719,-0.3492188,0.253125,0,0.2089844,0.7109375,-0.3609375,0.28125,0,0.1992188,0.734375,-0.384375,0.2179688,0,0.1796875,0.6816406,-0.3351563,0.3210938,0,0.2207031,0.7675781,-0.3398438,0.3210938,0,0.2167969,0.7675781,-0.3585938,0.3140625,0,0.2011719,0.7617188,-0.3375,0.3773438,0,0.21875,0.8144531,-0.3375,0.3773438,0,0.21875,0.8144531,-0.3398438,0.375,0,0.2167969,0.8125,-0.3304687,0.31875,0,0.2246094,0.765625,-0.3234375,0.31875,0,0.2304688,0.765625,-0.3609375,0.309375,0,0.1992188,0.7578125,-0.3234375,0.3210938,0,0.2304688,0.7675781,-0.3328125,0.3210938,0,0.2226563,0.7675781,-0.3234375,0.3914063,0,0.2304688,0.8261719,-0.31875,0.384375,0,0.234375,0.8203125,-0.31875,0.3890625,0,0.234375,0.8242188,-0.3328125,0.3914063,0,0.2226563,0.8261719,-0.3375,0.384375,0,0.21875,0.8203125,-0.31875,0.3796875,0,0.234375,0.8164063,-0.309375,0.3890625,0,0.2421875,0.8242188,-0.3257813,0.3726563,0,0.2285156,0.8105469,-0.3328125,0.3726563,0,0.2226563,0.8105469,-0.3164063,0.2976563,0,0.2363281,0.7480469,-0.3164063,0.31875,0,0.2363281,0.765625,-0.3351563,0.253125,0,0.2207031,0.7109375,-0.3164063,0.3210938,0,0.2363281,0.7675781,-0.271875,0.3960938,0,0.2734375,0.8300781,-0.2742188,0.3632813,0,0.2714844,0.8027344,-0.271875,0.3914063,0,0.2734375,0.8261719,-0.2929688,0.3960938,0,0.2558594,0.8300781,-0.309375,0.31875,0,0.2421875,0.765625,-0.121875,0.3984375,0,0.3984375,0.8320313,-0.1101563,0.3820313,0,0.4082031,0.8183594,-0.1101563,0.3984375,0,0.4082031,0.8320313,-0.1242188,0.3820313,0,0.3964844,0.8183594,-0.1265625,0.3960938,0,0.3945313,0.8300781,-0.1265625,0.3867188,0,0.3945313,0.8222656,-0.1429688,0.3585938,0,0.3808594,0.7988281,-0.1265625,0.3375,0,0.3945313,0.78125,-0.1429688,0.3726563,0,0.3808594,0.8105469,-0.1429688,0.3375,0,0.3808594,0.78125,-0.15,0.3539062,0,0.375,0.7949219,-0.15,0.3328125,0,0.375,0.7773438,-0.15,0.3234375,0,0.375,0.7695313,-0.1570313,0.3539062,0,0.3691406,0.7949219,-0.13125,0.3164063,0,0.390625,0.7636719,-0.1265625,0.3257813,0,0.3945313,0.7714844,-0.1429688,0.3164063,0,0.3808594,0.7636719,-0.225,0.3257813,0,0.3125,0.7714844,-0.2929688,0.309375,0,0.2558594,0.7578125,-0.225,0.3210938,0,0.3125,0.7675781,-0.03515625,0.3375,0,0.4707031,0.78125,-0.0375,0.3257813,0,0.46875,0.7714844,-0.03515625,0.3304687,0,0.4707031,0.7753906,-0.03984375,0.3398438,0,0.4667969,0.7832031,-0.046875,0.3257813,0,0.4609375,0.7714844,-0.04921875,0.3398438,0,0.4589844,0.7832031,-0.0515625,0.3351563,0,0.4570313,0.7792969,-0.0515625,0.328125,0,0.4570313,0.7734375,-0.1054688,0.5085937,0,0.4121094,0.9238281,-0.09609375,0.496875,0,0.4199219,0.9140625,-0.09609375,0.4992188,0,0.4199219,0.9160156,-0.1078125,0.5085937,0,0.4101563,0.9238281,-0.1148438,0.4898438,0,0.4042969,0.9082031,-0.1171875,0.5039063,0,0.4023438,0.9199219,-0.1171875,0.4945313,0,0.4023438,0.9121094,-0.07734375,0.459375,0,0.4355469,0.8828125,-0.084375,0.4570313,0,0.4296875,0.8808594,-0.084375,0.4523438,0,0.4296875,0.8769531,-0.07265625,0.459375,0,0.4394531,0.8828125,-0.06796875,0.4453125,0,0.4433594,0.8710938,-0.06796875,0.4546875,0,0.4433594,0.8789063,-0.075,0.440625,0,0.4375,0.8671875,-0.07734375,0.459375,0,0.4355469,0.8828125,-0.08203125,0.440625,0,0.4316406,0.8671875,-0.084375,0.45,0,0.4296875,0.875,-0.084375,0.4453125,0,0.4296875,0.8710938,-0.0234375,0.5203125,0,0.4804688,0.9335938,-0.09140625,0.3492188,0,0.4238281,0.7910156,-0.084375,0.3398438,0,0.4296875,0.7832031,-0.084375,0.346875,0,0.4296875,0.7890625,-0.09140625,0.3375,0,0.4238281,0.78125,-0.09609375,0.3445313,0,0.4199219,0.7871094,-0.06328125,0.4289063,0,0.4472656,0.8574219,-0.05859375,0.4148438,0,0.4511719,0.8457031,-0.05625,0.4289063,0,0.453125,0.8574219,-0.06328125,0.4171875,0,0.4472656,0.8476563,-0.065625,0.4335938,0,0.4453125,0.8613281,-0.07265625,0.4171875,0,0.4394531,0.8476563,-0.084375,0.421875,0,0.4296875,0.8515625,-0.084375,0.403125,0,0.4296875,0.8359375,-0.084375,0.39375,0,0.4296875,0.828125,-0.09140625,0.4195313,0,0.4238281,0.8496094,-0.103125,0.4195313,0,0.4140625,0.8496094,-0.03984375,0.4101563,0,0.4667969,0.8417969,-0.03515625,0.4148438,0,0.4707031,0.8457031,-0.04453125,0.4101563,0,0.4628906,0.8417969,-0.04921875,0.4148438,0,0.4589844,0.8457031,0.1078125,0.5367188,0,0.5898438,0.9472656,0.09375,0.3585938,0,0.578125,0.7988281,0.1054688,0.3585938,0,0.5878906,0.7988281,0.09140625,0.35625,0,0.5761719,0.796875,0.08671875,0.3398438,0,0.5722656,0.7832031,0.06796875,0.4640625,0,0.5566406,0.8867188,0.08671875,0.3046875,0,0.5722656,0.7539063,0.0375,0.5039063,0,0.53125,0.9199219,0.00703125,0.50625,0,0.5058594,0.921875,0.00234375,0.5015625,0,0.5019531,0.9179688,-0.02109375,0.4523438,0,0.4824219,0.8769531,0.00234375,0.4945313,0,0.5019531,0.9121094,-0.2296875,0.5367188,0,0.3085938,0.9472656,0.4640625,0.05390625,0,0.8867188,0.5449219,0.4476563,-0.1921875,0,0.8730469,0.3398438,0.4640625,-0.15,0,0.8867188,0.375,0.4195313,0.1476562,0,0.8496094,0.6230469,0.253125,0.178125,0,0.7109375,0.6484375,0.2226563,-0.309375,0,0.6855469,0.2421875,0.1054688,0.2929688,0,0.5878906,0.7441406,0.0984375,0.2835937,0,0.5820313,0.7363281,0.0890625,0.2835937,0,0.5742188,0.7363281,0.06796875,0.4335938,0,0.5566406,0.8613281,0.06328125,0.43125,0,0.5527344,0.859375,0.05859375,0.43125,0,0.5488281,0.859375,0.0328125,-0.309375,0,0.5273438,0.2421875,-0.02109375,0.440625,0,0.4824219,0.8671875,-0.03515625,0.440625,0,0.4707031,0.8671875,-0.03515625,0.421875,0,0.4707031,0.8515625,-0.05390625,0.3445313,0,0.4550781,0.7871094,-0.05390625,0.3539062,0,0.4550781,0.7949219,-0.0609375,0.3421875,0,0.4492188,0.7851563,-0.06796875,0.3421875,0,0.4433594,0.7851563,-0.0703125,0.346875,0,0.4414063,0.7890625,-0.075,0.375,0,0.4375,0.8125,-0.07734375,0.3890625,0,0.4355469,0.8242188,-0.0796875,0.3890625,0,0.4335938,0.8242188,-0.09375,-0.2835937,0,0.421875,0.2636719,-0.1054688,0.421875,0,0.4121094,0.8515625,-0.1640625,0.3609375,0,0.3632813,0.8007813,-0.1898438,0.3328125,0,0.3417969,0.7773438,-0.2085938,0.328125,0,0.3261719,0.7734375,-0.2085938,0.3234375,0,0.3261719,0.7695313,-0.2132813,0.3210938,0,0.3222656,0.7675781,-0.2929688,0.2484375,0,0.2558594,0.7070313,-0.459375,-0.1617188,0,0.1171875,0.3652344,-0.4710938,0.1710937,0,0.1074219,0.6425781,-0.4710938,-0.09375,0,0.1074219,0.421875,0.0890625,0.2859375,0,0.5742188,0.7382813,-0.0234375,0.4546875,0,0.4804688,0.8789063,-0.03515625,0.4546875,0,0.4707031,0.8789063,-0.03984375,0.4265625,0,0.4667969,0.8554688,-0.04453125,0.4640625,0,0.4628906,0.8867188,-0.046875,0.4710938,0,0.4609375,0.8925781,-0.05625,0.4710938,0,0.453125,0.8925781,-0.0609375,0.46875,0,0.4492188,0.890625,-0.065625,0.4429688,0,0.4453125,0.8691406,-0.0609375,0.4617188,0,0.4492188,0.8847656,-0.04453125,0.4265625,0,0.4628906,0.8554688,-0.04921875,0.440625,0,0.4589844,0.8671875,-0.0515625,0.4570313,0,0.4570313,0.8808594,-0.0515625,0.4453125,0,0.4570313,0.8710938,-0.05859375,0.4570313,0,0.4511719,0.8808594,-0.05859375,0.4453125,0,0.4511719,0.8710938,-0.04921875,0.43125,0,0.4589844,0.859375,-0.04921875,0.421875,0,0.4589844,0.8515625,-0.05859375,0.403125,0,0.4511719,0.8359375,-0.0609375,0.3585938,0,0.4492188,0.7988281,-0.06328125,0.3773438,0,0.4472656,0.8144531,-0.0703125,0.3796875,0,0.4414063,0.8164063,-0.06328125,0.3703125,0,0.4472656,0.8085938,-0.0703125,0.3679688,0,0.4414063,0.8066406,-0.0703125,0.3515625,0,0.4414063,0.7929688,-0.1640625,0.3609375,0,0.3632813,0.8007813,-0.1851563,0.3773438,0,0.3457031,0.8144531,-0.1875,0.35625,0,0.34375,0.796875,-0.1851563,0.3632813,0,0.3457031,0.8027344,-0.196875,0.384375,0,0.3359375,0.8203125,-0.1992188,0.35625,0,0.3339844,0.796875,-0.2085938,0.384375,0,0.3261719,0.8203125,-0.2132813,0.3632813,0,0.3222656,0.8027344,-0.215625,0.3796875,0,0.3203125,0.8164063,-0.215625,0.3703125,0,0.3203125,0.8085938,-0.1664063,0.39375,0,0.3613281,0.828125,-0.1640625,0.3773438,0,0.3632813,0.8144531,-0.1640625,0.3867188,0,0.3632813,0.8222656,-0.1710937,0.3726563,0,0.3574219,0.8105469,-0.178125,0.39375,0,0.3515625,0.828125,-0.1804688,0.3726563,0,0.3496094,0.8105469,-0.1828125,0.3914063,0,0.3476563,0.8261719,-0.1828125,0.3796875,0,0.3476563,0.8164063,-0.1382813,0.4125,0,0.3847656,0.84375,-0.1359375,0.3984375,0,0.3867188,0.8320313,-0.1359375,0.4078125,0,0.3867188,0.8398438,-0.1453125,0.3914063,0,0.3789063,0.8261719,-0.1546875,0.4125,0,0.3710938,0.84375,-0.1570313,0.4054688,0,0.3691406,0.8378906,-0.1570313,0.3914063,0,0.3691406,0.8261719,-0.2109375,0.3375,0,0.3242188,0.78125,-0.2085938,0.3328125,0,0.3261719,0.7773438,-0.225,0.3375,0,0.3125,0.78125,-0.2367188,0.3585938,0,0.3027344,0.7988281,-0.2320313,0.346875,0,0.3066406,0.7890625,-0.2320313,0.3539062,0,0.3066406,0.7949219,-0.2390625,0.3445313,0,0.3007813,0.7871094,-0.24375,0.35625,0,0.296875,0.796875,-0.24375,0.3492188,0,0.296875,0.7910156,-0.2671875,0.4148438,0,0.2773438,0.8457031,-0.271875,0.4007813,0,0.2734375,0.8339844,-0.2648438,0.4078125,0,0.2792969,0.8398438,-0.2765625,0.4148438,0,0.2695313,0.8457031,-0.2789063,0.4007813,0,0.2675781,0.8339844,-0.28125,0.4125,0,0.265625,0.84375,-0.28125,0.4054688,0,0.265625,0.8378906,-0.1757813,0.4195313,0,0.3535156,0.8496094,-0.1710937,0.4078125,0,0.3574219,0.8398438,-0.1710937,0.4171875,0,0.3574219,0.8476563,-0.178125,0.4007813,0,0.3515625,0.8339844,-0.1851563,0.4195313,0,0.3457031,0.8496094,-0.1851563,0.4007813,0,0.3457031,0.8339844,-0.1898438,0.4125,0,0.3417969,0.84375,-0.1898438,0.4054688,0,0.3417969,0.8378906,-0.2882813,0.4195313,0,0.2597656,0.8496094,-0.2953125,0.403125,0,0.2539063,0.8359375,-0.2859375,0.4125,0,0.2617188,0.84375,-0.2976563,0.4195313,0,0.2519531,0.8496094,-0.3,0.403125,0,0.25,0.8359375,-0.3023438,0.4171875,0,0.2480469,0.8476563,-0.3023438,0.4078125,0,0.2480469,0.8398438,-0.1640625,0.3703125,0,0.3632813,0.8085938,-0.1546875,0.3726563,0,0.3710938,0.8105469,-0.159375,0.3726563,0,0.3671875,0.8105469,-0.1476562,0.4453125,0,0.3769531,0.8710938,-0.140625,0.4359375,0,0.3828125,0.8632813,-0.140625,0.4382813,0,0.3828125,0.8652344,-0.15,0.4265625,0,0.375,0.8554688,-0.1570313,0.4265625,0,0.3691406,0.8554688,-0.159375,0.4453125,0,0.3671875,0.8710938,-0.1640625,0.4335938,0,0.3632813,0.8613281,-0.20625,0.4242188,0,0.328125,0.8535156,-0.2039063,0.4078125,0,0.3300781,0.8398438,-0.2039063,0.4195313,0,0.3300781,0.8496094,-0.2085938,0.4054688,0,0.3261719,0.8378906,-0.215625,0.4242188,0,0.3203125,0.8535156,-0.2179688,0.403125,0,0.3183594,0.8359375,-0.225,0.4195313,0,0.3125,0.8496094,-0.225,0.4101563,0,0.3125,0.8417969,-0.1851563,0.4453125,0,0.3457031,0.8710938,-0.1828125,0.4265625,0,0.3476563,0.8554688,-0.1828125,0.440625,0,0.3476563,0.8671875,-0.1992188,0.4453125,0,0.3339844,0.8710938,-0.2015625,0.4382813,0,0.3320313,0.8652344,-0.2015625,0.4265625,0,0.3320313,0.8554688,-0.1242188,0.4453125,0,0.3964844,0.8710938,-0.1265625,0.4265625,0,0.3945313,0.8554688,-0.1242188,0.43125,0,0.3964844,0.859375,-0.1359375,0.4453125,0,0.3867188,0.8710938,-0.1359375,0.4265625,0,0.3867188,0.8554688,-0.140625,0.4289063,0,0.3828125,0.8574219,-0.08671875,0.45,0,0.4277344,0.875,-0.1054688,0.4289063,0,0.4121094,0.8574219,-0.07734375,0.4828125,0,0.4355469,0.9023438,-0.075,0.46875,0,0.4375,0.890625,-0.075,0.478125,0,0.4375,0.8984375,-0.084375,0.4640625,0,0.4296875,0.8867188,-0.08671875,0.4640625,0,0.4277344,0.8867188,-0.09375,0.4828125,0,0.421875,0.9023438,-0.09375,0.4664063,0,0.421875,0.8886719,-0.3,0.43125,0,0.25,0.859375,-0.3960938,0.4054688,0,0.1699219,0.8378906,-0.1054688,0.4476563,0,0.4121094,0.8730469,-0.0984375,0.45,0,0.4179688,0.875,-0.1054688,0.4875,0,0.4121094,0.90625,-0.09609375,0.496875,0,0.4199219,0.9140625,-0.1148438,0.4875,0,0.4042969,0.90625],[67,64,276,274,276,64,275,274,64,262,272,261,273,261,272,232,262,43,39,43,262,42,43,39,40,42,39,35,39,262,37,35,262,140,37,262,114,20,271,21,271,20,14,271,21,5,271,14,4,5,14,8,14,21,11,8,21,7,8,11,10,11,21,270,20,114,17,20,270,19,17,270,23,19,270,67,270,114,69,67,114,269,268,267,263,267,268,266,267,263,264,266,263,265,264,263,129,152,128,151,128,152,112,128,151,140,262,97,261,97,262,96,97,261,93,96,261,79,93,261,80,93,79,79,261,72,91,158,87,165,87,158,89,87,165,163,89,165,166,89,163,161,166,163,260,235,259,236,259,235,258,259,236,256,259,258,255,256,258,257,256,255,254,253,250,252,250,253,249,250,252,251,250,249,248,247,246,245,246,247,244,246,245,241,244,245,242,244,241,243,242,241,141,175,48,232,48,175,45,48,232,43,45,232,41,45,43,240,239,238,234,238,239,237,238,234,235,237,234,236,235,234,175,231,232,233,232,231,230,229,228,227,228,229,225,228,227,224,225,227,226,225,224,223,222,221,220,221,222,219,221,220,216,219,220,217,219,216,218,217,216,215,214,213,212,213,214,210,213,212,209,210,212,211,210,209,208,207,206,203,206,207,204,206,203,205,204,203,52,202,143,200,143,202,201,143,200,54,52,145,143,145,52,144,145,143,199,198,196,197,196,198,193,196,197,194,196,193,195,194,193,95,94,138,92,138,94,137,138,92,168,137,92,90,168,92,88,168,90,192,191,190,189,190,191,188,190,189,185,188,189,186,188,185,187,186,185,136,171,173,172,173,171,170,172,171,184,183,182,181,182,183,180,182,181,179,180,181,177,180,179,176,177,179,178,177,176,141,142,175,135,174,134,169,134,174,133,134,169,131,133,169,132,131,169,136,173,135,174,135,173,169,174,173,172,169,173,170,169,172,159,157,164,156,164,157,162,164,156,155,162,156,154,162,155,101,167,100,160,100,167,98,100,160,153,98,160,99,98,153,130,99,153,137,168,136,171,136,168,170,171,168,169,170,168,132,169,168,88,132,168,89,132,88,166,132,89,61,132,166,62,132,61,60,61,166,101,60,166,167,101,166,160,167,166,161,160,166,158,159,165,164,165,159,163,165,164,162,163,164,161,163,162,154,161,162,160,161,154,153,160,154,70,81,77,73,77,81,157,73,81,75,73,157,158,75,157,91,75,158,159,158,157,156,157,81,155,156,81,154,155,81,152,154,81,153,154,152,130,153,152,129,130,152,151,152,81,112,151,81,113,111,126,110,126,111,109,126,110,107,126,109,125,126,107,124,125,107,123,150,122,105,122,150,103,122,105,104,122,103,121,122,104,108,106,150,105,150,106,123,108,150,149,148,147,146,147,148,139,147,146,53,139,146,54,139,53,145,139,54,144,139,145,143,139,144,142,139,143,141,139,142,48,139,141,47,139,48,51,139,47,49,139,51,50,139,49,42,139,50,40,139,42,38,139,40,36,139,38,37,139,36,140,139,37,97,139,140,86,139,97,85,139,86,127,139,85,83,127,85,84,127,83,95,127,84,138,127,95,137,127,138,136,127,137,135,127,136,134,127,135,133,127,134,131,127,133,62,127,131,132,62,131,59,127,62,56,127,59,57,127,56,55,127,57,99,127,55,130,127,99,129,127,130,128,127,129,112,127,128,113,127,112,126,127,113,123,127,126,120,127,123,125,123,126,124,123,125,107,123,124,108,123,107,122,120,123,121,120,122,104,120,121,102,120,104,119,120,102,116,120,119,118,116,119,115,116,118,117,116,115,102,81,114,66,114,81,68,114,66,69,114,68,63,66,81,65,63,81,110,81,102,111,81,110,112,81,111,113,112,111,109,110,102,107,109,102,106,107,102,108,107,106,105,106,102,103,105,102,104,103,102,60,101,58,100,58,101,98,58,100,55,58,98,99,55,98,97,96,86,82,86,96,84,82,96,93,84,96,95,84,93,94,95,93,92,94,93,80,92,93,78,92,80,76,92,78,74,92,76,90,92,74,91,90,74,75,91,74,87,90,91,88,90,87,89,88,87,86,82,85,83,85,82,84,83,82,64,65,81,80,79,78,72,78,79,70,78,72,76,78,70,77,76,70,73,76,77,74,76,73,75,74,73,72,71,70,69,68,67,66,67,68,64,67,66,63,64,66,65,64,63,62,61,59,60,59,61,58,59,60,56,59,58,55,56,58,57,56,55,54,53,52,47,46,51,44,51,46,49,51,44,42,49,44,50,49,42,48,45,47,46,47,45,44,46,45,41,44,45,42,44,41,43,42,41,40,39,38,35,38,39,36,38,35,37,36,35,9,18,25,24,25,18,22,24,18,27,29,34,15,23,29,34,29,23,31,34,23,33,31,23,30,31,33,32,31,30,13,15,27,29,27,15,18,19,23,0,13,28,26,28,13,27,26,13,7,11,6,9,6,11,25,6,9,16,6,25,15,16,25,24,15,25,22,15,24,23,15,22,18,23,22,10,21,9,20,9,21,18,9,20,17,18,20,19,18,17,6,16,12,15,12,16,13,12,15,4,14,3,8,3,14,6,3,8,0,3,6,12,0,6,13,0,12,11,10,9,8,7,6,5,4,1,3,1,4,0,1,3,2,1,0],-0.000148676335811615,-0.000148668885231018,0.99985134601593,0.99985134601593,0.107421875,0.2421875,0.88671875,0.947265625,0,0,0,0,[0,0,0,0],[-0.6,-0.6,0.6,0.6],426.666656494141,512,512,512,512,256,256,55.0761222839355,124.076118469238]},{"id":23900,"path":"Assets/Content/Sprites/Tiles/tile_c1_t2.png","assetBundleId":-1,"data":["tile_c1_t2",6,24056,[0,0,0,0.5688889,0.5688889,0],[-0.5688889,0.5688889,0,0,1,0.5688889,-0.5688889,0,1,0,0.5688889,0.5688889,0,1,1,-0.5688889,-0.5688889,0,0,0],[3,0,1,2,1,0],0,0,1,1,0,0,1,1,0,0,0,0,[0,0,0,0],[-0.5688889,-0.5688889,0.5688889,0.5688889],112.5,128,128,128,128,64,64,0,0]},{"id":23948,"path":"Assets/Content/Sprites/Tiles/tile_c3_t1.png","assetBundleId":-1,"data":["tile_c3_t1",6,24072,[0,0,0,0.5688889,0.5688889,0],[-0.5688889,0.5688889,0,0,1,0.5688889,-0.5688889,0,1,0,0.5688889,0.5688889,0,1,1,-0.5688889,-0.5688889,0,0,0],[3,0,1,2,1,0],0,0,1,1,0,0,1,1,0,0,0,0,[0,0,0,0],[-0.5688889,-0.5688889,0.5688889,0.5688889],112.5,128,128,128,128,64,64,0,0]},{"id":24044,"path":"Assets/Content/Sprites/Tiles/tile_background.png","assetBundleId":-1,"data":["tile_background",6,24048,[0,0,0,0.5333334,0.5688889,0],[0.4711111,0.5688889,0,0.9140625,1,0.5333334,-0.4711111,0,0.96875,0.0859375,0.5333334,0.56,0,0.96875,0.9921875,0.4444444,-0.5688889,0,0.890625,0,-0.5333334,0.5688889,0,0.03124997,1,-0.5333334,-0.5688889,0,0.03124997,0],[5,4,3,0,3,4,1,3,0,2,1,0],-0.000594720244407654,0,0.999405264854431,1,0.0312499701976776,0,0.96875,1,0,0,0,0,[0,0,0,0],[-0.5688889,-0.5688889,0.5688889,0.5688889],112.5,128,128,128,128,64,64,4.07612037658691,0]},{"id":24642,"path":"Assets/Content/Sprites/Ingredients/garlic.png","assetBundleId":-1,"data":["garlic",6,24656,[0.005859375,-0.01757813,0,0.4277344,0.2871094,0],[0.4335938,-0.0515625,0,0.8613281,0.4570313,0.4265625,-0.20625,0,0.8554688,0.328125,0.4335938,-0.1546875,0,0.8613281,0.3710938,0.39375,-0.0375,0,0.828125,0.46875,0.3492188,0.2695313,0,0.7910156,0.7246094,0.3890625,0.2226563,0,0.8242188,0.6855469,0.3328125,0.2695313,0,0.7773438,0.7246094,0.328125,0.2648438,0,0.7734375,0.7207031,0.3210938,0.253125,0,0.7675781,0.7109375,0.3210938,-0.2648438,0,0.7675781,0.2792969,0.1570313,-0.2414063,0,0.6308594,0.2988281,0.084375,0.196875,0,0.5703125,0.6640625,0.04921875,-0.1757813,0,0.5410156,0.3535156,0.03046875,-0.2226563,0,0.5253906,0.3144531,-0.03046875,0.2203125,0,0.4746094,0.6835938,-0.0609375,-0.2953125,0,0.4492188,0.2539063,-0.09609375,-0.3,0,0.4199219,0.25,-0.1242188,-0.3046875,0,0.3964844,0.2460938,-0.1546875,0.2414063,0,0.3710938,0.7011719,-0.2273438,-0.3046875,0,0.3105469,0.2460938,-0.2554688,0.1804688,0,0.2871094,0.6503906,-0.3257813,0.1546875,0,0.2285156,0.6289063,-0.346875,-0.253125,0,0.2109375,0.2890625,-0.4007813,0.05390625,0,0.1660156,0.5449219,-0.421875,-0.05390625,0,0.1484375,0.4550781,-0.421875,-0.1640625,0,0.1484375,0.3632813],[25,24,22,23,22,24,21,22,23,19,22,21,20,19,21,18,19,20,17,19,18,14,17,18,16,17,14,15,16,14,13,15,14,11,13,14,12,13,11,10,12,11,8,10,11,9,10,8,1,9,8,7,1,8,6,1,7,3,1,6,4,3,6,5,3,4,0,1,3,2,1,0],-0.000148668885231018,-0.000148668885231018,0.99985134601593,0.99985134601593,0.1484375,0.24609375,0.861328125,0.724609375,0,0,0,0,[0,0,0,0],[-0.6,-0.6,0.6,0.6],426.666656494141,512,512,512,512,256,256,76.0761184692383,126.076118469238]},{"id":23926,"path":"Assets/Content/Sprites/Ingredients/feta chesee.png","assetBundleId":-1,"data":["feta chesee",6,24064,[0.007031247,-0.05507813,0,0.3304688,0.2800781,0],[0.3375,-0.2132813,0,0.78125,0.3222656,0.3070312,-0.2789063,0,0.7558594,0.2675781,0.3375,-0.2484375,0,0.78125,0.2929688,0.2789063,-0.03515625,0,0.7324219,0.4707031,0.215625,0.1148438,0,0.6796875,0.5957031,0.1945313,-0.2882813,0,0.6621094,0.2597656,0.04921875,-0.3351563,0,0.5410156,0.2207031,0.0046875,0.225,0,0.5039063,0.6875,-0.03515625,0.225,0,0.4707031,0.6875,-0.0609375,-0.3351563,0,0.4492188,0.2207031,-0.06796875,-0.2367188,0,0.4433594,0.3027344,-0.1289063,-0.2203125,0,0.3925781,0.3164063,-0.2320313,-0.1125,0,0.3066406,0.40625,-0.2695313,0.196875,0,0.2753906,0.6640625,-0.3,0.1851563,0,0.25,0.6542969,-0.309375,-0.0375,0,0.2421875,0.46875,-0.3164063,0.1429688,0,0.2363281,0.6191406,-0.3210938,-0.00234375,0,0.2324219,0.4980469,-0.3234375,0.1078125,0,0.2304688,0.5898438,-0.3234375,0.0421875,0,0.2304688,0.5351563],[19,18,17,16,17,18,15,17,16,14,15,16,12,15,14,13,12,14,8,12,13,11,12,8,10,11,8,9,10,8,6,9,8,7,6,8,4,6,7,5,6,4,1,5,4,3,1,4,0,1,3,2,1,0],-0.000148668885231018,0,0.99985134601593,1,0.23046875,0.220703125,0.78125,0.6875,0,0,0,0,[0,0,0,0],[-0.6,-0.6,0.6,0.6],426.666656494141,512,512,512,512,256,256,118.076118469238,113]},{"id":24644,"path":"Assets/Content/Sprites/Ingredients/dill.png","assetBundleId":-1,"data":["dill",6,24658,[-0.005752832,0.02109376,0,0.3835227,0.4180398,0],[-0.07862216,0.2703835,0,0.4199219,0.7753906,-0.08053978,0.2607955,0,0.4179688,0.765625,-0.08053978,0.2569602,0,0.4179688,0.7617188,0.3605114,0.4391336,0,0.8671875,0.9472656,0.3183239,0.2972301,0,0.8242188,0.8027344,0.362429,0.3432529,0,0.8691406,0.8496094,0.2761364,0.2569602,0,0.78125,0.7617188,0.2550426,0.2416193,0,0.7597656,0.7460938,0.2492898,0.2416193,0,0.7539063,0.7460938,0.2435369,0.2377841,0,0.7480469,0.7421875,0.2358665,0.2320313,0,0.7402344,0.7363281,0.218608,0.2224432,0,0.7226563,0.7265625,0.2166904,0.2205256,0,0.7207031,0.7246094,0.1514915,-0.1955966,0,0.6542969,0.3007813,0.2166904,0.2109375,0,0.7207031,0.7148438,0.07862216,0.4391336,0,0.5800781,0.9472656,0.3758523,0.1131392,0,0.8828125,0.6152344,0.3777699,0.09204546,0,0.8847656,0.59375,0.3777699,0.1073864,0,0.8847656,0.609375,0.3279119,0.04410512,0,0.8339844,0.5449219,0.3068182,0.2818892,0,0.8125,0.7871094,0.3144886,0.01917614,0,0.8203125,0.5195313,0.2895597,0.2684659,0,0.7949219,0.7734375,0.2895597,0.0134233,0,0.7949219,0.5136719,0.2838068,0.0134233,0,0.7890625,0.5136719,0.2646307,0.2416193,0,0.7695313,0.7460938,0.3183239,0.01917614,0,0.8242188,0.5195313,0.3144886,-0.1035511,0,0.8203125,0.3945313,0.3259943,0.005752841,0,0.8320313,0.5058594,0.3068182,0.01725852,0,0.8125,0.5175781,0.3068182,-0.1169744,0,0.8125,0.3808594,0.2895597,0.01150568,0,0.7949219,0.5117188,0.2473722,0.2397017,0,0.7519531,0.7441406,0.2320313,-0.1476563,0,0.7363281,0.3496094,0.2416193,-0.1553267,0,0.7460938,0.3417969,0.2358665,-0.1706676,0,0.7402344,0.3261719,0.2416193,-0.1649148,0,0.7460938,0.3320313,0.1783381,-0.2205256,0,0.6816406,0.2753906,0.1725852,-0.2032671,0,0.6757813,0.2929688,-0.01725852,-0.2166904,0,0.4824219,0.2792969,-0.02109375,-0.2205256,0,0.4785156,0.2753906,-0.02684659,-0.2205256,0,0.4726563,0.2753906,-0.07670455,0.2799716,0,0.421875,0.7851563,-0.02876421,-0.2147727,0,0.4707031,0.28125,-0.0556108,0.3777699,0,0.4433594,0.8847656,-0.08053978,0.2262784,0,0.4179688,0.7304688,-0.0977983,0.2991478,0,0.4003906,0.8046875,-0.1764205,0.2857245,0,0.3203125,0.7910156,-0.193679,0.278054,0,0.3027344,0.7832031,-0.2032671,0.2473722,0,0.2929688,0.7519531,-0.2607955,-0.3470881,0,0.234375,0.1464844,-0.2339489,0.362429,0,0.2617188,0.8691406,-0.3892756,-0.02876421,0,0.1035156,0.4707031,-0.3892756,-0.3470881,0,0.1035156,0.1464844,-0.08437501,-0.3796875,0,0.4140625,0.1132813,-0.08245739,-0.3911932,0,0.4160156,0.1015625,-0.08245739,-0.3816051,0,0.4160156,0.1113281,-0.08629262,-0.396946,0,0.4121094,0.09570313,-0.1016335,-0.3796875,0,0.3964844,0.1132813,-0.1035511,-0.396946,0,0.3945313,0.09570313,-0.1054688,-0.3835227,0,0.3925781,0.109375,-0.1054688,-0.3911932,0,0.3925781,0.1015625,-0.01917614,-0.2109375,0,0.4804688,0.2851563,-0.02492898,-0.2109375,0,0.4746094,0.2851563],[43,63,41,40,41,63,62,40,63,39,40,62,44,15,43,63,43,15,62,63,15,39,62,15,61,60,59,58,59,60,57,59,58,54,57,58,55,57,54,56,55,54,0,1,46,45,46,1,2,45,1,53,52,50,51,50,52,49,50,51,41,50,49,37,50,41,48,41,49,43,41,48,47,43,48,46,43,47,45,43,46,2,43,45,0,43,2,42,43,0,44,43,42,40,37,41,39,37,40,13,37,39,15,13,39,38,37,13,14,33,13,35,13,33,34,35,33,36,35,34,14,32,33,24,33,32,30,33,24,25,24,32,31,30,24,29,30,31,27,30,29,26,27,29,28,27,26,25,22,24,23,24,22,21,23,22,20,21,22,19,21,20,16,19,20,17,19,16,18,17,16,3,12,15,13,15,12,14,13,12,11,12,3,10,11,3,9,10,3,8,9,3,7,8,3,6,7,3,4,6,3,5,4,3,2,1,0],-0.0000708699226379395,-0.0000522509217262268,0.999929130077362,0.999947726726532,0.103515625,0.095703125,0.884765625,0.947265625,0,0,0,0,[0,0,0,0],[-0.4909091,-0.4909091,0.4909091,0.4909091],521.4814453125,512,512,512,512,256,256,53.0362854003906,49.0267524719238]},{"id":24330,"path":"Assets/Content/Sprites/Dock/slot_background.png","assetBundleId":-1,"data":["slot_background",6,24332,[0,0,0,0.512,0.512,0],[0.508,0.352,0,0.9960938,0.84375,0.512,-0.328,0,1,0.1796875,0.512,0.328,0,1,0.8203125,0.504,-0.348,0,0.9921875,0.1601563,0.476,-0.408,0,0.9648438,0.1015625,0.464,0.424,0,0.953125,0.9140625,0.424,-0.464,0,0.9140625,0.046875,0.408,0.476,0,0.8984375,0.9648438,0.352,-0.508,0,0.84375,0.00390622,0.348,0.504,0,0.8398438,0.9921875,0.328,0.512,0,0.8203125,1,0.328,-0.512,0,0.8203125,0,-0.328,0.512,0,0.1796875,1,-0.328,-0.512,0,0.1796875,0,-0.348,-0.504,0,0.1601563,0.0078125,-0.352,0.508,0,0.15625,0.9960938,-0.384,-0.488,0,0.125,0.0234375,-0.424,0.464,0,0.0859375,0.953125,-0.424,-0.46,0,0.0859375,0.05078125,-0.464,-0.424,0,0.046875,0.0859375,-0.476,0.408,0,0.03515625,0.8984375,-0.504,0.348,0,0.0078125,0.8398438,-0.508,-0.352,0,0.00390622,0.15625,-0.512,0.328,0,0,0.8203125,-0.512,-0.328,0,0,0.1796875],[24,23,22,21,22,23,19,22,21,20,19,21,17,19,20,18,19,17,16,18,17,15,16,17,14,16,15,12,14,15,13,14,12,11,13,12,10,11,12,8,11,10,9,8,10,7,8,9,6,8,7,5,6,7,4,6,5,0,4,5,3,4,0,1,3,0,2,1,0],0,0,1,1,0,0,1,1,0.21875,0.1171875,0.2421875,0.34765625,[0,0,0,0],[-0.512,-0.512,0.512,0.512],250,256,256,256,256,128,128,0,0]},{"id":23944,"path":"Assets/Content/Sprites/Tiles/tile_c2_t4.png","assetBundleId":-1,"data":["tile_c2_t4",6,24070,[0,0,0,0.5688889,0.5688889,0],[-0.5688889,0.5688889,0,0,1,0.5688889,-0.5688889,0,1,0,0.5688889,0.5688889,0,1,1,-0.5688889,-0.5688889,0,0,0],[3,0,1,2,1,0],0,0,1,1,0,0,1,1,0,0,0,0,[0,0,0,0],[-0.5688889,-0.5688889,0.5688889,0.5688889],112.5,128,128,128,128,64,64,0,0]},{"id":24424,"path":"Assets/Content/Sprites/Quest/end_card.png","assetBundleId":-1,"data":["end_card",6,24554,[0,0,0,5.4,9.599999,0],[-5.4,9.599999,0,0,1,5.4,-9.599999,0,1,0,5.4,9.599999,0,1,1,-5.4,-9.599999,0,0,0],[3,0,1,2,1,0],0,0,1,1,0,0,1,1,0,0,0,0,[0,0,0,0],[-5.4,-9.599999,5.4,9.599999],53.3333358764648,576,1024,576,1024,288,512,0,0]},{"id":24598,"path":"Assets/Content/Sprites/Quest/dotted line.png","assetBundleId":-1,"data":["dotted line",6,24650,[0,0,0,0.73,0.73,0],[-0.58,-0.59,0,0.1027397,0.09589044,-0.46,-0.73,0,0.1849315,0,-0.46,-0.67,0,0.1849315,0.04109589,-0.59,-0.73,0,0.09589044,0,-0.62,-0.59,0,0.07534247,0.09589044,-0.67,-0.64,0,0.04109589,0.06164384,-0.67,-0.66,0,0.04109589,0.04794521,-0.17,-0.67,0,0.3835616,0.04109589,-0.15,-0.73,0,0.3972603,0,-0.15,-0.69,0,0.3972603,0.02739726,-0.33,-0.67,0,0.2739726,0.04109589,-0.35,-0.69,0,0.260274,0.02739726,-0.35,-0.73,0,0.260274,0,0.15,-0.67,0,0.6027398,0.04109589,0.17,-0.73,0,0.6164383,0,0.17,-0.69,0,0.6164383,0.02739726,-0.01,-0.67,0,0.4931507,0.04109589,-0.03,-0.69,0,0.479452,0.02739726,-0.03,-0.73,0,0.479452,0,0.48,-0.66,0,0.8287671,0.04794521,0.5,-0.73,0,0.8424658,0,0.5,-0.71,0,0.8424658,0.01369863,0.3,-0.66,0,0.7054794,0.04794521,0.29,-0.69,0,0.6986302,0.02739726,0.29,-0.73,0,0.6986302,0,0.73,-0.49,0,1,0.1643836,0.72,-0.61,0,0.9931507,0.08219178,0.73,-0.58,0,1,0.1027397,0.71,-0.48,0,0.9863014,0.1712329,0.67,-0.68,0,0.9589041,0.03424658,0.65,-0.48,0,0.9452055,0.1712329,0.61,-0.68,0,0.9178082,0.03424658,0.58,-0.6,0,0.8972602,0.08904107,0.58,-0.67,0,0.8972602,0.04109589,-0.69,-0.31,0,0.02739726,0.2876712,-0.66,-0.5,0,0.04794521,0.1575342,-0.66,-0.32,0,0.04794521,0.2808219,-0.7,-0.52,0,0.02054795,0.1438356,-0.73,-0.31,0,0,0.2876712,-0.73,-0.52,0,0,0.1438356,0.69,-0.17,0,0.9726027,0.3835616,0.73,-0.37,0,1,0.2465753,0.73,-0.17,0,1,0.3835616,0.69,-0.37,0,0.9726027,0.2465753,0.67,-0.19,0,0.9589041,0.369863,0.67,-0.35,0,0.9589041,0.260274,0.39,0.73,0,0.7671233,1,0.37,0.67,0,0.7534246,0.9589041,0.39,0.69,0,0.7671233,0.9726027,0.21,0.67,0,0.6438356,0.9589041,0.19,0.73,0,0.630137,1,0.19,0.69,0,0.630137,0.9726027,0.07,0.73,0,0.5479452,1,0.05,0.67,0,0.5342466,0.9589041,0.07,0.69,0,0.5479452,0.9726027,-0.11,0.67,0,0.4246575,0.9589041,-0.13,0.73,0,0.4109589,1,-0.13,0.69,0,0.4109589,0.9726027,-0.69,0.01,0,0.02739726,0.5068493,-0.67,-0.17,0,0.04109589,0.3835616,-0.67,-0.01,0,0.04109589,0.4931507,-0.69,-0.19,0,0.02739726,0.369863,-0.73,0.01,0,0,0.5068493,-0.73,-0.19,0,0,0.369863,0.69,0.15,0,0.9726027,0.6027398,0.73,-0.05,0,1,0.4657534,0.73,0.15,0,1,0.6027398,0.69,-0.05,0,0.9726027,0.4657534,0.67,0.13,0,0.9589041,0.5890411,0.67,-0.03,0,0.9589041,0.479452,-0.69,0.33,0,0.02739726,0.7260274,-0.67,0.15,0,0.04109589,0.6027398,-0.67,0.31,0,0.04109589,0.7123288,-0.69,0.13,0,0.02739726,0.5890411,-0.73,0.33,0,0,0.7260274,-0.73,0.13,0,0,0.5890411,0.71,0.48,0,0.9863014,0.8287671,0.73,0.27,0,1,0.6849315,0.73,0.48,0,1,0.8287671,0.69,0.27,0,0.9726027,0.6849315,0.66,0.46,0,0.9520548,0.8150685,0.66,0.28,0,0.9520548,0.6917808,-0.64,0.65,0,0.06164384,0.9452055,-0.6,0.54,0,0.08904107,0.869863,-0.6,0.64,0,0.08904107,0.9383562,-0.64,0.44,0,0.06164384,0.8013698,-0.69,0.65,0,0.02739726,0.9452055,-0.73,0.62,0,0,0.9246575,-0.73,0.44,0,0,0.8013698,0.69,0.63,0,0.9726027,0.9315069,0.67,0.56,0,0.9589041,0.8835617,0.69,0.57,0,0.9726027,0.890411,0.65,0.7,0,0.9452055,0.9794521,0.6,0.56,0,0.9109589,0.8835617,0.56,0.73,0,0.8835617,1,0.51,0.73,0,0.849315,1,0.51,0.63,0,0.849315,0.9315069,0.5,0.72,0,0.8424658,0.9931507,0.5,0.67,0,0.8424658,0.9589041,-0.25,0.73,0,0.3287671,1,-0.26,0.66,0,0.3219178,0.9520548,-0.25,0.69,0,0.3287671,0.9726027,-0.42,0.65,0,0.2123288,0.9452055,-0.52,0.65,0,0.1438356,0.9452055,-0.53,0.73,0,0.1369863,1,-0.54,0.72,0,0.130137,0.9931507,-0.54,0.7,0,0.130137,0.9794521],[106,105,103,104,103,105,99,103,104,102,103,99,100,102,99,101,100,99,98,97,96,95,96,97,93,96,95,94,93,95,92,93,94,90,93,92,89,90,92,91,90,89,88,87,85,86,85,87,82,85,86,83,85,82,84,83,82,81,80,79,76,79,80,77,79,76,78,77,76,75,74,73,70,73,74,71,73,70,72,71,70,69,68,67,64,67,68,65,67,64,66,65,64,63,62,61,58,61,62,59,61,58,60,59,58,57,56,55,52,55,56,53,55,52,54,53,52,51,50,49,46,49,50,47,49,46,48,47,46,45,44,43,40,43,44,41,43,40,42,41,40,39,38,37,34,37,38,35,37,34,36,35,34,33,32,31,30,31,32,29,31,30,28,29,30,26,29,28,25,26,28,27,26,25,24,23,20,22,20,23,19,20,22,21,20,19,18,17,14,16,14,17,13,14,16,15,14,13,12,11,8,10,8,11,7,8,10,9,8,7,6,5,3,4,3,5,0,3,4,1,3,0,2,1,0],0,0,1,1,0,0,1,1,0,0,0,0,[0,0,0,0],[-0.73,-0.73,0.73,0.73],100,146,146,146,146,73,73,0,0]},{"id":24412,"path":"Assets/Content/Sprites/Quest/bg.png","assetBundleId":-1,"data":["bg",6,24552,[0,0,0,5.4,9.6,0],[-5.4,9.6,0,0,1,5.4,-9.6,0,1,-3.178915e-8,5.4,9.6,0,1,1,-5.4,-9.6,0,0,-3.178915e-8],[3,0,1,2,1,0],0,-3.17891455381414e-8,1,0.999999940395355,0,-3.17891455381414e-8,1,0.999999940395355,0,0,0,0,[0,0,0,0],[-5.4,-9.6,5.4,9.6],100,1080,1920,1080,1920,540,960,0,0]},{"id":24646,"path":"Assets/Content/Sprites/Ingredients/olive oil.png","assetBundleId":-1,"data":["olive oil",6,24660,[-0.001171879,0,0,0.2402344,0.46875,0],[0.1101563,0.3890625,0,0.5917969,0.8242188,0.06328125,0.4617188,0,0.5527344,0.8847656,0.07734375,0.3117188,0,0.5644531,0.7597656,0.2132813,-0.16875,0,0.6777344,0.359375,0.2390625,-0.328125,0,0.6992188,0.2265625,0.2390625,-0.2390625,0,0.6992188,0.3007813,0.1101563,-0.46875,0,0.5917969,0.109375,0.0890625,0.046875,0,0.5742188,0.5390625,0.028125,0.46875,0,0.5234375,0.890625,-0.07265625,0.3023438,0,0.4394531,0.7519531,-0.075,0.2085938,0,0.4375,0.6738281,-0.0890625,-0.46875,0,0.4257813,0.109375,-0.2085938,-0.02109375,0,0.3261719,0.4824219,-0.2132813,-0.121875,0,0.3222656,0.3984375,-0.2414063,-0.1945313,0,0.2988281,0.3378906,-0.2414063,-0.35625,0,0.2988281,0.203125,-0.07734375,0.46875,0,0.4355469,0.890625,-0.1148438,0.4007813,0,0.4042969,0.8339844],[17,16,9,8,9,16,15,14,11,13,11,14,12,11,13,10,11,12,6,11,10,9,6,10,8,6,9,1,6,8,2,6,1,7,6,2,3,6,7,4,6,3,5,4,3,2,1,0],-0.000148683786392212,-0.000148676335811615,0.99985134601593,0.99985134601593,0.298828125,0.109375,0.69921875,0.890625,0,0,0,0,[0,0,0,0],[-0.6,-0.6,0.6,0.6],426.666656494141,512,512,512,512,256,256,153.076126098633,56.0761222839355]},{"id":24682,"path":"Assets/Content/Sprites/background.png","assetBundleId":-1,"data":["background",6,24684,[0,0,0,10.24,10.24,0],[-10.24,10.24,0,0,1,10.24,-10.24,0,1,0,10.24,10.24,0,1,1,-10.24,-10.24,0,0,0],[3,0,1,2,1,0],0,0,1,1,0,0,1,1,0,0,0,0,[0,0,0,0],[-10.24,-10.24,10.24,10.24],100,2048,2048,2048,2048,1024,1024,0,0]},{"id":24648,"path":"Assets/Content/Sprites/Ingredients/lemon.png","assetBundleId":-1,"data":["lemon",6,24662,[0.001171857,0,0,0.5074219,0.43125,0],[-0.4617188,-0.1546875,0,0.1152344,0.3710938,-0.459375,-0.1734375,0,0.1171875,0.3554688,-0.459375,-0.1710937,0,0.1171875,0.3574219,-0.4710938,-0.178125,0,0.1074219,0.3515625,-0.4828125,-0.178125,0,0.09765625,0.3515625,-0.4875,-0.09609375,0,0.09375,0.4199219,-0.4945313,-0.1734375,0,0.08789063,0.3554688,-0.4992188,-0.09609375,0,0.08398438,0.4199219,-0.50625,-0.0984375,0,0.078125,0.4179688,-0.50625,-0.140625,0,0.078125,0.3828125,-0.459375,-0.1617188,0,0.1171875,0.3652344,-0.2109375,-0.3890625,0,0.3242188,0.1757813,-0.2320313,-0.4078125,0,0.3066406,0.1601563,-0.2109375,-0.4078125,0,0.3242188,0.1601563,-0.2460938,-0.3890625,0,0.2949219,0.1757813,-0.2789063,-0.3960938,0,0.2675781,0.1699219,-0.35625,-0.3632813,0,0.203125,0.1972656,-0.365625,-0.3164063,0,0.1953125,0.2363281,-0.3867188,-0.290625,0,0.1777344,0.2578125,-0.4359375,-0.271875,0,0.1367188,0.2734375,-0.4453125,-0.271875,0,0.1289063,0.2734375,-0.4453125,-0.2742188,0,0.1289063,0.2714844,-0.4453125,-0.2953125,0,0.1289063,0.2539063,-0.4476563,-0.2742188,0,0.1269531,0.2714844,-0.4476563,-0.2929688,0,0.1269531,0.2558594,-0.225,-0.3492188,0,0.3125,0.2089844,-0.2109375,-0.3867188,0,0.3242188,0.1777344,-0.1875,0.43125,0,0.34375,0.859375,-0.4429688,0.4101563,0,0.1308594,0.8417969,-0.4523438,-0.2085938,0,0.1230469,0.3261719,-0.4828125,-0.04921875,0,0.09765625,0.4589844,-0.4921875,-0.065625,0,0.08984375,0.4453125,-0.5039063,0.09609375,0,0.08007813,0.5800781,-0.50625,0.04921875,0,0.078125,0.5410156,-0.50625,-0.075,0,0.078125,0.4375,0.2601562,-0.3679688,0,0.7167969,0.1933594,0.2203125,-0.3890625,0,0.6835938,0.1757813,0.2695313,-0.3703125,0,0.7246094,0.1914063,0.1921875,-0.3679688,0,0.6601563,0.1933594,0.1054688,-0.3890625,0,0.5878906,0.1757813,0.2765625,0.3867188,0,0.7304688,0.8222656,0.01640625,-0.3257813,0,0.5136719,0.2285156,0.01171875,-0.3210938,0,0.5097656,0.2324219,0.00703125,-0.3210938,0,0.5058594,0.2324219,0.00234375,-0.3257813,0,0.5019531,0.2285156,-0.01640625,-0.3257813,0,0.4863281,0.2285156,0.00234375,-0.3304687,0,0.5019531,0.2246094,-0.01875,-0.31875,0,0.484375,0.234375,-0.02578125,-0.31875,0,0.4785156,0.234375,-0.03046875,-0.31875,0,0.4746094,0.234375,-0.0375,-0.3164063,0,0.46875,0.2363281,-0.0421875,-0.31875,0,0.4648438,0.234375,-0.046875,-0.3140625,0,0.4609375,0.2382813,-0.06328125,-0.3140625,0,0.4472656,0.2382813,-0.06796875,-0.31875,0,0.4433594,0.234375,-0.0703125,-0.3117188,0,0.4414063,0.2402344,-0.0796875,-0.309375,0,0.4335938,0.2421875,-0.084375,-0.3140625,0,0.4296875,0.2382813,-0.0984375,-0.3117188,0,0.4179688,0.2402344,-0.084375,-0.31875,0,0.4296875,0.234375,-0.1007813,-0.3046875,0,0.4160156,0.2460938,-0.1125,-0.3023438,0,0.40625,0.2480469,-0.1171875,-0.3070312,0,0.4023438,0.2441406,-0.1195313,-0.3023438,0,0.4003906,0.2480469,-0.1265625,-0.3,0,0.3945313,0.25,-0.13125,-0.3046875,0,0.390625,0.2460938,0.3351563,0.43125,0,0.7792969,0.859375,0.3046875,-0.271875,0,0.7539063,0.2734375,0.290625,-0.2671875,0,0.7421875,0.2773438,0.3046875,-0.2789063,0,0.7539063,0.2675781,0.4359375,-0.1523438,0,0.8632813,0.3730469,0.459375,-0.1664063,0,0.8828125,0.3613281,0.459375,-0.15,0,0.8828125,0.375,0.4125,-0.178125,0,0.84375,0.3515625,0.35625,-0.3375,0,0.796875,0.21875,0.3117188,-0.2695313,0,0.7597656,0.2753906,0.2882813,0.3914063,0,0.7402344,0.8261719,0.2835937,-0.3726563,0,0.7363281,0.1894531,0.2742188,-0.3984375,0,0.7285156,0.1679688,0.2835937,-0.3890625,0,0.7363281,0.1757813,0.1195313,-0.43125,0,0.5996094,0.140625,-0.01171875,-0.4171875,0,0.4902344,0.1523438,-0.0140625,-0.421875,0,0.4882813,0.1484375,-0.0140625,-0.43125,0,0.4882813,0.140625,0.01640625,-0.3304687,0,0.5136719,0.2246094,0.01171875,-0.3351563,0,0.5097656,0.2207031,0.00703125,-0.3351563,0,0.5058594,0.2207031,-0.02109375,-0.3304687,0,0.4824219,0.2246094,-0.028125,-0.3304687,0,0.4765625,0.2246094,-0.03046875,-0.3257813,0,0.4746094,0.2285156,-0.03046875,-0.3234375,0,0.4746094,0.2304688,-0.0375,-0.328125,0,0.46875,0.2265625,-0.0421875,-0.3234375,0,0.4648438,0.2304688,-0.0421875,-0.3210938,0,0.4648438,0.2324219,-0.046875,-0.328125,0,0.4609375,0.2265625,-0.065625,-0.328125,0,0.4453125,0.2265625,-0.07265625,-0.3234375,0,0.4394531,0.2304688,-0.0796875,-0.3234375,0,0.4335938,0.2304688,-0.1054688,-0.3164063,0,0.4121094,0.2363281,-0.1148438,-0.3140625,0,0.4042969,0.2382813,-0.1195313,-0.309375,0,0.4003906,0.2421875,-0.1265625,-0.3117188,0,0.3945313,0.2402344,-0.4476563,-0.271875,0,0.1269531,0.2734375,-0.4453125,-0.2671875,0,0.1289063,0.2773438,-0.4523438,-0.2648438,0,0.1230469,0.2792969,-0.4523438,-0.2765625,0,0.1230469,0.2695313,-0.4570313,-0.2695313,0,0.1191406,0.2753906,0.4289063,-0.121875,0,0.8574219,0.3984375,0.4242188,-0.1335938,0,0.8535156,0.3886719,0.4289063,-0.1265625,0,0.8574219,0.3945313,0.421875,-0.1195313,0,0.8515625,0.4003906,0.4195313,-0.1335938,0,0.8496094,0.3886719,0.4148438,-0.1265625,0,0.8457031,0.3945313,0.4148438,-0.13125,0,0.8457031,0.390625,0.4289063,-0.121875,0,0.8574219,0.3984375,0.4242188,-0.1195313,0,0.8535156,0.4003906,0.43125,-0.1171875,0,0.859375,0.4023438,0.421875,-0.1148438,0,0.8515625,0.4042969,0.43125,-0.04921875,0,0.859375,0.4589844,0.4242188,-0.1078125,0,0.8535156,0.4101563,0.43125,-0.1101563,0,0.859375,0.4082031,0.421875,-0.05859375,0,0.8515625,0.4511719,0.421875,-0.1101563,0,0.8515625,0.4082031,0.459375,0.1359375,0,0.8828125,0.6132813,0.4382813,-0.03515625,0,0.8652344,0.4707031,0.459375,-0.1382813,0,0.8828125,0.3847656,0.4359375,0.2695313,0,0.8632813,0.7246094,0.4289063,0.2789063,0,0.8574219,0.7324219,0.4289063,-0.01640625,0,0.8574219,0.4863281,0.4195313,0.2835937,0,0.8496094,0.7363281,0.4195313,-0.0609375,0,0.8496094,0.4492188,0.3632813,-0.1757813,0,0.8027344,0.3535156,0.3515625,0.3070312,0,0.7929688,0.7558594,0.3445313,0.3140625,0,0.7871094,0.7617188,0.3304687,0.309375,0,0.7753906,0.7578125,0.3257813,0.3492188,0,0.7714844,0.7910156,0.3304687,0.3070312,0,0.7753906,0.7558594,0.3351563,0.3140625,0,0.7792969,0.7617188,0.4335938,-0.03984375,0,0.8613281,0.4667969,0.4335938,-0.0421875,0,0.8613281,0.4648438,0.4335938,-0.046875,0,0.8613281,0.4609375,0.4335938,-0.0328125,0,0.8613281,0.4726563,0.4664063,-0.234375,0,0.8886719,0.3046875,0.45,-0.2554688,0,0.875,0.2871094,0.4664063,-0.2390625,0,0.8886719,0.3007813,0.4382813,-0.2554688,0,0.8652344,0.2871094,0.4570313,-0.2132813,0,0.8808594,0.3222656,0.4664063,-0.225,0,0.8886719,0.3125,0.4453125,-0.2132813,0,0.8710938,0.3222656,0.4359375,-0.2554688,0,0.8632813,0.2871094,0.43125,-0.2460938,0,0.859375,0.2949219,0.43125,-0.253125,0,0.859375,0.2890625,0.4804688,-0.2226563,0,0.9003906,0.3144531,0.4921875,-0.2390625,0,0.9101563,0.3007813,0.4921875,-0.2226563,0,0.9101563,0.3144531,0.4804688,-0.271875,0,0.9003906,0.2734375,0.4429688,-0.3046875,0,0.8691406,0.2460938,0.4289063,-0.3046875,0,0.8574219,0.2460938,0.4195313,-0.2695313,0,0.8496094,0.2753906,0.4195313,-0.2859375,0,0.8496094,0.2617188,0.4195313,-0.1125,0,0.8496094,0.40625,0.3726563,-0.1828125,0,0.8105469,0.3476563,0.3703125,-0.1757813,0,0.8085938,0.3535156,0.3515625,0.3,0,0.7929688,0.75,0.3492188,-0.215625,0,0.7910156,0.3203125,0.346875,0.2976563,0,0.7890625,0.7480469,0.3375,0.2976563,0,0.78125,0.7480469,0.31875,0.3445313,0,0.765625,0.7871094,0.2976563,0.3890625,0,0.7480469,0.8242188,0.4921875,0.3914063,0,0.9101563,0.8261719,0.5085937,0.35625,0,0.9238281,0.796875,0.5085937,0.3796875,0,0.9238281,0.8164063,0.4851563,0.3351563,0,0.9042969,0.7792969,0.4664063,0.3351563,0,0.8886719,0.7792969,0.4453125,0.3679688,0,0.8710938,0.8066406,0.4382813,0.3914063,0,0.8652344,0.8261719,0.4359375,0.384375,0,0.8632813,0.8203125],[176,175,174,169,174,175,173,174,169,172,173,169,170,172,169,171,170,169,136,134,166,137,166,134,133,166,137,165,166,133,132,165,133,163,165,132,76,168,68,164,68,168,167,164,168,135,164,167,136,164,135,166,164,136,165,164,166,163,164,165,131,164,163,161,164,131,132,131,163,162,161,131,117,122,115,119,115,122,116,115,119,120,116,119,117,160,122,159,158,157,145,157,158,156,157,145,143,156,145,155,156,143,144,155,143,142,155,144,152,155,142,153,155,152,154,153,152,151,150,149,148,149,150,145,149,148,142,145,148,146,142,148,147,142,146,145,142,143,144,143,142,121,128,118,141,118,128,139,118,141,138,139,141,107,114,125,116,125,114,120,125,116,118,125,120,140,125,118,139,125,140,138,125,139,124,125,138,129,133,135,137,135,133,134,135,137,136,135,134,132,133,129,131,132,129,130,131,129,121,130,129,127,121,129,128,121,127,124,128,127,126,124,127,123,124,126,125,124,123,122,121,119,118,119,121,120,119,118,117,115,110,114,110,115,116,114,115,107,110,114,113,112,111,110,111,112,108,111,110,107,108,110,109,108,107,106,104,105,23,105,104,102,23,104,103,102,104,20,102,103,23,102,21,20,21,102,65,64,101,100,101,64,63,100,64,62,61,99,98,99,61,60,98,61,58,98,60,93,50,91,89,91,50,49,89,50,90,89,49,93,51,50,59,57,97,56,97,57,96,97,56,55,96,56,54,96,55,54,53,95,94,95,53,52,94,53,92,94,52,51,92,52,93,92,51,90,48,88,87,88,48,47,87,48,45,87,47,90,49,48,46,44,86,43,86,44,85,86,43,42,85,43,84,85,42,41,84,42,11,26,39,101,39,26,65,101,26,27,65,26,99,39,101,100,99,101,63,99,100,62,99,63,98,39,99,97,39,98,58,97,98,59,97,58,95,39,97,96,95,97,54,95,96,94,39,95,91,39,94,92,91,94,93,91,92,88,39,91,89,88,91,90,88,89,87,39,88,45,39,87,86,39,45,46,86,45,85,39,86,84,39,85,41,39,84,83,82,80,81,80,82,39,80,81,36,80,39,78,80,36,37,78,36,77,78,37,79,78,77,40,68,37,74,37,68,76,68,40,69,74,68,75,74,69,73,74,75,71,74,73,70,71,73,72,71,70,69,68,67,66,40,27,65,27,40,64,65,40,63,64,40,62,63,40,61,62,40,60,61,40,58,60,40,57,58,40,59,58,57,56,57,40,55,56,40,54,55,40,53,54,40,52,53,40,51,52,40,50,51,40,49,50,40,48,49,40,47,48,40,45,47,40,44,45,40,46,45,44,43,44,40,42,43,40,41,42,40,39,41,40,38,39,40,35,38,40,37,35,40,39,38,36,35,36,38,37,36,35,2,10,29,34,33,31,32,31,33,28,31,32,30,31,28,0,30,28,10,0,28,29,10,28,18,29,28,27,18,28,25,18,27,26,25,27,18,25,17,14,17,25,11,14,25,26,11,25,24,23,22,21,22,23,16,22,21,20,16,21,19,16,20,18,16,19,17,16,18,14,16,17,15,16,14,12,15,14,11,12,14,13,12,11,2,0,10,9,8,6,7,6,8,5,6,7,4,6,5,0,4,5,3,4,0,1,3,0,2,1,0],-0.0000522509217262268,-0.0000838041305541992,0.999947726726532,0.999916195869446,0.078125,0.140625,0.923828125,0.859375,0,0,0,0,[0,0,0,0],[-0.6,-0.6,0.6,0.6],426.666656494141,512,512,512,512,256,256,40.0267524719238,72.0429077148438]},{"id":24972,"path":"Assets/Content/Sprites/Ingredients/vanila.png","assetBundleId":-1,"data":["vanila",6,24970,[0.002343744,-0.028125,0,0.496875,0.2414063,0],[-0.1617188,0.1734375,0,0.3652344,0.6445313,-0.1734375,0.0421875,0,0.3554688,0.5351563,-0.1710937,0.0421875,0,0.3574219,0.5351563,-0.1945313,0.05859375,0,0.3378906,0.5488281,-0.225,0.0890625,0,0.3125,0.5742188,0.4289063,0.2132813,0,0.8574219,0.6777344,0.4992188,-0.196875,0,0.9160156,0.3359375,0.4992188,0.1640625,0,0.9160156,0.6367188,0.2179688,-0.2695313,0,0.6816406,0.2753906,-0.1078125,0.2132813,0,0.4101563,0.6777344,-0.178125,0.0421875,0,0.3515625,0.5351563,-0.2367188,-0.04921875,0,0.3027344,0.4589844,-0.1804688,0.04453125,0,0.3496094,0.5371094,-0.2507813,-0.046875,0,0.2910156,0.4609375,-0.2859375,-0.04453125,0,0.2617188,0.4628906,-0.2507813,-0.046875,0,0.2910156,0.4609375,-0.3046875,-0.03984375,0,0.2460938,0.4667969,-0.2882813,-0.0421875,0,0.2597656,0.4648438,-0.3140625,-0.0375,0,0.2382813,0.46875,-0.328125,-0.03515625,0,0.2265625,0.4707031,-0.421875,-0.05859375,0,0.1484375,0.4511719,-0.4382813,-0.2695313,0,0.1347656,0.2753906,-0.4734375,-0.24375,0,0.1054688,0.296875,-0.4921875,-0.2015625,0,0.08984375,0.3320313,-0.4265625,-0.0140625,0,0.1445313,0.4882813,-0.46875,0.00703125,0,0.109375,0.5058594,-0.4875,-0.03046875,0,0.09375,0.4746094,-0.4945313,0,0,0.08789063,0.5,-0.4945313,-0.02109375,0,0.08789063,0.4824219,-0.2414063,-0.046875,0,0.2988281,0.4609375,-0.253125,-0.04453125,0,0.2890625,0.4628906,-0.2648438,-0.04453125,0,0.2792969,0.4628906,-0.3023438,-0.03984375,0,0.2480469,0.4667969,-0.3117188,-0.0375,0,0.2402344,0.46875,-0.3257813,-0.03515625,0,0.2285156,0.4707031,-0.3539062,-0.028125,0,0.2050781,0.4765625,-0.3796875,-0.02109375,0,0.1835938,0.4824219,-0.3914063,0.1992188,0,0.1738281,0.6660156,-0.4242188,-0.009375,0,0.1464844,0.4921875,-0.4945313,0.09140625,0,0.08789063,0.5761719,-0.4945313,0.0328125,0,0.08789063,0.5273438],[15,29,13,11,13,29,40,39,38,37,38,39,36,38,37,12,36,37,35,36,12,34,35,12,33,34,12,32,33,12,31,32,12,30,31,12,15,30,12,29,15,12,11,29,12,28,27,26,25,26,27,20,26,25,24,20,25,19,20,24,23,20,22,21,22,20,8,21,20,19,8,20,18,8,19,16,8,18,14,8,16,17,14,16,13,8,14,15,13,14,11,8,13,10,8,11,12,10,11,1,8,10,2,8,1,0,8,2,9,8,0,5,8,9,6,8,5,7,6,5,4,0,3,1,3,0,2,1,0],-0.0000838041305541992,-0.0000522434711456299,0.999916195869446,0.999947786331177,0.087890625,0.275390625,0.916015625,0.677734375,0,0,0,0,[0,0,0,0],[-0.6,-0.6,0.6,0.6],426.666656494141,512,512,512,512,256,256,45.0429077148438,141.026748657227]},{"id":25014,"path":"Assets/Content/Sprites/Ingredients/ham.png","assetBundleId":-1,"data":["ham",6,25012,[0.02460937,-0.005859375,0,0.4394531,0.3292969,0],[0.07734375,0.2742188,0,0.5644531,0.7285156,0.0796875,0.2648438,0,0.5664063,0.7207031,0.08671875,0.2671875,0,0.5722656,0.7226563,0.075,0.271875,0,0.5625,0.7265625,0.08671875,0.2742188,0,0.5722656,0.7285156,0.08671875,0.2671875,0,0.5722656,0.7226563,0.0796875,0.2765625,0,0.5664063,0.7304688,0.4453125,-0.04453125,0,0.8710938,0.4628906,0.4453125,-0.1429688,0,0.8710938,0.3808594,0.4453125,-0.1335938,0,0.8710938,0.3886719,0.4289063,-0.2554688,0,0.8574219,0.2871094,0.3492188,-0.02109375,0,0.7910156,0.4824219,0.2859375,-0.3351563,0,0.7382813,0.2207031,0.2789063,0.121875,0,0.7324219,0.6015625,0.2742188,-0.3351563,0,0.7285156,0.2207031,0.09375,-0.3023438,0,0.578125,0.2480469,0.01171875,0.3234375,0,0.5097656,0.7695313,-0.08671875,-0.2414063,0,0.4277344,0.2988281,-0.1195313,0.3234375,0,0.4003906,0.7695313,-0.1710937,0.3140625,0,0.3574219,0.7617188,-0.2601562,0.2671875,0,0.2832031,0.7226563,-0.2789063,-0.2015625,0,0.2675781,0.3320313,-0.365625,-0.1148438,0,0.1953125,0.4042969,-0.3679688,0.1640625,0,0.1933594,0.6367188,-0.3914063,0.05625,0,0.1738281,0.546875,-0.3914063,-0.046875,0,0.1738281,0.4609375,0.4617188,-0.1148438,0,0.8847656,0.4042969,0.4640625,-0.1851563,0,0.8867188,0.3457031,0.4640625,-0.1171875,0,0.8867188,0.4023438,0.4546875,-0.1195313,0,0.8789063,0.4003906,0.45,-0.1242188,0,0.875,0.3964844,0.45,0.03046875,0,0.875,0.5253906,0.4429688,-0.0234375,0,0.8691406,0.4804688,0.45,-0.01640625,0,0.875,0.4863281,0.440625,0.0328125,0,0.8671875,0.5273438,0.4195313,-0.0234375,0,0.8496094,0.4804688,0.3726563,0.0328125,0,0.8105469,0.5273438,0.3726563,0.01171875,0,0.8105469,0.5097656,-0.3960938,0.08671875,0,0.1699219,0.5722656,-0.39375,0.06796875,0,0.171875,0.5566406,-0.39375,0.0796875,0,0.171875,0.5664063,-0.3984375,0.065625,0,0.1679688,0.5546875,-0.4054688,0.08671875,0,0.1621094,0.5722656,-0.4101563,0.065625,0,0.1582031,0.5546875,-0.4148438,0.08203125,0,0.1542969,0.5683594,-0.4148438,0.0703125,0,0.1542969,0.5585938,0.08203125,0.3234375,0,0.5683594,0.7695313,0.09609375,0.3046875,0,0.5800781,0.7539063,0.09609375,0.3234375,0,0.5800781,0.7695313,0.075,0.3046875,0,0.5625,0.7539063,0.07265625,0.3164063,0,0.5605469,0.7636719,0.07265625,0.309375,0,0.5605469,0.7578125],[51,50,49,46,49,50,47,49,46,48,47,46,3,16,0,45,44,43,42,43,44,41,43,42,38,41,42,39,41,38,40,39,38,37,36,35,34,35,36,32,35,34,31,32,34,33,32,31,10,8,27,9,27,8,30,27,9,29,27,30,26,27,29,28,27,26,25,24,22,23,22,24,20,22,23,21,22,20,17,21,20,19,17,20,18,17,19,16,17,18,15,17,16,3,15,16,1,15,3,2,15,1,13,15,2,14,15,13,12,14,13,11,12,13,10,12,11,7,10,11,8,10,7,9,8,7,0,6,2,4,2,6,5,2,4,3,0,1,2,1,0],-0.000148668885231018,-0.0000522434711456299,0.99985134601593,0.999947786331177,0.154296875,0.220703125,0.88671875,0.76953125,0,0,0,0,[0,0,0,0],[-0.6,-0.6,0.6,0.6],426.666656494141,512,512,512,512,256,256,79.0761184692383,113.026748657227]},{"id":24996,"path":"Assets/Content/Sprites/Ingredients/eggplant.png","assetBundleId":-1,"data":["eggplant",6,24994,[0.01289064,-0.01289062,0,0.5519531,0.3949219,0],[-0.4335938,-0.2554688,0,0.1386719,0.2871094,-0.4335938,-0.2671875,0,0.1386719,0.2773438,-0.4101563,-0.2859375,0,0.1582031,0.2617188,-0.4359375,-0.2578125,0,0.1367188,0.2851563,-0.3796875,-0.2835937,0,0.1835938,0.2636719,-0.3820313,-0.3,0,0.1816406,0.25,-0.3796875,-0.2953125,0,0.1835938,0.2539063,-0.3914063,-0.2695313,0,0.1738281,0.2753906,-0.39375,-0.3,0,0.171875,0.25,-0.4242188,-0.2507813,0,0.1464844,0.2910156,-0.43125,-0.2507813,0,0.140625,0.2910156,-0.403125,-0.2953125,0,0.1640625,0.2539063,-0.4101563,0.3820313,0,0.1582031,0.8183594,-0.3632813,0.20625,0,0.1972656,0.671875,-0.3375,0.3328125,0,0.21875,0.7773438,-0.440625,0.3820313,0,0.1328125,0.8183594,-0.459375,0.2976563,0,0.1171875,0.7480469,-0.4710938,0.3164063,0,0.1074219,0.7636719,-0.4757813,0.3398438,0,0.1035156,0.7832031,0.4148438,0.1125,0,0.8457031,0.59375,0.4171875,0.1101563,0,0.8476563,0.5917969,0.4171875,0.1101563,0,0.8476563,0.5917969,0.4125,0.1054688,0,0.84375,0.5878906,0.3820313,-0.3585938,0,0.8183594,0.2011719,0.4125,0.0984375,0,0.84375,0.5820313,0.328125,-0.3796875,0,0.7734375,0.1835938,0.2789063,0.20625,0,0.7324219,0.671875,0.16875,-0.4054688,0,0.640625,0.1621094,0.1523438,0.2742188,0,0.6269531,0.7285156,0.08671875,-0.4078125,0,0.5722656,0.1601563,-0.04453125,0.3070312,0,0.4628906,0.7558594,-0.05390625,-0.4078125,0,0.4550781,0.1601563,-0.140625,0.3726563,0,0.3828125,0.8105469,-0.2203125,-0.39375,0,0.3164063,0.171875,-0.3726563,-0.3539062,0,0.1894531,0.2050781,-0.4289063,0.159375,0,0.1425781,0.6328125,-0.4617188,-0.2203125,0,0.1152344,0.3164063,-0.4804688,-0.0234375,0,0.09960938,0.4804688,-0.4875,0.03515625,0,0.09375,0.5292969,-0.4921875,0.234375,0,0.08984375,0.6953125,-0.534375,0.2039063,0,0.0546875,0.6699219,-0.5390625,0.1875,0,0.05078125,0.65625,-0.5390625,0.13125,0,0.05078125,0.609375,-0.4523438,-0.2578125,0,0.1230469,0.2851563,-0.4617188,-0.309375,0,0.1152344,0.2421875,-0.4804688,-0.2484375,0,0.09960938,0.2929688,-0.4851563,-0.253125,0,0.09570313,0.2890625,-0.4875,-0.271875,0,0.09375,0.2734375,0.4429688,0.084375,0,0.8691406,0.5703125,0.43125,0.084375,0,0.859375,0.5703125,0.4429688,0.084375,0,0.8691406,0.5703125,0.4453125,0.0984375,0,0.8710938,0.5820313,0.4453125,0.0890625,0,0.8710938,0.5742188,0.4335938,0.1078125,0,0.8613281,0.5898438,0.5648438,-0.009375,0,0.9707031,0.4921875,0.5578125,-0.1125,0,0.9648438,0.40625,0.5648438,-0.046875,0,0.9707031,0.4609375,0.4992188,-0.3140625,0,0.9160156,0.2382813,0.5484375,-0.2625,0,0.9570313,0.28125,0.4945313,0.09375,0,0.9121094,0.578125,0.4734375,0.07265625,0,0.8945313,0.5605469,0.4664063,0.06328125,0,0.8886719,0.5527344,0.5648438,-0.2132813,0,0.9707031,0.3222656,0.5648438,-0.1335938,0,0.9707031,0.3886719,-0.5367188,-0.1171875,0,0.05273435,0.4023438],[64,37,36,58,55,62,63,62,55,23,24,57,49,57,24,50,57,49,48,57,50,61,57,48,60,57,61,59,57,60,54,57,59,55,57,54,58,57,55,56,55,54,21,53,48,51,48,53,52,48,51,24,22,49,20,49,22,21,49,20,48,49,21,50,49,48,47,46,44,45,44,46,43,44,45,34,44,43,11,34,43,8,34,11,5,34,8,6,34,5,4,34,6,42,41,38,40,38,41,39,38,40,35,38,39,37,38,35,36,37,35,0,36,35,10,0,35,9,10,35,13,9,35,7,9,13,4,7,13,34,4,13,33,34,13,14,33,13,32,33,14,31,33,32,30,31,32,29,31,30,28,29,30,27,29,28,26,27,28,25,27,26,22,25,26,19,22,26,23,25,22,24,23,22,20,22,19,21,20,19,18,15,17,16,17,15,13,16,15,12,13,15,14,13,12,11,2,8,0,10,2,9,2,10,7,2,9,8,2,7,5,8,7,4,5,7,6,5,4,3,0,1,2,1,0],-0.0000522471964359283,-0.000148668885231018,0.999947726726532,0.99985134601593,0.05078125,0.16015625,0.970703125,0.818359375,0,0,0,0,[0,0,0,0],[-0.6,-0.6,0.6,0.6],426.666656494141,512,512,512,512,256,256,26.0267505645752,82.0761184692383]},{"id":24812,"path":"Assets/Content/Sprites/Ingredients/yeast.png","assetBundleId":-1,"data":["yeast",6,24810,[0,0.01875,0,0.6,0.459375,0],[0.2554688,-0.4078125,0,0.7128906,0.1601563,0.215625,-0.440625,0,0.6796875,0.1328125,0.2554688,-0.4195313,0,0.7128906,0.1503906,0.1875,-0.4078125,0,0.65625,0.1601563,0.1453125,-0.440625,0,0.6210938,0.1328125,0.140625,-0.4101563,0,0.6171875,0.1582031,0.140625,-0.421875,0,0.6171875,0.1484375,-0.4804688,-0.3257813,0,0.09960938,0.2285156,-0.4828125,-0.4078125,0,0.09765625,0.1601563,-0.4804688,-0.4054688,0,0.09960938,0.1621094,-0.4945313,-0.3140625,0,0.08789063,0.2382813,-0.5109375,-0.4078125,0,0.07421875,0.1601563,-0.6,-0.3140625,0,0,0.2382813,-0.6,-0.3679688,0,0,0.1933594,0.54375,-0.3515625,0,0.953125,0.2070313,0.534375,-0.3679688,0,0.9453125,0.1933594,0.5554687,-0.3515625,0,0.9628906,0.2070313,0.5203125,-0.3679688,0,0.9335938,0.1933594,0.58125,-0.309375,0,0.984375,0.2421875,0.58125,-0.3304687,0,0.984375,0.2246094,0.5484375,-0.309375,0,0.9570313,0.2421875,0.4710938,-0.35625,0,0.8925781,0.203125,0.4710938,-0.3679688,0,0.8925781,0.1933594,0.590625,-0.346875,0,0.9921875,0.2109375,0.6,-0.3914063,0,1,0.1738281,0.6,-0.346875,0,1,0.2109375,0.58125,-0.3492188,0,0.984375,0.2089844,0.4898438,-0.4335938,0,0.9082031,0.1386719,0.4382813,-0.4335938,0,0.8652344,0.1386719,0.4359375,-0.4242188,0,0.8632813,0.1464844,0.4359375,-0.4289063,0,0.8632813,0.1425781,-0.09140625,-0.3328125,0,0.4238281,0.2226563,-0.09375,-0.346875,0,0.421875,0.2109375,-0.09140625,-0.3445313,0,0.4238281,0.2128906,-0.1007813,-0.346875,0,0.4160156,0.2109375,-0.103125,-0.3328125,0,0.4140625,0.2226563,-0.1054688,-0.3375,0,0.4121094,0.21875,-0.1054688,-0.3445313,0,0.4121094,0.2128906,-0.0328125,-0.309375,0,0.4726563,0.2421875,-0.03046875,-0.3234375,0,0.4746094,0.2304688,-0.03046875,-0.3117188,0,0.4746094,0.2402344,-0.0328125,-0.3328125,0,0.4726563,0.2226563,-0.05390625,-0.309375,0,0.4550781,0.2421875,-0.1171875,-0.31875,0,0.4023438,0.234375,-0.121875,-0.3234375,0,0.3984375,0.2304688,-0.121875,-0.3328125,0,0.3984375,0.2226563,0.159375,-0.3164063,0,0.6328125,0.2363281,0.1640625,-0.3257813,0,0.6367188,0.2285156,0.1640625,-0.3210938,0,0.6367188,0.2324219,0.159375,-0.3304687,0,0.6328125,0.2246094,0.1523438,-0.3164063,0,0.6269531,0.2363281,0.1523438,-0.3304687,0,0.6269531,0.2246094,0.1476562,-0.3210938,0,0.6230469,0.2324219,0.1476562,-0.3257813,0,0.6230469,0.2285156,-0.4148438,0.1007813,0,0.1542969,0.5839844,-0.4171875,0.08671875,0,0.1523438,0.5722656,-0.4148438,0.09375,0,0.1542969,0.578125,-0.4195313,0.103125,0,0.1503906,0.5859375,-0.4265625,0.103125,0,0.1445313,0.5859375,-0.4335938,0.08671875,0,0.1386719,0.5722656,-0.4382813,0.09375,0,0.1347656,0.578125,-0.4898438,-0.2484375,0,0.09179688,0.2929688,-0.4570313,-0.2789063,0,0.1191406,0.2675781,-0.4570313,-0.2601562,0,0.1191406,0.2832031,-0.5039063,-0.2789063,0,0.08007813,0.2675781,-0.5132813,-0.2484375,0,0.0722656,0.2929688,-0.5132813,-0.2601562,0,0.0722656,0.2832031,-0.09609375,0.309375,0,0.4199219,0.7578125,-0.1054688,0.3023438,0,0.4121094,0.7519531,-0.0984375,0.3046875,0,0.4179688,0.7539063,-0.1125,0.3234375,0,0.40625,0.7695313,-0.1125,0.3070312,0,0.40625,0.7558594,-0.09609375,0.3304687,0,0.4199219,0.7753906,-0.09609375,0.3117188,0,0.4199219,0.7597656,-0.1007813,0.3375,0,0.4160156,0.78125,-0.1054688,0.3375,0,0.4121094,0.78125,-0.1125,0.3328125,0,0.40625,0.7773438,-0.084375,0.2976563,0,0.4296875,0.7480469,-0.0984375,0.2695313,0,0.4179688,0.7246094,-0.1195313,0.2765625,0,0.4003906,0.7304688,-0.5367188,0.07734375,0,0.05273435,0.5644531,-0.5296875,0.065625,0,0.05859375,0.5546875,-0.5296875,0.07265625,0,0.05859375,0.5605469,-0.5367188,0.05625,0,0.05273435,0.546875,-0.5554687,0.07734375,0,0.0371094,0.5644531,-0.6,0.0515625,0,0,0.5429688,-0.6,0.0328125,0,0,0.5273438,0.4523438,0.1125,0,0.8769531,0.59375,0.4617188,0.09375,0,0.8847656,0.578125,0.4617188,0.103125,0,0.8847656,0.5859375,0.4523438,0.09375,0,0.8769531,0.578125,0.4429688,0.121875,0,0.8691406,0.6015625,0.4289063,0.09375,0,0.8574219,0.578125,0.4101563,0.1265625,0,0.8417969,0.6054688,0.3421875,0.0984375,0,0.7851563,0.5820313,0.3210938,0.1265625,0,0.7675781,0.6054688,0.3210938,0.1148438,0,0.7675781,0.5957031,-0.1359375,0.1992188,0,0.3867188,0.6660156,-0.2414063,0.1265625,0,0.2988281,0.6054688,-0.2390625,0.1195313,0,0.3007813,0.5996094,-0.2484375,0.1265625,0,0.2929688,0.6054688,-0.2601562,0.121875,0,0.2832031,0.6015625,-0.253125,0.121875,0,0.2890625,0.6015625,-0.2671875,0.1242188,0,0.2773438,0.6035156,-0.2742188,0.1171875,0,0.2714844,0.5976563,-0.271875,0.1195313,0,0.2734375,0.5996094,-0.2765625,0.1242188,0,0.2695313,0.6035156,-0.290625,0.1242188,0,0.2578125,0.6035156,-0.2976563,0.1195313,0,0.2519531,0.5996094,-0.3914063,0.1007813,0,0.1738281,0.5839844,-0.2976563,0.1148438,0,0.2519531,0.5957031,-0.1054688,0.253125,0,0.4121094,0.7109375,-0.1148438,0.2507813,0,0.4042969,0.7089844,-0.1125,0.2296875,0,0.40625,0.6914063,-0.07734375,0.3375,0,0.4355469,0.78125,-0.08671875,0.2367188,0,0.4277344,0.6972656,-0.084375,0.2296875,0,0.4296875,0.6914063,-0.0515625,0.4382813,0,0.4570313,0.8652344,-0.046875,0.421875,0,0.4609375,0.8515625,-0.02109375,0.4382813,0,0.4824219,0.8652344,-0.05625,0.4265625,0,0.453125,0.8554688,-0.1289063,0.1992188,0,0.3925781,0.6660156,-0.1195313,0.1875,0,0.4003906,0.65625,-0.13125,0.1992188,0,0.390625,0.6660156,-0.1335938,0.1992188,0,0.3886719,0.6660156,-0.140625,0.3492188,0,0.3828125,0.7910156,-0.140625,0.2015625,0,0.3828125,0.6679688,-0.1453125,0.3375,0,0.3789063,0.78125,-0.24375,0.1148438,0,0.296875,0.5957031,-0.2507813,0.1148438,0,0.2910156,0.5957031,-0.2601562,0.1148438,0,0.2832031,0.5957031,-0.2671875,0.1125,0,0.2773438,0.59375,-0.2835937,0.1101563,0,0.2636719,0.5917969,-0.2953125,0.1101563,0,0.2539063,0.5917969,0.2578125,0.1757813,0,0.7148438,0.6464844,0.2085938,0.1734375,0,0.6738281,0.6445313,0.2578125,0.1640625,0,0.7148438,0.6367188,0.28125,0.1757813,0,0.734375,0.6464844,0.2789063,0.159375,0,0.7324219,0.6328125,0.28125,0.1664063,0,0.734375,0.6386719,0.2625,0.159375,0,0.71875,0.6328125,0.28125,0.178125,0,0.734375,0.6484375,0.2789063,0.178125,0,0.7324219,0.6484375,0.28125,0.1757813,0,0.734375,0.6464844,0.4335938,-0.2109375,0,0.8613281,0.3242188,0.4523438,-0.1664063,0,0.8769531,0.3613281,0.3046875,0.1757813,0,0.7539063,0.6464844,0.1757813,0.2953125,0,0.6464844,0.7460938,0.196875,0.2109375,0,0.6640625,0.6757813,0.178125,0.2953125,0,0.6484375,0.7460938,0.16875,0.3023438,0,0.640625,0.7519531,0.159375,0.3117188,0,0.6328125,0.7597656,0.159375,0.3539062,0,0.6328125,0.7949219,0.1570313,0.2976563,0,0.6308594,0.7480469,0.1476562,0.2929688,0,0.6230469,0.7441406,0.1453125,0.2835937,0,0.6210938,0.7363281,0.1453125,0.2695313,0,0.6210938,0.7246094,0.1382813,0.2671875,0,0.6152344,0.7226563,0.13125,0.2765625,0,0.609375,0.7304688,-0.046875,0.4007813,0,0.4609375,0.8339844,-0.06796875,0.43125,0,0.4433594,0.859375,-0.0515625,0.4148438,0,0.4570313,0.8457031,-0.07734375,0.4289063,0,0.4355469,0.8574219,-0.09375,0.24375,0,0.421875,0.703125,-0.290625,-0.2109375,0,0.2578125,0.3242188,-0.3914063,-0.1992188,0,0.1738281,0.3339844,0.3351563,0.2460938,0,0.7792969,0.7050781,0.2742188,0.1992188,0,0.7285156,0.6660156,0.2742188,0.1828125,0,0.7285156,0.6523438,0.2648438,0.178125,0,0.7207031,0.6484375,0.2578125,0.1757813,0,0.7148438,0.6464844,0.253125,0.1875,0,0.7109375,0.65625,0.2507813,0.1757813,0,0.7089844,0.6464844,0.2554688,0.1804688,0,0.7128906,0.6503906,0.24375,0.1898438,0,0.703125,0.6582031,0.2414063,0.1757813,0,0.7011719,0.6464844,0.2367188,0.1828125,0,0.6972656,0.6523438,0.2367188,0.1804688,0,0.6972656,0.6503906,0.2976563,0.2414063,0,0.7480469,0.7011719,0.3117188,0.234375,0,0.7597656,0.6953125,0.309375,0.2414063,0,0.7578125,0.7011719,0.2671875,0.2273438,0,0.7226563,0.6894531,0.2625,0.2085938,0,0.71875,0.6738281,0.2578125,0.215625,0,0.7148438,0.6796875,0.1429688,0.2929688,0,0.6191406,0.7441406,0.140625,0.2976563,0,0.6171875,0.7480469,0.1382813,0.290625,0,0.6152344,0.7421875,0.159375,0.365625,0,0.6328125,0.8046875,0.1523438,0.3164063,0,0.6269531,0.7636719,0.1453125,0.3609375,0,0.6210938,0.8007813,0.1429688,0.3070312,0,0.6191406,0.7558594,0.13125,0.2882813,0,0.609375,0.7402344,0.2835937,0.3,0,0.7363281,0.75,0.2789063,0.2835937,0,0.7324219,0.7363281,0.28125,0.2765625,0,0.734375,0.7304688,0.271875,0.290625,0,0.7265625,0.7421875,0.271875,0.2835937,0,0.7265625,0.7363281,0.2695313,0.290625,0,0.7246094,0.7421875,0.2671875,0.2789063,0,0.7226563,0.7324219,0.2648438,0.2953125,0,0.7207031,0.7460938,0.3,0.4476563,0,0.75,0.8730469,0.2765625,0.3117188,0,0.7304688,0.7597656,0.2835937,0.3046875,0,0.7363281,0.7539063,0.2742188,0.3117188,0,0.7285156,0.7597656,0.2671875,0.3046875,0,0.7226563,0.7539063,0.2484375,0.3421875,0,0.7070313,0.7851563,0.24375,0.346875,0,0.703125,0.7890625,0.2367188,0.3445313,0,0.6972656,0.7871094,0.2226563,0.4476563,0,0.6855469,0.8730469,0.2367188,0.3375,0,0.6972656,0.78125,0.3492188,0.2484375,0,0.7910156,0.7070313,0.3492188,0.3984375,0,0.7910156,0.8320313,0.28125,0.2484375,0,0.734375,0.7070313,0.2765625,0.271875,0,0.7304688,0.7265625,0.2695313,0.271875,0,0.7246094,0.7265625,0.2484375,0.3351563,0,0.7070313,0.7792969,0.2414063,0.3328125,0,0.7011719,0.7773438,0.1734375,0.3210938,0,0.6445313,0.7675781,0.1640625,0.3679688,0,0.6367188,0.8066406,0.159375,0.4171875,0,0.6328125,0.8476563,0.159375,0.3773438,0,0.6328125,0.8144531,0.1710937,0.3234375,0,0.6425781,0.7695313,0.1757813,0.3140625,0,0.6464844,0.7617188,0.1734375,0.3140625,0,0.6445313,0.7617188,0.16875,0.309375,0,0.640625,0.7578125,0.1828125,0.3140625,0,0.6523438,0.7617188,0.1804688,0.2953125,0,0.6503906,0.7460938,0.1875,0.3023438,0,0.65625,0.7519531,-0.1242188,0.45,0,0.3964844,0.875,-0.1265625,0.4289063,0,0.3945313,0.8574219,-0.1242188,0.4382813,0,0.3964844,0.8652344,-0.1289063,0.4523438,0,0.3925781,0.8769531,-0.1335938,0.4265625,0,0.3886719,0.8554688,-0.1265625,0.459375,0,0.3945313,0.8828125,-0.1242188,0.4546875,0,0.3964844,0.8789063,-0.1289063,0.459375,0,0.3925781,0.8828125,-0.121875,0.478125,0,0.3984375,0.8984375,-0.1289063,0.46875,0,0.3925781,0.890625,-0.09375,0.478125,0,0.421875,0.8984375,-0.0703125,0.43125,0,0.4414063,0.859375,-0.0703125,0.45,0,0.4414063,0.875,-0.09609375,0.43125,0,0.4199219,0.859375,-0.1429688,0.4007813,0,0.3808594,0.8339844,-0.1382813,0.3585938,0,0.3847656,0.7988281,-0.1382813,0.3796875,0,0.3847656,0.8164063,-0.1476562,0.3585938,0,0.3769531,0.7988281,-0.1570313,0.4007813,0,0.3691406,0.8339844,-0.1570313,0.365625,0,0.3691406,0.8046875,-0.08671875,0.3773438,0,0.4277344,0.8144531,-0.0890625,0.3632813,0,0.4257813,0.8027344,-0.08671875,0.365625,0,0.4277344,0.8046875,-0.09375,0.3796875,0,0.421875,0.8164063,-0.103125,0.3820313,0,0.4140625,0.8183594,-0.1054688,0.3632813,0,0.4121094,0.8027344,-0.1101563,0.3820313,0,0.4082031,0.8183594,-0.1148438,0.375,0,0.4042969,0.8125,-0.1148438,0.3679688,0,0.4042969,0.8066406,0.1570313,0.384375,0,0.6308594,0.8203125,0.1523438,0.3679688,0,0.6269531,0.8066406,0.1476562,0.384375,0,0.6230469,0.8203125,0.1429688,0.365625,0,0.6191406,0.8046875,0.1382813,0.3726563,0,0.6152344,0.8105469,0.1382813,0.3679688,0,0.6152344,0.8066406,-0.084375,0.4148438,0,0.4296875,0.8457031,-0.09140625,0.3984375,0,0.4238281,0.8320313,-0.084375,0.4007813,0,0.4296875,0.8339844,-0.1054688,0.4335938,0,0.4121094,0.8613281,-0.1195313,0.4335938,0,0.4003906,0.8613281,-0.121875,0.4171875,0,0.3984375,0.8476563,-0.1242188,0.43125,0,0.3964844,0.859375,-0.1242188,0.4242188,0,0.3964844,0.8535156,-0.1359375,0.459375,0,0.3867188,0.8828125,-0.1476562,0.4453125,0,0.3769531,0.8710938,-0.1476562,0.4265625,0,0.3769531,0.8554688],[273,272,232,271,232,272,235,232,271,231,232,235,270,269,268,267,268,269,264,268,267,266,264,267,263,264,266,265,264,263,262,261,260,259,260,261,258,260,259,257,258,259,220,258,257,256,255,253,254,253,255,252,253,254,249,253,252,251,249,252,248,249,251,250,249,248,247,246,245,242,245,246,243,245,242,244,243,242,228,234,241,236,241,234,238,241,236,239,241,238,240,239,238,235,237,233,236,233,237,234,233,236,231,235,228,233,228,235,234,228,233,232,231,229,228,229,231,230,229,228,209,207,216,206,216,207,215,216,206,205,215,206,221,224,152,150,152,224,223,224,221,217,223,221,222,223,217,222,225,149,226,149,225,227,226,225,150,224,147,223,147,224,222,147,223,149,147,222,152,187,221,218,221,187,217,221,218,185,190,184,154,184,190,188,154,190,153,154,188,151,153,188,199,204,197,203,197,204,195,197,203,192,195,203,201,192,203,202,192,201,198,196,214,213,214,196,193,213,196,194,213,193,187,220,218,219,218,220,208,218,219,217,218,208,209,217,208,212,217,209,214,212,209,216,214,209,215,214,216,198,214,215,205,198,215,199,198,205,213,212,214,194,212,213,210,212,194,192,210,194,202,210,192,200,210,202,211,210,200,200,207,208,209,208,207,206,207,200,205,206,200,199,205,200,204,199,200,203,204,200,201,203,200,202,201,200,199,197,198,196,198,197,195,196,197,193,196,195,192,193,195,194,193,192,158,191,157,186,157,191,156,157,186,155,156,186,189,191,119,158,119,191,186,191,189,185,186,189,190,185,189,188,190,189,187,188,189,151,188,187,152,151,187,186,185,155,184,155,185,154,155,184,183,181,182,179,182,181,178,179,181,180,179,178,177,176,175,174,175,176,172,175,174,171,172,174,173,172,171,134,170,137,169,137,170,142,137,169,143,137,142,143,141,146,168,167,142,166,142,167,141,142,166,146,141,166,95,146,166,96,146,95,93,95,166,91,93,166,87,91,166,165,109,164,110,164,109,133,164,110,132,164,133,144,164,132,131,144,132,104,131,132,105,131,104,130,144,131,129,144,130,101,129,130,102,129,101,128,144,129,99,144,128,97,144,99,122,144,97,124,122,97,123,122,124,113,144,122,79,113,122,116,144,113,111,116,113,163,116,111,114,144,116,162,144,114,159,144,162,160,159,162,161,159,160,118,144,159,119,144,118,158,144,119,157,144,158,156,144,157,135,144,156,155,135,156,154,135,155,153,135,154,151,135,153,148,135,151,150,148,151,152,150,151,147,148,150,149,148,147,136,144,135,140,144,136,138,144,140,139,144,138,137,144,139,96,144,137,146,96,137,94,144,96,92,144,94,90,144,92,145,144,90,143,142,141,136,134,140,137,140,134,138,140,137,139,138,137,136,135,134,110,108,133,107,133,108,132,133,107,106,132,107,104,132,106,105,103,131,130,131,103,101,130,103,102,100,129,128,129,100,98,128,100,99,128,98,127,125,126,124,126,125,70,124,125,123,124,70,79,123,70,121,123,79,122,121,79,71,79,70,120,117,118,119,118,117,116,115,114,113,112,111,97,107,109,108,109,107,110,109,108,106,107,97,103,106,97,104,106,103,105,104,103,101,103,97,100,101,97,102,101,100,98,100,97,99,98,97,96,95,94,93,94,95,92,94,93,91,92,93,90,92,91,87,90,91,90,87,88,89,88,87,86,85,83,84,83,85,80,83,84,81,83,80,82,81,80,79,71,78,68,78,71,69,78,68,77,78,69,67,77,69,70,76,67,75,67,76,74,67,75,72,67,74,73,67,72,71,70,68,67,68,70,69,68,67,66,65,64,61,64,65,62,64,61,63,62,61,60,58,59,55,59,58,57,55,58,54,55,57,56,55,54,53,52,51,50,51,52,49,51,50,46,49,50,47,49,46,48,47,46,45,44,35,43,35,44,42,35,43,31,35,42,41,31,42,38,41,42,39,41,38,40,39,38,37,36,34,35,34,36,31,34,35,32,34,31,33,32,31,30,29,28,17,28,29,27,28,17,24,27,17,15,24,17,16,24,15,26,24,16,23,24,26,25,24,23,22,21,17,20,17,21,14,17,20,16,14,20,18,16,20,19,16,18,17,14,15,16,15,14,13,12,11,10,11,12,8,11,10,7,8,10,9,8,7,6,5,4,3,4,5,1,4,3,0,1,3,2,1,0],0,-0.000100225210189819,1,0.999899744987488,0,0.1328125,1,0.8984375,0,0,0,0,[0,0,0,0],[-0.6,-0.6,0.6,0.6],426.666656494141,512,512,512,512,256,256,0,68.0513153076172]},{"id":25020,"path":"Assets/Content/Sprites/Ingredients/makaroni noodle.png","assetBundleId":-1,"data":["makaroni noodle",6,25018,[-0.003515631,-0.002343744,0,0.3855469,0.2554688,0],[0.3703125,0.1125,0,0.8085938,0.59375,0.3820313,-0.05859375,0,0.8183594,0.4511719,0.3820313,0.0234375,0,0.8183594,0.5195313,0.3398438,-0.1265625,0,0.7832031,0.3945313,0.2976563,0.1453125,0,0.7480469,0.6210938,0.2671875,-0.1898438,0,0.7226563,0.3417969,0.2132813,-0.2203125,0,0.6777344,0.3164063,0.2015625,0.196875,0,0.6679688,0.6640625,0.1476562,-0.24375,0,0.6230469,0.296875,0.1335938,0.2484375,0,0.6113281,0.7070313,0.03515625,-0.2578125,0,0.5292969,0.2851563,0.009375,0.253125,0,0.5078125,0.7109375,-0.02578125,0.253125,0,0.4785156,0.7109375,-0.0515625,-0.2578125,0,0.4570313,0.2851563,-0.0984375,0.2390625,0,0.4179688,0.6992188,-0.1054688,-0.253125,0,0.4121094,0.2890625,-0.225,-0.215625,0,0.3125,0.3203125,-0.234375,0.20625,0,0.3046875,0.671875,-0.2953125,-0.1710937,0,0.2539063,0.3574219,-0.3,0.1335938,0,0.25,0.6113281,-0.35625,-0.1101563,0,0.203125,0.4082031,-0.3890625,0.065625,0,0.1757813,0.5546875,-0.3890625,-0.0421875,0,0.1757813,0.4648438],[22,21,20,19,20,21,18,20,19,17,18,19,16,18,17,14,16,17,15,16,14,13,15,14,12,13,14,10,13,12,11,10,12,9,10,11,8,10,9,7,8,9,6,8,7,4,6,7,5,6,4,3,5,4,0,3,4,1,3,0,2,1,0],-0.000148668885231018,-0.0000252127647399902,0.99985134601593,0.99997478723526,0.17578125,0.28515625,0.818359375,0.7109375,0,0,0,0,[0,0,0,0],[-0.6,-0.6,0.6,0.6],426.666656494141,512,512,512,512,256,256,90.0761184692383,146.012908935547]},{"id":25028,"path":"Assets/Content/Sprites/Ingredients/fajita seasoning.png","assetBundleId":-1,"data":["fajita seasoning",6,25026,[0.01054686,-0.02695313,0,0.5355469,0.4558594,0],[-0.0421875,-0.4523438,0,0.4648438,0.1230469,-0.03984375,-0.478125,0,0.4667969,0.1015625,-0.03984375,-0.459375,0,0.4667969,0.1171875,-0.0421875,-0.4828125,0,0.4648438,0.09765625,-0.1078125,-0.4828125,0,0.4101563,0.09765625,-0.1617188,-0.4734375,0,0.3652344,0.1054688,-0.1734375,-0.4523438,0,0.3554688,0.1230469,-0.1734375,-0.4617188,0,0.3554688,0.1152344,0.2859375,0.196875,0,0.7382813,0.6640625,0.2882813,0.1875,0,0.7402344,0.65625,0.2882813,0.1921875,0,0.7402344,0.6601563,0.28125,0.1828125,0,0.734375,0.6523438,0.271875,0.196875,0,0.7265625,0.6640625,0.2507813,0.1664063,0,0.7089844,0.6386719,0.2414063,0.1664063,0,0.7011719,0.6386719,0.2367188,0.178125,0,0.6972656,0.6484375,0.2367188,0.16875,0,0.6972656,0.640625,0.4171875,0.0515625,0,0.8476563,0.5429688,0.4265625,-0.2484375,0,0.8554688,0.2929688,0.4265625,0.04921875,0,0.8554688,0.5410156,0.4125,0.05625,0,0.84375,0.546875,0.3867188,0.103125,0,0.8222656,0.5859375,0.3867188,0.0890625,0,0.8222656,0.5742188,0.3445313,0.0890625,0,0.7871094,0.5742188,0.309375,0.09375,0,0.7578125,0.578125,0.2601562,0.1242188,0,0.7167969,0.6035156,0.253125,0.1171875,0,0.7109375,0.5976563,0.2414063,0.1171875,0,0.7011719,0.5976563,0.2367188,0.1195313,0,0.6972656,0.5996094,0.2273438,0.13125,0,0.6894531,0.609375,0.234375,0.1382813,0,0.6953125,0.6152344,0.2226563,0.13125,0,0.6855469,0.609375,0.215625,0.1382813,0,0.6796875,0.6152344,0.1359375,0.2296875,0,0.6132813,0.6914063,0.1265625,0.2484375,0,0.6054688,0.7070313,0.1289063,0.2484375,0,0.6074219,0.7070313,0.1265625,0.234375,0,0.6054688,0.6953125,0.1265625,0.225,0,0.6054688,0.6875,0.121875,0.2203125,0,0.6015625,0.6835938,0.1171875,0.2203125,0,0.5976563,0.6835938,0.1125,0.225,0,0.59375,0.6875,-0.0515625,0.3914063,0,0.4570313,0.8261719,-0.07734375,0.2132813,0,0.4355469,0.6777344,-0.1171875,0.2179688,0,0.4023438,0.6816406,-0.1265625,0.20625,0,0.3945313,0.671875,-0.1265625,0.1828125,0,0.3945313,0.6523438,-0.140625,0.1546875,0,0.3828125,0.6289063,-0.1335938,0.20625,0,0.3886719,0.671875,-0.140625,0.1523438,0,0.3828125,0.6269531,-0.140625,0.15,0,0.3828125,0.625,-0.1476562,0.1570313,0,0.3769531,0.6308594,-0.1453125,0.1570313,0,0.3789063,0.6308594,-0.15,0.1570313,0,0.375,0.6308594,-0.159375,0.1523438,0,0.3671875,0.6269531,-0.2414063,0.103125,0,0.2988281,0.5859375,-0.31875,-0.2484375,0,0.234375,0.2929688,-0.4054688,0,0,0.1621094,0.5,-0.4054688,-0.2367188,0,0.1621094,0.3027344,0.4265625,0.0703125,0,0.8554688,0.5585938,0.4125,0.0703125,0,0.84375,0.5585938,0.4265625,0.075,0,0.8554688,0.5625,0.3375,0.2015625,0,0.78125,0.6679688,0.375,0.1078125,0,0.8125,0.5898438,0.3140625,0.1078125,0,0.7617188,0.5898438,0.3117188,0.1992188,0,0.7597656,0.6660156,0.309375,0.103125,0,0.7578125,0.5859375,0.2554688,0.1359375,0,0.7128906,0.6132813,0.2507813,0.1359375,0,0.7089844,0.6132813,0.2414063,0.15,0,0.7011719,0.625,0.5460938,0.03984375,0,0.9550781,0.5332031,0.5414063,0.02578125,0,0.9511719,0.5214844,0.5460938,0.028125,0,0.9550781,0.5234375,0.5320312,0.04921875,0,0.9433594,0.5410156,0.5203125,0.02578125,0,0.9335938,0.5214844,0.4828125,0.0703125,0,0.9023438,0.5585938,0.253125,0.1335938,0,0.7109375,0.6113281,0.2507813,0.1359375,0,0.7089844,0.6132813,0.2414063,0.1359375,0,0.7011719,0.6132813,0.2367188,0.1265625,0,0.6972656,0.6054688,0.2039063,-0.440625,0,0.6699219,0.1328125,0.13125,-0.4804688,0,0.609375,0.09960938,0.2039063,-0.4617188,0,0.6699219,0.1152344,0.075,-0.440625,0,0.5625,0.1328125,-0.00703125,-0.4804688,0,0.4941406,0.09960938,-0.02109375,-0.4476563,0,0.4824219,0.1269531,-0.02109375,-0.4734375,0,0.4824219,0.1054688,0.1382813,0.328125,0,0.6152344,0.7734375,0.1359375,0.2648438,0,0.6132813,0.7207031,0.1382813,0.31875,0,0.6152344,0.765625,0.13125,0.3210938,0,0.609375,0.7675781,0.13125,0.2695313,0,0.609375,0.7246094,0.1242188,0.3210938,0,0.6035156,0.7675781,0.1242188,0.2671875,0,0.6035156,0.7226563,0.121875,0.3257813,0,0.6015625,0.7714844,0.121875,0.253125,0,0.6015625,0.7109375,0.1546875,0.3585938,0,0.6289063,0.7988281,0.1546875,0.309375,0,0.6289063,0.7578125,0.1664063,0.35625,0,0.6386719,0.796875,0.15,0.3140625,0,0.625,0.7617188,0.1429688,0.3164063,0,0.6191406,0.7636719,0.140625,0.3304687,0,0.6171875,0.7753906,0.1382813,0.3421875,0,0.6152344,0.7851563,0.1382813,0.3375,0,0.6152344,0.78125,0.1945313,0.4007813,0,0.6621094,0.8339844,-0.3398438,-0.4078125,0,0.2167969,0.1601563,-0.3539062,-0.4335938,0,0.2050781,0.1386719,-0.3398438,-0.43125,0,0.2167969,0.140625,-0.4125,-0.4335938,0,0.15625,0.1386719,-0.4289063,-0.3773438,0,0.1425781,0.1855469,-0.4453125,-0.4078125,0,0.1289063,0.1601563,-0.4617188,-0.3773438,0,0.1152344,0.1855469,-0.4617188,-0.3867188,0,0.1152344,0.1777344,-0.1078125,-0.365625,0,0.4101563,0.1953125,-0.1054688,-0.3796875,0,0.4121094,0.1835938,-0.1054688,-0.3703125,0,0.4121094,0.1914063,-0.1195313,-0.365625,0,0.4003906,0.1953125,-0.121875,-0.3679688,0,0.3984375,0.1933594,-0.121875,-0.3796875,0,0.3984375,0.1835938,-0.4664063,-0.3,0,0.1113281,0.25,-0.4617188,-0.3140625,0,0.1152344,0.2382813,-0.4617188,-0.3023438,0,0.1152344,0.2480469,-0.4804688,-0.3140625,0,0.09960938,0.2382813,-0.50625,-0.28125,0,0.078125,0.265625,-0.5226563,-0.28125,0,0.06445313,0.265625,-0.5226563,-0.2976563,0,0.06445313,0.2519531,-0.525,-0.2882813,0,0.06249997,0.2597656,-0.3609375,0.0796875,0,0.1992188,0.5664063,-0.365625,0.05625,0,0.1953125,0.546875,-0.3609375,0.06328125,0,0.1992188,0.5527344,-0.3679688,0.08203125,0,0.1933594,0.5683594,-0.4007813,0.04921875,0,0.1660156,0.5410156,-0.4054688,0.08203125,0,0.1621094,0.5683594,-0.4242188,0.046875,0,0.1464844,0.5390625,-0.43125,0.06796875,0,0.140625,0.5566406,-0.440625,0.046875,0,0.1328125,0.5390625,-0.4429688,0.05390625,0,0.1308594,0.5449219,-0.1148438,0.2929688,0,0.4042969,0.7441406,-0.1078125,0.2320313,0,0.4101563,0.6933594,-0.1054688,0.2765625,0,0.4121094,0.7304688,-0.121875,0.290625,0,0.3984375,0.7421875,-0.1265625,0.2859375,0,0.3945313,0.7382813,-0.1429688,0.2953125,0,0.3808594,0.7460938,-0.1429688,0.1570313,0,0.3808594,0.6308594,-0.1523438,0.2953125,0,0.3730469,0.7460938,-0.1523438,0.1617188,0,0.3730469,0.6347656,-0.1570313,0.290625,0,0.3691406,0.7421875,-0.4945313,-0.2742188,0,0.08789063,0.2714844,-0.4875,-0.2835937,0,0.09375,0.2636719,-0.4875,-0.2765625,0,0.09375,0.2695313,-0.4945313,-0.2859375,0,0.08789063,0.2617188,-0.4992188,-0.2789063,0,0.08398438,0.2675781,0.2320313,0.1453125,0,0.6933594,0.6210938,0.2179688,0.1453125,0,0.6816406,0.6210938,0.1195313,0.24375,0,0.5996094,0.703125,0.13125,0.3375,0,0.609375,0.78125,0.121875,0.3304687,0,0.6015625,0.7753906,0.1125,0.2414063,0,0.59375,0.7011719,0.1359375,0.2554688,0,0.6132813,0.7128906,0.2625,0.2554688,0,0.71875,0.7128906,0.2578125,0.2390625,0,0.7148438,0.6992188,0.2601562,0.2320313,0,0.7167969,0.6933594,0.2507813,0.2460938,0,0.7089844,0.7050781,0.2507813,0.2390625,0,0.7089844,0.6992188,0.2484375,0.2460938,0,0.7070313,0.7050781,0.2460938,0.234375,0,0.7050781,0.6953125,0.24375,0.2507813,0,0.703125,0.7089844,0.2929688,0.4007813,0,0.7441406,0.8339844,0.3257813,0.2039063,0,0.7714844,0.6699219,0.3257813,0.2882813,0,0.7714844,0.7402344,0.2742188,0.2039063,0,0.7285156,0.6699219,0.2625,0.2578125,0,0.71875,0.7148438,0.2578125,0.2648438,0,0.7148438,0.7207031,0.2507813,0.2648438,0,0.7089844,0.7207031,0.24375,0.2625,0,0.703125,0.71875,0.2273438,0.2953125,0,0.6894531,0.7460938,0.2226563,0.3,0,0.6855469,0.75,0.215625,0.2976563,0,0.6796875,0.7480469,0.215625,0.290625,0,0.6796875,0.7421875,0.2554688,0.2273438,0,0.7128906,0.6894531,0.2484375,0.2273438,0,0.7070313,0.6894531,0.2273438,0.2882813,0,0.6894531,0.7402344,0.2203125,0.2859375,0,0.6835938,0.7382813,0.1640625,0.2671875,0,0.6367188,0.7226563,0.1664063,0.253125,0,0.6386719,0.7109375,0.1664063,0.2648438,0,0.6386719,0.7207031,0.1640625,0.2507813,0,0.6367188,0.7089844,0.1546875,0.2507813,0,0.6289063,0.7089844,0.1476562,0.2671875,0,0.6230469,0.7226563,0.1476562,0.2554688,0,0.6230469,0.7128906,-0.1546875,0.3515625,0,0.3710938,0.7929688,-0.1523438,0.3140625,0,0.3730469,0.7617188,-0.1523438,0.3421875,0,0.3730469,0.7851563,-0.1617188,0.3539062,0,0.3652344,0.7949219,-0.1664063,0.3140625,0,0.3613281,0.7617188,-0.16875,0.3539062,0,0.359375,0.7949219,-0.1710937,0.3515625,0,0.3574219,0.7929688,-0.1710937,0.31875,0,0.3574219,0.765625,-0.103125,0.3304687,0,0.4140625,0.7753906,-0.1054688,0.3164063,0,0.4121094,0.7636719,-0.103125,0.31875,0,0.4140625,0.765625,-0.1101563,0.3328125,0,0.4082031,0.7773438,-0.1195313,0.3351563,0,0.4003906,0.7792969,-0.121875,0.3164063,0,0.3984375,0.7636719,-0.1265625,0.3351563,0,0.3945313,0.7792969,-0.13125,0.328125,0,0.390625,0.7734375,-0.13125,0.3210938,0,0.390625,0.7675781,-0.1382813,0.4007813,0,0.3847656,0.8339844,-0.140625,0.384375,0,0.3828125,0.8203125,-0.140625,0.384375,0,0.3828125,0.8203125,-0.1429688,0.403125,0,0.3808594,0.8359375,-0.140625,0.3820313,0,0.3828125,0.8183594,-0.1453125,0.4125,0,0.3789063,0.84375,-0.1476562,0.4125,0,0.3769531,0.84375,-0.15,0.3773438,0,0.375,0.8144531,-0.1546875,0.4078125,0,0.3710938,0.8398438,-0.159375,0.3773438,0,0.3671875,0.8144531,-0.1617188,0.3914063,0,0.3652344,0.8261719,-0.1617188,0.384375,0,0.3652344,0.8203125,-0.1429688,0.4101563,0,0.3808594,0.8417969,-0.1382813,0.4054688,0,0.3847656,0.8378906,-0.140625,0.4289063,0,0.3828125,0.8574219,-0.1054688,0.4289063,0,0.4121094,0.8574219,-0.1429688,0.4265625,0,0.3808594,0.8554688,-0.09609375,0.3914063,0,0.4199219,0.8261719,-0.084375,0.384375,0,0.4296875,0.8203125,-0.084375,0.3914063,0,0.4296875,0.8261719,-0.09609375,0.384375,0,0.4199219,0.8203125,-0.084375,0.3960938,0,0.4296875,0.8300781,-0.1007813,0.384375,0,0.4160156,0.8203125,-0.09609375,0.309375,0,0.4199219,0.7578125,-0.1007813,0.3679688,0,0.4160156,0.8066406,-0.0984375,0.3515625,0,0.4179688,0.7929688,-0.0984375,0.35625,0,0.4179688,0.796875,-0.1125,0.3515625,0,0.40625,0.7929688,-0.121875,0.3867188,0,0.3984375,0.8222656,-0.1359375,0.3867188,0,0.3867188,0.8222656,-0.140625,0.365625,0,0.3828125,0.8046875],[209,211,218,236,210,233,208,233,210,235,233,208,234,233,235,230,233,234,231,233,230,232,231,230,210,207,208,229,226,42,224,42,226,225,42,224,41,42,225,206,219,228,221,228,219,223,228,221,227,223,221,226,228,223,225,223,227,226,223,224,225,224,223,218,222,219,220,219,222,221,219,220,209,218,206,219,206,218,217,216,215,214,215,216,213,215,214,212,213,214,210,213,212,211,210,212,209,210,211,207,210,209,206,207,209,208,207,206,205,204,202,203,202,204,201,202,203,198,202,201,200,198,201,197,198,200,199,198,197,196,195,193,194,193,195,192,193,194,190,193,192,189,190,192,191,190,189,177,176,181,175,181,176,180,181,175,174,180,175,188,187,186,182,186,187,185,186,182,183,185,182,184,183,182,165,173,163,172,163,173,161,163,172,158,161,172,171,158,172,170,158,171,164,162,179,178,179,162,159,178,162,160,178,159,97,179,96,169,96,179,177,179,97,103,177,97,181,179,177,180,179,181,164,179,180,174,164,180,165,164,174,178,169,179,160,169,178,158,169,160,170,169,158,166,176,103,177,103,176,175,176,166,174,175,166,173,174,166,165,174,173,172,173,166,171,172,166,170,171,166,169,170,166,167,169,166,168,167,166,165,163,164,162,164,163,161,162,163,159,162,161,158,159,161,160,159,158,40,156,39,153,39,156,38,39,153,36,38,153,37,38,36,94,92,34,90,34,92,35,34,90,157,35,90,87,157,90,93,155,91,154,91,155,89,91,154,86,89,154,102,86,154,86,102,100,88,86,99,100,99,86,35,157,33,96,33,157,87,96,157,88,96,87,99,96,88,98,96,99,95,155,41,156,41,155,40,41,156,153,156,155,94,153,155,93,94,155,154,155,95,101,154,95,102,154,101,153,94,36,34,36,94,32,152,31,151,31,152,29,31,151,30,29,151,76,151,33,152,33,151,32,33,152,30,151,76,77,30,76,78,30,77,28,30,78,24,65,23,63,23,65,62,23,63,22,23,62,21,22,62,150,146,149,147,149,146,148,147,146,49,51,48,145,143,144,50,144,143,141,50,143,51,50,141,142,51,141,46,142,141,140,46,141,47,46,140,137,47,140,139,137,140,136,137,139,138,137,136,135,133,134,132,134,133,131,132,133,130,132,131,129,130,131,127,130,129,126,127,129,128,127,126,125,123,124,121,124,123,122,121,123,118,121,122,119,121,118,120,119,118,117,116,113,115,113,116,112,113,115,114,113,112,111,110,109,108,109,110,107,109,108,104,107,108,105,107,104,106,105,104,97,95,103,102,101,100,95,100,101,99,100,95,98,99,95,96,98,95,97,96,95,94,93,92,91,92,93,90,92,91,89,90,91,87,90,89,86,87,89,88,87,86,85,84,83,82,83,84,80,83,82,79,80,82,81,80,79,76,67,75,28,78,27,77,27,78,26,27,77,76,26,77,75,26,76,25,26,75,66,25,75,75,67,66,19,58,73,74,73,58,72,73,74,70,73,72,69,70,72,71,70,69,68,64,67,66,67,64,25,66,64,65,25,64,24,25,65,63,65,64,61,63,64,62,63,61,21,62,61,60,21,61,59,21,60,20,21,59,58,59,60,20,59,17,58,17,59,19,17,58,57,56,55,54,55,56,18,55,54,53,18,54,49,18,53,52,49,53,50,49,52,51,49,50,48,18,49,46,18,48,45,18,46,47,45,46,44,18,45,43,18,44,42,18,43,41,18,42,40,18,41,39,18,40,38,18,39,37,18,38,36,18,37,33,18,36,34,33,36,35,33,34,32,18,33,31,18,32,29,18,31,28,18,29,30,28,29,27,18,28,26,18,27,25,18,26,24,18,25,23,18,24,22,18,23,21,18,22,20,18,21,17,18,20,19,18,17,16,15,14,12,14,15,13,14,12,11,13,12,8,11,12,9,11,8,10,9,8,7,6,5,0,5,6,4,5,0,3,4,0,1,3,0,2,1,0],-0.0000252500176429749,-0.000148676335811615,0.999974727630615,0.99985134601593,0.0624999701976776,0.09765625,0.955078125,0.857421875,0,0,0,0,[0,0,0,0],[-0.6,-0.6,0.6,0.6],426.666656494141,512,512,512,512,256,256,32.0129127502441,50.0761222839355]},{"id":25200,"path":"Assets/Content/Sprites/Ingredients/pastry dought.png","assetBundleId":-1,"data":["pastry dought",6,25198,[-0.01992188,0,0,0.4769531,0.3,0],[0.1382813,0.28125,0,0.6152344,0.734375,0.1429688,0.1945313,0,0.6191406,0.6621094,0.1476562,0.2695313,0,0.6230469,0.7246094,0.1382813,0.196875,0,0.6152344,0.6640625,0.13125,0.196875,0,0.609375,0.6640625,0.1289063,0.1945313,0,0.6074219,0.6621094,0.084375,0.28125,0,0.5703125,0.734375,0.1289063,0.1875,0,0.6074219,0.65625,0.4570313,-0.028125,0,0.8808594,0.4765625,0.4335938,-0.196875,0,0.8613281,0.3359375,0.4570313,-0.15,0,0.8808594,0.375,0.3867188,0.0421875,0,0.8222656,0.5351563,0.3234375,0.0609375,0,0.7695313,0.5507813,0.2695313,-0.2859375,0,0.7246094,0.2617188,0.1851563,0.1875,0,0.6542969,0.65625,0.1664063,0.2390625,0,0.6386719,0.6992188,0.1429688,0.1875,0,0.6191406,0.65625,0.1382813,0.1828125,0,0.6152344,0.6523438,0.13125,0.1828125,0,0.609375,0.6523438,0.084375,-0.3,0,0.5703125,0.25,-0.009375,0.2226563,0,0.4921875,0.6855469,-0.04453125,0.2765625,0,0.4628906,0.7304688,-0.05625,0.28125,0,0.453125,0.734375,-0.07734375,0.28125,0,0.4355469,0.734375,-0.07734375,0.2671875,0,0.4355469,0.7226563,-0.08203125,0.2625,0,0.4316406,0.71875,-0.08203125,0.2507813,0,0.4316406,0.7089844,-0.08671875,0.2484375,0,0.4277344,0.7070313,-0.08671875,0.234375,0,0.4277344,0.6953125,-0.08671875,0.2296875,0,0.4277344,0.6914063,-0.0890625,0.225,0,0.4257813,0.6875,-0.0984375,0.225,0,0.4179688,0.6875,-0.1054688,0.2273438,0,0.4121094,0.6894531,-0.1078125,0.2273438,0,0.4101563,0.6894531,-0.1171875,0.2296875,0,0.4023438,0.6914063,-0.1078125,0.253125,0,0.4101563,0.7109375,-0.1242188,0.2226563,0,0.3964844,0.6855469,-0.1265625,0.2226563,0,0.3945313,0.6855469,-0.1289063,0.225,0,0.3925781,0.6875,-0.140625,-0.3,0,0.3828125,0.25,-0.1429688,0.20625,0,0.3808594,0.671875,-0.2765625,-0.2835937,0,0.2695313,0.2636719,-0.3796875,0.1523438,0,0.1835938,0.6269531,-0.3867188,0.1289063,0,0.1777344,0.6074219,-0.421875,-0.2390625,0,0.1484375,0.3007813,-0.4429688,0.0328125,0,0.1308594,0.5273438,-0.496875,-0.03984375,0,0.0859375,0.4667969,-0.496875,-0.159375,0,0.0859375,0.3671875,-0.1265625,0.253125,0,0.3945313,0.7109375,-0.1195313,0.2390625,0,0.4003906,0.6992188,-0.1195313,0.2460938,0,0.4003906,0.7050781,-0.1335938,0.2507813,0,0.3886719,0.7089844,-0.1335938,0.2296875,0,0.3886719,0.6914063,-0.09609375,0.2695313,0,0.4199219,0.7246094,-0.1078125,0.2742188,0,0.4101563,0.7285156,-0.09609375,0.2695313,0,0.4199219,0.7246094,-0.09140625,0.2671875,0,0.4238281,0.7226563,-0.09140625,0.2671875,0,0.4238281,0.7226563,-0.084375,0.2578125,0,0.4296875,0.7148438,-0.103125,0.2484375,0,0.4140625,0.7070313,-0.0890625,0.2390625,0,0.4257813,0.6992188,-0.09375,0.2414063,0,0.421875,0.7011719,-0.1078125,0.2414063,0,0.4101563,0.7011719,-0.08671875,0.28125,0,0.4277344,0.734375,-0.07734375,0.290625,0,0.4355469,0.7421875,-0.09609375,0.3,0,0.4199219,0.75,-0.1171875,0.3,0,0.4023438,0.75,-0.1265625,0.2859375,0,0.3945313,0.7382813,-0.1289063,0.2789063,0,0.3925781,0.7324219,-0.1289063,0.2648438,0,0.3925781,0.7207031],[33,62,32,61,32,62,31,32,61,30,31,61,60,30,61,29,30,60,28,29,60,35,54,55,69,68,35,67,35,68,66,35,67,54,35,66,65,54,66,53,54,65,63,53,65,64,63,65,23,63,64,53,63,57,56,57,63,25,56,63,23,25,63,24,25,23,56,25,58,26,58,25,59,62,35,33,35,62,61,62,59,27,61,59,60,61,27,28,60,27,35,55,59,27,59,55,56,27,55,58,27,56,26,27,58,55,53,56,57,56,53,55,54,53,38,49,37,36,37,49,34,36,49,34,49,35,52,51,38,48,38,51,49,38,48,50,49,48,7,5,18,4,18,5,17,18,4,3,17,4,16,17,3,1,16,3,47,46,44,45,44,46,43,44,45,41,44,43,42,41,43,40,41,42,39,41,40,38,39,40,19,39,38,37,19,38,36,19,37,34,19,36,33,19,34,35,33,34,32,19,33,31,19,32,30,19,31,29,19,30,28,19,29,27,19,28,26,19,27,25,19,26,24,19,25,23,19,24,22,19,23,21,19,22,20,19,21,6,19,20,13,19,6,7,13,6,18,13,7,17,13,18,16,13,17,1,13,16,2,13,1,15,13,2,14,13,15,12,13,14,9,13,12,11,9,12,8,9,11,10,9,8,0,5,6,7,6,5,4,5,0,3,4,0,1,3,0,2,1,0],-0.000148676335811615,-0.000148683786392212,0.99985134601593,0.99985134601593,0.0859375,0.25,0.880859375,0.75,0,0,0,0,[0,0,0,0],[-0.6,-0.6,0.6,0.6],426.666656494141,512,512,512,512,256,256,44.0761222839355,128.076126098633]},{"id":25118,"path":"Assets/Content/Sprites/Ingredients/almond.png","assetBundleId":-1,"data":["almond",6,25116,[0.003507122,0.1143061,0,0.4417969,0.2121094,0],[0.03280399,-0.08374082,0,0.5332031,0.3164063,0.02811649,-0.09780332,0,0.5292969,0.3046875,0.03514774,-0.09077207,0,0.5351563,0.3105469,-0.04688351,-0.08374082,0,0.4667969,0.3164063,-0.04922726,-0.08608457,0,0.4648438,0.3144531,-0.04922726,-0.09780332,0,0.4648438,0.3046875,-0.09141476,-0.08139707,0,0.4296875,0.3183594,-0.08672726,-0.09077207,0,0.4335938,0.3105469,-0.08672726,-0.08608457,0,0.4335938,0.3144531,-0.09141476,-0.09545957,0,0.4296875,0.3066406,-0.09610227,-0.08139707,0,0.4257813,0.3183594,-0.1031335,-0.09545957,0,0.4199219,0.3066406,-0.1054773,-0.08842832,0,0.4179688,0.3125,-0.1757898,-0.07670957,0,0.359375,0.3222656,-0.1711023,-0.08608457,0,0.3632813,0.3144531,-0.1711023,-0.08139707,0,0.3632813,0.3183594,-0.1757898,-0.09077207,0,0.359375,0.3105469,-0.1804773,-0.07670957,0,0.3554688,0.3222656,-0.1804773,-0.09077207,0,0.3554688,0.3105469,-0.1851648,-0.08139707,0,0.3515625,0.3183594,-0.1851648,-0.08608457,0,0.3515625,0.3144531,-0.1968835,-0.07436582,0,0.3417969,0.3242188,-0.192196,-0.08374082,0,0.3457031,0.3164063,-0.192196,-0.07905332,0,0.3457031,0.3203125,-0.1968835,-0.08842832,0,0.3417969,0.3125,-0.201571,-0.07436582,0,0.3378906,0.3242188,-0.201571,-0.08842832,0,0.3378906,0.3125,-0.2062585,-0.07905332,0,0.3339844,0.3203125,-0.2062585,-0.08374082,0,0.3339844,0.3164063,-0.2461023,-0.06967832,0,0.3007813,0.328125,-0.239071,-0.07436582,0,0.3066406,0.3242188,-0.239071,-0.07202207,0,0.3066406,0.3261719,-0.2507898,-0.07436582,0,0.296875,0.3242188,-0.2343835,-0.07202207,0,0.3105469,0.3261719,-0.2273523,-0.07436582,0,0.3164063,0.3242188,-0.2273523,-0.07202207,0,0.3164063,0.3261719,-0.2367273,-0.07436582,0,0.3085938,0.3242188,-0.1500085,0.3146967,0,0.3808594,0.6484375,-0.1195398,0.2795404,0,0.40625,0.6191406,-0.08907101,0.3264154,0,0.4316406,0.6582031,-0.154696,0.2795404,0,0.3769531,0.6191406,-0.1664148,0.2748529,0,0.3671875,0.6152344,-0.2156335,-0.07202207,0,0.3261719,0.3261719,-0.1664148,0.2537592,0,0.3671875,0.5976563,-0.2226648,-0.07436582,0,0.3203125,0.3242188,-0.2882898,-0.06499082,0,0.265625,0.3320313,-0.2906335,-0.05795957,0,0.2636719,0.3378906,-0.2976648,-0.05795957,0,0.2578125,0.3378906,-0.3023523,-0.06264707,0,0.2539063,0.3339844,-0.3093835,-0.07436582,0,0.2480469,0.3242188,-0.3820398,0.1576654,0,0.1875,0.5175781,-0.389071,0.1576654,0,0.1816406,0.5175781,-0.4148523,0.1670404,0,0.1601563,0.5253906,-0.4242273,0.1811029,0,0.1523438,0.5371094,-0.1218835,-0.08139707,0,0.4042969,0.3183594,-0.1242273,-0.09311582,0,0.4023438,0.3085938,-0.1195398,-0.08842832,0,0.40625,0.3125,-0.1312585,-0.08139707,0,0.3964844,0.3183594,-0.1336023,-0.09311582,0,0.3945313,0.3085938,-0.135946,-0.08608457,0,0.3925781,0.3144531,-0.1500085,-0.07905332,0,0.3808594,0.3203125,-0.1523523,-0.09077207,0,0.3789063,0.3105469,-0.1476648,-0.08608457,0,0.3828125,0.3144531,-0.1570398,-0.07905332,0,0.375,0.3203125,-0.1593835,-0.09077207,0,0.3730469,0.3105469,-0.1617273,-0.08374082,0,0.3710938,0.3164063,-0.210946,-0.08374082,0,0.3300781,0.3164063,-0.210946,-0.07670957,0,0.3300781,0.3222656,-0.2179773,-0.08608457,0,0.3242188,0.3144531,-0.2226648,-0.08139707,0,0.3203125,0.3183594,-0.229696,-0.08374082,0,0.3144531,0.3164063,-0.2250085,-0.07905332,0,0.3183594,0.3203125,-0.2367273,-0.08374082,0,0.3085938,0.3164063,-0.239071,-0.07670957,0,0.3066406,0.3222656,-0.239071,-0.07905332,0,0.3066406,0.3203125,-0.2461023,-0.08139707,0,0.3007813,0.3183594,-0.2929773,-0.06967832,0,0.2617188,0.328125,-0.3000085,-0.06967832,0,0.2558594,0.328125,-0.389071,0.1576654,0,0.1816406,0.5175781,-0.4382898,0.1600092,0,0.140625,0.5195313,-0.4382898,-0.02514707,0,0.140625,0.3652344,0.2624915,0.2373529,0,0.7246094,0.5839844,0.2531165,0.2162592,0,0.7167969,0.5664063,0.2624915,0.2186029,0,0.7246094,0.5683594,0.2460852,0.2373529,0,0.7109375,0.5839844,0.239054,0.2256342,0,0.7050781,0.5742188,0.239054,0.2162592,0,0.7050781,0.5664063,0.2507727,0.2678217,0,0.7148438,0.609375,0.2624915,0.2771967,0,0.7246094,0.6171875,0.2437415,0.2678217,0,0.7089844,0.609375,0.239054,0.2725092,0,0.7050781,0.6132813,0.2835853,0.2842279,0,0.7421875,0.6230469,0.2554602,0.2889154,0,0.71875,0.6269531,0.2624915,0.2865717,0,0.7246094,0.625,0.239054,0.2795404,0,0.7050781,0.6191406,0.2367103,0.2396967,0,0.703125,0.5859375,0.2343665,0.2467279,0,0.7011719,0.5917969,0.220304,0.2467279,0,0.6894531,0.5917969,0.1242102,0.3264154,0,0.609375,0.6582031,0.2179602,0.2396967,0,0.6875,0.5859375,0.248429,0.2889154,0,0.7128906,0.6269531,0.342179,0.2982904,0,0.7910156,0.6347656,0.445304,0.01469668,0,0.8769531,0.3984375,0.445304,0.1670404,0,0.8769531,0.5253906,0.3163978,-0.03217832,0,0.7695313,0.359375,0.229679,0.2326654,0,0.6972656,0.5800781,0.2249915,0.2326654,0,0.6933594,0.5800781,0.117179,0.3053217,0,0.6035156,0.640625,0.1054602,0.2982904,0,0.59375,0.6347656,0.09842899,0.2982904,0,0.5878906,0.6347656,0.09139774,-0.07436582,0,0.5820313,0.3242188,0.09139774,0.3029779,0,0.5820313,0.6386719,0.08671024,0.3146967,0,0.578125,0.6484375,-0.1195398,0.2514154,0,0.40625,0.5957031,-0.1429773,0.2350092,0,0.3867188,0.5820313,-0.1500085,0.2350092,0,0.3808594,0.5820313,0.398429,-0.01811582,0,0.8378906,0.3710938,0.4195228,-0.03920957,0,0.8554688,0.3535156,0.4195228,-0.01811582,0,0.8554688,0.3710938,0.3843665,-0.06499082,0,0.8261719,0.3320313,0.276554,-0.07905332,0,0.7363281,0.3203125,0.2038977,-0.07436582,0,0.6757813,0.3242188,0.1570227,-0.08842832,0,0.6367188,0.3125,0.08905399,-0.07436582,0,0.5800781,0.3242188,0.08905399,-0.08842832,0,0.5800781,0.3125,0.1148352,0.3123529,0,0.6015625,0.6464844,0.09608524,0.3217279,0,0.5859375,0.6542969,0.08905399,0.3217279,0,0.5800781,0.6542969],[112,127,111,126,111,127,109,111,126,125,109,126,108,109,125,107,108,125,121,110,104,98,127,39,112,39,127,126,127,98,125,126,98,107,125,98,43,41,115,40,115,41,38,115,40,114,115,38,113,114,38,99,97,106,96,106,97,105,106,96,95,105,96,90,94,89,100,89,94,87,89,100,92,87,100,88,87,92,93,88,92,124,123,122,110,122,123,121,122,110,120,122,121,104,120,121,119,120,104,116,119,104,117,119,116,118,117,116,42,43,110,115,110,43,114,110,115,113,110,114,38,110,113,39,110,38,112,110,39,111,110,112,109,110,111,104,110,109,108,104,109,107,104,108,98,104,107,99,104,98,106,104,99,105,104,106,86,104,105,95,86,105,82,104,86,83,104,82,81,104,83,88,104,81,93,104,88,91,104,93,101,104,91,102,104,101,103,102,101,91,92,98,100,98,92,94,98,100,97,98,94,99,98,97,96,97,94,95,96,94,86,95,94,85,86,94,90,85,94,93,92,91,85,90,84,89,84,90,87,84,89,81,84,87,88,81,87,86,85,82,84,82,85,81,82,84,83,82,81,48,47,77,76,77,47,46,76,47,45,76,46,78,51,50,80,79,49,51,49,79,78,49,51,50,49,78,48,77,49,32,49,77,76,32,77,45,32,76,32,30,75,74,75,30,73,74,30,30,31,36,73,36,72,70,72,36,34,70,36,71,70,34,69,44,68,42,68,44,66,68,42,67,66,42,65,63,64,61,64,63,60,61,63,62,61,60,59,57,58,55,58,57,54,55,57,56,55,54,53,37,52,51,52,37,50,51,37,41,50,37,49,50,41,48,49,41,47,48,41,46,47,41,45,46,41,32,45,41,29,32,41,31,29,41,36,31,41,33,36,41,35,33,41,34,35,41,44,34,41,42,44,41,43,42,41,40,41,37,38,40,37,39,38,37,36,33,34,35,34,33,32,29,30,31,30,29,28,27,26,25,26,27,24,26,25,21,24,25,22,24,21,23,22,21,20,19,18,17,18,19,16,18,17,13,16,17,14,16,13,15,14,13,12,10,11,9,11,10,6,9,10,7,9,6,8,7,6,5,4,1,3,1,4,0,1,3,2,1,0],-0.0000252127647399902,-0.0000838041305541992,0.99997478723526,0.999916195869446,0.140625,0.3046875,0.876953125,0.658203125,0,0,0,0,[0,0,0,0],[-0.6070398,-0.4634283,0.5929602,0.7365717],426.666656494141,512,512,512,512,259.003631591797,197.729415893555,72.0129089355469,156.042907714844]},{"id":25102,"path":"Assets/Content/Sprites/Ingredients/cheddar cheese.png","assetBundleId":-1,"data":["cheddar cheese",6,25100,[-0.00585936,0.009375006,0,0.5027344,0.2554688,0],[-0.1875,-0.0890625,0,0.34375,0.4257813,-0.0140625,-0.1171875,0,0.4882813,0.4023438,-0.02578125,-0.1007813,0,0.4785156,0.4160156,-0.2484375,-0.09375,0,0.2929688,0.421875,-0.2578125,-0.0890625,0,0.2851563,0.4257813,0.496875,0.1828125,0,0.9140625,0.6523438,0.4898438,0.05625,0,0.9082031,0.546875,0.496875,0.1148438,0,0.9140625,0.5957031,0.4242188,-0.0890625,0,0.8535156,0.4257813,0.4078125,0.2507813,0,0.8398438,0.7089844,0.3679688,0.2648438,0,0.8066406,0.7207031,0.3679688,-0.140625,0,0.8066406,0.3828125,0.3234375,0.2648438,0,0.7695313,0.7207031,0.2648438,-0.140625,0,0.7207031,0.3828125,0.178125,0.2578125,0,0.6484375,0.7148438,0.1359375,-0.13125,0,0.6132813,0.390625,-0.2179688,0.2179688,0,0.3183594,0.6816406,-0.2789063,-0.07734375,0,0.2675781,0.4355469,-0.3046875,-0.05625,0,0.2460938,0.453125,-0.31875,0.1804688,0,0.234375,0.6503906,-0.3304687,0.1804688,0,0.2246094,0.6503906,-0.3304687,0.07265625,0,0.2246094,0.5605469,0.04453125,-0.1945313,0,0.5371094,0.3378906,0.03046875,-0.24375,0,0.5253906,0.296875,0.04453125,-0.215625,0,0.5371094,0.3203125,0.00703125,-0.2460938,0,0.5058594,0.2949219,-0.440625,-0.2460938,0,0.1328125,0.2949219,-0.4476563,-0.0890625,0,0.1269531,0.4257813,-0.4851563,-0.1617188,0,0.09570313,0.3652344,-0.5039063,-0.2015625,0,0.08007813,0.3320313,-0.5085937,-0.2085938,0,0.0761719,0.3261719,-0.5085937,-0.234375,0,0.0761719,0.3046875],[31,30,26,29,26,30,28,26,29,27,26,28,4,26,27,25,26,4,3,25,4,1,25,3,22,25,1,23,25,22,24,23,22,21,20,18,19,18,20,16,18,19,17,18,16,4,17,16,0,4,16,14,0,16,2,0,14,1,2,14,15,1,14,13,15,14,12,13,14,11,13,12,10,11,12,8,11,10,9,8,10,5,8,9,6,8,5,7,6,5,4,0,3,1,3,0,2,1,0],-0.0000837743282318115,-0.000148683786392212,0.999916195869446,0.99985134601593,0.0761719048023224,0.294921875,0.9140625,0.720703125,0,0,0,0,[0,0,0,0],[-0.6,-0.6,0.6,0.6],426.666656494141,512,512,512,512,256,256,39.0429077148438,151.076126098633]},{"id":25334,"path":"Assets/Content/Sprites/Ingredients/zucini.png","assetBundleId":-1,"data":["zucini",6,25332,[0.008203134,-0.03164063,0,0.3738281,0.1722656,0],[0.3257813,0.140625,0,0.7714844,0.6171875,0.3820313,-0.0234375,0,0.8183594,0.4804688,0.3820313,0.1242188,0,0.8183594,0.6035156,0.24375,-0.1734375,0,0.703125,0.3554688,0.2320313,0.140625,0,0.6933594,0.6171875,0.20625,-0.2039063,0,0.671875,0.3300781,0.02578125,0.1078125,0,0.5214844,0.5898438,-0.07265625,-0.2039063,0,0.4394531,0.3300781,-0.1921875,-0.196875,0,0.3398438,0.3359375,-0.2601562,-0.13125,0,0.2832031,0.390625,-0.2953125,0.140625,0,0.2539063,0.6171875,-0.31875,0.140625,0,0.234375,0.6171875,-0.3515625,0.1054688,0,0.2070313,0.5878906,-0.3609375,-0.0046875,0,0.1992188,0.4960938,-0.365625,0.0796875,0,0.1953125,0.5664063,-0.365625,0.0234375,0,0.1953125,0.5195313],[15,14,13,12,13,14,9,13,12,11,9,12,10,9,11,6,9,10,8,9,6,7,8,6,5,7,6,4,5,6,3,5,4,0,3,4,1,3,0,2,1,0],-0.0000522434711456299,-0.000148683786392212,0.999947786331177,0.99985134601593,0.1953125,0.330078125,0.818359375,0.6171875,0,0,0,0,[0,0,0,0],[-0.6,-0.6,0.6,0.6],426.666656494141,512,512,512,512,256,256,100.026748657227,169.076126098633]},{"id":25160,"path":"Assets/Content/Sprites/Ingredients/salmon fillets.png","assetBundleId":-1,"data":["salmon fillets",6,25158,[-0.02460939,-0.001171872,0,0.5003906,0.3363281,0],[-0.1664063,-0.24375,0,0.3613281,0.296875,-0.1617188,-0.253125,0,0.3652344,0.2890625,-0.1617188,-0.2484375,0,0.3652344,0.2929688,-0.1664063,-0.2578125,0,0.3613281,0.2851563,-0.1710937,-0.24375,0,0.3574219,0.296875,-0.1710937,-0.2578125,0,0.3574219,0.2851563,-0.1757813,-0.2484375,0,0.3535156,0.2929688,-0.1757813,-0.253125,0,0.3535156,0.2890625,-0.196875,-0.2320313,0,0.3359375,0.3066406,-0.1921875,-0.24375,0,0.3398438,0.296875,-0.1921875,-0.2367188,0,0.3398438,0.3027344,-0.196875,-0.2484375,0,0.3359375,0.2929688,-0.2039063,-0.2320313,0,0.3300781,0.3066406,-0.2039063,-0.2484375,0,0.3300781,0.2929688,-0.2085938,-0.2367188,0,0.3261719,0.3027344,-0.2085938,-0.24375,0,0.3261719,0.296875,-0.2484375,-0.2203125,0,0.2929688,0.3164063,-0.2296875,-0.253125,0,0.3085938,0.2890625,-0.2484375,-0.215625,0,0.2929688,0.3203125,-0.253125,-0.225,0,0.2890625,0.3125,-0.2578125,-0.225,0,0.2851563,0.3125,-0.2625,-0.2203125,0,0.28125,0.3164063,-0.2789063,-0.215625,0,0.2675781,0.3203125,-0.2789063,-0.2226563,0,0.2675781,0.3144531,-0.2859375,-0.225,0,0.2617188,0.3125,-0.4195313,0.046875,0,0.1503906,0.5390625,-0.290625,-0.2203125,0,0.2578125,0.3164063,-0.365625,0.05625,0,0.1953125,0.546875,-0.4828125,0.01875,0,0.09765625,0.515625,-0.5085937,-0.1523438,0,0.0761719,0.3730469,-0.525,-0.0609375,0,0.06249997,0.4492188,-0.525,-0.121875,0,0.06249997,0.3984375,-0.253125,-0.2109375,0,0.2890625,0.3242188,-0.2578125,-0.2109375,0,0.2851563,0.3242188,-0.2625,-0.215625,0,0.28125,0.3203125,-0.2835937,-0.2109375,0,0.2636719,0.3242188,-0.290625,-0.2132813,0,0.2578125,0.3222656,-0.2015625,0.3070312,0,0.3320313,0.7558594,-0.196875,0.2929688,0,0.3359375,0.7441406,-0.196875,0.3,0,0.3359375,0.75,-0.2039063,0.290625,0,0.3300781,0.7421875,-0.2085938,0.3070312,0,0.3261719,0.7558594,-0.2132813,0.3023438,0,0.3222656,0.7519531,-0.2132813,0.3,0,0.3222656,0.75,-0.2015625,0.3070312,0,0.3320313,0.7558594,-0.196875,0.3023438,0,0.3359375,0.7519531,-0.1921875,0.3351563,0,0.3398438,0.7792969,-0.2085938,0.328125,0,0.3261719,0.7734375,-0.2085938,0.3164063,0,0.3261719,0.7636719,-0.1570313,0.290625,0,0.3691406,0.7421875,-0.1710937,0.290625,0,0.3574219,0.7421875,-0.2132813,0.2671875,0,0.3222656,0.7226563,-0.1617188,0.2953125,0,0.3652344,0.7460938,-0.1523438,0.2953125,0,0.3730469,0.7460938,-0.1570313,0.3351563,0,0.3691406,0.7792969,-0.1523438,0.3257813,0,0.3730469,0.7714844,-0.1898438,0.290625,0,0.3417969,0.7421875,-0.075,0.3140625,0,0.4375,0.7617188,-0.084375,0.290625,0,0.4296875,0.7421875,-0.075,0.3,0,0.4375,0.75,-0.1125,0.290625,0,0.40625,0.7421875,-0.1195313,0.3210938,0,0.4003906,0.7675781,-0.1195313,0.3023438,0,0.4003906,0.7519531,-0.0796875,0.3234375,0,0.4335938,0.7695313,-0.075,0.3210938,0,0.4375,0.7675781,-0.1195313,0.3234375,0,0.4003906,0.7695313,-0.121875,0.3070312,0,0.3984375,0.7558594,-0.1289063,0.3140625,0,0.3925781,0.7617188,-0.1335938,0.3140625,0,0.3886719,0.7617188,-0.1382813,0.309375,0,0.3847656,0.7578125,-0.1382813,0.2953125,0,0.3847656,0.7460938,-0.1265625,0.290625,0,0.3945313,0.7421875,-0.121875,0.2953125,0,0.3984375,0.7460938,-0.1335938,0.290625,0,0.3886719,0.7421875,0.06328125,0.2953125,0,0.5527344,0.7460938,-0.05390625,0.309375,0,0.4550781,0.7578125,-0.03984375,0.3070312,0,0.4667969,0.7558594,-0.0609375,0.309375,0,0.4492188,0.7578125,-0.06328125,0.3046875,0,0.4472656,0.7539063,0.4640625,0.03984375,0,0.8867188,0.5332031,0.4757813,-0.01171875,0,0.8964844,0.4902344,0.4757813,0.03046875,0,0.8964844,0.5253906,0.4382813,0.1289063,0,0.8652344,0.6074219,0.4054688,-0.046875,0,0.8378906,0.4609375,0.3796875,0.1921875,0,0.8164063,0.6601563,0.3304687,0.2320313,0,0.7753906,0.6933594,0.2953125,-0.03515625,0,0.7460938,0.4707031,0.24375,-0.2226563,0,0.703125,0.3144531,0.196875,-0.309375,0,0.6640625,0.2421875,0.1828125,0.2859375,0,0.6523438,0.7382813,0.1171875,-0.3375,0,0.5976563,0.21875,0.06796875,-0.3375,0,0.5566406,0.21875,-0.03984375,0.2929688,0,0.4667969,0.7441406,-0.0515625,0.2929688,0,0.4570313,0.7441406,-0.0609375,0.2976563,0,0.4492188,0.7480469],[78,77,94,93,94,77,75,93,77,76,93,75,92,93,76,51,36,27,26,27,36,35,36,51,22,35,51,34,22,51,21,22,34,33,34,51,32,33,51,18,32,51,17,18,51,15,17,51,13,17,15,91,17,13,5,91,13,11,5,13,9,5,11,10,5,9,7,5,10,3,91,5,1,91,3,2,91,1,49,91,2,53,91,49,55,91,53,70,91,55,73,91,70,71,91,73,72,91,71,66,91,72,62,91,66,60,91,62,58,91,60,59,91,58,57,91,59,78,91,57,94,91,78,93,91,94,92,91,93,76,91,92,74,91,76,89,91,74,90,91,89,88,90,89,85,88,89,87,88,85,86,87,85,83,86,85,84,83,85,82,83,84,80,83,82,79,80,82,81,80,79,74,75,57,77,57,75,78,57,77,76,75,74,70,69,73,68,73,69,71,73,68,67,71,68,66,71,67,72,71,66,61,68,55,69,55,68,70,55,69,67,68,61,66,67,61,62,66,61,61,65,57,63,57,65,64,57,63,62,61,60,57,60,61,58,60,57,59,58,57,39,45,56,46,56,45,54,56,46,50,56,54,52,50,54,53,52,54,55,53,54,50,52,49,53,49,52,50,14,51,15,51,14,12,14,50,8,12,50,10,8,50,6,10,50,7,10,6,4,6,50,0,4,50,49,0,50,2,0,49,48,47,37,46,37,47,44,37,46,45,44,46,37,44,39,45,39,44,43,42,40,41,40,42,37,40,41,38,40,37,39,38,37,26,36,24,35,24,36,23,24,35,22,23,35,21,34,20,33,20,34,19,20,33,32,19,33,16,19,32,18,16,32,31,30,29,28,29,30,26,29,28,24,29,26,17,29,24,25,26,28,27,26,25,23,17,24,22,17,23,21,17,22,20,17,21,19,17,20,16,17,19,18,17,16,15,14,13,12,13,14,11,13,12,8,11,12,9,11,8,10,9,8,7,6,5,4,5,6,3,5,4,0,3,4,1,3,0,2,1,0],-0.0000522807240486145,-0.0000522434711456299,0.999947726726532,0.999947786331177,0.0624999701976776,0.21875,0.896484375,0.779296875,0,0,0,0,[0,0,0,0],[-0.6,-0.6,0.6,0.6],426.666656494141,512,512,512,512,256,256,32.0267524719238,112.026748657227]},{"id":25408,"path":"Assets/Content/Sprites/Ingredients/pie crust.png","assetBundleId":-1,"data":["pie crust",6,25406,[-0.003515616,-0.05976562,0,0.3949219,0.2121094,0],[0.3914063,0.02109375,0,0.8261719,0.5175781,0.3585938,-0.1734375,0,0.7988281,0.3554688,0.3914063,-0.103125,0,0.8261719,0.4140625,0.28125,0.13125,0,0.734375,0.609375,0.2507813,-0.2484375,0,0.7089844,0.2929688,0.1476562,-0.271875,0,0.6230469,0.2734375,0.1359375,0.1523438,0,0.6132813,0.6269531,-0.05625,0.1523438,0,0.453125,0.6269531,-0.0984375,-0.271875,0,0.4179688,0.2734375,-0.1007813,0.15,0,0.4160156,0.625,-0.121875,0.1476562,0,0.3984375,0.6230469,-0.2015625,0.1382813,0,0.3320313,0.6152344,-0.2367188,-0.2460938,0,0.3027344,0.2949219,-0.2648438,0.1195313,0,0.2792969,0.5996094,-0.2953125,-0.2296875,0,0.2539063,0.3085938,-0.3632813,0.0515625,0,0.1972656,0.5429688,-0.3984375,-0.01875,0,0.1679688,0.484375,-0.3984375,-0.1195313,0,0.1679688,0.4003906],[17,16,14,15,14,16,13,14,15,12,14,13,11,12,13,8,12,11,10,8,11,9,8,10,7,8,9,5,8,7,6,5,7,3,5,6,4,5,3,1,4,3,0,1,3,2,1,0],-0.000148668885231018,-0.000148683786392212,0.99985134601593,0.99985134601593,0.16796875,0.2734375,0.826171875,0.626953125,0,0,0,0,[0,0,0,0],[-0.6,-0.6,0.6,0.6],426.666656494141,512,512,512,512,256,256,86.0761184692383,140.076126098633]},{"id":25374,"path":"Assets/Content/Sprites/Ingredients/pizza dough.png","assetBundleId":-1,"data":["pizza dough",6,25372,[0.01289062,0.005859375,0,0.3152344,0.2121094,0],[0.3164063,0.09140625,0,0.7636719,0.5761719,0.328125,-0.0515625,0,0.7734375,0.4570313,0.328125,0.03515625,0,0.7734375,0.5292969,0.3,-0.1125,0,0.75,0.40625,0.2601562,0.1429688,0,0.7167969,0.6191406,0.2390625,-0.159375,0,0.6992188,0.3671875,0.1007813,-0.20625,0,0.5839844,0.328125,0.0796875,0.2179688,0,0.5664063,0.6816406,0,0.2179688,0,0.5,0.6816406,-0.0328125,-0.20625,0,0.4726563,0.328125,-0.09140625,0.2039063,0,0.4238281,0.6699219,-0.15,-0.1898438,0,0.375,0.3417969,-0.2320313,-0.1476562,0,0.3066406,0.3769531,-0.28125,0.1195313,0,0.265625,0.5996094,-0.2929688,-0.08671875,0,0.2558594,0.4277344,-0.3023438,0.04921875,0,0.2480469,0.5410156,-0.3023438,-0.0703125,0,0.2480469,0.4414063],[16,15,14,13,14,15,12,14,13,10,12,13,11,12,10,9,11,10,8,9,10,6,9,8,7,6,8,4,6,7,5,6,4,3,5,4,0,3,4,1,3,0,2,1,0],-0.000148668885231018,-0.0000217258930206299,0.99985134601593,0.999978303909302,0.248046875,0.328125,0.7734375,0.681640625,0,0,0,0,[0,0,0,0],[-0.6,-0.6,0.6,0.6],426.666656494141,512,512,512,512,256,256,127.076118469238,168.011123657227]},{"id":25434,"path":"Assets/Content/Sprites/Ingredients/milk.png","assetBundleId":-1,"data":["milk",6,25432,[0.007031247,0.07617189,0,0.2882813,0.4417969,0],[0.084375,0.5039063,0,0.5703125,0.9199219,0.06796875,0.4242188,0,0.5566406,0.8535156,0.084375,0.4617188,0,0.5703125,0.8847656,0.06328125,0.5179688,0,0.5527344,0.9316406,0.2929688,0.03984375,0,0.7441406,0.5332031,0.2859375,-0.3,0,0.7382813,0.25,0.2929688,-0.01171875,0,0.7441406,0.4902344,0.2578125,-0.3257813,0,0.7148438,0.2285156,0.2390625,0.1804688,0,0.6992188,0.6503906,0.2085938,-0.365625,0,0.6738281,0.1953125,0.2039063,0.3421875,0,0.6699219,0.7851563,0.1734375,0.3867188,0,0.6445313,0.8222656,0.15,-0.365625,0,0.625,0.1953125,0.09609375,-0.3609375,0,0.5800781,0.1992188,-0.02578125,-0.3398438,0,0.4785156,0.2167969,-0.1054688,-0.3632813,0,0.4121094,0.1972656,-0.1148438,0.5179688,0,0.4042969,0.9316406,-0.13125,0.5015625,0,0.390625,0.9179688,-0.13125,0.4429688,0,0.390625,0.8691406,-0.1359375,-0.365625,0,0.3867188,0.1953125,-0.159375,-0.365625,0,0.3671875,0.1953125,-0.2132813,-0.3515625,0,0.3222656,0.2070313,-0.2648438,0.3117188,0,0.2792969,0.7597656,-0.2695313,-0.3070312,0,0.2753906,0.2441406,-0.2789063,-0.05625,0,0.2675781,0.453125,-0.28125,0.2601562,0,0.265625,0.7167969,-0.28125,0.075,0,0.265625,0.5625,0.2953125,-0.2554688,0,0.7460938,0.2871094,0.2953125,-0.06796875,0,0.7460938,0.4433594,-0.28125,-0.2015625,0,0.265625,0.3320313],[29,24,23,5,6,27,28,27,6,26,25,24,22,24,25,23,24,22,21,23,22,18,21,22,20,21,18,19,20,18,15,19,18,17,15,18,16,15,17,3,15,16,14,15,3,13,14,3,1,13,3,11,13,1,12,13,11,9,12,11,10,9,11,8,9,10,7,9,8,4,7,8,5,7,4,6,5,4,3,0,1,2,1,0],-0.000148683786392212,-0.0000522434711456299,0.99985134601593,0.999947786331177,0.265625,0.1953125,0.74609375,0.931640625,0,0,0,0,[0,0,0,0],[-0.6,-0.6,0.6,0.6],426.666656494141,512,512,512,512,256,256,136.076126098633,100.026748657227]},{"id":25438,"path":"Assets/Content/Sprites/Tiles/Special/tile_crate.png","assetBundleId":-1,"data":["tile_crate",6,25436,[0,0,0,0.5111111,0.5688889,0],[-0.5111111,0.2777778,0,0.05078122,0.7441406,-0.5088889,-0.2777778,0,0.05273438,0.2558594,-0.5088889,0.28,0,0.05273438,0.7460938,-0.5111111,-0.2755556,0,0.05078122,0.2578125,0.5088889,0.3066667,0,0.9472656,0.7695313,0.5088889,-0.2755556,0,0.9472656,0.2578125,0.5088889,0.2755556,0,0.9472656,0.7421875,0.5088889,-0.3066667,0,0.9472656,0.2304688,0.5066667,0.3222222,0,0.9453125,0.7832031,0.5044444,-0.3333333,0,0.9433594,0.2070313,0.5022222,0.3422222,0,0.9414063,0.8007813,0.5,-0.3511111,0,0.9394531,0.1914063,0.4977778,0.36,0,0.9375,0.8164063,0.4933333,-0.3733333,0,0.9335938,0.171875,0.4911111,0.38,0,0.9316406,0.8339844,0.4866667,0.3911111,0,0.9277344,0.84375,0.4844444,-0.3955556,0,0.9257813,0.1523438,0.4755556,-0.4155556,0,0.9179688,0.1347656,0.4733333,0.42,0,0.9160156,0.8691406,0.4666667,-0.4311111,0,0.9101563,0.1210938,0.4622222,0.4355555,0,0.90625,0.8828125,0.4577778,-0.4422222,0,0.9023438,0.1113281,0.4533333,0.4511111,0,0.8984375,0.8964844,0.4444444,0.46,0,0.890625,0.9042969,0.4444444,-0.46,0,0.890625,0.09570313,0.4311111,0.4755556,0,0.8789063,0.9179688,0.4288889,-0.4777778,0,0.8769531,0.08007813,0.4111111,0.4955555,0,0.8613281,0.9355469,0.3977778,-0.5088889,0,0.8496094,0.05273438,0.3955556,0.5088889,0,0.8476563,0.9472656,0.38,-0.5222222,0,0.8339844,0.04101563,0.3755555,0.5244445,0,0.8300781,0.9609375,0.3666667,-0.5311111,0,0.8222656,0.03320313,0.3555556,0.5377778,0,0.8125,0.9726563,0.3511111,-0.54,0,0.8085938,0.0253906,0.3311111,-0.5488889,0,0.7910156,0.01757815,0.3155555,0.5555556,0,0.7773438,0.9882813,0.3088889,-0.5577778,0,0.7714844,0.009765625,0.2955556,-0.5622222,0,0.7597656,0.005859345,0.2888889,0.5644444,0,0.7539063,0.9960938,0.2688889,0.5688889,0,0.7363281,1,0.2688889,-0.5688889,0,0.7363281,0,-0.2688889,0.5688889,0,0.2636719,1,-0.2711111,-0.5688889,0,0.2617188,0,-0.2777778,-0.5666667,0,0.2558594,0.001953125,-0.2888889,0.5644444,0,0.2460938,0.9960938,-0.2955556,-0.5622222,0,0.2402344,0.005859345,-0.3155555,0.5555556,0,0.2226563,0.9882813,-0.32,-0.5533333,0,0.21875,0.01367188,-0.3266667,0.5511111,0,0.2128906,0.984375,-0.3311111,-0.5488889,0,0.2089844,0.01757815,-0.3511111,-0.54,0,0.1914063,0.0253906,-0.3555556,0.5377778,0,0.1875,0.9726563,-0.3666667,-0.5311111,0,0.1777344,0.03320313,-0.3711111,0.5266666,0,0.1738281,0.9628906,-0.3777778,-0.5222222,0,0.1679688,0.04101563,-0.3866667,0.5177778,0,0.1601563,0.9550781,-0.3955556,0.5088889,0,0.1523438,0.9472656,-0.3955556,-0.5088889,0,0.1523438,0.05273438,-0.4111111,0.4955555,0,0.1386719,0.9355469,-0.4155556,-0.4911111,0,0.1347656,0.06835938,-0.4444444,0.4622222,0,0.109375,0.90625,-0.4444444,-0.4622222,0,0.109375,0.09375,-0.4577778,0.4422222,0,0.09765625,0.8886719,-0.4577778,-0.4444444,0,0.09765625,0.109375,-0.4711111,0.4244444,0,0.0859375,0.8730469,-0.4733333,-0.42,0,0.08398438,0.1308594,-0.4866667,0.3911111,0,0.07226563,0.84375,-0.4888889,-0.3844444,0,0.0703125,0.1621094,-0.4933333,0.3733333,0,0.06640625,0.828125,-0.4955555,-0.3666667,0,0.06445313,0.1777344,-0.5,0.3511111,0,0.06054688,0.8085938,-0.5,-0.3511111,0,0.06054688,0.1914063,-0.5044444,-0.3333333,0,0.05664065,0.2070313,-0.5066667,0.3222222,0,0.0546875,0.7832031,-0.5066667,-0.3222222,0,0.0546875,0.2167969,-0.5088889,0.3066667,0,0.05273438,0.7695313,-0.5088889,-0.3066667,0,0.05273438,0.2304688,0.5111111,-0.2733333,0,0.9492188,0.2597656,0.5111111,0.2733333,0,0.9492188,0.7402344],[5,6,78,79,78,6,77,1,75,2,75,1,76,75,2,74,75,76,73,75,74,71,73,74,72,73,71,70,72,71,69,70,71,68,70,69,67,68,69,66,68,67,65,66,67,64,66,65,63,64,65,62,64,63,61,62,63,60,62,61,59,60,61,58,60,59,57,58,59,55,58,57,56,55,57,54,55,56,53,55,54,52,53,54,51,53,52,49,51,52,50,51,49,48,50,49,47,48,49,46,48,47,45,46,47,44,46,45,42,44,45,43,44,42,41,43,42,40,41,42,38,41,40,39,38,40,36,38,39,37,38,36,35,37,36,33,35,36,34,35,33,32,34,33,31,32,33,30,32,31,29,30,31,28,30,29,27,28,29,26,28,27,25,26,27,24,26,25,23,24,25,21,24,23,22,21,23,20,21,22,19,21,20,18,19,20,17,19,18,15,17,18,16,17,15,13,16,15,14,13,15,12,13,14,11,13,12,10,11,12,9,11,10,8,9,10,7,9,8,4,7,8,5,7,4,6,5,4,3,0,1,2,1,0],-0.000148702412843704,0,0.999851286411285,1,0.0507812201976776,0,0.94921875,1,0,0,0,0,[0,0,0,0],[-0.5688889,-0.5688889,0.5688889,0.5688889],450,512,512,512,512,256,256,26.0761203765869,0]},{"id":25522,"path":"Assets/Content/Sprites/Ingredients/breadcrumbs.png","assetBundleId":-1,"data":["breadcrumbs",6,25520,[-0.04453126,-0.009374991,0,0.5554688,0.4007813,0],[0.1078125,-0.2929688,0,0.5898438,0.2558594,0.1054688,-0.3046875,0,0.5878906,0.2460938,0.1078125,-0.2976563,0,0.5898438,0.2519531,0.103125,-0.2882813,0,0.5859375,0.2597656,0.09375,-0.2882813,0,0.578125,0.2597656,0.09375,-0.3046875,0,0.578125,0.2460938,0.0890625,-0.2953125,0,0.5742188,0.2539063,0.0890625,-0.3023438,0,0.5742188,0.2480469,0.215625,0.2273438,0,0.6796875,0.6894531,0.2109375,0.2296875,0,0.6757813,0.6914063,0.20625,0.225,0,0.671875,0.6875,0.2648438,0.3679688,0,0.7207031,0.8066406,0.2578125,0.253125,0,0.7148438,0.7109375,0.2695313,0.2835937,0,0.7246094,0.7363281,0.2414063,0.234375,0,0.7011719,0.6953125,0.2203125,0.2484375,0,0.6835938,0.7070313,0.2179688,0.2507813,0,0.6816406,0.7089844,0.2109375,0.2507813,0,0.6757813,0.7089844,0.20625,0.2484375,0,0.671875,0.7070313,0.1921875,0.2765625,0,0.6601563,0.7304688,0.20625,0.2367188,0,0.671875,0.6972656,0.1875,0.28125,0,0.65625,0.734375,0.1804688,0.2789063,0,0.6503906,0.7324219,0.1382813,0.2507813,0,0.6152344,0.7089844,0.1804688,0.271875,0,0.6503906,0.7265625,0.1335938,0.253125,0,0.6113281,0.7109375,0.1195313,0.2554688,0,0.5996094,0.7128906,0.1125,0.2484375,0,0.59375,0.7070313,0.1054688,0.225,0,0.5878906,0.6875,0.1125,0.2460938,0,0.59375,0.7050781,0.1007813,0.234375,0,0.5839844,0.6953125,0.084375,0.234375,0,0.5703125,0.6953125,0.08203125,0.2320313,0,0.5683594,0.6933594,-0.05625,0.3140625,0,0.453125,0.7617188,0.08203125,0.2132813,0,0.5683594,0.6777344,-0.05859375,0.328125,0,0.4511719,0.7734375,-0.0609375,0.3398438,0,0.4492188,0.7832031,-0.065625,0.3679688,0,0.4453125,0.8066406,-0.06796875,0.346875,0,0.4433594,0.7890625,0.2203125,0.2414063,0,0.6835938,0.7011719,0.2179688,0.234375,0,0.6816406,0.6953125,0.2085938,0.234375,0,0.6738281,0.6953125,0.1921875,0.2695313,0,0.6601563,0.7246094,0.1851563,0.2671875,0,0.6542969,0.7226563,0.1382813,0.2414063,0,0.6152344,0.7011719,0.1359375,0.2367188,0,0.6132813,0.6972656,0.121875,0.2367188,0,0.6015625,0.6972656,0.1054688,0.2132813,0,0.5878906,0.6777344,0.1054688,0.1992188,0,0.5878906,0.6660156,0.3445313,0.08671875,0,0.7871094,0.5722656,0.3585938,0.06328125,0,0.7988281,0.5527344,0.3515625,0.08671875,0,0.7929688,0.5722656,0.3421875,0.08203125,0,0.7851563,0.5683594,0.3421875,0.07265625,0,0.7851563,0.5605469,0.4195313,0.08671875,0,0.8496094,0.5722656,0.4265625,0.0609375,0,0.8554688,0.5507813,0.4265625,0.08203125,0,0.8554688,0.5683594,0.3632813,0.0609375,0,0.8027344,0.5507813,0.365625,-0.05625,0,0.8046875,0.453125,0.365625,0.0421875,0,0.8046875,0.5351563,0.3515625,-0.103125,0,0.7929688,0.4140625,0.2789063,-0.1523438,0,0.7324219,0.3730469,0.2742188,0.2390625,0,0.7285156,0.6992188,0.271875,0.2085938,0,0.7265625,0.6738281,0.2742188,0.2109375,0,0.7285156,0.6757813,0.2648438,0.2460938,0,0.7207031,0.7050781,0.2601562,0.2460938,0,0.7167969,0.7050781,0.2460938,0.234375,0,0.7050781,0.6953125,0.2460938,0.2085938,0,0.7050781,0.6738281,0.2179688,0.2203125,0,0.6816406,0.6835938,0.2179688,0.2273438,0,0.6816406,0.6894531,0.2109375,0.2179688,0,0.6757813,0.6816406,0.20625,0.225,0,0.671875,0.6875,0.1945313,0.1476562,0,0.6621094,0.6230469,0.1898438,0.1289063,0,0.6582031,0.6074219,0.1945313,0.1242188,0,0.6621094,0.6035156,0.178125,0.1359375,0,0.6484375,0.6132813,0.1757813,0.15,0,0.6464844,0.625,0.1710937,0.1429688,0,0.6425781,0.6191406,0.2625,0.196875,0,0.71875,0.6640625,0.2296875,0.1359375,0,0.6914063,0.6132813,0.2367188,0.1359375,0,0.6972656,0.6132813,0.2132813,0.1382813,0,0.6777344,0.6152344,0.2132813,0.1382813,0,0.6777344,0.6152344,0.2109375,0.1382813,0,0.6757813,0.6152344,0.20625,0.1453125,0,0.671875,0.6210938,0.3445313,0.1148438,0,0.7871094,0.5957031,0.2296875,0.121875,0,0.6914063,0.6015625,0.20625,0.1382813,0,0.671875,0.6152344,0.1804688,0.1335938,0,0.6503906,0.6113281,0.1804688,-0.1921875,0,0.6503906,0.3398438,-0.07734375,0.3585938,0,0.4355469,0.7988281,-0.0609375,0.3328125,0,0.4492188,0.7773438,-0.07734375,0.346875,0,0.4355469,0.7890625,-0.08203125,0.2460938,0,0.4316406,0.7050781,-0.0890625,-0.1921875,0,0.4257813,0.3398438,-0.0984375,0.2695313,0,0.4179688,0.7246094,-0.1429688,0.290625,0,0.3808594,0.7421875,-0.215625,0.08203125,0,0.3203125,0.5683594,-0.2226563,0.08203125,0,0.3144531,0.5683594,-0.225,0.08203125,0,0.3125,0.5683594,-0.2578125,0.07265625,0,0.2851563,0.5605469,-0.3164063,0.03984375,0,0.2363281,0.5332031,-0.3492188,0.01875,0,0.2089844,0.515625,-0.3867188,-0.15,0,0.1777344,0.375,0.06328125,-0.3960938,0,0.5527344,0.1699219,0.065625,-0.4054688,0,0.5546875,0.1621094,0.065625,-0.3984375,0,0.5546875,0.1679688,0.06328125,-0.4101563,0,0.5527344,0.1582031,0.0515625,-0.4101563,0,0.5429688,0.1582031,0.04921875,-0.3960938,0,0.5410156,0.1699219,0.04921875,-0.4054688,0,0.5410156,0.1621094,-0.09609375,-0.2929688,0,0.4199219,0.2558594,-0.0984375,-0.3070312,0,0.4179688,0.2441406,-0.09609375,-0.3046875,0,0.4199219,0.2460938,-0.1101563,-0.2929688,0,0.4082031,0.2558594,-0.1101563,-0.3070312,0,0.4082031,0.2441406,-0.1148438,-0.3960938,0,0.4042969,0.1699219,-0.1171875,-0.4078125,0,0.4023438,0.1601563,-0.1125,-0.403125,0,0.40625,0.1640625,-0.121875,-0.3960938,0,0.3984375,0.1699219,-0.1242188,-0.4078125,0,0.3964844,0.1601563,-0.1265625,-0.4007813,0,0.3945313,0.1660156,0.4992188,-0.3023438,0,0.9160156,0.2480469,0.5109375,-0.3210938,0,0.9257813,0.2324219,0.5109375,-0.3023438,0,0.9257813,0.2480469,0.4101563,-0.3984375,0,0.8417969,0.1679688,0.2203125,-0.3820313,0,0.6835938,0.1816406,0.2179688,-0.384375,0,0.6816406,0.1796875,0.2179688,-0.3984375,0,0.6816406,0.1679688,0.1640625,-0.2835937,0,0.6367188,0.2636719,0.1617188,-0.3023438,0,0.6347656,0.2480469,0.1640625,-0.3,0,0.6367188,0.25,0.1195313,-0.3023438,0,0.5996094,0.2480469,0.1171875,-0.2835937,0,0.5976563,0.2636719,0.1171875,-0.3,0,0.5976563,0.25,-0.2179688,0.08671875,0,0.3183594,0.5722656,-0.2390625,0.08203125,0,0.3007813,0.5683594,-0.271875,0.075,0,0.2734375,0.5625,-0.403125,0.05390625,0,0.1640625,0.5449219,-0.4265625,0.0796875,0,0.1445313,0.5664063,-0.43125,0.07265625,0,0.140625,0.5605469,-0.43125,0.05859375,0,0.140625,0.5488281,-0.3984375,-0.2203125,0,0.1679688,0.3164063,-0.3960938,-0.2507813,0,0.1699219,0.2910156,-0.3960938,-0.2273438,0,0.1699219,0.3105469,-0.4242188,-0.2507813,0,0.1464844,0.2910156,-0.440625,-0.20625,0,0.1328125,0.328125,-0.45,-0.20625,0,0.125,0.328125,-0.4523438,-0.2132813,0,0.1230469,0.3222656,-0.4523438,-0.2460938,0,0.1230469,0.2949219,-0.4546875,-0.2226563,0,0.1210938,0.3144531,-0.4546875,-0.24375,0,0.1210938,0.296875,-0.459375,-0.196875,0,0.1171875,0.3359375,-0.4617188,-0.2085938,0,0.1152344,0.3261719,-0.4570313,-0.2039063,0,0.1191406,0.3300781,-0.4664063,-0.196875,0,0.1113281,0.3359375,-0.46875,-0.2085938,0,0.109375,0.3261719,-0.4710938,-0.2015625,0,0.1074219,0.3320313,-0.4359375,0.06796875,0,0.1367188,0.5566406,-0.4335938,0.05625,0,0.1386719,0.546875,-0.4335938,0.06328125,0,0.1386719,0.5527344,-0.4476563,0.06796875,0,0.1269531,0.5566406,-0.459375,0.04453125,0,0.1171875,0.5371094,-0.4734375,0.04453125,0,0.1054688,0.5371094,-0.4757813,0.05625,0,0.1035156,0.546875,-0.4757813,0.04921875,0,0.1035156,0.5410156,-0.515625,-0.1546875,0,0.0703125,0.3710938,-0.525,-0.16875,0,0.06249997,0.359375,-0.515625,-0.16875,0,0.0703125,0.359375,-0.534375,-0.1382813,0,0.0546875,0.3847656,-0.5390625,-0.1382813,0,0.05078125,0.3847656,-0.5414063,-0.1570313,0,0.04882813,0.3691406,-0.54375,-0.1429688,0,0.04687503,0.3808594,-0.5484375,-0.1125,0,0.04296872,0.40625,-0.5507813,-0.1289063,0,0.04101563,0.3925781,-0.5484375,-0.1242188,0,0.04296872,0.3964844,-0.553125,-0.1101563,0,0.0390625,0.4082031,-0.5601563,-0.1289063,0,0.0332031,0.3925781,-0.5625,-0.1101563,0,0.03125,0.4082031,-0.5648438,-0.1125,0,0.02929688,0.40625,-0.5648438,-0.1195313,0,0.02929688,0.4003906,-0.5695313,0.00234375,0,0.02539063,0.5019531,-0.5648438,-0.009375,0,0.02929688,0.4921875,-0.5648438,-0.00234375,0,0.02929688,0.4980469,-0.5789062,0,0,0.01757815,0.5,-0.5929688,-0.0375,0,0.005859375,0.46875,-0.6,-0.01640625,0,0,0.4863281,-0.6,-0.03984375,0,0,0.4667969,0.2414063,0.1921875,0,0.7011719,0.6601563,0.24375,0.1828125,0,0.703125,0.6523438,0.24375,0.1851563,0,0.703125,0.6542969,0.2273438,0.1921875,0,0.6894531,0.6601563,0.2132813,0.1664063,0,0.6777344,0.6386719,0.2015625,0.1640625,0,0.6679688,0.6367188,0.196875,0.1734375,0,0.6640625,0.6445313,0.196875,0.16875,0,0.6640625,0.640625,-0.1382813,0.328125,0,0.3847656,0.7734375,-0.1359375,0.290625,0,0.3867188,0.7421875,-0.1359375,0.3257813,0,0.3867188,0.7714844,-0.1476562,0.290625,0,0.3769531,0.7421875,-0.15,0.328125,0,0.375,0.7734375,-0.1523438,0.3257813,0,0.3730469,0.7714844,-0.1523438,0.3,0,0.3730469,0.75,-0.1054688,0.3117188,0,0.4121094,0.7597656,-0.1101563,0.2953125,0,0.4082031,0.7460938,-0.103125,0.3117188,0,0.4140625,0.7597656,-0.1125,0.3117188,0,0.40625,0.7597656,-0.1171875,0.3046875,0,0.4023438,0.7539063,-0.1171875,0.3023438,0,0.4023438,0.7519531,-0.0890625,0.3351563,0,0.4257813,0.7792969,-0.09140625,0.346875,0,0.4238281,0.7890625,-0.09375,0.3421875,0,0.421875,0.7851563,-0.084375,0.3679688,0,0.4296875,0.8066406,-0.07734375,0.3679688,0,0.4355469,0.8066406,-0.09375,0.346875,0,0.421875,0.7890625,-0.09609375,0.3492188,0,0.4199219,0.7910156,-0.0984375,0.3914063,0,0.4179688,0.8261719,-0.1101563,0.3539062,0,0.4082031,0.7949219,-0.1265625,0.3914063,0,0.3945313,0.8261719,-0.1265625,0.3539062,0,0.3945313,0.7949219,-0.1265625,0.346875,0,0.3945313,0.7890625,-0.1335938,0.3890625,0,0.3886719,0.8242188,-0.1453125,0.3726563,0,0.3789063,0.8105469,-0.1453125,0.346875,0,0.3789063,0.7890625,-0.0890625,0.3234375,0,0.4257813,0.7695313,-0.0890625,0.2671875,0,0.4257813,0.7226563,-0.09375,0.3070312,0,0.421875,0.7558594,-0.1007813,0.3234375,0,0.4160156,0.7695313,-0.103125,0.3234375,0,0.4140625,0.7695313,-0.1242188,0.3375,0,0.3964844,0.78125,-0.1265625,0.3421875,0,0.3945313,0.7851563,-0.09375,0.2953125,0,0.421875,0.7460938,-0.09609375,0.2929688,0,0.4199219,0.7441406,-0.1054688,0.2929688,0,0.4121094,0.7441406,-0.1125,0.2859375,0,0.40625,0.7382813],[205,206,234,233,234,206,227,233,206,232,233,227,221,220,215,218,215,220,216,215,218,235,205,226,234,226,205,233,226,234,232,226,233,227,226,232,228,212,225,210,225,212,231,221,230,215,230,221,229,230,215,228,229,215,212,228,215,206,228,227,225,227,228,226,227,225,94,226,225,210,94,225,34,32,47,31,47,32,30,47,31,28,47,30,224,223,221,222,221,223,219,221,222,220,221,219,218,220,219,217,218,219,216,218,217,213,216,217,214,213,217,215,216,213,211,215,213,91,213,214,211,213,93,91,93,213,212,211,210,93,210,211,94,210,93,209,208,205,207,205,208,204,205,207,206,205,204,203,202,200,201,200,202,197,200,201,97,200,197,198,97,197,199,198,197,24,22,43,21,43,22,42,43,21,19,42,21,20,18,41,17,41,18,40,41,17,16,40,17,39,40,16,15,39,16,196,195,194,192,194,195,193,194,192,190,193,192,189,190,192,191,190,189,188,187,186,185,186,187,183,186,185,182,183,185,184,183,182,181,180,178,179,178,180,177,178,179,175,178,177,174,175,177,176,175,174,173,171,172,168,172,171,170,168,171,167,168,170,169,168,167,166,165,164,162,164,165,163,164,162,160,163,162,159,160,162,161,160,159,158,156,157,154,157,156,153,154,156,155,154,153,152,151,150,149,150,151,146,150,149,148,146,149,147,146,148,143,146,147,144,146,143,145,144,143,142,141,139,140,139,141,97,139,140,138,139,97,137,138,97,100,137,97,99,100,97,136,99,97,98,136,97,135,134,133,130,133,134,131,133,130,132,131,130,129,128,126,127,126,128,123,126,127,124,126,123,125,124,123,122,120,121,118,121,120,117,118,120,119,118,117,116,115,113,112,113,115,114,113,112,111,110,109,105,109,110,108,109,105,106,108,105,107,106,105,84,83,82,104,103,95,102,95,103,101,95,102,100,95,101,99,95,100,98,95,99,97,95,98,96,95,97,94,95,96,90,95,94,93,90,94,91,90,93,33,90,91,92,33,91,34,90,33,48,90,34,89,90,48,61,90,89,75,61,89,73,61,75,88,61,73,84,61,88,82,61,84,87,61,82,81,61,87,79,61,81,86,61,79,52,61,86,53,61,52,49,52,86,51,49,86,85,79,84,83,84,79,82,83,79,80,82,79,81,80,79,78,77,76,73,76,77,74,76,73,75,74,73,29,27,46,26,46,27,25,46,26,45,46,25,23,45,25,44,45,23,72,10,71,8,71,10,69,71,8,70,69,8,68,67,63,66,63,67,65,63,66,62,63,65,64,63,62,61,53,60,50,60,53,58,60,50,59,58,50,51,54,50,57,50,54,55,57,54,56,55,54,53,52,50,49,50,52,51,50,49,34,47,48,10,48,47,28,10,47,46,10,28,29,46,28,45,10,46,44,10,45,23,10,44,24,10,23,43,10,24,42,10,43,19,10,42,20,10,19,41,10,20,9,10,41,40,9,41,8,9,40,14,8,40,39,14,40,15,14,39,38,37,36,11,36,37,35,36,11,33,35,11,31,33,11,32,33,31,34,33,32,26,31,11,27,31,26,30,31,27,28,30,27,29,28,27,25,26,11,23,25,11,22,23,11,24,23,22,21,22,11,19,21,11,18,19,11,20,19,18,17,18,11,16,17,11,15,16,11,14,15,11,12,14,11,13,12,11,10,9,8,7,6,5,4,5,6,1,5,4,3,1,4,0,1,3,2,1,0],0,-0.000148668885231018,1,0.99985134601593,0,0.158203125,0.92578125,0.826171875,0,0,0,0,[0,0,0,0],[-0.6,-0.6,0.6,0.6],426.666656494141,512,512,512,512,256,256,0,81.0761184692383]},{"id":25538,"path":"Assets/Content/Sprites/Ingredients/brie cheese.png","assetBundleId":-1,"data":["brie cheese",6,25536,[0.04453126,-0.03984375,0,0.4101563,0.253125,0],[0.3398438,0.046875,0,0.7832031,0.5390625,0.3046875,0.1359375,0,0.7539063,0.6132813,0.3351563,0.01875,0,0.7792969,0.515625,0.4546875,0.00234375,0,0.8789063,0.5019531,0.4382813,-0.2015625,0,0.8652344,0.3320313,0.4546875,-0.1734375,0,0.8789063,0.3554688,0.4335938,0.01640625,0,0.8613281,0.5136719,0.3820313,-0.2648438,0,0.8183594,0.2792969,0.2390625,0.1757813,0,0.6992188,0.6464844,0.2320313,-0.24375,0,0.6933594,0.296875,0.1828125,-0.2132813,0,0.6523438,0.3222656,0.1640625,-0.2484375,0,0.6367188,0.2929688,0.1570313,0.2109375,0,0.6308594,0.6757813,0.13125,-0.2835937,0,0.609375,0.2636719,0.0796875,0.2132813,0,0.5664063,0.6777344,0.03046875,-0.2929688,0,0.5253906,0.2558594,-0.04453125,0.2132813,0,0.4628906,0.6777344,-0.103125,-0.2929688,0,0.4140625,0.2558594,-0.1710937,0.196875,0,0.3574219,0.6640625,-0.196875,-0.2742188,0,0.3359375,0.2714844,-0.2789063,0.1617188,0,0.2675781,0.6347656,-0.3164063,-0.2109375,0,0.2363281,0.3242188,-0.3539062,0.0890625,0,0.2050781,0.5742188,-0.365625,0.05859375,0,0.1953125,0.5488281,-0.365625,-0.1476562,0,0.1953125,0.3769531],[24,23,21,22,21,23,20,21,22,19,21,20,18,19,20,17,19,18,16,17,18,15,17,16,14,15,16,13,15,14,12,13,14,11,13,12,8,11,12,10,11,8,9,10,8,7,9,8,1,7,8,2,7,1,6,7,2,4,7,6,3,4,6,5,4,3,2,1,0],-0.000148668885231018,-0.000148683786392212,0.99985134601593,0.99985134601593,0.1953125,0.255859375,0.87890625,0.677734375,0,0,0,0,[0,0,0,0],[-0.6,-0.6,0.6,0.6],426.666656494141,512,512,512,512,256,256,100.076118469238,131.076126098633]},{"id":25468,"path":"Assets/Content/Sprites/Ingredients/ricotta cheese.png","assetBundleId":-1,"data":["ricotta cheese",6,25466,[0.03281251,0.01992187,0,0.4195313,0.2871094,0],[0.4335938,-0.04453125,0,0.8613281,0.4628906,0.4523438,-0.2109375,0,0.8769531,0.3242188,0.4523438,-0.06328125,0,0.8769531,0.4472656,0.3796875,-0.03515625,0,0.8164063,0.4707031,0.3796875,-0.2648438,0,0.8164063,0.2792969,0.3609375,-0.2671875,0,0.8007813,0.2773438,0.225,-0.02578125,0,0.6875,0.4785156,0.1921875,0.0046875,0,0.6601563,0.5039063,0.1148438,-0.2671875,0,0.5957031,0.2773438,0.1125,0.2742188,0,0.59375,0.7285156,0.05859375,0.2953125,0,0.5488281,0.7460938,0.0140625,0.3046875,0,0.5117188,0.7539063,-0.0328125,0.3070312,0,0.4726563,0.7558594,-0.103125,-0.2554688,0,0.4140625,0.2871094,-0.1476562,-0.253125,0,0.3769531,0.2890625,-0.2015625,0.3070312,0,0.3320313,0.7558594,-0.2882813,0.2789063,0,0.2597656,0.7324219,-0.2976563,-0.225,0,0.2519531,0.3125,-0.3117188,0.2625,0,0.2402344,0.71875,-0.3210938,-0.2132813,0,0.2324219,0.3222656,-0.3351563,0.1992188,0,0.2207031,0.6660156,-0.3679688,0.0421875,0,0.1933594,0.5351563,-0.3679688,-0.16875,0,0.1933594,0.359375,-0.3820313,-0.06796875,0,0.1816406,0.4433594,-0.3867188,-0.1101563,0,0.1777344,0.4082031,-0.3867188,-0.1242188,0,0.1777344,0.3964844],[25,24,22,23,22,24,21,22,23,19,22,21,20,19,21,18,19,20,17,19,18,16,17,18,14,17,16,15,14,16,12,14,15,13,14,12,8,13,12,11,8,12,10,8,11,9,8,10,7,8,9,5,8,7,6,5,7,3,5,6,4,5,3,1,4,3,0,1,3,2,1,0],-0.000121325254440308,-0.000148683786392212,0.999878644943237,0.99985134601593,0.177734375,0.27734375,0.876953125,0.755859375,0,0,0,0,[0,0,0,0],[-0.6,-0.6,0.6,0.6],426.666656494141,512,512,512,512,256,256,91.0621185302734,142.076126098633]},{"id":25550,"path":"Assets/Content/Sprites/Ingredients/lasagna noodle.png","assetBundleId":-1,"data":["lasagna noodle",6,25548,[0,-0.003515624,0,0.403125,0.2355469,0],[0.3914063,0.1453125,0,0.8261719,0.6210938,0.403125,0.04453125,0,0.8359375,0.5371094,0.403125,0.121875,0,0.8359375,0.6015625,0.3585938,-0.04921875,0,0.7988281,0.4589844,0.0984375,0.1664063,0,0.5820313,0.6386719,0.3539062,-0.1992188,0,0.7949219,0.3339844,0.07265625,-0.2039063,0,0.5605469,0.3300781,-0.009375,0.2039063,0,0.4921875,0.6699219,-0.009375,-0.2390625,0,0.4921875,0.3007813,-0.02109375,-0.2390625,0,0.4824219,0.3007813,-0.05390625,0.2320313,0,0.4550781,0.6933594,-0.05859375,-0.1945313,0,0.4511719,0.3378906,-0.1195313,0.2320313,0,0.4003906,0.6933594,-0.1359375,-0.1992188,0,0.3867188,0.3339844,-0.3023438,0.15,0,0.2480469,0.625,-0.3257813,0.09375,0,0.2285156,0.578125,-0.3398438,-0.2390625,0,0.2167969,0.3007813,-0.3679688,-0.2390625,0,0.1933594,0.3007813,-0.3726563,0.0421875,0,0.1894531,0.5351563,-0.3773438,-0.234375,0,0.1855469,0.3046875,-0.403125,-0.03984375,0,0.1640625,0.4667969,-0.403125,-0.1828125,0,0.1640625,0.3476563,0.3703125,-0.1546875,0,0.8085938,0.3710938],[5,3,22,21,20,19,18,19,20,17,19,18,15,17,18,16,17,15,13,16,15,14,13,15,12,13,14,11,13,12,10,11,12,9,11,10,7,9,10,8,9,7,6,8,7,4,6,7,5,6,4,3,5,4,0,3,4,1,3,0,2,1,0],-0.000148668885231018,-0.0000838041305541992,0.99985134601593,0.999916195869446,0.1640625,0.30078125,0.8359375,0.693359375,0,0,0,0,[0,0,0,0],[-0.6,-0.6,0.6,0.6],426.666656494141,512,512,512,512,256,256,84.0761184692383,154.042907714844]},{"id":25786,"path":"Assets/Content/Sprites/Ingredients/ziti noodle.png","assetBundleId":-1,"data":["ziti noodle",6,25784,[0.01054688,0.009374999,0,0.3714844,0.2484375,0],[0.3773438,0.1265625,0,0.8144531,0.6054688,0.3820313,-0.0140625,0,0.8183594,0.4882813,0.3820313,0.08203125,0,0.8183594,0.5683594,0.3492188,-0.103125,0,0.7910156,0.4140625,0.2859375,-0.1617188,0,0.7382813,0.3652344,0.1921875,0.2390625,0,0.6601563,0.6992188,0.1851563,-0.2179688,0,0.6542969,0.3183594,0.1429688,0.2554688,0,0.6191406,0.7128906,0.121875,0.2578125,0,0.6015625,0.7148438,0.0515625,-0.2390625,0,0.5429688,0.3007813,-0.075,-0.2390625,0,0.4375,0.3007813,-0.084375,0.2578125,0,0.4296875,0.7148438,-0.1921875,-0.2132813,0,0.3398438,0.3222656,-0.1945313,0.2203125,0,0.3378906,0.6835938,-0.2742188,-0.1546875,0,0.2714844,0.3710938,-0.3117188,-0.1054688,0,0.2402344,0.4121094,-0.3140625,0.1171875,0,0.2382813,0.5976563,-0.3257813,-0.08671875,0,0.2285156,0.4277344,-0.3398438,-0.065625,0,0.2167969,0.4453125,-0.35625,-0.03515625,0,0.203125,0.4707031,-0.3585938,0.06796875,0,0.2011719,0.5566406,-0.3609375,0.03984375,0,0.1992188,0.5332031,-0.3609375,-0.01875,0,0.1992188,0.484375],[22,21,19,20,19,21,16,19,20,18,19,16,17,18,16,15,17,16,13,15,16,14,15,13,12,14,13,11,12,13,10,12,11,8,10,11,9,10,8,6,9,8,7,6,8,5,6,7,4,6,5,0,4,5,3,4,0,1,3,0,2,1,0],-0.0000522434711456299,-0.000148683786392212,0.999947786331177,0.99985134601593,0.19921875,0.30078125,0.818359375,0.71484375,0,0,0,0,[0,0,0,0],[-0.6,-0.6,0.6,0.6],426.666656494141,512,512,512,512,256,256,102.026748657227,154.076126098633]},{"id":25712,"path":"Assets/Content/Sprites/Ingredients/berrie.png","assetBundleId":-1,"data":["berrie",6,25710,[0.06210938,-0.004687503,0,0.4488281,0.384375,0],[0.4429688,0.00703125,0,0.8691406,0.5058594,0.4101563,-0.07734375,0,0.8417969,0.4355469,0.4429688,-0.009375,0,0.8691406,0.4921875,0.346875,0.03984375,0,0.7890625,0.5332031,0.3726563,-0.3,0,0.8105469,0.25,0.31875,0.1054688,0,0.765625,0.5878906,0.2742188,-0.2882813,0,0.7285156,0.2597656,0.2414063,-0.3351563,0,0.7011719,0.2207031,0.2109375,0.2109375,0,0.6757813,0.6757813,0.1359375,-0.3890625,0,0.6132813,0.1757813,0.1054688,-0.24375,0,0.5878906,0.296875,0.09140625,0.1804688,0,0.5761719,0.6503906,0.04921875,-0.1992188,0,0.5410156,0.3339844,-0.028125,0.3398438,0,0.4765625,0.7832031,-0.0515625,-0.3398438,0,0.4570313,0.2167969,-0.1242188,0.3796875,0,0.3964844,0.8164063,-0.1476562,-0.2835937,0,0.3769531,0.2636719,-0.2109375,0.3796875,0,0.3242188,0.8164063,-0.2367188,0.3515625,0,0.3027344,0.7929688,-0.31875,-0.121875,0,0.234375,0.3984375,-0.3234375,0.3164063,0,0.2304688,0.7636719,-0.384375,0.06796875,0,0.1796875,0.5566406,-0.3867188,0.2179688,0,0.1777344,0.6816406,-0.3867188,0.084375,0,0.1777344,0.5703125,0.4429688,-0.2226563,0,0.8691406,0.3144531,0.4429688,-0.1359375,0,0.8691406,0.3867188,0.09375,-0.3890625,0,0.578125,0.1757813,0.07734375,-0.3117188,0,0.5644531,0.2402344,0.5109375,-0.1265625,0,0.9257813,0.3945313,0.50625,-0.1359375,0,0.921875,0.3867188,0.5109375,-0.13125,0,0.9257813,0.390625,0.5015625,-0.09609375,0,0.9179688,0.4199219,0.4921875,-0.1359375,0,0.9101563,0.3867188,0.4898438,-0.0796875,0,0.9082031,0.4335938,0.4804688,-0.0796875,0,0.9003906,0.4335938,0.4757813,-0.08203125,0,0.8964844,0.4316406,0.4757813,-0.09609375,0,0.8964844,0.4199219],[36,35,32,34,32,35,33,32,34,31,32,33,29,32,31,28,29,31,30,29,28,27,10,26,9,26,10,4,1,24,25,24,1,23,22,21,20,21,22,19,21,20,18,19,20,16,19,18,17,16,18,15,16,17,14,16,15,13,14,15,12,14,13,11,12,13,10,12,11,8,10,11,9,10,8,7,9,8,5,7,8,6,7,5,4,6,5,3,4,5,1,4,3,0,1,3,2,1,0],-0.000148668885231018,-0.000148668885231018,0.99985134601593,0.99985134601593,0.177734375,0.17578125,0.92578125,0.81640625,0,0,0,0,[0,0,0,0],[-0.6,-0.6,0.6,0.6],426.666656494141,512,512,512,512,256,256,91.0761184692383,90.0761184692383]},{"id":25736,"path":"Assets/Content/Sprites/Ingredients/phyllo dough.png","assetBundleId":-1,"data":["phyllo dough",6,25734,[-0.04453126,0.04570313,0,0.4289063,0.3292969,0],[-0.4570313,0.196875,0,0.1191406,0.6640625,-0.4453125,0.05390625,0,0.1289063,0.5449219,-0.4101563,0.2695313,0,0.1582031,0.7246094,-0.4570313,0.04921875,0,0.1191406,0.5410156,-0.459375,0.03515625,0,0.1171875,0.5292969,-0.4664063,0.0328125,0,0.1113281,0.5273438,-0.4710938,0.159375,0,0.1074219,0.6328125,-0.4734375,0.03515625,0,0.1054688,0.5292969,-0.384375,0.2789063,0,0.1796875,0.7324219,-0.384375,-0.1710937,0,0.1796875,0.3574219,-0.384375,-0.0703125,0,0.1796875,0.4414063,-0.384375,-0.2835937,0,0.1796875,0.2636719,-0.3890625,0.28125,0,0.1757813,0.734375,-0.3984375,0.28125,0,0.1679688,0.734375,-0.4570313,-0.2835937,0,0.1191406,0.2636719,-0.46875,-0.271875,0,0.109375,0.2734375,-0.4734375,0.01171875,0,0.1054688,0.5097656,-0.4734375,-0.15,0,0.1054688,0.375,-0.309375,-0.1359375,0,0.2421875,0.3867188,-0.309375,-0.1429688,0,0.2421875,0.3808594,-0.309375,-0.140625,0,0.2421875,0.3828125,-0.328125,0.04453125,0,0.2265625,0.5371094,-0.1757813,0.1617188,0,0.3535156,0.6347656,-0.3398438,-0.1570313,0,0.2167969,0.3691406,0.3046875,0.1617188,0,0.7539063,0.6347656,0.384375,-0.04921875,0,0.8203125,0.4589844,0.384375,0.03984375,0,0.8203125,0.5332031,0.2671875,-0.178125,0,0.7226563,0.3515625,-0.309375,-0.1429688,0,0.2421875,0.3808594,-0.3210938,-0.178125,0,0.2324219,0.3515625,0.15,0.346875,0,0.625,0.7890625,0.1898438,0.2929688,0,0.6582031,0.7441406,0.1898438,0.3164063,0,0.6582031,0.7636719,0.08671875,0.346875,0,0.5722656,0.7890625,0.08671875,0.2929688,0,0.5722656,0.7441406,-0.20625,0.328125,0,0.328125,0.7734375,-0.20625,0.3140625,0,0.328125,0.7617188,-0.2039063,0.3210938,0,0.3300781,0.7675781,-0.2132813,0.328125,0,0.3222656,0.7734375,-0.2273438,0.3117188,0,0.3105469,0.7597656,-0.2320313,0.328125,0,0.3066406,0.7734375,-0.2414063,0.3117188,0,0.2988281,0.7597656,-0.2484375,0.328125,0,0.2929688,0.7734375,-0.2484375,0.3140625,0,0.2929688,0.7617188,-0.2507813,0.3210938,0,0.2910156,0.7675781,0.0140625,0.346875,0,0.5117188,0.7890625,0.01875,0.3257813,0,0.515625,0.7714844,0.02109375,0.3351563,0,0.5175781,0.7792969,-0.009375,0.346875,0,0.4921875,0.7890625,-0.1125,0.346875,0,0.40625,0.7890625,-0.1171875,0.3210938,0,0.4023438,0.7675781,-0.1921875,0.3351563,0,0.3398438,0.7792969,-0.1945313,0.3210938,0,0.3378906,0.7675781,-0.196875,0.3328125,0,0.3359375,0.7773438,-0.196875,0.3257813,0,0.3359375,0.7714844,0.028125,0.365625,0,0.5234375,0.8046875,0.028125,0.3492188,0,0.5234375,0.7910156,0.03046875,0.35625,0,0.5253906,0.796875,-0.046875,0.375,0,0.4609375,0.8125,-0.1007813,0.3515625,0,0.4160156,0.7929688,-0.1804688,0.375,0,0.3496094,0.8125,-0.2109375,0.3492188,0,0.3242188,0.7910156,-0.225,0.3492188,0,0.3125,0.7910156,-0.2320313,0.3515625,0,0.3066406,0.7929688,-0.2578125,0.3375,0,0.2851563,0.78125,-0.2671875,0.3679688,0,0.2773438,0.8066406,-0.271875,0.3585938,0,0.2734375,0.7988281,-0.271875,0.3445313,0,0.2734375,0.7871094,-0.196875,0.3421875,0,0.3359375,0.7851563,-0.1945313,0.3351563,0,0.3378906,0.7792969,-0.1992188,0.3304687,0,0.3339844,0.7753906,-0.2109375,0.346875,0,0.3242188,0.7890625,-0.225,0.346875,0,0.3125,0.7890625],[40,63,38,72,38,63,71,38,72,70,38,71,68,70,71,53,70,68,69,53,68,67,66,64,65,64,66,63,64,65,60,63,65,40,64,63,62,63,60,61,62,60,59,61,60,58,59,60,48,59,58,55,48,58,56,48,55,57,56,55,54,53,52,51,52,53,50,52,51,49,50,51,46,50,49,48,46,49,45,46,48,47,46,45,44,42,43,41,43,42,40,41,42,39,41,40,38,39,40,36,39,38,35,36,38,37,36,35,34,33,31,30,31,33,32,31,30,28,19,20,29,19,27,28,27,19,20,27,28,18,27,20,22,27,18,24,27,22,25,27,24,26,25,24,9,10,23,21,23,10,19,23,21,18,19,21,22,18,21,20,19,18,17,16,15,1,15,16,14,15,1,11,14,1,2,11,1,13,11,2,12,11,13,8,11,12,9,11,8,10,9,8,7,6,5,0,5,6,4,5,0,3,4,0,1,3,0,2,1,0],-0.000148676335811615,-0.000148683786392212,0.99985134601593,0.99985134601593,0.10546875,0.263671875,0.8203125,0.8125,0,0,0,0,[0,0,0,0],[-0.6,-0.6,0.6,0.6],426.666656494141,512,512,512,512,256,256,54.0761222839355,135.076126098633]},{"id":25542,"path":"Assets/Content/Sprites/Ingredients/pepperoni.png","assetBundleId":-1,"data":["pepperoni",6,25540,[-0.01992188,-0.03281249,0,0.4160156,0.2859375,0],[-0.09140625,-0.3070312,0,0.4238281,0.2441406,-0.09375,-0.3046875,0,0.421875,0.2460938,-0.09609375,-0.3023438,0,0.4199219,0.2480469,0.02109375,0.2039063,0,0.5175781,0.6699219,0.01171875,-0.2625,0,0.5097656,0.28125,0.0140625,-0.2625,0,0.5117188,0.28125,-0.009375,-0.2625,0,0.4921875,0.28125,-0.01171875,-0.2648438,0,0.4902344,0.2792969,-0.0515625,-0.2742188,0,0.4570313,0.2714844,-0.05859375,-0.2882813,0,0.4511719,0.2597656,-0.06328125,-0.2859375,0,0.4472656,0.2617188,-0.06796875,-0.2789063,0,0.4433594,0.2675781,-0.07265625,-0.2835937,0,0.4394531,0.2636719,-0.075,-0.2835937,0,0.4375,0.2636719,-0.08671875,-0.2953125,0,0.4277344,0.2539063,-0.0984375,-0.3,0,0.4179688,0.25,-0.1945313,0.1125,0,0.3378906,0.59375,-0.1007813,-0.31875,0,0.4160156,0.234375,-0.2039063,0.1617188,0,0.3300781,0.6347656,-0.2320313,0.1007813,0,0.3066406,0.5839844,-0.253125,0.09609375,0,0.2890625,0.5800781,-0.2789063,0.0984375,0,0.2675781,0.5820313,0.2296875,0.225,0,0.6914063,0.6875,0.2109375,0.2203125,0,0.6757813,0.6835938,0.2203125,0.2179688,0,0.6835938,0.6816406,0.1992188,0.253125,0,0.6660156,0.7109375,0.1992188,0.225,0,0.6660156,0.6875,0.1898438,0.2296875,0,0.6582031,0.6914063,0.1148438,0.2390625,0,0.5957031,0.6992188,0.103125,0.234375,0,0.5859375,0.6953125,0.1078125,0.234375,0,0.5898438,0.6953125,0.0984375,0.253125,0,0.5820313,0.7109375,0.09609375,0.234375,0,0.5800781,0.6953125,0.09375,0.2414063,0,0.578125,0.7011719,-0.084375,-0.2929688,0,0.4296875,0.2558594,-0.09140625,-0.309375,0,0.4238281,0.2421875,-0.31875,-0.31875,0,0.234375,0.234375,-0.3445313,0.05390625,0,0.2128906,0.5449219,-0.39375,-0.01875,0,0.171875,0.484375,-0.39375,-0.1992188,0,0.171875,0.3339844,-0.4101563,-0.16875,0,0.1582031,0.359375,-0.4148438,-0.1828125,0,0.1542969,0.3476563,-0.4101563,-0.1804688,0,0.1582031,0.3496094,-0.4195313,-0.1476562,0,0.1503906,0.3769531,-0.421875,-0.1828125,0,0.1484375,0.3476563,-0.4289063,-0.140625,0,0.1425781,0.3828125,-0.4359375,-0.1429688,0,0.1367188,0.3808594,-0.4359375,-0.1640625,0,0.1367188,0.3632813,-0.4078125,-0.02578125,0,0.1601563,0.4785156,-0.4007813,-0.0375,0,0.1660156,0.46875,-0.4007813,-0.028125,0,0.1660156,0.4765625,-0.4171875,-0.0984375,0,0.1523438,0.4179688,-0.4195313,-0.03515625,0,0.1503906,0.4707031,-0.421875,-0.1007813,0,0.1484375,0.4160156,-0.4359375,-0.06328125,0,0.1367188,0.4472656,-0.4359375,-0.1007813,0,0.1367188,0.4160156,0.384375,0.05390625,0,0.8203125,0.5449219,0.3890625,-0.02578125,0,0.8242188,0.4785156,0.3890625,0.0515625,0,0.8242188,0.5429688,0.3726563,0.1476562,0,0.8105469,0.6230469,0.2695313,-0.2085938,0,0.7246094,0.3261719,0.2367188,0.2179688,0,0.6972656,0.6816406,0.2226563,0.215625,0,0.6855469,0.6796875,0.196875,0.225,0,0.6640625,0.6875,0.1125,0.234375,0,0.59375,0.6953125,0.0703125,0.2296875,0,0.5585938,0.6914063,-0.028125,-0.2695313,0,0.4765625,0.2753906,-0.04453125,-0.31875,0,0.4628906,0.234375,-0.0609375,-0.290625,0,0.4492188,0.2578125,-0.06796875,-0.2835937,0,0.4433594,0.2636719,-0.084375,-0.31875,0,0.4296875,0.234375,0.384375,0.08203125,0,0.8203125,0.5683594,0.3890625,0.084375,0,0.8242188,0.5703125,0.3890625,0.1171875,0,0.8242188,0.5976563,0.3914063,0.084375,0,0.8261719,0.5703125,0.3960938,0.05625,0,0.8300781,0.546875,0.3960938,0.0796875,0,0.8300781,0.5664063],[58,72,75,74,75,72,76,75,74,73,71,59,56,59,71,72,71,73,56,71,58,72,58,71,2,14,1,0,1,14,70,0,14,34,70,14,67,70,34,12,67,34,69,67,12,68,67,69,66,67,68,5,67,66,60,67,5,4,5,66,3,60,5,65,60,3,29,60,65,30,60,29,64,60,30,28,60,64,27,60,28,63,60,27,62,60,63,61,60,62,59,60,61,57,60,59,56,57,59,58,57,56,55,54,53,52,53,54,51,53,52,48,51,52,49,51,48,50,49,48,47,46,44,45,44,46,43,44,45,41,44,43,40,41,43,42,41,40,39,38,36,37,36,38,16,36,37,17,36,16,17,15,35,2,35,15,0,35,2,14,13,34,12,34,13,33,31,32,29,32,31,28,29,31,25,28,31,30,29,28,27,28,25,26,27,25,23,26,25,22,23,25,24,23,22,21,18,20,19,20,18,16,19,18,3,16,18,15,16,3,17,16,15,14,15,3,13,14,3,12,13,3,11,12,3,10,11,3,9,10,3,8,9,3,7,8,3,6,7,3,4,6,3,5,4,3,2,1,0],-0.000148668885231018,-0.000148668885231018,0.99985134601593,0.99985134601593,0.13671875,0.234375,0.830078125,0.7109375,0,0,0,0,[0,0,0,0],[-0.6,-0.6,0.6,0.6],426.666656494141,512,512,512,512,256,256,70.0761184692383,120.076118469238]},{"id":25772,"path":"Assets/Content/Sprites/Ingredients/coriander seed.png","assetBundleId":-1,"data":["coriander seed",6,25770,[0,-0.05507813,0,0.6,0.5449219,0],[-0.4195313,0.04453125,0,0.1503906,0.5371094,-0.31875,-0.1921875,0,0.234375,0.3398438,-0.1992188,-0.1945313,0,0.3339844,0.3378906,-0.4546875,0.0046875,0,0.1210938,0.5039063,-0.4710938,-0.028125,0,0.1074219,0.4765625,-0.4710938,-0.09375,0,0.1074219,0.421875,-0.3585938,-0.525,0,0.2011719,0.06249997,-0.3820313,-0.6,0,0.1816406,0,-0.3585938,-0.5953125,0,0.2011719,0.00390622,-0.5507813,-0.4664063,0,0.04101563,0.1113281,-0.5835938,-0.6,0,0.01367185,0,-0.6,-0.4664063,0,0,0.1113281,-0.6,-0.5695313,0,0,0.02539063,0.3890625,-0.4921875,0,0.8242188,0.08984375,0.4429688,-0.50625,0,0.8691406,0.078125,0.4429688,-0.4921875,0,0.8691406,0.08984375,0.3117188,-0.5835938,0,0.7597656,0.01367185,0.2695313,-0.6,0,0.7246094,0,-0.07265625,-0.6,0,0.4394531,0,-0.1054688,-0.5578125,0,0.4121094,0.03515625,-0.1054688,-0.571875,0,0.4121094,0.02343747,-0.1875,-0.4617188,0,0.34375,0.1152344,-0.1851563,-0.4757813,0,0.3457031,0.1035156,-0.1851563,-0.4664063,0,0.3457031,0.1113281,-0.1875,-0.478125,0,0.34375,0.1015625,-0.196875,-0.478125,0,0.3359375,0.1015625,-0.2039063,-0.4617188,0,0.3300781,0.1152344,-0.2039063,-0.4757813,0,0.3300781,0.1035156,-0.1148438,-0.4359375,0,0.4042969,0.1367188,-0.1242188,-0.4570313,0,0.3964844,0.1191406,-0.1148438,-0.4476563,0,0.4042969,0.1269531,-0.1453125,-0.459375,0,0.3789063,0.1171875,-0.15,-0.4359375,0,0.375,0.1367188,-0.215625,-0.459375,0,0.3203125,0.1171875,-0.2179688,-0.4429688,0,0.3183594,0.1308594,-0.2203125,-0.4453125,0,0.3164063,0.1289063,-0.2203125,-0.4523438,0,0.3164063,0.1230469,-0.2484375,0.3539062,0,0.2929688,0.7949219,-0.4101563,0.0703125,0,0.1582031,0.5585938,-0.3960938,0.075,0,0.1699219,0.5625,-0.4242188,0.0703125,0,0.1464844,0.5585938,-0.4289063,0.07734375,0,0.1425781,0.5644531,0.1242188,-0.2554688,0,0.6035156,0.2871094,0.1429688,-0.2695313,0,0.6191406,0.2753906,0.1429688,-0.2554688,0,0.6191406,0.2871094,0.1242188,-0.2695313,0,0.6035156,0.2753906,0.1710937,-0.2648438,0,0.6425781,0.2792969,0.1734375,-0.2648438,0,0.6445313,0.2792969,0.1734375,-0.2554688,0,0.6445313,0.2871094,0.1710937,-0.2671875,0,0.6425781,0.2773438,0.1734375,-0.253125,0,0.6445313,0.2890625,0.16875,-0.2695313,0,0.640625,0.2753906,0.159375,-0.2695313,0,0.6328125,0.2753906,0.1523438,-0.253125,0,0.6269531,0.2890625,0.1523438,-0.2671875,0,0.6269531,0.2773438,-0.4476563,0.075,0,0.1269531,0.5625,-0.5578125,0.075,0,0.03515625,0.5625,-0.43125,-0.2203125,0,0.140625,0.3164063,-0.35625,-0.271875,0,0.203125,0.2734375,-0.43125,-0.20625,0,0.140625,0.328125,-0.4523438,-0.2203125,0,0.1230469,0.3164063,-0.6,0.06796875,0,0,0.5566406,-0.6,-0.1617188,0,0,0.3652344,-0.4359375,-0.2039063,0,0.1367188,0.3300781,-0.45,-0.2039063,0,0.125,0.3300781,-0.4523438,-0.2085938,0,0.1230469,0.3261719,0.1101563,0.35625,0,0.5917969,0.796875,0.0984375,0.35625,0,0.5820313,0.796875,0.1101563,0.3421875,0,0.5917969,0.7851563,0.2390625,0.2601562,0,0.6992188,0.7167969,0.1242188,0.3304687,0,0.6035156,0.7753906,0.2390625,0.2554688,0,0.6992188,0.7128906,0.24375,0.2648438,0,0.703125,0.7207031,0.3117188,0.225,0,0.7597656,0.6875,0.2554688,0.2578125,0,0.7128906,0.7148438,0.2554688,0.2554688,0,0.7128906,0.7128906,0.2507813,0.2507813,0,0.7089844,0.7089844,0.2507813,0.225,0,0.7089844,0.6875,0.24375,0.2507813,0,0.703125,0.7089844,0.2578125,0.4570313,0,0.7148438,0.8808594,0.2460938,0.2953125,0,0.7050781,0.7460938,0.2578125,0.2882813,0,0.7148438,0.7402344,0.2414063,0.2953125,0,0.7011719,0.7460938,0.2367188,0.290625,0,0.6972656,0.7421875,0.215625,0.3257813,0,0.6796875,0.7714844,0.2367188,0.28125,0,0.6972656,0.734375,0.2085938,0.3375,0,0.6738281,0.78125,0.2015625,0.3351563,0,0.6679688,0.7792969,0.196875,0.4570313,0,0.6640625,0.8808594,0.2015625,0.328125,0,0.6679688,0.7734375,0.6,0.0328125,0,1,0.5273438,0.4945313,-0.05859375,0,0.9121094,0.4511719,0.6,-0.084375,0,1,0.4296875,0.4664063,0.103125,0,0.8886719,0.5859375,0.421875,-0.1101563,0,0.8515625,0.4082031,0.309375,0.1148438,0,0.7578125,0.5957031,0.28125,0.1335938,0,0.734375,0.6113281,0.2414063,0.178125,0,0.7011719,0.6484375,0.2671875,0.1875,0,0.7226563,0.65625,0.2273438,-0.1992188,0,0.6894531,0.3339844,0.225,0.178125,0,0.6875,0.6484375,0.140625,0.2953125,0,0.6171875,0.7460938,0.140625,0.2789063,0,0.6171875,0.7324219,0.1289063,0.2789063,0,0.6074219,0.7324219,0.121875,0.2835937,0,0.6015625,0.7363281,0.1078125,0.2976563,0,0.5898438,0.7480469,0.1171875,0.3351563,0,0.5976563,0.7792969,0.1054688,0.2882813,0,0.5878906,0.7402344,0.1007813,0.2789063,0,0.5839844,0.7324219,0.09375,0.2765625,0,0.578125,0.7304688,0.0890625,0.28125,0,0.5742188,0.734375,0.0796875,0.3117188,0,0.5664063,0.7597656,0.04453125,0.375,0,0.5371094,0.8125,-0.1171875,0.4453125,0,0.4023438,0.8710938,-0.13125,0.403125,0,0.390625,0.8359375,-0.1382813,0.4148438,0,0.3847656,0.8457031,-0.1382813,0.2484375,0,0.3847656,0.7070313,-0.1992188,0.2414063,0,0.3339844,0.7011719,-0.2085938,0.225,0,0.3261719,0.6875,-0.2085938,0.215625,0,0.3261719,0.6796875,-0.2226563,0.2132813,0,0.3144531,0.6777344,0.4664063,-0.1171875,0,0.8886719,0.4023438,0.3515625,-0.2671875,0,0.7929688,0.2773438,0.2671875,-0.2109375,0,0.7226563,0.3242188,0.2578125,-0.1945313,0,0.7148438,0.3378906,0.2554688,-0.2109375,0,0.7128906,0.3242188,0.2507813,-0.196875,0,0.7089844,0.3359375,0.3304687,0.2859375,0,0.7753906,0.7382813,0.3304687,0.225,0,0.7753906,0.6875,0.3117188,0.3773438,0,0.7597656,0.8144531,0.2578125,0.2789063,0,0.7148438,0.7324219,0.253125,0.2765625,0,0.7109375,0.7304688,0.253125,0.2625,0,0.7109375,0.71875,0.24375,0.2648438,0,0.703125,0.7207031,0.2390625,0.2765625,0,0.6992188,0.7304688,0.2085938,0.3210938,0,0.6738281,0.7675781,0.1171875,0.3539062,0,0.5976563,0.7949219,0.1125,0.35625,0,0.59375,0.796875,0.1101563,0.4078125,0,0.5917969,0.8398438,0.1101563,0.375,0,0.5917969,0.8125,0.3210938,0.2203125,0,0.7675781,0.6835938,0.3210938,0.1664063,0,0.7675781,0.6386719,0.3257813,0.2132813,0,0.7714844,0.6777344,0.3140625,0.1289063,0,0.7617188,0.6074219,0.3070312,0.1242188,0,0.7558594,0.6035156,0.3,0.1242188,0,0.75,0.6035156,0.2882813,0.2085938,0,0.7402344,0.6738281,0.2859375,0.2132813,0,0.7382813,0.6777344,0.2625,0.2132813,0,0.71875,0.6777344,0.225,0.1898438,0,0.6875,0.6582031,0.1359375,0.2976563,0,0.6132813,0.7480469,0.1265625,0.2976563,0,0.6054688,0.7480469,0.121875,0.2929688,0,0.6015625,0.7441406,0.2882813,0.2039063,0,0.7402344,0.6699219,0.1757813,-0.2484375,0,0.6464844,0.2929688,0.1007813,0.3023438,0,0.5839844,0.7519531,0.09140625,0.2929688,0,0.5761719,0.7441406,0.0796875,0.3234375,0,0.5664063,0.7695313,0.09375,0.346875,0,0.578125,0.7890625,-0.24375,0.4007813,0,0.296875,0.8339844,-0.2414063,0.3539062,0,0.2988281,0.7949219,-0.2414063,0.3890625,0,0.2988281,0.8242188,-0.2460938,0.403125,0,0.2949219,0.8359375,-0.253125,0.3539062,0,0.2890625,0.7949219,-0.2578125,0.403125,0,0.2851563,0.8359375,-0.2601562,0.3960938,0,0.2832031,0.8300781,-0.2601562,0.3609375,0,0.2832031,0.8007813,-0.1875,0.3773438,0,0.34375,0.8144531,-0.1804688,0.3609375,0,0.3496094,0.8007813,-0.1804688,0.3679688,0,0.3496094,0.8066406,-0.1875,0.3585938,0,0.34375,0.7988281,-0.2039063,0.3585938,0,0.3300781,0.7988281,-0.2109375,0.3773438,0,0.3242188,0.8144531,-0.2109375,0.365625,0,0.3242188,0.8046875,0.1171875,0.3375,0,0.5976563,0.78125,0.1171875,0.3351563,0,0.5976563,0.7792969,0.1007813,0.3820313,0,0.5839844,0.8183594,0.1078125,0.3820313,0,0.5898438,0.8183594,0.0984375,0.3632813,0,0.5820313,0.8027344,0.09609375,0.3632813,0,0.5800781,0.8027344,0.09140625,0.3726563,0,0.5761719,0.8105469,0.09140625,0.3679688,0,0.5761719,0.8066406,-0.178125,0.4195313,0,0.3515625,0.8496094,-0.1898438,0.4007813,0,0.3417969,0.8339844,-0.178125,0.4007813,0,0.3515625,0.8339844,-0.2039063,0.440625,0,0.3300781,0.8671875,-0.2226563,0.440625,0,0.3144531,0.8671875,-0.2226563,0.4265625,0,0.3144531,0.8554688,-0.2273438,0.46875,0,0.3105469,0.890625,-0.225,0.4453125,0,0.3125,0.8710938,-0.225,0.4664063,0,0.3125,0.8886719,-0.2273438,0.4359375,0,0.3105469,0.8632813,-0.2273438,0.4710938,0,0.3105469,0.8925781,-0.2296875,0.4710938,0,0.3085938,0.8925781,-0.234375,0.43125,0,0.3046875,0.859375,-0.2390625,0.4710938,0,0.3007813,0.8925781,-0.24375,0.4664063,0,0.296875,0.8886719,-0.2460938,0.43125,0,0.2949219,0.859375,-0.2507813,0.4453125,0,0.2910156,0.8710938,-0.2507813,0.4359375,0,0.2910156,0.8632813,-0.225,0.46875,0,0.3125,0.890625,-0.225,0.4898438,0,0.3125,0.9082031,-0.2296875,0.478125,0,0.3085938,0.8984375,-0.1617188,0.4757813,0,0.3652344,0.8964844,-0.1664063,0.4382813,0,0.3613281,0.8652344,-0.1617188,0.440625,0,0.3652344,0.8671875,-0.1710937,0.4382813,0,0.3574219,0.8652344,-0.1921875,0.4898438,0,0.3398438,0.9082031,-0.2085938,0.3140625,0,0.3261719,0.7617188,-0.2085938,0.290625,0,0.3261719,0.7421875,-0.1921875,0.2976563,0,0.3398438,0.7480469,-0.2015625,0.2859375,0,0.3320313,0.7382813,-0.1921875,0.2859375,0,0.3398438,0.7382813,-0.1992188,0.3257813,0,0.3339844,0.7714844,-0.1921875,0.3210938,0,0.3398438,0.7675781,-0.20625,0.3257813,0,0.328125,0.7714844,-0.2085938,0.3234375,0,0.3261719,0.7695313,-0.009375,-0.2601562,0,0.4921875,0.2832031,-0.0140625,-0.2742188,0,0.4882813,0.2714844,-0.00703125,-0.2671875,0,0.4941406,0.2773438,-0.1125,-0.2601562,0,0.40625,0.2832031,-0.1125,-0.2742188,0,0.40625,0.2714844,-0.1171875,-0.2648438,0,0.4023438,0.2792969,-0.1171875,-0.2695313,0,0.4023438,0.2753906,0.1007813,0.3070312,0,0.5839844,0.7558594,0.0890625,0.3070312,0,0.5742188,0.7558594,0.1125,-0.2578125,0,0.59375,0.2851563,0.1171875,-0.2671875,0,0.5976563,0.2773438,0.1171875,-0.2625,0,0.5976563,0.28125,0.1125,-0.271875,0,0.59375,0.2734375,0.09375,-0.2578125,0,0.578125,0.2851563,0.09375,-0.271875,0,0.578125,0.2734375,0.0890625,-0.2625,0,0.5742188,0.28125,0.0890625,-0.2671875,0,0.5742188,0.2773438,0.08671875,-0.2601562,0,0.5722656,0.2832031,0.08203125,-0.2742188,0,0.5683594,0.2714844,0.065625,-0.2742188,0,0.5546875,0.2714844,0.0609375,-0.2601562,0,0.5507813,0.2832031,0.05859375,-0.2671875,0,0.5488281,0.2773438,-0.1476562,0.3398438,0,0.3769531,0.7832031,-0.15,0.3445313,0,0.375,0.7871094,-0.1476562,0.3375,0,0.3769531,0.78125,-0.1453125,0.3328125,0,0.3789063,0.7773438,-0.1476562,0.3492188,0,0.3769531,0.7910156,-0.15,0.43125,0,0.375,0.859375,-0.15,0.3492188,0,0.375,0.7910156,-0.1570313,0.4359375,0,0.3691406,0.8632813,-0.1640625,0.4101563,0,0.3632813,0.8417969,-0.1664063,0.4335938,0,0.3613281,0.8613281,-0.1359375,0.4195313,0,0.3867188,0.8496094,-0.140625,0.4453125,0,0.3828125,0.8710938,-0.140625,0.4429688,0,0.3828125,0.8691406,-0.1570313,0.3492188,0,0.3691406,0.7910156,-0.1640625,0.328125,0,0.3632813,0.7734375,-0.1664063,0.346875,0,0.3613281,0.7890625,-0.178125,0.2835937,0,0.3515625,0.7363281,-0.1921875,0.253125,0,0.3398438,0.7109375,-0.140625,-0.2578125,0,0.3828125,0.2851563,-0.1429688,-0.271875,0,0.3808594,0.2734375,-0.140625,-0.2671875,0,0.3828125,0.2773438],[1,64,5,65,5,64,60,5,65,63,64,1,59,63,1,58,59,1,258,58,1,2,258,1,257,258,2,259,258,257,120,209,256,211,256,209,212,256,211,255,256,212,210,255,212,241,239,242,239,243,242,254,252,253,116,253,252,240,116,252,241,116,240,242,116,241,251,250,249,113,249,250,114,249,113,248,246,247,245,247,246,244,245,246,243,245,244,115,243,244,242,243,115,116,242,115,241,240,239,238,237,236,234,236,237,235,236,234,233,235,234,233,232,231,230,231,232,229,231,230,226,229,230,227,229,226,228,227,226,111,225,110,156,110,225,224,156,225,155,156,224,105,155,224,106,105,224,111,157,225,158,225,157,224,225,158,106,224,158,223,222,221,220,221,222,218,221,220,217,218,220,219,218,217,208,216,210,215,210,216,213,210,215,214,210,213,209,208,211,210,211,208,212,211,210,37,208,120,209,120,208,190,200,206,201,206,200,207,206,201,203,206,207,204,206,203,205,204,203,202,201,192,200,192,201,192,200,188,190,188,200,199,198,197,196,197,198,194,197,196,195,194,196,193,194,195,191,194,193,192,191,193,188,191,192,189,191,188,190,189,188,187,186,183,185,183,186,182,183,185,184,183,182,181,180,179,176,179,180,178,179,176,139,178,176,177,139,176,174,136,70,68,66,174,137,174,66,136,174,137,67,68,158,106,158,68,174,106,68,175,106,174,173,172,171,167,171,172,170,171,167,168,170,167,169,168,167,166,165,163,164,163,165,162,163,164,37,163,162,160,37,162,159,160,162,161,160,159,89,87,135,86,135,87,84,135,86,100,149,97,148,97,149,98,97,148,147,98,148,153,98,147,146,153,147,158,157,112,111,112,157,104,152,103,151,103,152,150,103,151,102,103,150,101,102,150,85,83,134,82,134,83,131,134,82,80,131,82,81,131,80,130,131,81,110,156,109,155,109,156,108,109,155,107,108,155,105,107,155,71,69,78,72,78,69,74,78,72,76,78,74,75,76,74,72,133,74,132,74,133,49,47,122,48,122,47,154,122,48,123,122,154,98,153,96,145,96,153,146,145,153,70,152,106,104,106,152,151,152,70,150,151,70,101,150,70,77,101,70,149,101,77,100,101,149,148,149,77,73,148,77,147,148,73,146,147,73,145,146,73,144,145,73,143,144,73,140,143,73,141,143,140,142,141,140,66,139,137,138,137,139,88,137,138,136,137,88,70,136,88,89,70,88,72,70,89,135,72,89,84,72,135,85,72,84,134,72,85,131,72,134,133,72,131,132,133,131,74,132,131,130,74,131,73,74,130,81,73,130,79,73,81,129,73,79,127,73,129,128,73,127,126,124,125,123,125,124,121,123,124,122,123,121,92,122,121,91,92,121,0,39,2,37,2,39,120,2,37,119,2,120,118,2,119,117,2,118,99,2,117,116,99,117,115,99,116,114,99,115,113,99,114,112,99,113,111,99,112,110,99,111,109,99,110,108,99,109,107,99,108,105,99,107,104,99,105,106,104,105,103,99,104,102,99,103,101,99,102,100,99,101,97,99,100,94,99,97,96,94,97,98,96,97,95,94,96,93,94,95,91,94,93,90,91,93,92,91,90,79,87,88,89,88,87,86,87,79,84,86,79,83,84,79,85,84,83,82,83,79,80,82,79,81,80,79,70,71,77,78,77,71,76,77,78,73,77,76,75,73,76,75,74,73,72,69,70,71,70,69,68,67,66,60,65,57,64,57,65,63,57,64,59,57,63,61,60,62,58,62,60,56,60,61,5,60,56,57,58,60,59,58,57,55,4,56,5,56,4,3,4,55,0,3,55,54,53,52,50,52,53,51,52,50,46,51,50,49,51,46,48,46,50,49,46,47,48,47,46,45,42,43,44,43,42,41,37,40,38,40,37,39,38,37,36,35,33,34,33,35,32,33,34,31,33,32,28,31,32,29,31,28,30,29,28,27,26,25,21,25,26,24,25,21,22,24,21,23,22,21,20,19,18,13,18,19,17,18,13,16,17,13,14,16,13,15,14,13,12,11,10,9,10,11,7,10,9,6,7,9,8,7,6,5,4,1,3,1,4,0,1,3,2,1,0],0,0,1,1,0,0,1,0.908203125,0,0,0,0,[0,0,0,0],[-0.6,-0.6,0.6,0.6],426.666656494141,512,512,512,512,256,256,0,0]},{"id":25740,"path":"Assets/Content/Sprites/Ingredients/ground beef.png","assetBundleId":-1,"data":["ground beef",6,25738,[0.007031247,0.005859375,0,0.3679687,0.3058594,0],[-0.1734375,0.3117188,0,0.3554688,0.7597656,-0.2414063,0.2554688,0,0.2988281,0.7128906,-0.234375,0.2554688,0,0.3046875,0.7128906,-0.2507813,0.2601562,0,0.2910156,0.7167969,-0.2554688,0.2648438,0,0.2871094,0.7207031,-0.2601562,0.2765625,0,0.2832031,0.7304688,-0.3609375,0.1078125,0,0.1992188,0.5898438,-0.3445313,-0.02578125,0,0.2128906,0.4785156,-0.3398438,0.2039063,0,0.2167969,0.6699219,-0.3609375,0.03984375,0,0.1992188,0.5332031,0.2601562,0.2484375,0,0.7167969,0.7070313,0.20625,0.2578125,0,0.671875,0.7148438,0.2179688,0.253125,0,0.6816406,0.7109375,0.1898438,0.2578125,0,0.6582031,0.7148438,0.1710937,0.3117188,0,0.6425781,0.7597656,0.1898438,0.253125,0,0.6582031,0.7109375,0.3585938,0.084375,0,0.7988281,0.5703125,0.3351563,-0.2625,0,0.7792969,0.28125,0.3585938,-0.05390625,0,0.7988281,0.4550781,0.3164063,-0.2882813,0,0.7636719,0.2597656,0.2179688,0.2414063,0,0.6816406,0.7011719,0.2109375,0.2390625,0,0.6757813,0.6992188,0.2109375,-0.3,0,0.6757813,0.25,0.2085938,0.2390625,0,0.6738281,0.6992188,0.1921875,0.2460938,0,0.6601563,0.7050781,0.0890625,0.2859375,0,0.5742188,0.7382813,0.0890625,0.2789063,0,0.5742188,0.7324219,0.08203125,0.2765625,0,0.5683594,0.7304688,0.0796875,0.2695313,0,0.5664063,0.7246094,0.0796875,0.2625,0,0.5664063,0.71875,0.07265625,0.2601562,0,0.5605469,0.7167969,0.06796875,0.2671875,0,0.5566406,0.7226563,0.05859375,0.2789063,0,0.5488281,0.7324219,0.05859375,0.2742188,0,0.5488281,0.7285156,0.05625,0.2695313,0,0.546875,0.7246094,0.04921875,0.2695313,0,0.5410156,0.7246094,0.0421875,0.2765625,0,0.5351563,0.7304688,-0.009375,0.3117188,0,0.4921875,0.7597656,-0.234375,-0.3,0,0.3046875,0.25,-0.2625,0.253125,0,0.28125,0.7109375,-0.3257813,-0.2695313,0,0.2285156,0.2753906,-0.3609375,-0.1078125,0,0.1992188,0.4101563,-0.3609375,-0.2203125,0,0.1992188,0.3164063,0.375,-0.1828125,0,0.8125,0.3476563,0.375,-0.1101563,0,0.8125,0.4082031,0.07265625,0.271875,0,0.5605469,0.7265625,0.07734375,0.2835937,0,0.5644531,0.7363281,0.08203125,0.3117188,0,0.5683594,0.7597656,0.08203125,0.2882813,0,0.5683594,0.7402344,0.0515625,0.2835937,0,0.5429688,0.7363281,0.046875,0.3023438,0,0.5390625,0.7519531,0.04453125,0.2835937,0,0.5371094,0.7363281],[36,51,35,49,35,51,34,35,49,32,34,49,33,34,32,46,48,27,26,27,48,25,26,48,37,50,36,51,36,50,49,51,50,47,49,50,32,49,47,31,32,47,45,31,47,46,45,47,48,46,47,25,48,47,14,25,47,45,46,28,27,28,46,31,45,30,29,30,45,28,29,45,15,13,24,11,24,13,23,24,11,12,23,11,21,23,12,20,21,12,17,18,43,44,43,18,42,41,40,7,40,41,8,40,7,39,40,8,38,40,39,1,38,39,2,38,1,22,38,2,0,22,2,37,22,0,36,22,37,35,22,36,34,22,35,33,22,34,32,22,33,31,22,32,30,22,31,29,22,30,28,22,29,27,22,28,26,22,27,25,22,26,14,22,25,15,22,14,24,22,15,23,22,24,21,22,23,19,22,21,20,19,21,12,19,20,10,19,12,16,19,10,17,19,16,18,17,16,10,11,14,13,14,11,15,14,13,12,11,10,9,6,7,8,7,6,5,0,4,3,4,0,1,3,0,2,1,0],-0.0000838041305541992,-0.0000838041305541992,0.999916195869446,0.999916195869446,0.19921875,0.25,0.8125,0.759765625,0,0,0,0,[0,0,0,0],[-0.6,-0.6,0.6,0.6],426.666656494141,512,512,512,512,256,256,102.042907714844,128.042907714844]},{"id":25830,"path":"Assets/Content/Sprites/Ingredients/raspberry jam.png","assetBundleId":-1,"data":["raspberry jam",6,25828,[-0.01523437,0.007031247,0,0.4042969,0.3984375,0],[-0.4148438,0.1757813,0,0.1542969,0.6464844,-0.3773438,0.09140625,0,0.1855469,0.5761719,-0.375,0.2039063,0,0.1875,0.6699219,-0.4195313,0.1617188,0,0.1503906,0.6347656,-0.4195313,0.1476562,0,0.1503906,0.6230469,-0.3398438,-0.1898438,0,0.2167969,0.3417969,-0.3421875,-0.1992188,0,0.2148438,0.3339844,-0.3398438,-0.196875,0,0.2167969,0.3359375,-0.3445313,-0.178125,0,0.2128906,0.3515625,-0.35625,-0.1734375,0,0.203125,0.3554688,-0.35625,-0.1992188,0,0.203125,0.3339844,-0.3726563,-0.1921875,0,0.1894531,0.3398438,-0.3773438,-0.1734375,0,0.1855469,0.3554688,-0.3773438,-0.1828125,0,0.1855469,0.3476563,-0.3398438,-0.1804688,0,0.2167969,0.3496094,-0.31875,0.2320313,0,0.234375,0.6933594,-0.365625,-0.13125,0,0.1953125,0.390625,-0.3773438,-0.0703125,0,0.1855469,0.4414063,0.3890625,0.1664063,0,0.8242188,0.6386719,0.3867188,0.1335938,0,0.8222656,0.6113281,0.3890625,0.1359375,0,0.8242188,0.6132813,0.3796875,0.1945313,0,0.8164063,0.6621094,0.328125,0.07734375,0,0.7734375,0.5644531,0.3210938,0.2132813,0,0.7675781,0.6777344,0.346875,-0.01640625,0,0.7890625,0.4863281,0.3304687,-0.15,0,0.7753906,0.375,0.3492188,-0.05625,0,0.7910156,0.453125,0.271875,-0.2601562,0,0.7265625,0.2832031,0.2625,0.3492188,0,0.71875,0.7910156,0.24375,0.375,0,0.703125,0.8125,0.234375,-0.309375,0,0.6953125,0.2421875,0.1945313,-0.3515625,0,0.6621094,0.2070313,0.1875,0.4007813,0,0.65625,0.8339844,0.1429688,0.4054688,0,0.6191406,0.8378906,0.1382813,-0.3796875,0,0.6152344,0.1835938,0.07265625,-0.3914063,0,0.5605469,0.1738281,-0.1242188,-0.3914063,0,0.3964844,0.1738281,-0.15,0.4054688,0,0.375,0.8378906,-0.2015625,-0.3609375,0,0.3320313,0.1992188,-0.234375,-0.3375,0,0.3046875,0.21875,-0.2742188,-0.2953125,0,0.2714844,0.2539063,-0.2765625,0.384375,0,0.2695313,0.8203125,-0.2976563,0.3515625,0,0.2519531,0.7929688,-0.3,0.3046875,0,0.25,0.7539063,-0.3164063,-0.2414063,0,0.2363281,0.2988281],[5,14,44,15,44,14,43,44,15,40,44,43,42,40,43,41,40,42,37,40,41,39,40,37,38,39,37,36,38,37,33,36,37,35,36,33,34,35,33,31,34,33,32,31,33,29,31,32,30,31,29,27,30,29,28,27,29,23,27,28,25,27,23,22,25,23,24,25,22,26,25,24,23,21,22,19,22,21,18,19,21,20,19,18,17,1,16,2,16,1,15,16,2,8,16,15,14,8,15,5,8,14,13,12,11,9,11,12,10,11,9,6,10,9,8,6,9,5,6,8,7,6,5,4,3,1,0,1,3,2,1,0],-0.0000172853469848633,-0.000148668885231018,0.999982714653015,0.99985134601593,0.150390625,0.173828125,0.82421875,0.837890625,0,0,0,0,[0,0,0,0],[-0.6,-0.6,0.6,0.6],426.666656494141,512,512,512,512,256,256,77.0088500976563,89.0761184692383]},{"id":25792,"path":"Assets/Content/Sprites/Ingredients/permasan.png","assetBundleId":-1,"data":["permasan",6,25790,[0.01406249,-0.004687503,0,0.4757813,0.2484375,0],[0.3304687,0.1875,0,0.7753906,0.65625,0.4898438,-0.2414063,0,0.9082031,0.2988281,0.4898438,-0.121875,0,0.9082031,0.3984375,0.3304687,-0.253125,0,0.7753906,0.2890625,0.05859375,-0.103125,0,0.5488281,0.4140625,0.05390625,-0.08671875,0,0.5449219,0.4277344,0.0421875,-0.1125,0,0.5351563,0.40625,0.028125,-0.13125,0,0.5234375,0.390625,0.0375,-0.121875,0,0.53125,0.3984375,0.02578125,-0.1335938,0,0.5214844,0.3886719,0.02109375,-0.1382813,0,0.5175781,0.3847656,0.00703125,-0.1453125,0,0.5058594,0.3789063,0.0046875,-0.1453125,0,0.5039063,0.3789063,-0.01171875,-0.1523438,0,0.4902344,0.3730469,-0.0140625,-0.1523438,0,0.4882813,0.3730469,-0.028125,-0.159375,0,0.4765625,0.3671875,-0.1335938,0.24375,0,0.3886719,0.703125,-0.234375,-0.253125,0,0.3046875,0.2890625,-0.290625,-0.253125,0,0.2578125,0.2890625,-0.3328125,-0.2507813,0,0.2226563,0.2910156,-0.4617188,0.24375,0,0.1152344,0.703125,-0.4617188,-0.01640625,0,0.1152344,0.4863281,0.03984375,-0.253125,0,0.5332031,0.2890625,0.0375,-0.1242188,0,0.53125,0.3964844,0.009375,-0.1453125,0,0.5078125,0.3789063,-0.009375,-0.1523438,0,0.4921875,0.3730469,-0.01640625,-0.1546875,0,0.4863281,0.3710938,-0.02109375,-0.159375,0,0.4824219,0.3671875,-0.0328125,-0.1828125,0,0.4726563,0.3476563],[13,12,25,11,25,12,23,7,8,28,27,22,26,22,27,13,22,26,25,22,13,11,22,25,24,22,11,10,22,24,7,22,10,23,22,7,8,22,23,4,22,8,3,22,4,21,20,19,16,19,20,18,19,16,17,18,16,15,17,16,0,15,16,14,15,0,5,14,0,13,14,5,12,13,5,11,12,5,10,11,5,9,10,5,7,9,5,6,7,5,8,7,6,4,5,0,3,4,0,1,3,0,2,1,0],-0.000148676335811615,-0.000148683786392212,0.99985134601593,0.99985134601593,0.115234375,0.2890625,0.908203125,0.703125,0,0,0,0,[0,0,0,0],[-0.6,-0.6,0.6,0.6],426.666656494141,512,512,512,512,256,256,59.0761222839355,148.076126098633]},{"id":25956,"path":"Assets/Content/Sprites/Ingredients/béchamel sauce.png","assetBundleId":-1,"data":["béchamel sauce",6,25954,[-0.07617188,-0.1019531,0,0.4582031,0.3785156,0],[0.02578125,-0.4617188,0,0.5214844,0.1152344,0.028125,-0.478125,0,0.5234375,0.1015625,0.028125,-0.46875,0,0.5234375,0.109375,0.0234375,-0.4804688,0,0.5195313,0.09960938,0.01640625,-0.4617188,0,0.5136719,0.1152344,0.01171875,-0.4804688,0,0.5097656,0.09960938,0.009375,-0.4640625,0,0.5078125,0.1132813,0.009375,-0.4734375,0,0.5078125,0.1054688,0.3820313,0.1195313,0,0.8183594,0.5996094,0.3726563,-0.0046875,0,0.8105469,0.4960938,0.3820313,0.0375,0,0.8183594,0.53125,0.2953125,0.1945313,0,0.7460938,0.6621094,0.2882813,-0.2085938,0,0.7402344,0.3261719,0.2671875,-0.2460938,0,0.7226563,0.2949219,0.2320313,0.2203125,0,0.6933594,0.6835938,0.1992188,-0.3,0,0.6660156,0.25,0.08671875,-0.3304687,0,0.5722656,0.2246094,0.07265625,0.2460938,0,0.5605469,0.7050781,-0.0140625,0.2648438,0,0.4882813,0.7207031,-0.0328125,0.2765625,0,0.4726563,0.7304688,-0.0703125,-0.3304687,0,0.4414063,0.2246094,-0.08203125,0.2765625,0,0.4316406,0.7304688,-0.1078125,0.2671875,0,0.4101563,0.7226563,-0.13125,-0.31875,0,0.390625,0.234375,-0.1757813,0.234375,0,0.3535156,0.6953125,-0.1921875,-0.2976563,0,0.3398438,0.2519531,-0.24375,-0.2671875,0,0.296875,0.2773438,-0.2859375,-0.2203125,0,0.2617188,0.3164063,-0.3210938,0.1875,0,0.2324219,0.65625,-0.3632813,0.1429688,0,0.1972656,0.6191406,-0.3703125,-0.0375,0,0.1914063,0.46875,-0.3867188,0.1101563,0,0.1777344,0.5917969,-0.3867188,0.04453125,0,0.1777344,0.5371094,-0.4992188,-0.24375,0,0.08398438,0.296875,-0.5039063,-0.2601562,0,0.08007813,0.2832031,-0.4992188,-0.2507813,0,0.08398438,0.2910156,-0.50625,-0.2367188,0,0.078125,0.3027344,-0.5320312,-0.2367188,0,0.05664065,0.3027344,-0.5320312,-0.2601562,0,0.05664065,0.2832031,-0.534375,-0.2390625,0,0.0546875,0.3007813,-0.534375,-0.2578125,0,0.0546875,0.2851563],[40,39,38,37,38,39,34,38,37,36,34,37,33,34,36,35,34,33,32,31,30,29,30,31,27,30,29,28,27,29,24,27,28,26,27,24,25,26,24,23,25,24,22,23,24,20,23,22,21,20,22,19,20,21,16,20,19,18,16,19,17,16,18,14,16,17,15,16,14,13,15,14,11,13,14,12,13,11,9,12,11,8,9,11,10,9,8,7,6,5,4,5,6,3,5,4,0,3,4,1,3,0,2,1,0],-0.000148672610521317,-0.000148676335811615,0.99985134601593,0.99985134601593,0.0546875,0.099609375,0.818359375,0.73046875,0,0,0,0,[0,0,0,0],[-0.6,-0.6,0.6,0.6],426.666656494141,512,512,512,512,256,256,28.0761203765869,51.0761222839355]},{"id":25836,"path":"Assets/Content/Sprites/Tiles/Special/tile_ice_2.png","assetBundleId":-1,"data":["tile_ice_2",6,25834,[0,0,0,0.5155556,0.5688889,0],[0.5155556,0.2266667,0,0.953125,0.6992188,0.3955556,-0.56,0,0.8476563,0.0078125,0.5155556,-0.3822222,0,0.953125,0.1640625,0.3688889,-0.5688889,0,0.8242188,0,0.1688889,0.3511111,0,0.6484375,0.8085938,-0.3555556,-0.5688889,0,0.1875,0,-0.3822222,0.3511111,0,0.1640625,0.8085938,-0.5155556,0.1022222,0,0.046875,0.5898438,-0.5155556,-0.4444444,0,0.046875,0.109375,-0.3288889,0.5688889,0,0.2109375,1,-0.2088889,0.5511111,0,0.3164063,0.984375,-0.2088889,0.5688889,0,0.3164063,1,-0.4844444,0.2622222,0,0.07421875,0.7304688,-0.5111111,0.4577778,0,0.05078122,0.9023438,-0.5155556,0.4266667,0,0.046875,0.875,-0.5155556,0.2622222,0,0.046875,0.7304688,0.4488889,0.4533333,0,0.8945313,0.8984375,0.44,0.4533333,0,0.8867188,0.8984375,0.44,0.4488889,0,0.8867188,0.8945313,0.48,0.44,0,0.921875,0.8867188,0.4622222,0.4,0,0.90625,0.8515625,0.48,0.4,0,0.921875,0.8515625,0.4533333,0.4533333,0,0.8984375,0.8984375,0.4488889,0.4666667,0,0.8945313,0.9101563,0.44,0.4311111,0,0.8867188,0.8789063,0.4355555,0.4711111,0,0.8828125,0.9140625,0.4355555,0.4488889,0,0.8828125,0.8945313,0.4266667,0.4622222,0,0.875,0.90625,0.4044445,0.5111111,0,0.8554688,0.9492188,0.3911111,0.4888889,0,0.84375,0.9296875,0.4044445,0.4933333,0,0.8554688,0.9335938,0.3777778,0.5377778,0,0.8320313,0.9726563,0.3111111,0.5688889,0,0.7734375,1,0.2133333,0.5555556,0,0.6875,0.9882813,0.2088889,0.5688889,0,0.6835938,1],[34,32,33,29,33,32,31,29,32,28,29,31,30,29,28,27,25,26,18,26,25,17,18,25,23,17,25,16,17,23,24,18,20,16,20,18,23,20,16,22,20,23,19,20,22,21,20,19,18,17,16,15,14,12,13,12,14,9,12,13,10,12,9,11,10,9,8,7,5,6,5,7,4,5,6,3,5,4,0,3,4,1,3,0,2,1,0],-0.000297345221042633,0,0.999702632427216,1,0.046875,0,0.953125,1,0,0,0,0,[0,0,0,0],[-0.5688889,-0.5688889,0.5688889,0.5688889],225,256,256,256,256,128,128,12.0761203765869,0]},{"id":26044,"path":"Assets/Content/Sprites/Ingredients/tortillas.png","assetBundleId":-1,"data":["tortillas",6,26042,[0.01875001,0.01640625,0,0.4054688,0.2296875,0],[0.02109375,0.2460938,0,0.5175781,0.7050781,0.0328125,0.2179688,0,0.5273438,0.6816406,0.08203125,0.2460938,0,0.5683594,0.7050781,0.01640625,0.2226563,0,0.5136719,0.6855469,0.00703125,0.2414063,0,0.5058594,0.7011719,0.4242188,0.04921875,0,0.8535156,0.5410156,0.3820313,-0.1640625,0,0.8183594,0.3632813,0.4242188,-0.08203125,0,0.8535156,0.4316406,0.2835937,0.16875,0,0.7363281,0.640625,0.1289063,-0.2132813,0,0.6074219,0.3222656,0.1078125,0.2390625,0,0.5898438,0.6992188,0.0234375,0.2132813,0,0.5195313,0.6777344,-0.01171875,0.2390625,0,0.4902344,0.6992188,-0.0328125,0.2460938,0,0.4726563,0.7050781,-0.075,0.2460938,0,0.4375,0.7050781,-0.140625,-0.2132813,0,0.3828125,0.3222656,-0.1476562,0.2414063,0,0.3769531,0.7011719,-0.178125,0.225,0,0.3515625,0.6875,-0.3140625,0.1570313,0,0.2382813,0.6308594,-0.3328125,-0.1546875,0,0.2226563,0.3710938,-0.3421875,0.1242188,0,0.2148438,0.6035156,-0.384375,0.046875,0,0.1796875,0.5390625,-0.3867188,0.0375,0,0.1777344,0.53125,-0.3867188,-0.05859375,0,0.1777344,0.4511719],[23,22,19,21,19,22,20,19,21,18,19,20,15,19,18,17,15,18,16,15,17,14,15,16,9,15,14,13,9,14,12,9,13,11,9,12,1,9,11,2,9,1,10,9,2,8,9,10,6,9,8,5,6,8,7,6,5,4,0,3,1,3,0,2,1,0],-0.000148668885231018,-0.000148683786392212,0.99985134601593,0.99985134601593,0.177734375,0.322265625,0.853515625,0.705078125,0,0,0,0,[0,0,0,0],[-0.6,-0.6,0.6,0.6],426.666656494141,512,512,512,512,256,256,91.0761184692383,165.076126098633]},{"id":26012,"path":"Assets/Content/Sprites/Ingredients/walnut.png","assetBundleId":-1,"data":["walnut",6,26010,[0,-0.0234375,0,0.6,0.553125,0],[0.590625,-0.4148438,0,0.9921875,0.1542969,0.6,-0.4289063,0,1,0.1425781,0.6,-0.4125,0,1,0.15625,0.5859375,-0.4289063,0,0.9882813,0.1425781,0.5835938,-0.421875,0,0.9863281,0.1484375,0.515625,-0.5273438,0,0.9296875,0.06054688,0.5179688,-0.5507813,0,0.9316406,0.04101563,0.5179688,-0.534375,0,0.9316406,0.0546875,0.4804688,-0.5273438,0,0.9003906,0.06054688,0.3960938,-0.5320312,0,0.8300781,0.05664065,0.3726563,-0.5765625,0,0.8105469,0.01953125,0.3351563,-0.5578125,0,0.7792969,0.03515625,0.3351563,-0.5765625,0,0.7792969,0.01953125,0.5367188,-0.515625,0,0.9472656,0.0703125,0.5601563,-0.5273438,0,0.9667969,0.06054688,0.5601563,-0.515625,0,0.9667969,0.0703125,0.5320312,-0.5179688,0,0.9433594,0.06835938,0.5320312,-0.5273438,0,0.9433594,0.06054688,0.5882813,-0.4734375,0,0.9902344,0.1054688,0.6,-0.496875,0,1,0.0859375,0.6,-0.4734375,0,1,0.1054688,0.553125,-0.4757813,0,0.9609375,0.1035156,0.5484375,-0.496875,0,0.9570313,0.0859375,0.5460938,-0.4875,0,0.9550781,0.09375,-0.178125,-0.4335938,0,0.3515625,0.1386719,-0.1875,-0.4476563,0,0.34375,0.1269531,-0.178125,-0.4476563,0,0.3515625,0.1269531,-0.1921875,-0.4335938,0,0.3398438,0.1386719,-0.1921875,-0.4453125,0,0.3398438,0.1289063,0.1523438,-0.4265625,0,0.6269531,0.1445313,0.159375,-0.4359375,0,0.6328125,0.1367188,0.159375,-0.4289063,0,0.6328125,0.1425781,0.1523438,-0.4382813,0,0.6269531,0.1347656,0.1476562,-0.43125,0,0.6230469,0.140625,-0.0234375,-0.2578125,0,0.4804688,0.2851563,-0.02109375,-0.271875,0,0.4824219,0.2734375,-0.02109375,-0.2648438,0,0.4824219,0.2792969,-0.06796875,-0.2578125,0,0.4433594,0.2851563,-0.07265625,-0.2625,0,0.4394531,0.28125,-0.07265625,-0.271875,0,0.4394531,0.2734375,0.1757813,-0.1945313,0,0.6464844,0.3378906,0.1734375,-0.2625,0,0.6445313,0.28125,0.215625,-0.2625,0,0.6796875,0.28125,0.1710937,-0.2484375,0,0.6425781,0.2929688,0.1242188,-0.271875,0,0.6035156,0.2734375,0.1710937,-0.2648438,0,0.6425781,0.2792969,0.04453125,-0.271875,0,0.5371094,0.2734375,0.03984375,-0.2484375,0,0.5332031,0.2929688,0.03984375,-0.2695313,0,0.5332031,0.2753906,-0.1476562,-0.2554688,0,0.3769531,0.2871094,-0.1429688,-0.2648438,0,0.3808594,0.2792969,-0.1429688,-0.2601562,0,0.3808594,0.2832031,-0.1476562,-0.2695313,0,0.3769531,0.2753906,-0.1523438,-0.2695313,0,0.3730469,0.2753906,-0.1546875,-0.2554688,0,0.3710938,0.2871094,-0.159375,-0.2601562,0,0.3671875,0.2832031,-0.159375,-0.2625,0,0.3671875,0.28125,-0.0984375,-0.2554688,0,0.4179688,0.2871094,-0.103125,-0.2695313,0,0.4140625,0.2753906,-0.09609375,-0.2625,0,0.4199219,0.28125,-0.1195313,-0.2554688,0,0.4003906,0.2871094,-0.1195313,-0.2695313,0,0.4003906,0.2753906,-0.1242188,-0.2601562,0,0.3964844,0.2832031,-0.1242188,-0.2648438,0,0.3964844,0.2792969,-0.009375,-0.1875,0,0.4921875,0.34375,-0.00703125,-0.196875,0,0.4941406,0.3359375,-0.00703125,-0.1898438,0,0.4941406,0.3417969,-0.01640625,-0.2015625,0,0.4863281,0.3320313,-0.06796875,-0.2015625,0,0.4433594,0.3320313,-0.0703125,-0.1875,0,0.4414063,0.34375,-0.0703125,-0.196875,0,0.4414063,0.3359375,-0.1945313,-0.1804688,0,0.3378906,0.3496094,-0.1898438,-0.1898438,0,0.3417969,0.3417969,-0.1898438,-0.1851563,0,0.3417969,0.3457031,-0.1945313,-0.1945313,0,0.3378906,0.3378906,-0.20625,-0.1804688,0,0.328125,0.3496094,-0.20625,-0.1945313,0,0.328125,0.3378906,-0.2109375,-0.1851563,0,0.3242188,0.3457031,-0.2109375,-0.1898438,0,0.3242188,0.3417969,0.1171875,-0.1804688,0,0.5976563,0.3496094,0.121875,-0.1898438,0,0.6015625,0.3417969,0.121875,-0.1851563,0,0.6015625,0.3457031,0.1171875,-0.1945313,0,0.5976563,0.3378906,0.103125,-0.1804688,0,0.5859375,0.3496094,0.103125,-0.1945313,0,0.5859375,0.3378906,0.0984375,-0.1851563,0,0.5820313,0.3457031,0.0984375,-0.1898438,0,0.5820313,0.3417969,-0.5320312,-0.0234375,0,0.05664065,0.4804688,-0.6,-0.0234375,0,0,0.4804688,-0.5320312,-0.04453125,0,0.05664065,0.4628906,-0.5953125,-0.00703125,0,0.00390622,0.4941406,-0.5882813,-0.01640625,0,0.009765625,0.4863281,-0.5882813,-0.009375,0,0.009765625,0.4921875,-0.5953125,-0.01875,0,0.00390622,0.484375,-0.6,-0.01171875,0,0,0.4902344,-0.58125,0.0140625,0,0.015625,0.5117188,-0.5765625,0.0046875,0,0.01953125,0.5039063,-0.5765625,0.01171875,0,0.01953125,0.5097656,-0.5835938,-0.0046875,0,0.01367185,0.4960938,-0.5882813,0.01171875,0,0.009765625,0.5097656,-0.5882813,-0.0046875,0,0.009765625,0.4960938,-0.5929688,0,0,0.005859375,0.5,0.4664063,-0.159375,0,0.8886719,0.3671875,0.4335938,-0.1757813,0,0.8613281,0.3535156,0.4640625,-0.1757813,0,0.8867188,0.3535156,-0.24375,-0.1757813,0,0.296875,0.3535156,-0.253125,-0.1757813,0,0.2890625,0.3535156,-0.24375,-0.1757813,0,0.296875,0.3535156,-0.384375,-0.1757813,0,0.1796875,0.3535156,-0.5039063,-0.0234375,0,0.08007813,0.4804688,-0.2578125,-0.1804688,0,0.2851563,0.3496094,-0.3515625,-0.2671875,0,0.2070313,0.2773438,-0.2578125,-0.1851563,0,0.2851563,0.3457031,-0.6,-0.1148438,0,0,0.4042969,-0.234375,0.3304687,0,0.3046875,0.7753906,-0.2367188,0.196875,0,0.3027344,0.6640625,-0.234375,0.2039063,0,0.3046875,0.6699219,-0.2414063,0.1898438,0,0.2988281,0.6582031,-0.2414063,0.1570313,0,0.2988281,0.6308594,-0.5320312,0.1265625,0,0.05664065,0.6054688,-0.2203125,0.1992188,0,0.3164063,0.6660156,-0.2179688,0.1898438,0,0.3183594,0.6582031,-0.2179688,0.196875,0,0.3183594,0.6640625,-0.2273438,0.1992188,0,0.3105469,0.6660156,-0.1992188,0.3351563,0,0.3339844,0.7792969,-0.196875,0.3234375,0,0.3359375,0.7695313,-0.1921875,0.3234375,0,0.3398438,0.7695313,-0.1992188,0.328125,0,0.3339844,0.7734375,-0.1992188,0.35625,0,0.3339844,0.796875,-0.1851563,0.3632813,0,0.3457031,0.8027344,-0.1921875,0.3632813,0,0.3398438,0.8027344,-0.1992188,0.3539062,0,0.3339844,0.7949219,-0.1898438,0.3210938,0,0.3417969,0.7675781,-0.1828125,0.290625,0,0.3476563,0.7421875,-0.1828125,0.3117188,0,0.3476563,0.7597656,-0.1898438,0.2882813,0,0.3417969,0.7402344,-0.2085938,0.3492188,0,0.3261719,0.7910156,-0.2085938,0.3070312,0,0.3261719,0.7558594,-0.1617188,-0.1828125,0,0.3652344,0.3476563,-0.1570313,-0.1921875,0,0.3691406,0.3398438,-0.1570313,-0.1875,0,0.3691406,0.34375,-0.1617188,-0.196875,0,0.3652344,0.3359375,-0.1757813,-0.196875,0,0.3535156,0.3359375,-0.178125,-0.1828125,0,0.3515625,0.3476563,-0.1828125,-0.1875,0,0.3476563,0.34375,-0.1828125,-0.1898438,0,0.3476563,0.3417969,-0.1898438,0.3234375,0,0.3417969,0.7695313,-0.1828125,0.3257813,0,0.3476563,0.7714844,-0.1546875,0.384375,0,0.3710938,0.8203125,-0.1828125,0.3515625,0,0.3476563,0.7929688,-0.1664063,0.2367188,0,0.3613281,0.6972656,-0.1851563,0.3632813,0,0.3457031,0.8027344,-0.1265625,0.4546875,0,0.3945313,0.8789063,-0.1382813,0.3867188,0,0.3847656,0.8222656,-0.1359375,0.365625,0,0.3867188,0.8046875,-0.140625,0.3890625,0,0.3828125,0.8242188,-0.1429688,0.403125,0,0.3808594,0.8359375,-0.1476562,0.4757813,0,0.3769531,0.8964844,-0.1476562,0.4382813,0,0.3769531,0.8652344,-0.1523438,0.45,0,0.3730469,0.875,-0.1546875,0.4734375,0,0.3710938,0.8945313,-0.1570313,0.4640625,0,0.3691406,0.8867188,-0.13125,0.4828125,0,0.390625,0.9023438,-0.1242188,0.4617188,0,0.3964844,0.8847656,-0.1148438,0.4828125,0,0.4042969,0.9023438,-0.1335938,0.4710938,0,0.3886719,0.8925781,-0.1382813,0.375,0,0.3847656,0.8125,0.09140625,0.3515625,0,0.5761719,0.7929688,0.0984375,0.3445313,0,0.5820313,0.7871094,0.09609375,0.3492188,0,0.5800781,0.7910156,0.09140625,0.346875,0,0.5761719,0.7890625,0.1289063,0.39375,0,0.6074219,0.828125,0.1148438,0.3445313,0,0.5957031,0.7871094,0.1289063,0.3679688,0,0.6074219,0.8066406,0.1101563,0.39375,0,0.5917969,0.828125,0.0984375,0.3445313,0,0.5820313,0.7871094,0.09140625,0.35625,0,0.5761719,0.796875,0.1007813,0.3351563,0,0.5839844,0.7792969,0.06328125,0.2789063,0,0.5527344,0.7324219,0.09140625,-0.1828125,0,0.5761719,0.3476563,0.09609375,-0.1921875,0,0.5800781,0.3398438,0.09609375,-0.1875,0,0.5800781,0.34375,0.09140625,-0.196875,0,0.5761719,0.3359375,0.07265625,-0.1828125,0,0.5605469,0.3476563,0.07265625,-0.196875,0,0.5605469,0.3359375,0.06796875,-0.1875,0,0.5566406,0.34375,0.06796875,-0.1921875,0,0.5566406,0.3398438,0.05859375,-0.1851563,0,0.5488281,0.3457031,0.04921875,-0.1992188,0,0.5410156,0.3339844,0.0609375,-0.1921875,0,0.5507813,0.3398438,0.03046875,-0.1992188,0,0.5253906,0.3339844,0.02578125,-0.1851563,0,0.5214844,0.3457031,0.0234375,-0.1921875,0,0.5195313,0.3398438,-0.1921875,0.2671875,0,0.3398438,0.7226563,-0.1992188,0.2601562,0,0.3339844,0.7167969,-0.1992188,0.2460938,0,0.3339844,0.7050781,-0.1804688,0.1757813,0,0.3496094,0.6464844,-0.1664063,0.1945313,0,0.3613281,0.6621094,-0.1992188,0.1757813,0,0.3339844,0.6464844,-0.2179688,-0.1898438,0,0.3183594,0.3417969,-0.2320313,-0.1921875,0,0.3066406,0.3398438,-0.2203125,-0.1921875,0,0.3164063,0.3398438,-0.234375,-0.1804688,0,0.3046875,0.3496094,-0.2367188,-0.1828125,0,0.3027344,0.3476563,-0.2367188,-0.1875,0,0.3027344,0.34375,-0.2296875,0.3703125,0,0.3085938,0.8085938,-0.2203125,0.3679688,0,0.3164063,0.8066406,-0.234375,0.3679688,0,0.3046875,0.8066406,-0.215625,-0.1828125,0,0.3203125,0.3476563,-0.215625,-0.1875,0,0.3203125,0.34375,-0.2203125,-0.178125,0,0.3164063,0.3515625,-0.2320313,-0.178125,0,0.3066406,0.3515625,-0.2203125,0.1640625,0,0.3164063,0.6367188,-0.2179688,0.1828125,0,0.3183594,0.6523438,-0.2296875,0.1992188,0,0.3085938,0.6660156,-0.2320313,0.1570313,0,0.3066406,0.6308594,-0.159375,-0.253125,0,0.3671875,0.2890625,-0.159375,-0.2671875,0,0.3671875,0.2773438,-0.1617188,-0.2507813,0,0.3652344,0.2910156,-0.215625,-0.1921875,0,0.3203125,0.3398438,-0.2390625,-0.1851563,0,0.3007813,0.3457031,-0.2390625,-0.1804688,0,0.3007813,0.3496094,-0.24375,-0.1898438,0,0.296875,0.3417969,-0.253125,-0.1898438,0,0.2890625,0.3417969,-0.5953125,0.09140625,0,0.00390622,0.5761719,-0.5882813,0.084375,0,0.009765625,0.5703125,-0.5882813,0.0890625,0,0.009765625,0.5742188,-0.5953125,0.07734375,0,0.00390622,0.5644531,-0.6,0.0890625,0,0,0.5742188,-0.6,0.07734375,0,0,0.5644531,-0.5648438,0.09609375,0,0.02929688,0.5800781,-0.5671875,0.084375,0,0.02734378,0.5703125,-0.5625,0.0890625,0,0.03125,0.5742188,-0.571875,0.09609375,0,0.02343747,0.5800781,-0.5742188,0.084375,0,0.02148438,0.5703125,-0.5765625,0.09140625,0,0.01953125,0.5761719,0.1476562,-0.178125,0,0.6230469,0.3515625,0.1523438,-0.1875,0,0.6269531,0.34375,0.1523438,-0.1828125,0,0.6269531,0.3476563,0.1476562,-0.1921875,0,0.6230469,0.3398438,0.13125,-0.178125,0,0.609375,0.3515625,0.13125,-0.1921875,0,0.609375,0.3398438,0.1265625,-0.1828125,0,0.6054688,0.3476563,0.1265625,-0.1875,0,0.6054688,0.34375,0.1054688,0.3,0,0.5878906,0.75,0.103125,0.28125,0,0.5859375,0.734375,0.1054688,0.2859375,0,0.5878906,0.7382813,0.09609375,0.3070312,0,0.5800781,0.7558594,0.09375,0.28125,0,0.578125,0.734375,0.0890625,0.3046875,0,0.5742188,0.7539063,0.0890625,0.2929688,0,0.5742188,0.7441406,0.2625,0.2859375,0,0.71875,0.7382813,0.253125,0.2882813,0,0.7109375,0.7402344,0.2578125,0.2859375,0,0.7148438,0.7382813,0.2507813,0.2953125,0,0.7089844,0.7460938,0.2695313,0.2953125,0,0.7246094,0.7460938,0.2671875,0.2859375,0,0.7226563,0.7382813,0.2695313,0.290625,0,0.7246094,0.7421875,0.2625,0.3,0,0.71875,0.75,0.2554688,0.3,0,0.7128906,0.75,0.2507813,0.2953125,0,0.7089844,0.7460938,0.2695313,0.3140625,0,0.7246094,0.7617188,0.253125,0.3140625,0,0.7109375,0.7617188,0.2507813,0.31875,0,0.7089844,0.765625,0.3398438,0.2695313,0,0.7832031,0.7246094,0.346875,0.2601562,0,0.7890625,0.7167969,0.346875,0.2625,0,0.7890625,0.71875,0.328125,0.2601562,0,0.7734375,0.7167969,0.271875,0.31875,0,0.7265625,0.765625,0.2929688,0.2601562,0,0.7441406,0.7167969,0.271875,0.3257813,0,0.7265625,0.7714844,0.0515625,0.271875,0,0.5429688,0.7265625,0.01875,0.2554688,0,0.515625,0.7128906,-0.0046875,0.31875,0,0.4960938,0.765625,-0.00703125,0.3234375,0,0.4941406,0.7695313,-0.02109375,0.3234375,0,0.4824219,0.7695313,-0.028125,0.3117188,0,0.4765625,0.7597656,-0.028125,0.3046875,0,0.4765625,0.7539063,-0.0046875,0.309375,0,0.4960938,0.7578125,-0.0140625,0.3023438,0,0.4882813,0.7519531,-0.0234375,0.3023438,0,0.4804688,0.7519531,0.1101563,0.3351563,0,0.5917969,0.7792969,0.1171875,0.3164063,0,0.5976563,0.7636719,0.1171875,0.3328125,0,0.5976563,0.7773438,0.1101563,0.3140625,0,0.5917969,0.7617188,0.1054688,0.3140625,0,0.5878906,0.7617188,0.103125,0.328125,0,0.5859375,0.7734375,0.1007813,0.31875,0,0.5839844,0.765625,0.3023438,0.2390625,0,0.7519531,0.6992188,0.2929688,0.2296875,0,0.7441406,0.6914063,0.3,0.234375,0,0.75,0.6953125,0.2625,0.1757813,0,0.71875,0.6464844,0.28125,0.16875,0,0.734375,0.640625,0.2578125,0.1757813,0,0.7148438,0.6464844,0.253125,0.178125,0,0.7109375,0.6484375,0.2484375,0.1945313,0,0.7070313,0.6621094,0.3023438,0.2507813,0,0.7519531,0.7089844,0.3023438,0.2390625,0,0.7519531,0.6992188,0.2859375,0.2507813,0,0.7382813,0.7089844,0.2578125,0.2132813,0,0.7148438,0.6777344,0.2484375,0.2320313,0,0.7070313,0.6933594,0.2367188,0.2132813,0,0.6972656,0.6777344,0.234375,0.2226563,0,0.6953125,0.6855469,0.234375,0.2179688,0,0.6953125,0.6816406,0.328125,-0.2296875,0,0.7734375,0.3085938,0.1546875,-0.1710937,0,0.6289063,0.3574219,0.1523438,-0.1757813,0,0.6269531,0.3535156,0.1523438,-0.1898438,0,0.6269531,0.3417969,0.346875,0.3328125,0,0.7890625,0.7773438,0.3304687,0.4101563,0,0.7753906,0.8417969,0.2601562,0.3328125,0,0.7167969,0.7773438,0.2578125,0.3328125,0,0.7148438,0.7773438,0.2554688,0.4945313,0,0.7128906,0.9121094,0.2507813,0.328125,0,0.7089844,0.7734375,0.2296875,0.3632813,0,0.6914063,0.8027344,0.2226563,0.4945313,0,0.6855469,0.9121094,0.2226563,0.375,0,0.6855469,0.8125,0.215625,0.3726563,0,0.6796875,0.8105469,0.1945313,0.4875,0,0.6621094,0.90625,0.215625,0.3632813,0,0.6796875,0.8027344,0.46875,-0.0234375,0,0.890625,0.4804688,0.46875,-0.1523438,0,0.890625,0.3730469,0.46875,0.159375,0,0.890625,0.6328125,0.459375,0.0796875,0,0.8828125,0.5664063,0.46875,0.07734375,0,0.890625,0.5644531,0.4476563,0.0796875,0,0.8730469,0.5664063,0.4476563,0.0703125,0,0.8730469,0.5585938,0.46875,0.0609375,0,0.890625,0.5507813,0.4546875,0.0609375,0,0.8789063,0.5507813,0.2484375,0.178125,0,0.7070313,0.6484375,0.1335938,0.2625,0,0.6113281,0.71875,0.1054688,0.2742188,0,0.5878906,0.7285156,0.07734375,0.2835937,0,0.5644531,0.7363281,-0.1242188,0.4382813,0,0.3964844,0.8652344,-0.1476562,0.3867188,0,0.3769531,0.8222656,0.590625,0.075,0,0.9921875,0.5625,0.6,0.04453125,0,1,0.5371094,0.6,0.065625,0,1,0.5546875,0.5859375,0.04453125,0,0.9882813,0.5371094,0.5460938,0.08671875,0,0.9550781,0.5722656,0.525,0.06328125,0,0.9375,0.5527344,0.5132813,0.08671875,0,0.9277344,0.5722656,0.5132813,0.07265625,0,0.9277344,0.5605469,0.54375,0.01640625,0,0.953125,0.5136719,0.5367188,0.0140625,0,0.9472656,0.5117188,0.5390625,0.009375,0,0.9492188,0.5078125,0.5578125,0.01640625,0,0.9648438,0.5136719,0.571875,-0.0515625,0,0.9765625,0.4570313,0.571875,0.00703125,0,0.9765625,0.5058594,0.5296875,-0.1265625,0,0.9414063,0.3945313,0.16875,0.3492188,0,0.640625,0.7910156,0.1757813,0.3398438,0,0.6464844,0.7832031,0.1757813,0.346875,0,0.6464844,0.7890625,0.16875,0.3375,0,0.640625,0.78125,0.1640625,0.3445313,0,0.6367188,0.7871094,0.1523438,0.3351563,0,0.6269531,0.7792969,0.1546875,0.3164063,0,0.6289063,0.7636719,0.1546875,0.3257813,0,0.6289063,0.7714844,0.1476562,0.3140625,0,0.6230469,0.7617188,0.1429688,0.3140625,0,0.6191406,0.7617188,0.1382813,0.3351563,0,0.6152344,0.7792969,0.1335938,0.3304687,0,0.6113281,0.7753906,0.1335938,0.3234375,0,0.6113281,0.7695313,0.225,0.3585938,0,0.6875,0.7988281,0.2203125,0.3585938,0,0.6835938,0.7988281,0.1265625,0.3960938,0,0.6054688,0.8300781,0.121875,0.4289063,0,0.6015625,0.8574219,0.121875,0.4125,0,0.6015625,0.84375,0.121875,0.4007813,0,0.6015625,0.8339844,-0.234375,0.4359375,0,0.3046875,0.8632813,-0.2320313,0.39375,0,0.3066406,0.828125,-0.2320313,0.4265625,0,0.3066406,0.8554688,-0.234375,0.3914063,0,0.3046875,0.8261719,-0.24375,0.440625,0,0.296875,0.8671875,-0.24375,0.3914063,0,0.296875,0.8261719,-0.2484375,0.440625,0,0.2929688,0.8671875,-0.2507813,0.39375,0,0.2910156,0.828125,-0.253125,0.4359375,0,0.2890625,0.8632813,-0.253125,0.4101563,0,0.2890625,0.8417969,-0.1125,-0.1851563,0,0.40625,0.3457031,-0.1078125,-0.1945313,0,0.4101563,0.3378906,-0.1078125,-0.1898438,0,0.4101563,0.3417969,-0.1125,-0.1992188,0,0.40625,0.3339844,-0.1382813,-0.1851563,0,0.3847656,0.3457031,-0.1382813,-0.1992188,0,0.3847656,0.3339844,-0.1429688,-0.1898438,0,0.3808594,0.3417969,-0.1429688,-0.1945313,0,0.3808594,0.3378906,-0.1757813,0.4148438,0,0.3535156,0.8457031,-0.1710937,0.403125,0,0.3574219,0.8359375,-0.1710937,0.4101563,0,0.3574219,0.8417969,-0.1757813,0.3960938,0,0.3535156,0.8300781,-0.1945313,0.3960938,0,0.3378906,0.8300781,-0.2039063,0.4148438,0,0.3300781,0.8457031,-0.2039063,0.4054688,0,0.3300781,0.8378906,0.1125,0.4195313,0,0.59375,0.8496094,0.1195313,0.4195313,0,0.5996094,0.8496094,0.1125,0.4007813,0,0.59375,0.8339844,0.103125,0.3984375,0,0.5859375,0.8320313,0.0984375,0.4054688,0,0.5820313,0.8378906,0.0984375,0.403125,0,0.5820313,0.8359375,-0.16875,0.459375,0,0.359375,0.8828125,-0.1710937,0.4382813,0,0.3574219,0.8652344,-0.16875,0.4429688,0,0.359375,0.8691406,-0.1804688,0.4382813,0,0.3496094,0.8652344,-0.1945313,0.478125,0,0.3378906,0.8984375,-0.2132813,0.478125,0,0.3222656,0.8984375,-0.215625,0.4734375,0,0.3203125,0.8945313,-0.215625,0.4617188,0,0.3203125,0.8847656,-0.2179688,0.5039063,0,0.3183594,0.9199219,-0.215625,0.4875,0,0.3203125,0.90625,-0.215625,0.5039063,0,0.3203125,0.9199219,-0.2203125,0.50625,0,0.3164063,0.921875,-0.2203125,0.4734375,0,0.3164063,0.8945313,-0.2179688,0.5085937,0,0.3183594,0.9238281,-0.215625,0.5039063,0,0.3203125,0.9199219,-0.2203125,0.5085937,0,0.3164063,0.9238281,-0.16875,0.5296875,0,0.359375,0.9414063,-0.2203125,0.5296875,0,0.3164063,0.9414063,-0.15,0.4945313,0,0.375,0.9121094,-0.159375,0.4757813,0,0.3671875,0.8964844,-0.15,0.4757813,0,0.375,0.8964844,-0.225,0.4710938,0,0.3125,0.8925781,-0.2296875,0.5085937,0,0.3085938,0.9238281,-0.2390625,0.4710938,0,0.3007813,0.8925781,-0.2414063,0.4898438,0,0.2988281,0.9082031,-0.2414063,0.4757813,0,0.2988281,0.8964844],[425,424,423,422,423,424,421,423,422,415,421,422,412,421,415,411,412,415,410,414,419,416,419,414,418,419,416,420,419,418,415,417,413,416,413,417,414,413,416,411,415,408,413,408,415,410,408,413,414,410,413,412,411,409,408,409,411,410,409,408,407,406,403,405,403,406,404,403,405,400,403,404,401,403,400,402,401,400,399,398,397,394,397,398,396,397,394,367,396,394,395,367,394,393,392,391,387,391,392,390,391,387,388,390,387,389,388,387,386,385,384,383,384,385,382,384,383,379,382,383,380,382,379,381,380,379,378,377,376,375,376,377,374,376,375,373,374,375,372,374,373,369,372,373,370,372,369,371,370,369,115,116,214,123,214,116,319,317,364,316,364,317,363,364,316,314,363,316,263,313,262,311,262,313,261,262,311,310,261,311,270,261,310,268,261,270,368,367,365,366,365,367,318,365,366,319,365,318,254,365,319,364,254,319,363,254,364,260,254,363,314,260,363,127,136,124,362,361,359,360,359,361,355,359,360,358,359,355,356,358,355,357,356,355,354,350,353,351,353,350,352,351,350,293,291,292,102,321,349,320,349,321,345,349,320,347,349,345,343,347,345,346,347,343,348,347,346,345,344,343,342,341,340,339,340,341,338,340,339,335,338,339,336,338,335,337,336,335,105,118,306,215,306,118,212,306,215,213,306,212,121,306,213,198,306,121,196,306,198,197,306,196,150,306,197,148,306,150,334,306,148,154,306,334,166,154,334,333,306,154,152,333,154,163,306,333,164,306,163,277,306,164,280,306,277,279,306,280,278,306,279,273,306,278,272,306,273,332,306,272,331,306,332,330,306,331,329,306,330,305,306,329,320,305,329,293,320,329,292,320,293,289,320,292,290,320,289,288,320,290,267,320,288,265,320,267,266,320,265,326,320,266,328,320,326,327,320,328,326,325,328,323,328,325,327,328,323,324,327,323,322,325,266,326,266,325,323,325,322,324,323,322,305,320,103,102,103,320,321,102,320,315,317,318,319,318,317,316,317,315,314,316,315,312,314,315,313,314,312,260,314,313,263,260,313,311,313,312,309,311,312,310,311,309,270,310,309,269,270,309,267,269,309,264,267,309,308,264,309,266,264,308,307,237,40,238,40,237,306,40,238,305,40,306,103,40,305,42,40,103,304,42,103,303,302,301,300,301,302,299,301,300,298,299,300,289,299,298,296,289,298,288,289,296,297,288,296,295,289,294,293,294,289,291,293,289,292,291,289,290,289,288,287,286,285,281,285,286,284,285,281,282,284,281,283,282,281,277,276,280,275,280,276,279,280,275,274,279,275,278,279,274,273,278,274,167,275,164,276,164,275,277,164,276,274,275,167,273,274,167,272,273,167,271,272,167,178,271,167,170,178,167,251,256,269,257,269,256,255,269,257,261,269,255,268,269,261,270,269,268,267,264,265,266,265,264,260,263,259,262,259,263,261,259,262,258,259,261,255,258,261,260,259,254,251,254,259,258,251,259,256,251,258,255,256,258,257,256,255,254,251,252,253,252,251,250,249,248,247,248,249,245,248,247,244,245,247,246,245,244,243,242,241,240,241,242,239,241,240,236,239,240,237,239,236,238,237,236,235,233,234,231,234,233,230,231,233,232,231,230,229,228,227,224,227,228,225,227,224,226,225,224,112,110,223,106,223,110,222,223,106,107,222,106,220,222,107,221,220,107,107,105,221,202,221,105,203,221,202,204,221,203,112,223,111,217,111,223,222,217,223,220,217,222,204,217,220,221,204,220,200,217,204,201,217,200,199,217,201,219,217,199,218,217,219,216,217,218,56,217,216,55,56,216,118,117,215,115,215,117,214,215,115,212,215,214,123,212,214,121,212,123,213,212,121,202,211,199,210,199,211,208,199,210,209,199,208,114,207,136,205,136,207,206,136,205,204,203,200,202,200,203,199,200,202,201,200,199,121,122,198,137,198,122,195,198,137,196,198,195,194,196,195,193,196,194,150,196,193,197,196,150,124,131,126,129,126,131,146,126,129,147,146,129,151,147,129,149,147,151,135,194,137,195,137,194,193,194,135,150,193,135,133,150,135,134,150,133,147,150,134,149,150,147,192,191,190,187,190,191,188,190,187,189,188,187,186,185,184,183,184,185,182,184,183,179,182,183,180,182,179,181,180,179,178,170,177,168,177,170,167,176,169,174,169,176,168,169,174,175,168,174,172,175,174,171,172,174,173,172,171,170,167,168,169,168,167,166,153,154,165,162,163,164,163,162,161,160,159,157,159,160,158,159,157,156,158,157,152,156,157,155,156,152,153,155,152,154,153,152,129,148,151,149,151,148,150,149,148,126,146,132,134,132,146,147,134,146,145,144,142,143,142,144,138,142,143,141,142,138,139,141,138,140,139,138,124,136,131,116,114,123,136,123,114,120,123,136,122,120,136,137,122,136,135,137,136,127,135,136,125,135,127,126,135,125,132,135,126,133,135,132,134,133,132,131,128,129,130,129,128,127,124,125,126,125,124,123,120,121,122,121,120,87,119,109,114,109,119,117,109,114,105,109,117,118,105,117,115,117,114,116,115,114,113,88,111,89,111,88,108,111,89,106,111,108,110,111,106,112,111,110,89,87,108,109,108,87,105,108,109,106,108,105,107,106,105,104,103,102,101,99,100,98,100,99,95,98,99,96,98,95,97,96,95,94,90,93,91,93,90,92,91,90,89,88,87,86,85,84,83,84,85,82,84,83,79,82,83,80,82,79,81,80,79,78,77,76,75,76,77,74,76,75,71,74,75,72,74,71,73,72,71,70,69,68,64,68,69,67,68,64,65,67,64,66,65,64,63,62,61,60,61,62,58,61,60,57,58,60,59,58,57,56,55,53,54,53,55,49,53,54,52,53,49,50,52,49,51,50,49,48,47,46,43,46,47,44,46,43,45,44,43,43,40,41,42,41,40,39,38,35,37,35,38,34,35,37,36,35,34,33,29,32,30,32,29,31,30,29,28,27,25,24,25,27,26,25,24,23,21,22,19,22,21,18,19,21,20,19,18,17,16,14,13,14,16,15,14,13,12,11,10,9,10,11,6,10,9,8,6,9,5,6,8,7,6,5,4,0,3,1,3,0,2,1,0],0,-0.000148672610521317,1,0.99985134601593,0,0.01953125,1,0.94140625,0,0,0,0,[0,0,0,0],[-0.6,-0.6,0.6,0.6],426.666656494141,512,512,512,512,256,256,0,10.0761203765869]},{"id":26110,"path":"Assets/Content/Sprites/Ingredients/rosemary.png","assetBundleId":-1,"data":["rosemary",6,26108,[0.004687503,0.05390625,0,0.4382812,0.365625,0],[0.1265625,0.3351563,0,0.6054688,0.7792969,0.08671875,0.2484375,0,0.5722656,0.7070313,0.1078125,0.2835937,0,0.5898438,0.7363281,0.084375,0.234375,0,0.5703125,0.6953125,0.08671875,0.24375,0,0.5722656,0.703125,-0.2367188,0.4195313,0,0.3027344,0.8496094,0.1710937,0.4195313,0,0.6425781,0.8496094,0.13125,0.3164063,0,0.609375,0.7636719,0.13125,0.3234375,0,0.609375,0.7695313,0.1898438,0.1171875,0,0.6582031,0.5976563,0.1898438,0.1148438,0,0.6582031,0.5957031,0.1898438,0.1171875,0,0.6582031,0.5976563,0.1875,0.1054688,0,0.65625,0.5878906,0.196875,0.1359375,0,0.6640625,0.6132813,0.196875,0.13125,0,0.6640625,0.609375,0.196875,0.1335938,0,0.6640625,0.6113281,0.2132813,0.1921875,0,0.6777344,0.6601563,0.196875,0.1382813,0,0.6640625,0.6152344,0.2203125,0.1734375,0,0.6835938,0.6445313,0.1921875,0.1265625,0,0.6601563,0.6054688,0.1734375,0.290625,0,0.6445313,0.7421875,0.403125,0.121875,0,0.8359375,0.6015625,0.4429688,-0.3117188,0,0.8691406,0.2402344,0.4429688,-0.0328125,0,0.8691406,0.4726563,0.24375,0.1828125,0,0.703125,0.6523438,0.225,0.1664063,0,0.6875,0.6386719,0.1992188,0.140625,0,0.6660156,0.6171875,0.1945313,0.1289063,0,0.6621094,0.6074219,0.1945313,0.1242188,0,0.6621094,0.6035156,0.1148438,0.2835937,0,0.5957031,0.7363281,0.0984375,0.2648438,0,0.5820313,0.7207031,-0.3328125,0.009375,0,0.2226563,0.5078125,-0.3351563,-0.3117188,0,0.2207031,0.2402344,-0.3539062,-0.0046875,0,0.2050781,0.4960938,-0.3609375,-0.2179688,0,0.1992188,0.3183594,-0.3632813,-0.2296875,0,0.1972656,0.3085938,-0.3632813,-0.2648438,0,0.1972656,0.2792969,-0.3726563,-0.1359375,0,0.1894531,0.3867188,-0.403125,-0.140625,0,0.1640625,0.3828125,-0.43125,-0.1382813,0,0.140625,0.3847656,-0.4335938,-0.103125,0,0.1386719,0.4140625,-0.4335938,-0.1359375,0,0.1386719,0.3867188,-0.3445313,0.07265625,0,0.2128906,0.5605469,-0.3539062,0.1429688,0,0.2050781,0.6191406,-0.3820313,-0.2203125,0,0.1816406,0.3164063,-0.39375,-0.215625,0,0.171875,0.3203125],[45,37,44,34,44,37,43,5,42,31,42,5,41,40,39,33,39,40,38,39,33,37,38,33,34,37,33,36,35,32,34,32,35,33,32,34,31,32,33,22,32,31,5,22,31,3,22,5,12,22,3,30,12,3,29,12,30,20,12,29,10,22,12,11,22,10,28,22,11,27,22,28,14,22,27,15,22,14,13,22,15,26,22,13,25,22,26,24,22,25,21,22,24,23,22,21,16,19,20,9,20,19,12,20,9,11,9,19,17,19,16,14,19,17,13,14,17,18,17,16,15,14,13,12,9,10,11,10,9,2,0,7,8,7,0,6,0,5,1,5,0,3,5,1,4,3,1,2,1,0],-0.000148668885231018,-0.0000252127647399902,0.99985134601593,0.99997478723526,0.138671875,0.240234375,0.869140625,0.849609375,0,0,0,0,[0,0,0,0],[-0.6,-0.6,0.6,0.6],426.666656494141,512,512,512,512,256,256,71.0761184692383,123.012908935547]},{"id":26082,"path":"Assets/Content/Sprites/Ingredients/mustard.png","assetBundleId":-1,"data":["mustard",6,26080,[0,0.01406249,0,0.31875,0.478125,0],[0.2296875,0.4921875,0,0.6914063,0.9101563,0.1453125,-0.39375,0,0.6210938,0.171875,0.215625,-0.05390625,0,0.6796875,0.4550781,-0.05859375,-0.4195313,0,0.4511719,0.1503906,-0.159375,-0.4171875,0,0.3671875,0.1523438,-0.1617188,-0.4101563,0,0.3652344,0.1582031,-0.178125,0.4921875,0,0.3515625,0.9101563,-0.2109375,0.4171875,0,0.3242188,0.8476563,-0.2109375,-0.2742188,0,0.3242188,0.2714844,0.2320313,-0.159375,0,0.6933594,0.3671875,0.3164063,-0.4054688,0,0.7636719,0.1621094,0.31875,-0.4195313,0,0.765625,0.1503906,0.31875,-0.4125,0,0.765625,0.15625,-0.2554688,-0.4335938,0,0.2871094,0.1386719,-0.2578125,-0.4640625,0,0.2851563,0.1132813,-0.2554688,-0.4570313,0,0.2871094,0.1191406,-0.2671875,-0.43125,0,0.2773438,0.140625,-0.2835937,-0.4640625,0,0.2636719,0.1132813,-0.2882813,-0.4546875,0,0.2597656,0.1210938,-0.2929688,-0.43125,0,0.2558594,0.140625,-0.2929688,-0.440625,0,0.2558594,0.1328125,0.1734375,-0.440625,0,0.6445313,0.1328125,0.1757813,-0.4570313,0,0.6464844,0.1191406,0.1757813,-0.45,0,0.6464844,0.125,0.1640625,-0.4640625,0,0.6367188,0.1132813,0.0796875,-0.4640625,0,0.5664063,0.1132813,0.0703125,-0.440625,0,0.5585938,0.1328125,0.0703125,-0.4570313,0,0.5585938,0.1191406,0.2273438,-0.440625,0,0.6894531,0.1328125,0.290625,-0.4640625,0,0.7421875,0.1132813,0.290625,-0.440625,0,0.7421875,0.1328125,0.2226563,-0.4640625,0,0.6855469,0.1132813,0.2179688,-0.4523438,0,0.6816406,0.1230469,0.2179688,-0.459375,0,0.6816406,0.1171875,0.1992188,-0.4453125,0,0.6660156,0.1289063,0.2015625,-0.459375,0,0.6679688,0.1171875,0.2015625,-0.4523438,0,0.6679688,0.1230469,0.1992188,-0.4617188,0,0.6660156,0.1152344,0.1757813,-0.4453125,0,0.6464844,0.1289063,0.1757813,-0.4617188,0,0.6464844,0.1152344,-0.1148438,-0.43125,0,0.4042969,0.140625,-0.1125,-0.4429688,0,0.40625,0.1308594,-0.1125,-0.4359375,0,0.40625,0.1367188,-0.1171875,-0.4453125,0,0.4023438,0.1289063,-0.121875,-0.43125,0,0.3984375,0.140625,-0.1265625,-0.4453125,0,0.3945313,0.1289063,-0.1289063,-0.4382813,0,0.3925781,0.1347656,-0.2507813,-0.4054688,0,0.2910156,0.1621094,-0.253125,-0.4171875,0,0.2890625,0.1523438,-0.2484375,-0.4125,0,0.2929688,0.15625,-0.3140625,-0.4054688,0,0.2382813,0.1621094,-0.3164063,-0.4171875,0,0.2363281,0.1523438,-0.31875,-0.4101563,0,0.234375,0.1582031],[52,50,51,48,51,50,47,48,50,49,48,47,46,44,45,43,45,44,40,43,44,41,43,40,42,41,40,39,22,37,23,37,22,38,37,23,34,37,38,35,37,34,36,35,34,33,32,31,28,31,32,29,31,28,30,29,28,27,26,25,21,25,26,24,25,21,22,24,21,23,22,21,20,19,18,16,18,19,17,18,16,14,17,16,13,14,16,15,14,13,3,1,11,10,11,1,12,11,10,1,2,9,8,7,5,6,5,7,0,5,6,4,5,0,3,4,0,1,3,0,2,1,0],-0.0000252127647399902,-0.0000252202153205872,0.99997478723526,0.99997478723526,0.234375,0.11328125,0.765625,0.91015625,0,0,0,0,[0,0,0,0],[-0.6,-0.6,0.6,0.6],426.666656494141,512,512,512,512,256,256,120.012908935547,58.0129127502441]},{"id":25992,"path":"Assets/Content/Sprites/Ingredients/sour cream.png","assetBundleId":-1,"data":["sour cream",6,25990,[0.028125,0.09492187,0,0.4078125,0.4042969,0],[-0.084375,0.365625,0,0.4296875,0.8046875,-0.0890625,0.3070312,0,0.4257813,0.7558594,-0.07734375,0.3632813,0,0.4355469,0.8027344,-0.09375,0.365625,0,0.421875,0.8046875,-0.0234375,0.4664063,0,0.4804688,0.8886719,-0.01875,0.459375,0,0.484375,0.8828125,-0.01875,0.4664063,0,0.484375,0.8886719,-0.02578125,0.46875,0,0.4785156,0.890625,-0.03515625,0.4757813,0,0.4707031,0.8964844,-0.0375,0.4289063,0,0.46875,0.8574219,-0.0515625,0.4078125,0,0.4570313,0.8398438,-0.06328125,0.4546875,0,0.4472656,0.8789063,-0.0703125,0.4078125,0,0.4414063,0.8398438,-0.07265625,0.4265625,0,0.4394531,0.8554688,-0.07265625,0.4125,0,0.4394531,0.84375,0.0140625,0.4992188,0,0.5117188,0.9160156,0.01875,0.478125,0,0.515625,0.8984375,0.01875,0.496875,0,0.515625,0.9140625,-0.009375,0.4664063,0,0.4921875,0.8886719,-0.0140625,0.4992188,0,0.4882813,0.9160156,-0.0234375,0.4757813,0,0.4804688,0.8964844,-0.02578125,0.4828125,0,0.4785156,0.9023438,-0.02578125,0.4757813,0,0.4785156,0.8964844,-0.2578125,-0.2320313,0,0.2851563,0.3066406,-0.2625,-0.2578125,0,0.28125,0.2851563,-0.2578125,-0.2507813,0,0.2851563,0.2910156,-0.2648438,-0.225,0,0.2792969,0.3125,-0.2671875,-0.225,0,0.2773438,0.3125,-0.2671875,-0.2578125,0,0.2773438,0.2851563,-0.2742188,-0.2296875,0,0.2714844,0.3085938,-0.2742188,-0.2554688,0,0.2714844,0.2871094,0.2414063,0.3,0,0.7011719,0.75,0.2507813,0.2859375,0,0.7089844,0.7382813,0.2554688,0.309375,0,0.7128906,0.7578125,0.2414063,0.2953125,0,0.7011719,0.7460938,0.4359375,0.1710937,0,0.8632813,0.6425781,0.421875,-0.03046875,0,0.8515625,0.4746094,0.4359375,0.0796875,0,0.8632813,0.5664063,0.3609375,0.2460938,0,0.8007813,0.7050781,0.309375,-0.2367188,0,0.7578125,0.3027344,0.271875,0.3023438,0,0.7265625,0.7519531,0.2507813,-0.271875,0,0.7089844,0.2734375,0.1429688,-0.309375,0,0.6191406,0.2421875,0.1007813,0.3,0,0.5839844,0.75,-0.0328125,0.3421875,0,0.4726563,0.7851563,-0.08203125,0.3140625,0,0.4316406,0.7617188,-0.1007813,0.3585938,0,0.4160156,0.7988281,-0.1382813,-0.309375,0,0.3847656,0.2421875,-0.2765625,-0.215625,0,0.2695313,0.3203125,-0.3257813,0.2320313,0,0.2285156,0.6933594,-0.3796875,0.1570313,0,0.1835938,0.6308594,-0.3796875,0.06796875,0,0.1835938,0.5566406,0.1476562,0.375,0,0.6230469,0.8125,0.1429688,0.3679688,0,0.6191406,0.8066406,0.1476562,0.3726563,0,0.6230469,0.8105469,0.1359375,0.3867188,0,0.6132813,0.8222656,0.1335938,0.3679688,0,0.6113281,0.8066406,0.1289063,0.3867188,0,0.6074219,0.8222656,0.1265625,0.3820313,0,0.6054688,0.8183594,0.1265625,0.3726563,0,0.6054688,0.8105469],[7,8,22,59,58,56,57,56,58,55,56,57,53,56,55,52,53,55,54,53,52,51,50,48,49,48,50,46,48,49,47,48,46,1,47,46,42,47,1,3,1,46,45,42,1,44,42,45,43,42,44,32,42,43,41,42,32,39,41,32,33,39,32,40,39,33,38,39,40,36,39,38,35,36,38,37,36,35,34,31,32,33,32,31,30,29,28,27,28,29,24,28,27,26,24,27,23,24,26,25,24,23,7,22,4,20,4,22,6,4,20,22,21,20,19,20,21,6,20,19,18,6,19,15,18,19,16,18,15,17,16,15,14,13,12,11,12,13,10,12,11,8,10,11,9,10,8,5,9,8,7,5,8,4,5,7,6,5,4,3,0,1,2,1,0],-0.0000522434711456299,-0.0000522434711456299,0.999947786331177,0.999947786331177,0.18359375,0.2421875,0.86328125,0.916015625,0,0,0,0,[0,0,0,0],[-0.6,-0.6,0.6,0.6],426.666656494141,512,512,512,512,256,256,94.0267486572266,124.026748657227]},{"id":26120,"path":"Assets/Content/Sprites/Ingredients/bacon.png","assetBundleId":-1,"data":["bacon",6,26118,[0.03867188,-0.09726563,0,0.5425781,0.4675781,0],[-0.16875,-0.5226563,0,0.359375,0.06445313,-0.1546875,-0.5648438,0,0.3710938,0.02929688,-0.1546875,-0.5296875,0,0.3710938,0.05859375,-0.1851563,-0.5226563,0,0.3457031,0.06445313,-0.1992188,-0.5226563,0,0.3339844,0.06445313,-0.2015625,-0.5648438,0,0.3320313,0.02929688,-0.2039063,-0.5226563,0,0.3300781,0.06445313,-0.2039063,-0.5390625,0,0.3300781,0.05078125,-0.2039063,-0.553125,0,0.3300781,0.0390625,0.0984375,-0.3914063,0,0.5820313,0.1738281,0.0984375,-0.3890625,0,0.5820313,0.1757813,0.0984375,-0.3914063,0,0.5820313,0.1738281,0.1921875,0.3703125,0,0.6601563,0.8085938,0.1429688,-0.3046875,0,0.6191406,0.2460938,0.1453125,-0.309375,0,0.6210938,0.2421875,0.1359375,-0.3046875,0,0.6132813,0.2460938,0.1289063,-0.3070312,0,0.6074219,0.2441406,0.1007813,-0.3984375,0,0.5839844,0.1679688,0.1289063,-0.3164063,0,0.6074219,0.2363281,0.0890625,-0.3820313,0,0.5742188,0.1816406,0.0703125,-0.3867188,0,0.5585938,0.1777344,-0.01875,0.2976563,0,0.484375,0.7480469,0.2695313,-0.2273438,0,0.7246094,0.3105469,0.2671875,-0.2273438,0,0.7226563,0.3105469,0.2578125,-0.2367188,0,0.7148438,0.3027344,0.2953125,-0.2226563,0,0.7460938,0.3144531,0.2835937,-0.2296875,0,0.7363281,0.3085938,0.2882813,-0.2296875,0,0.7402344,0.3085938,0.2789063,-0.225,0,0.7324219,0.3125,0.2789063,-0.225,0,0.7324219,0.3125,0.2929688,-0.215625,0,0.7441406,0.3203125,0.2953125,-0.2226563,0,0.7460938,0.3144531,0.2859375,-0.215625,0,0.7382813,0.3203125,0.2789063,-0.2226563,0,0.7324219,0.3144531,0.3820313,-0.2109375,0,0.8183594,0.3242188,0.3773438,-0.225,0,0.8144531,0.3125,0.3867188,-0.2109375,0,0.8222656,0.3242188,0.3773438,-0.20625,0,0.8144531,0.328125,0.3890625,-0.196875,0,0.8242188,0.3359375,0.39375,-0.2015625,0,0.828125,0.3320313,0.3820313,-0.196875,0,0.8183594,0.3359375,0.3773438,-0.2015625,0,0.8144531,0.3320313,0.3820313,0.24375,0,0.8183594,0.703125,0.39375,0.1007813,0,0.828125,0.5839844,0.4125,0.1007813,0,0.84375,0.5839844,0.3796875,0.075,0,0.8164063,0.5625,0.3796875,0.0421875,0,0.8164063,0.5351563,0.3726563,0.04921875,0,0.8105469,0.5410156,0.3679688,0.05390625,0,0.8066406,0.5449219,0.3609375,0.0515625,0,0.8007813,0.5429688,0.3164063,-0.253125,0,0.7636719,0.2890625,0.3609375,0.04453125,0,0.8007813,0.5371094,0.3070312,-0.2226563,0,0.7558594,0.3144531,0.271875,-0.225,0,0.7265625,0.3125,0.2554688,0.3703125,0,0.7128906,0.8085938,0.4078125,-0.15,0,0.8398438,0.375,0.4148438,-0.159375,0,0.8457031,0.3671875,0.4148438,-0.1523438,0,0.8457031,0.3730469,0.4078125,-0.1617188,0,0.8398438,0.3652344,0.403125,-0.1546875,0,0.8359375,0.3710938,0.4125,0.028125,0,0.84375,0.5234375,0.421875,0.0328125,0,0.8515625,0.5273438,0.3890625,0.028125,0,0.8242188,0.5234375,0.421875,0.0609375,0,0.8515625,0.5507813,0.421875,0.1007813,0,0.8515625,0.5839844,0.4570313,-0.1007813,0,0.8808594,0.4160156,0.4148438,-0.16875,0,0.8457031,0.359375,0.39375,-0.20625,0,0.828125,0.328125,0.39375,-0.2015625,0,0.828125,0.3320313,0.3890625,-0.2109375,0,0.8242188,0.3242188,0.3,-0.2460938,0,0.75,0.2949219,0.2953125,-0.2367188,0,0.7460938,0.3027344,0.215625,-0.3820313,0,0.6796875,0.1816406,0.1992188,-0.4078125,0,0.6660156,0.1601563,0.1453125,-0.31875,0,0.6210938,0.234375,0.1382813,-0.3210938,0,0.6152344,0.2324219,0.13125,-0.3210938,0,0.609375,0.2324219,0.13125,-0.4265625,0,0.609375,0.1445313,0.103125,-0.4429688,0,0.5859375,0.1308594,0.1476562,-0.4546875,0,0.6230469,0.1210938,0.1125,-0.4429688,0,0.59375,0.1308594,0.09140625,-0.3867188,0,0.5761719,0.1777344,0.08203125,-0.3914063,0,0.5683594,0.1738281,0.0796875,-0.4054688,0,0.5664063,0.1621094,0.07265625,-0.4992188,0,0.5605469,0.08398438,-0.1429688,-0.4992188,0,0.3808594,0.08398438,-0.1851563,-0.403125,0,0.3457031,0.1640625,-0.1992188,-0.3890625,0,0.3339844,0.1757813,-0.2742188,-0.3890625,0,0.2714844,0.1757813,-0.309375,-0.2929688,0,0.2421875,0.2558594,-0.3140625,-0.2882813,0,0.2382813,0.2597656,-0.375,-0.2882813,0,0.1875,0.2597656,-0.4265625,0.2742188,0,0.1445313,0.7285156,-0.4265625,-0.2367188,0,0.1445313,0.3027344,-0.1382813,-0.5507813,0,0.3847656,0.04101563,-0.13125,-0.5601563,0,0.390625,0.0332031,-0.13125,-0.553125,0,0.390625,0.0390625,-0.1382813,-0.5625,0,0.3847656,0.03125,-0.1429688,-0.5554687,0,0.3808594,0.0371094,-0.2039063,-0.5085937,0,0.3300781,0.0761719,-0.2085938,-0.5601563,0,0.3261719,0.0332031,-0.2203125,-0.5601563,0,0.3164063,0.0332031,-0.2320313,-0.5554687,0,0.3066406,0.0371094,-0.2367188,-0.5085937,0,0.3027344,0.0761719,-0.2367188,-0.534375,0,0.3027344,0.0546875,0.4664063,-0.525,0,0.8886719,0.06249997,0.46875,-0.534375,0,0.890625,0.0546875,0.46875,-0.5273438,0,0.890625,0.06054688,0.4523438,-0.5484375,0,0.8769531,0.04296872,0.4476563,-0.525,0,0.8730469,0.06249997,0.4359375,-0.5484375,0,0.8632813,0.04296872,0.4335938,-0.5414063,0,0.8613281,0.04882813,0.43125,-0.54375,0,0.859375,0.04687503,0.4289063,-0.5554687,0,0.8574219,0.0371094,0.4335938,-0.5507813,0,0.8613281,0.04101563,0.421875,-0.54375,0,0.8515625,0.04687503,0.4195313,-0.5554687,0,0.8496094,0.0371094,0.4171875,-0.5484375,0,0.8476563,0.04296872,-0.440625,-0.4640625,0,0.1328125,0.1132813,-0.4148438,-0.54375,0,0.1542969,0.04687503,-0.4148438,-0.4640625,0,0.1542969,0.1132813,-0.4453125,-0.46875,0,0.1289063,0.109375,-0.4523438,-0.5109375,0,0.1230469,0.07421875,-0.4523438,-0.54375,0,0.1230469,0.04687503,-0.2484375,-0.5109375,0,0.2929688,0.07421875,-0.24375,-0.5390625,0,0.296875,0.05078125,-0.24375,-0.525,0,0.296875,0.06249997,-0.2554688,-0.5390625,0,0.2871094,0.05078125,-0.2625,-0.5109375,0,0.28125,0.07421875,-0.2671875,-0.5132813,0,0.2773438,0.0722656,-0.2671875,-0.5367188,0,0.2773438,0.05273435,-0.28125,-0.5132813,0,0.265625,0.0722656,-0.2765625,-0.5296875,0,0.2695313,0.05859375,-0.2765625,-0.5179688,0,0.2695313,0.06835938,-0.2835937,-0.5320312,0,0.2636719,0.05664065,-0.2882813,-0.515625,0,0.2597656,0.0703125,-0.2882813,-0.5273438,0,0.2597656,0.06054688,-0.290625,-0.515625,0,0.2578125,0.0703125,-0.2929688,-0.5296875,0,0.2558594,0.05859375,-0.290625,-0.525,0,0.2578125,0.06249997,-0.2976563,-0.5109375,0,0.2519531,0.07421875,-0.3,-0.5296875,0,0.25,0.05859375,-0.3023438,-0.5109375,0,0.2480469,0.07421875,-0.3070312,-0.515625,0,0.2441406,0.0703125,-0.3070312,-0.5226563,0,0.2441406,0.06445313,-0.309375,-0.3539062,0,0.2421875,0.2050781,-0.31875,-0.3890625,0,0.234375,0.1757813,-0.309375,-0.3679688,0,0.2421875,0.1933594,-0.3375,-0.3890625,0,0.21875,0.1757813,-0.3585938,-0.39375,0,0.2011719,0.171875,-0.3726563,-0.3960938,0,0.1894531,0.1699219,-0.3585938,-0.3960938,0,0.2011719,0.1699219,-0.4101563,-0.3796875,0,0.1582031,0.1835938,-0.4171875,-0.2882813,0,0.1523438,0.2597656,-0.4171875,-0.3070312,0,0.1523438,0.2441406,-0.3210938,-0.3960938,0,0.2324219,0.1699219,-0.3117188,-0.5015625,0,0.2402344,0.08203122,-0.3210938,-0.5226563,0,0.2324219,0.06445313,-0.3117188,-0.5226563,0,0.2402344,0.06445313,-0.3351563,-0.515625,0,0.2207031,0.0703125,-0.3375,-0.5015625,0,0.21875,0.08203122,-0.3375,-0.4898438,0,0.21875,0.09179688,-0.3117188,-0.4898438,0,0.2402344,0.09179688,-0.3398438,-0.496875,0,0.2167969,0.0859375,-0.3539062,-0.4828125,0,0.2050781,0.09765625,-0.3585938,-0.478125,0,0.2011719,0.1015625,-0.1828125,-0.5109375,0,0.3476563,0.07421875,-0.1804688,-0.5179688,0,0.3496094,0.06835938,-0.1921875,-0.5085937,0,0.3398438,0.0761719,-0.2015625,-0.515625,0,0.3320313,0.0703125,-0.1851563,-0.478125,0,0.3457031,0.1015625,-0.1851563,-0.5015625,0,0.3457031,0.08203122,-0.3632813,-0.496875,0,0.1972656,0.0859375,-0.3585938,-0.4921875,0,0.2011719,0.08984375,-0.365625,-0.4710938,0,0.1953125,0.1074219,-0.3703125,-0.4992188,0,0.1914063,0.08398438,-0.375,-0.4992188,0,0.1875,0.08398438,-0.3773438,-0.46875,0,0.1855469,0.109375,-0.3820313,-0.46875,0,0.1816406,0.109375,-0.384375,-0.4734375,0,0.1796875,0.1054688,-0.384375,-0.478125,0,0.1796875,0.1015625,-0.3539062,-0.4875,0,0.2050781,0.09375,-0.3585938,-0.5015625,0,0.2011719,0.08203122,0.58125,-0.3703125,0,0.984375,0.1914063,0.5765625,-0.421875,0,0.9804688,0.1484375,0.58125,-0.4101563,0,0.984375,0.1582031,0.571875,-0.328125,0,0.9765625,0.2265625,0.5578125,-0.4523438,0,0.9648438,0.1230469,0.5484375,-0.2882813,0,0.9570313,0.2597656,0.5320312,-0.4523438,0,0.9433594,0.1230469,0.5296875,-0.2882813,0,0.9414063,0.2597656,0.515625,-0.3,0,0.9296875,0.25,0.515625,-0.4476563,0,0.9296875,0.1269531,-0.4546875,-0.43125,0,0.1210938,0.140625,-0.4570313,-0.440625,0,0.1191406,0.1328125,-0.4546875,-0.4382813,0,0.1210938,0.1347656,-0.4734375,-0.440625,0,0.1054688,0.1328125,-0.4851563,-0.365625,0,0.09570313,0.1953125,-0.4921875,-0.365625,0,0.08984375,0.1953125,-0.5039063,-0.3796875,0,0.08007813,0.1835938,-0.5039063,-0.4195313,0,0.08007813,0.1503906,0.3351563,-0.3210938,0,0.7792969,0.2324219,0.3351563,-0.3421875,0,0.7792969,0.2148438,0.3398438,-0.3257813,0,0.7832031,0.2285156,0.328125,-0.3445313,0,0.7734375,0.2128906,0.3257813,-0.3210938,0,0.7714844,0.2324219,0.31875,-0.3328125,0,0.765625,0.2226563,0.31875,-0.3445313,0,0.765625,0.2128906,0.4898438,-0.2414063,0,0.9082031,0.2988281,0.4921875,-0.2507813,0,0.9101563,0.2910156,0.4921875,-0.2414063,0,0.9101563,0.2988281,0.4875,-0.24375,0,0.90625,0.296875,0.4875,-0.253125,0,0.90625,0.2890625,0.4921875,-0.225,0,0.9101563,0.3125,0.4546875,-0.2601562,0,0.8789063,0.2832031,0.45,-0.2554688,0,0.875,0.2871094,0.4429688,-0.2015625,0,0.8691406,0.3320313,0.4429688,-0.2554688,0,0.8691406,0.2871094,0.4382813,-0.2601562,0,0.8652344,0.2832031,0.4289063,-0.20625,0,0.8574219,0.328125,0.4382813,-0.2625,0,0.8652344,0.28125,0.5109375,-0.2414063,0,0.9257813,0.2988281,0.5132813,-0.2554688,0,0.9277344,0.2871094,0.5132813,-0.2460938,0,0.9277344,0.2949219,0.5085937,-0.2578125,0,0.9238281,0.2851563,0.4875,-0.2578125,0,0.90625,0.2851563,0.4546875,-0.2671875,0,0.8789063,0.2773438,0.4171875,-0.2273438,0,0.8476563,0.3105469,0.4078125,-0.2929688,0,0.8398438,0.2558594,0.4476563,-0.2695313,0,0.8730469,0.2753906,0.384375,-0.215625,0,0.8203125,0.3203125,0.3726563,0.0421875,0,0.8105469,0.5351563,0.365625,0.03984375,0,0.8046875,0.5332031],[51,49,232,48,232,49,231,232,48,47,231,48,220,218,229,217,229,218,215,229,217,226,229,215,214,226,215,51,35,50,228,50,35,232,35,51,231,35,232,47,35,231,230,228,35,227,228,230,220,228,227,229,228,220,226,228,229,212,228,226,219,220,227,214,212,226,225,212,224,209,224,212,210,224,209,221,224,210,222,224,221,223,222,221,216,218,219,220,219,218,217,218,216,215,217,216,213,215,216,214,215,213,211,214,213,212,214,211,208,211,213,210,208,213,212,211,209,208,209,211,210,209,208,18,16,76,15,76,16,75,76,15,13,75,15,74,75,13,14,74,13,207,206,204,205,204,206,201,204,205,202,204,201,203,202,201,200,199,196,198,196,199,197,196,198,193,196,197,194,196,193,195,194,193,192,191,189,190,189,191,188,189,190,187,189,188,186,187,188,184,187,186,183,184,186,185,184,183,173,165,181,164,181,165,182,173,160,181,160,173,164,160,181,163,160,164,180,179,176,178,176,179,177,176,178,174,176,177,175,176,174,172,175,174,165,172,174,173,172,165,156,162,171,88,171,162,170,171,88,170,86,85,88,87,170,86,170,87,169,168,4,3,4,168,166,3,168,167,3,166,165,151,164,155,164,151,163,164,155,161,163,155,162,161,155,146,162,155,88,162,146,163,161,160,156,160,161,162,156,161,160,156,159,157,159,156,158,157,156,151,149,155,148,155,149,146,155,148,145,89,88,91,90,145,89,145,90,154,153,152,91,152,153,150,152,91,145,150,91,149,150,145,151,150,149,148,149,145,146,148,145,147,146,145,144,143,141,142,141,143,140,141,142,138,141,140,137,138,140,139,138,137,136,135,134,131,134,135,132,134,131,133,132,131,130,129,127,128,127,129,124,127,128,125,127,124,126,125,124,123,122,119,121,119,122,118,119,121,120,119,118,117,115,116,113,116,115,112,113,115,114,113,112,111,109,110,108,110,109,105,108,109,106,108,105,107,106,105,104,103,102,99,102,103,101,102,99,100,101,99,7,100,99,6,7,99,98,94,97,95,97,94,96,95,94,11,81,10,93,92,91,21,91,92,90,91,21,89,90,21,88,89,21,87,88,21,86,87,21,85,86,21,84,85,21,20,84,21,83,84,20,78,84,83,79,84,78,82,78,83,81,78,82,11,78,81,9,78,11,80,79,78,17,18,77,76,77,18,73,77,76,75,73,76,74,73,75,14,73,74,12,73,14,54,73,12,72,73,54,24,72,54,70,72,24,22,70,24,71,70,22,25,31,52,36,39,69,67,69,39,68,67,39,59,58,39,66,39,58,56,66,58,65,66,56,57,65,56,61,65,57,63,65,61,63,44,64,46,45,62,43,62,45,60,62,43,44,60,43,61,60,44,63,61,44,41,46,40,62,40,46,38,40,62,39,38,62,60,39,62,59,39,60,55,59,60,57,55,60,61,57,60,59,55,58,56,58,55,57,56,55,54,42,24,23,24,42,22,23,42,53,22,42,33,53,42,28,53,33,32,33,42,30,32,42,31,30,42,52,31,42,50,52,42,49,50,42,51,50,49,48,49,42,47,48,42,45,47,42,41,47,45,35,47,41,37,35,41,46,41,45,43,45,42,44,43,42,37,41,34,40,34,41,36,34,40,38,36,40,39,36,38,37,34,35,36,35,34,28,33,25,32,25,33,30,25,32,31,25,30,29,28,26,25,26,28,27,26,25,24,23,22,21,12,20,19,20,12,10,19,12,9,10,12,17,9,12,16,17,12,18,17,16,15,16,12,13,15,12,14,13,12,11,10,9,8,7,5,6,5,7,4,5,6,1,5,4,3,1,4,0,1,3,2,1,0],-0.000100225210189819,-0.000148672610521317,0.999899744987488,0.99985134601593,0.080078125,0.029296875,0.984375,0.80859375,0,0,0,0,[0,0,0,0],[-0.6,-0.6,0.6,0.6],426.666656494141,512,512,512,512,256,256,41.0513153076172,15.0761203765869]},{"id":26126,"path":"Assets/Content/Sprites/Ingredients/ginger.png","assetBundleId":-1,"data":["ginger",6,26124,[0.07265624,-0.03749999,0,0.4851563,0.3609375,0],[0.3210938,0.1148438,0,0.7675781,0.5957031,0.3117188,0.1101563,0,0.7597656,0.5917969,0.3164063,0.1101563,0,0.7636719,0.5917969,0.3070312,0.1148438,0,0.7558594,0.5957031,0.3210938,0.1195313,0,0.7675781,0.5996094,0.3210938,0.1148438,0,0.7675781,0.5957031,0.3164063,0.1242188,0,0.7636719,0.6035156,0.3117188,0.1242188,0,0.7597656,0.6035156,0.3070312,0.1195313,0,0.7558594,0.5996094,0.3070312,0.1148438,0,0.7558594,0.5957031,0.5578125,0.1125,0,0.9648438,0.59375,0.5554687,0.1054688,0,0.9628906,0.5878906,0.5578125,-0.05859375,0,0.9648438,0.4511719,0.553125,0.1078125,0,0.9609375,0.5898438,0.5203125,0.1078125,0,0.9335938,0.5898438,0.4265625,-0.1125,0,0.8554688,0.40625,0.5203125,0.0890625,0,0.9335938,0.5742188,0.3304687,0.1148438,0,0.7753906,0.5957031,0.3023438,-0.1382813,0,0.7519531,0.3847656,0.2414063,-0.3398438,0,0.7011719,0.2167969,0.1664063,0.1101563,0,0.6386719,0.5917969,0.1125,0.215625,0,0.59375,0.6796875,0.09375,-0.3890625,0,0.578125,0.1757813,0.0796875,-0.3820313,0,0.5664063,0.1816406,0.07734375,0.2390625,0,0.5644531,0.6992188,0.0515625,0.2671875,0,0.5429688,0.7226563,0.5554687,0.05390625,0,0.9628906,0.5449219,0.553125,-0.0609375,0,0.9609375,0.4492188,0.5484375,0.0515625,0,0.9570313,0.5429688,0.5296875,0.06796875,0,0.9414063,0.5566406,0.2296875,0.1289063,0,0.6914063,0.6074219,0.2320313,0.1171875,0,0.6933594,0.5976563,0.2320313,0.121875,0,0.6933594,0.6015625,0.2085938,0.13125,0,0.6738281,0.609375,0.1804688,0.1335938,0,0.6503906,0.6113281,0.1757813,0.1289063,0,0.6464844,0.6074219,0.1757813,0.1171875,0,0.6464844,0.5976563,-0.290625,0.1828125,0,0.2578125,0.6523438,-0.3328125,0.1289063,0,0.2226563,0.6074219,-0.2882813,0.1828125,0,0.2597656,0.6523438,-0.3445313,0.1289063,0,0.2128906,0.6074219,-0.3492188,0.140625,0,0.2089844,0.6171875,-0.3492188,0.13125,0,0.2089844,0.609375,-0.1640625,0.2578125,0,0.3632813,0.7148438,-0.1710937,0.2320313,0,0.3574219,0.6933594,-0.1640625,0.2414063,0,0.3632813,0.7011719,-0.1921875,0.2320313,0,0.3398438,0.6933594,-0.2039063,0.2601562,0,0.3300781,0.7167969,-0.2039063,0.2507813,0,0.3300781,0.7089844,-0.1757813,0.31875,0,0.3535156,0.765625,-0.1640625,0.31875,0,0.3632813,0.765625,-0.2039063,0.28125,0,0.3300781,0.734375,-0.0984375,0.309375,0,0.4179688,0.7578125,-0.1453125,0.2953125,0,0.3789063,0.7460938,-0.1265625,0.2554688,0,0.3945313,0.7128906,-0.2226563,0.2625,0,0.3144531,0.71875,-0.2765625,0.1828125,0,0.2695313,0.6523438,-0.2742188,0.1804688,0,0.2714844,0.6503906,-0.2742188,0.1734375,0,0.2714844,0.6445313,-0.28125,0.1664063,0,0.265625,0.6386719,-0.328125,0.1289063,0,0.2265625,0.6074219,0.01640625,0.2835937,0,0.5136719,0.7363281,0.00234375,0.309375,0,0.5019531,0.7578125,0.01640625,0.2765625,0,0.5136719,0.7304688,0.02109375,0.2882813,0,0.5175781,0.7402344,0.028125,0.2882813,0,0.5234375,0.7402344,0.0328125,0.2882813,0,0.5273438,0.7402344,0.3773438,-0.2226563,0,0.8144531,0.3144531,0.3796875,-0.2132813,0,0.8164063,0.3222656,0.07734375,0.2203125,0,0.5644531,0.6835938,0.06328125,0.2203125,0,0.5527344,0.6835938,0.04921875,-0.3914063,0,0.5410156,0.1738281,0.0375,0.2414063,0,0.53125,0.7011719,-0.02109375,0.309375,0,0.4824219,0.7578125,-0.0328125,0.309375,0,0.4726563,0.7578125,-0.06328125,-0.3984375,0,0.4472656,0.1679688,-0.1875,-0.3984375,0,0.34375,0.1679688,-0.384375,-0.159375,0,0.1796875,0.3671875,-0.3984375,0.0515625,0,0.1679688,0.5429688,-0.4125,-0.01640625,0,0.15625,0.4863281,-0.4125,-0.1007813,0,0.15625,0.4160156,-0.01875,0.31875,0,0.484375,0.765625,-0.01875,0.3140625,0,0.484375,0.7617188,-0.02578125,0.3234375,0,0.4785156,0.7695313,-0.0328125,0.3234375,0,0.4726563,0.7695313,-0.0375,0.3210938,0,0.46875,0.7675781,-0.0375,0.3164063,0,0.46875,0.7636719],[86,85,74,84,74,85,73,74,84,83,73,84,81,73,83,82,73,81,63,61,72,64,72,61,65,72,64,25,72,65,70,72,25,24,70,25,69,70,24,80,79,77,78,77,79,38,77,78,76,77,38,60,76,38,59,76,60,58,76,59,57,76,58,55,76,57,48,76,55,46,76,48,44,76,46,75,76,44,45,75,44,43,75,45,54,75,43,52,75,54,74,75,52,71,75,74,73,71,74,62,71,73,63,71,62,72,71,63,70,71,72,23,71,70,69,23,70,24,23,69,19,18,67,68,67,18,65,66,25,48,55,47,65,64,62,61,62,64,63,62,61,38,39,60,59,60,39,56,59,39,58,59,56,57,58,56,39,55,56,57,56,55,54,53,52,47,51,43,49,43,51,50,43,49,48,47,46,43,46,47,44,46,43,45,44,43,42,41,40,37,40,41,38,40,37,39,38,37,36,35,31,34,31,35,33,31,34,30,31,33,32,31,30,16,14,29,13,29,14,28,29,13,26,28,13,11,26,13,15,16,27,29,27,16,28,27,29,26,27,28,12,27,26,11,12,26,25,21,24,23,24,21,22,23,21,19,22,21,20,19,21,3,19,20,18,19,3,15,18,3,1,15,3,2,15,1,0,15,2,17,15,0,14,15,17,10,14,17,16,15,14,13,14,10,11,13,10,12,11,10,9,8,3,7,3,8,0,3,7,6,0,7,4,0,6,5,0,4,3,0,1,2,1,0],-0.0000252127647399902,-0.000148668885231018,0.99997478723526,0.99985134601593,0.15625,0.16796875,0.96484375,0.76953125,0,0,0,0,[0,0,0,0],[-0.6,-0.6,0.6,0.6],426.666656494141,512,512,512,512,256,256,80.0129089355469,86.0761184692383]},{"id":26132,"path":"Assets/Content/Sprites/Ingredients/mushroom.png","assetBundleId":-1,"data":["mushroom",6,26130,[-0.0234375,-0.007031247,0,0.4429688,0.2367188,0],[0.4195313,0.1054688,0,0.8496094,0.5878906,0.4171875,-0.1359375,0,0.8476563,0.3867188,0.4195313,-0.1265625,0,0.8496094,0.3945313,0.3914063,0.1640625,0,0.8261719,0.6367188,0.3210938,0.2296875,0,0.7675781,0.6914063,0.3070312,-0.2039063,0,0.7558594,0.3300781,0.1734375,0.2296875,0,0.6445313,0.6914063,0.1289063,-0.2015625,0,0.6074219,0.3320313,0.1101563,0.196875,0,0.5917969,0.6640625,0.07265625,0.2085938,0,0.5605469,0.6738281,0.065625,-0.16875,0,0.5546875,0.359375,0.03046875,-0.225,0,0.5253906,0.3125,-0.02578125,-0.24375,0,0.4785156,0.296875,-0.03046875,0.2132813,0,0.4746094,0.6777344,-0.1570313,0.1453125,0,0.3691406,0.6210938,-0.196875,-0.24375,0,0.3359375,0.296875,-0.2296875,0.2039063,0,0.3085938,0.6699219,-0.290625,-0.140625,0,0.2578125,0.3828125,-0.3585938,0.2039063,0,0.2011719,0.6699219,-0.4664063,0.1148438,0,0.1113281,0.5957031,-0.4664063,-0.1265625,0,0.1113281,0.3945313],[20,19,17,18,17,19,16,17,18,15,17,16,14,15,16,12,15,14,13,12,14,9,12,13,11,12,9,10,11,9,7,10,9,8,7,9,6,7,8,5,7,6,4,5,6,1,5,4,3,1,4,0,1,3,2,1,0],-0.000148676335811615,-0.000110089778900146,0.99985134601593,0.9998899102211,0.111328125,0.296875,0.849609375,0.69140625,0,0,0,0,[0,0,0,0],[-0.6,-0.6,0.6,0.6],426.666656494141,512,512,512,512,256,256,57.0761222839355,152.056365966797]},{"id":26170,"path":"Assets/Content/Sprites/Tiles/Special/tile_ice_1.png","assetBundleId":-1,"data":["tile_ice_1",6,26168,[0,0,0,0.5688889,0.5688889,0],[0.5466667,0.36,0,0.9804688,0.8164063,0.5688889,-0.2933333,0,1,0.2421875,0.5688889,0.1688889,0,1,0.6484375,0.52,0.4577778,0,0.9570313,0.9023438,0.4622222,-0.4666667,0,0.90625,0.08984375,0.4266667,0.5688889,0,0.875,1,0.3377778,-0.5644444,0,0.796875,0.00390628,0.3155555,-0.5688889,0,0.7773438,0,-0.32,-0.5688889,0,0.21875,0,-0.3644444,-0.5555556,0,0.1796875,0.01171872,-0.4088889,0.5688889,0,0.140625,1,-0.4311111,0.5555556,0,0.1210938,0.9882813,-0.48,-0.4488889,0,0.078125,0.1054688,-0.4933333,0.5022222,0,0.06640625,0.9414063,-0.5066667,-0.3822222,0,0.0546875,0.1640625,-0.5244445,-0.3022222,0,0.0390625,0.234375,-0.5333334,-0.1822222,0,0.03124997,0.3398438,-0.5511111,0.3733333,0,0.015625,0.828125,-0.56,0.2266667,0,0.0078125,0.6992188,-0.5688889,0.1111111,0,0,0.5976563,-0.5688889,-0.06222222,0,0,0.4453125],[20,19,16,18,16,19,17,16,18,13,16,17,15,16,13,14,15,13,12,14,13,11,12,13,9,12,11,10,9,11,5,9,10,8,9,5,7,8,5,6,7,5,4,6,5,3,4,5,1,4,3,0,1,3,2,1,0],0,0,1,1,0,0,1,1,0,0,0,0,[0,0,0,0],[-0.5688889,-0.5688889,0.5688889,0.5688889],225,256,256,256,256,128,128,0,0]},{"id":26182,"path":"Assets/Content/Sprites/Tiles/Special/tile_link.png","assetBundleId":-1,"data":["tile_link",6,26180,[-0.002222218,0.03333333,0,0.18,0.4111111,0],[-0.1422222,-0.2711111,0,0.375,0.2617188,-0.1377778,-0.32,0,0.3789063,0.21875,-0.1377778,-0.2755556,0,0.3789063,0.2578125,-0.16,-0.2711111,0,0.359375,0.2617188,-0.1688889,-0.2755556,0,0.3515625,0.2578125,-0.1688889,-0.32,0,0.3515625,0.21875,-0.1688889,0.09777778,0,0.3515625,0.5859375,-0.1733333,0.06666667,0,0.3476563,0.5585938,-0.1688889,0.06666667,0,0.3515625,0.5585938,-0.1777778,0.09777778,0,0.34375,0.5859375,-0.1822222,0.08444444,0,0.3398438,0.5742188,-0.1822222,0.07555556,0,0.3398438,0.5664063,-0.1511111,0.09333333,0,0.3671875,0.5820313,-0.1555556,0.06666667,0,0.3632813,0.5585938,-0.1511111,0.07555556,0,0.3671875,0.5664063,-0.16,0.09777778,0,0.359375,0.5859375,-0.16,0.4266667,0,0.359375,0.875,-0.1688889,0.4222222,0,0.3515625,0.8710938,-0.16,0.4266667,0,0.359375,0.875,-0.1733333,0.4,0,0.3476563,0.8515625,-0.1688889,0.4,0,0.3515625,0.8515625,-0.1822222,0.4266667,0,0.3398438,0.875,-0.1822222,0.4044445,0,0.3398438,0.8554688,0.1733333,0.4222222,0,0.6523438,0.8710938,0.1777778,0.2088889,0,0.65625,0.6835938,0.1777778,0.3866667,0,0.65625,0.8398438,0.1511111,0.4444444,0,0.6328125,0.890625,0.1333333,0.1066667,0,0.6171875,0.59375,-0.07555556,0.4444444,0,0.4335938,0.890625,0.1777778,-0.3777778,0,0.65625,0.1679688,0.1777778,0.06222222,0,0.65625,0.5546875,-0.1244444,0.44,0,0.390625,0.8867188,-0.1377778,-0.3777778,0,0.3789063,0.1679688,-0.1688889,-0.3511111,0,0.3515625,0.1914063,-0.1555556,0.4222222,0,0.3632813,0.8710938,-0.1555556,0.4088889,0,0.3632813,0.859375,-0.16,0.4,0,0.359375,0.8515625],[20,17,36,18,36,17,35,36,18,34,35,18,6,20,15,36,15,20,12,15,36,35,12,36,34,12,35,4,8,3,13,3,8,0,3,13,14,0,13,12,0,14,18,31,34,12,34,31,0,12,31,2,0,31,33,5,32,1,32,5,29,32,1,2,29,1,31,29,2,28,29,31,27,29,28,30,29,27,28,26,27,24,27,26,23,24,26,25,24,23,22,21,19,17,19,21,16,17,21,20,19,17,18,17,16,8,6,13,15,13,6,12,13,15,14,13,12,11,10,7,9,7,10,6,7,9,8,7,6,5,4,1,3,1,4,0,1,3,2,1,0],-0.000297337770462036,-0.000104501843452454,0.99970269203186,0.999895513057709,0.33984375,0.16796875,0.65625,0.890625,0,0,0,0,[0,0,0,0],[-0.5688889,-0.5688889,0.5688889,0.5688889],225,256,256,256,256,128,128,87.0761184692383,43.0267524719238]},{"id":26218,"path":"Assets/Content/Sprites/Ingredients/chiken broth.png","assetBundleId":-1,"data":["chiken broth",6,26216,[0,-0.09609376,0,0.553125,0.3679687,0],[0.1804688,-0.4359375,0,0.6503906,0.1367188,0.1851563,-0.4523438,0,0.6542969,0.1230469,0.1851563,-0.440625,0,0.6542969,0.1328125,0.1734375,-0.4570313,0,0.6445313,0.1191406,0.1710937,-0.4359375,0,0.6425781,0.1367188,0.1617188,-0.4476563,0,0.6347656,0.1269531,0.1617188,-0.4570313,0,0.6347656,0.1191406,0.09375,-0.328125,0,0.578125,0.2265625,0.05859375,-0.3234375,0,0.5488281,0.2304688,0.09375,-0.3421875,0,0.578125,0.2148438,-0.253125,-0.3351563,0,0.2890625,0.2207031,-0.28125,-0.3375,0,0.265625,0.21875,-0.2460938,-0.3375,0,0.2949219,0.21875,-0.2835937,-0.3351563,0,0.2636719,0.2207031,-0.00703125,-0.4640625,0,0.4941406,0.1132813,-0.00703125,-0.4289063,0,0.4941406,0.1425781,-0.3,-0.3351563,0,0.25,0.2207031,-0.3,-0.4640625,0,0.25,0.1132813,-0.3539062,-0.234375,0,0.2050781,0.3046875,-0.3539062,-0.2929688,0,0.2050781,0.2558594,-0.3539062,-0.2484375,0,0.2050781,0.2929688,-0.365625,-0.3070312,0,0.1953125,0.2441406,-0.3679688,-0.2296875,0,0.1933594,0.3085938,-0.3773438,-0.2109375,0,0.1855469,0.3242188,-0.3773438,-0.2109375,0,0.1855469,0.3242188,-0.3867188,-0.3070312,0,0.1777344,0.2441406,-0.39375,-0.2109375,0,0.171875,0.3242188,-0.3960938,-0.2132813,0,0.1699219,0.3222656,-0.3960938,-0.215625,0,0.1699219,0.3203125,-0.4007813,-0.290625,0,0.1660156,0.2578125,-0.403125,-0.2367188,0,0.1640625,0.3027344,-0.403125,-0.2765625,0,0.1640625,0.2695313,-0.3539062,-0.2320313,0,0.2050781,0.3066406,-0.3210938,-0.2484375,0,0.2324219,0.2929688,-0.3046875,-0.3539062,0,0.2460938,0.2050781,-0.3046875,-0.2554688,0,0.2460938,0.2871094,-0.3304687,-0.3539062,0,0.2246094,0.2050781,-0.3539062,-0.31875,0,0.2050781,0.234375,-0.3046875,-0.2484375,0,0.2460938,0.2929688,-0.2039063,0.271875,0,0.3300781,0.7265625,-0.4101563,0.178125,0,0.1582031,0.6484375,-0.4265625,-0.1101563,0,0.1445313,0.4082031,-0.4382813,-0.1171875,0,0.1347656,0.4023438,-0.4523438,-0.1171875,0,0.1230469,0.4023438,-0.4664063,-0.1148438,0,0.1113281,0.4042969,-0.4757813,-0.1476562,0,0.1035156,0.3769531,-0.5109375,-0.1429688,0,0.07421875,0.3808594,-0.5367188,-0.1359375,0,0.05273435,0.3867188,-0.553125,-0.0421875,0,0.0390625,0.4648438,-0.553125,-0.0984375,0,0.0390625,0.4179688,-0.1476562,-0.3140625,0,0.3769531,0.2382813,-0.1710937,-0.309375,0,0.3574219,0.2421875,-0.1570313,-0.3140625,0,0.3691406,0.2382813,0.0984375,-0.328125,0,0.5820313,0.2265625,0.1171875,-0.346875,0,0.5976563,0.2109375,0.1148438,-0.3398438,0,0.5957031,0.2167969,0.1171875,-0.3539062,0,0.5976563,0.2050781,0.1171875,-0.3492188,0,0.5976563,0.2089844,0.046875,-0.3539062,0,0.5390625,0.2050781,-0.0421875,-0.3234375,0,0.4648438,0.2304688,-0.0421875,-0.346875,0,0.4648438,0.2109375,0.4570313,-0.20625,0,0.8808594,0.328125,0.4476563,-0.2367188,0,0.8730469,0.3027344,0.4570313,-0.2226563,0,0.8808594,0.3144531,0.4429688,-0.1921875,0,0.8691406,0.3398438,0.43125,-0.2367188,0,0.859375,0.3027344,0.421875,-0.1921875,0,0.8515625,0.3398438,0.4125,-0.20625,0,0.84375,0.328125,0.4125,-0.2203125,0,0.84375,0.3164063,0.375,-0.3328125,0,0.8125,0.2226563,0.39375,-0.4335938,0,0.828125,0.1386719,0.3914063,-0.3234375,0,0.8261719,0.2304688,0.3539062,-0.3375,0,0.7949219,0.21875,0.2085938,-0.403125,0,0.6738281,0.1640625,0.1945313,-0.4335938,0,0.6621094,0.1386719,0.3257813,-0.1945313,0,0.7714844,0.3378906,0.2882813,-0.3,0,0.7402344,0.25,0.3726563,-0.225,0,0.8105469,0.3125,0.2601562,-0.2882813,0,0.7167969,0.2597656,0.253125,-0.2742188,0,0.7109375,0.2714844,0.1546875,-0.2835937,0,0.6289063,0.2636719,0.1265625,-0.346875,0,0.6054688,0.2109375,0.1359375,-0.3515625,0,0.6132813,0.2070313,0.1335938,-0.346875,0,0.6113281,0.2109375,0.1242188,-0.3492188,0,0.6035156,0.2089844,0.13125,-0.3585938,0,0.609375,0.2011719,0.1359375,-0.3539062,0,0.6132813,0.2050781,0.1242188,-0.3585938,0,0.6035156,0.2011719,0.121875,-0.3515625,0,0.6015625,0.2070313,-0.07265625,-0.3234375,0,0.4394531,0.2304688,-0.0703125,-0.3398438,0,0.4414063,0.2167969,-0.0703125,-0.328125,0,0.4414063,0.2265625,-0.1101563,-0.3234375,0,0.4082031,0.2304688,-0.1101563,-0.3398438,0,0.4082031,0.2167969,-0.1125,-0.3304687,0,0.40625,0.2246094,-0.1125,-0.3375,0,0.40625,0.21875,-0.1289063,-0.3375,0,0.3925781,0.21875,-0.1289063,-0.31875,0,0.3925781,0.234375,-0.225,-0.2953125,0,0.3125,0.2539063,-0.2578125,-0.2882813,0,0.2851563,0.2597656,-0.290625,-0.2882813,0,0.2578125,0.2597656,-0.290625,-0.3257813,0,0.2578125,0.2285156,-0.4382813,-0.1804688,0,0.1347656,0.3496094,-0.421875,-0.1875,0,0.1484375,0.34375,-0.4171875,-0.1804688,0,0.1523438,0.3496094,-0.4617188,-0.1875,0,0.1152344,0.34375,-0.4265625,-0.1148438,0,0.1445313,0.4042969,-0.403125,-0.159375,0,0.1640625,0.3671875,-0.4640625,-0.1171875,0,0.1132813,0.4023438,-0.4828125,-0.1875,0,0.09765625,0.34375,-0.515625,-0.1804688,0,0.0703125,0.3496094,-0.5203125,-0.1476562,0,0.06640628,0.3769531,-0.5273438,-0.159375,0,0.06054688,0.3671875,-0.403125,-0.225,0,0.1640625,0.3125,-0.3960938,-0.1804688,0,0.1699219,0.3496094,-0.4125,-0.2625,0,0.15625,0.28125,-0.4171875,-0.2648438,0,0.1523438,0.2792969,-0.43125,-0.2648438,0,0.140625,0.2792969,-0.4921875,-0.196875,0,0.08984375,0.3359375,-0.4921875,-0.2132813,0,0.08984375,0.3222656,0.4078125,-0.2578125,0,0.8398438,0.2851563,0.4078125,-0.271875,0,0.8398438,0.2734375,0.4101563,-0.2648438,0,0.8417969,0.2792969,0.384375,-0.2578125,0,0.8203125,0.2851563,0.384375,-0.271875,0,0.8203125,0.2734375,0.3820313,-0.2648438,0,0.8183594,0.2792969,0.4335938,-0.253125,0,0.8613281,0.2890625,0.4265625,-0.2507813,0,0.8554688,0.2910156,0.4148438,-0.2578125,0,0.8457031,0.2851563,0.4453125,-0.1898438,0,0.8710938,0.3417969,0.4640625,-0.1898438,0,0.8867188,0.3417969,0.4335938,-0.1757813,0,0.8613281,0.3535156,0.5273438,-0.0515625,0,0.9394531,0.4570313,0.459375,-0.1523438,0,0.8828125,0.3730469,0.4757813,-0.1664063,0,0.8964844,0.3613281,0.4429688,-0.1523438,0,0.8691406,0.3730469,0.4335938,-0.05625,0,0.8613281,0.453125,0.4335938,-0.1640625,0,0.8613281,0.3632813,0.4195313,-0.1476562,0,0.8496094,0.3769531,0.3796875,-0.328125,0,0.8164063,0.2265625,0.3117188,-0.3421875,0,0.7597656,0.2148438,0.2625,-0.3773438,0,0.71875,0.1855469,0.09375,-0.3,0,0.578125,0.25,0.5273438,-0.04453125,0,0.9394531,0.4628906,0.384375,-0.04453125,0,0.8203125,0.4628906,0.09375,-0.1992188,0,0.578125,0.3339844,0.4101563,0.271875,0,0.8417969,0.7265625,0.5273438,0.0421875,0,0.9394531,0.5351563,0.0375,-0.3140625,0,0.53125,0.2382813,0.553125,-0.2578125,0,0.9609375,0.2851563,0.553125,-0.04453125,0,0.9609375,0.4628906,0.4757813,-0.1851563,0,0.8964844,0.3457031,0.4335938,-0.2578125,0,0.8613281,0.2851563,0.4242188,-0.2648438,0,0.8535156,0.2792969,0.4171875,-0.2648438,0,0.8476563,0.2792969],[128,127,154,153,154,127,152,153,127,126,152,127,131,137,129,135,129,137,133,129,135,130,129,133,134,130,133,151,130,134,139,125,71,124,71,125,121,71,124,70,71,121,149,70,121,153,149,121,122,153,121,154,153,122,128,154,122,68,128,122,152,149,153,126,149,152,62,149,126,63,149,62,61,149,63,130,149,61,151,149,130,134,149,151,132,149,134,143,149,132,150,149,143,35,38,51,39,51,38,146,51,39,50,51,146,145,50,146,148,50,145,142,148,145,144,145,146,143,144,146,147,143,146,142,145,80,144,80,145,75,80,144,77,75,144,138,77,144,136,138,144,143,136,144,132,136,143,7,142,53,80,53,142,55,53,80,54,55,80,84,54,80,81,84,80,83,81,80,82,83,80,141,82,80,79,141,80,78,141,79,76,141,78,140,141,76,77,140,76,139,140,77,125,139,77,138,125,77,123,125,138,67,123,138,120,123,67,122,120,67,68,122,67,66,67,138,136,66,138,131,66,136,137,131,136,135,137,136,132,135,136,133,135,132,134,133,132,66,131,64,129,64,131,61,64,129,130,61,129,68,65,128,127,128,65,126,127,65,62,126,65,125,123,124,121,124,123,120,121,123,122,121,120,119,118,117,105,117,118,103,117,105,116,117,103,104,116,103,115,116,104,114,115,104,113,115,114,30,115,113,27,113,114,30,113,28,27,28,113,112,111,110,45,110,111,109,110,45,105,109,45,44,105,45,108,105,44,43,105,108,102,105,43,42,102,43,104,102,42,106,104,42,107,104,106,105,102,103,104,103,102,18,32,33,101,100,13,99,13,100,10,13,99,98,10,99,12,10,98,96,12,98,51,96,98,52,96,51,50,96,52,97,96,50,95,94,93,92,93,94,90,93,92,89,90,92,91,90,89,88,84,87,85,87,84,82,85,84,86,85,82,84,81,82,83,82,81,79,80,75,79,75,78,76,78,75,77,76,75,74,73,70,72,70,73,69,70,72,71,70,69,68,67,65,66,65,67,64,65,66,62,65,64,61,62,64,63,62,61,60,59,58,8,58,59,9,58,8,56,58,9,54,56,9,57,56,54,9,7,54,53,54,7,55,54,53,52,51,50,49,48,47,40,47,48,46,47,40,45,46,40,44,45,40,43,44,40,42,43,40,41,42,40,23,41,40,39,23,40,32,23,39,33,32,39,38,33,39,35,33,38,37,19,36,20,36,19,33,36,20,34,36,33,35,34,33,23,32,22,18,22,32,31,30,29,28,29,30,25,29,28,27,25,28,26,25,27,24,25,26,21,25,24,23,21,24,22,21,23,18,21,22,19,21,18,20,19,18,17,16,14,11,14,16,13,11,16,12,14,11,15,14,12,13,10,11,12,11,10,9,8,7,6,5,3,4,3,5,0,3,4,1,3,0,2,1,0],-0.000110100954771042,-0.000148676335811615,0.9998899102211,0.99985134601593,0.0390625,0.11328125,0.9609375,0.7265625,0,0,0,0,[0,0,0,0],[-0.6,-0.6,0.6,0.6],426.666656494141,512,512,512,512,256,256,20.0563716888428,58.0761222839355]},{"id":26334,"path":"Assets/Content/Sprites/Ingredients/tomato.png","assetBundleId":-1,"data":["tomato",6,26332,[0.01171875,-0.03398438,0,0.3890625,0.2800781,0],[0.3492188,0.1289063,0,0.7910156,0.6074219,0.35625,0.1171875,0,0.796875,0.5976563,0.35625,0.121875,0,0.796875,0.6015625,0.3351563,0.1289063,0,0.7792969,0.6074219,0.2929688,0.04921875,0,0.7441406,0.5410156,0.2554688,0.103125,0,0.7128906,0.5859375,0.3984375,-0.04921875,0,0.8320313,0.4589844,0.4007813,-0.2039063,0,0.8339844,0.3300781,0.4007813,-0.0984375,0,0.8339844,0.4179688,0.375,0.03046875,0,0.8125,0.5253906,0.346875,-0.28125,0,0.7890625,0.265625,0.309375,-0.3140625,0,0.7578125,0.2382813,0.2132813,0.178125,0,0.6777344,0.6484375,0.04921875,-0.3140625,0,0.5410156,0.2382813,-0.0796875,-0.2273438,0,0.4335938,0.3105469,-0.08203125,0.2460938,0,0.4316406,0.7050781,-0.159375,-0.2273438,0,0.3671875,0.3105469,-0.2765625,-0.1898438,0,0.2695313,0.3417969,-0.2976563,0.2460938,0,0.2519531,0.7050781,-0.3257813,-0.13125,0,0.2285156,0.390625,-0.3726563,-0.02578125,0,0.1894531,0.4785156,-0.3773438,0.1570313,0,0.1855469,0.6308594,-0.3773438,0.04453125,0,0.1855469,0.5371094],[22,21,20,18,20,21,19,20,18,17,19,18,15,17,18,16,17,15,14,16,15,12,14,15,13,14,12,11,13,12,5,11,12,4,11,5,9,11,4,10,11,9,7,10,9,6,7,9,8,7,6,5,3,4,1,4,3,0,1,3,2,1,0],-0.000148668885231018,-0.000148668885231018,0.99985134601593,0.99985134601593,0.185546875,0.23828125,0.833984375,0.705078125,0,0,0,0,[0,0,0,0],[-0.6,-0.6,0.6,0.6],426.666656494141,512,512,512,512,256,256,95.0761184692383,122.076118469238]},{"id":26498,"path":"Assets/Content/Sprites/Ingredients/butter.png","assetBundleId":-1,"data":["butter",6,26496,[-0.01289064,0.001171879,0,0.4230469,0.2496094,0],[0.2460938,0.1734375,0,0.7050781,0.6445313,0.290625,0.0375,0,0.7421875,0.53125,0.3257813,0.1335938,0,0.7714844,0.6113281,0.2484375,-0.2484375,0,0.7070313,0.2929688,0.1945313,0.215625,0,0.6621094,0.6796875,0.1734375,0.2226563,0,0.6445313,0.6855469,0.13125,-0.234375,0,0.609375,0.3046875,0.0703125,-0.24375,0,0.5585938,0.296875,-0.028125,-0.2273438,0,0.4765625,0.3105469,-0.05390625,0.2507813,0,0.4550781,0.7089844,-0.1875,-0.1851563,0,0.34375,0.3457031,-0.1992188,0.2507813,0,0.3339844,0.7089844,-0.3609375,-0.1382813,0,0.1992188,0.3847656,-0.3773438,0.1453125,0,0.1855469,0.6210938,-0.4054688,-0.1101563,0,0.1621094,0.4082031,-0.4359375,0.0984375,0,0.1367188,0.5820313,-0.4359375,0.00703125,0,0.1367188,0.5058594,0.403125,0.02578125,0,0.8359375,0.5214844,0.4101563,-0.05625,0,0.8417969,0.453125,0.4101563,0.0140625,0,0.8417969,0.5117188,0.3609375,-0.1734375,0,0.8007813,0.3554688,0.31875,-0.2484375,0,0.765625,0.2929688],[3,1,21,17,21,1,20,21,17,18,20,17,19,18,17,16,15,14,13,14,15,12,14,13,11,12,13,10,12,11,9,10,11,8,10,9,5,8,9,7,8,5,6,7,5,3,6,5,4,3,5,0,3,4,1,3,0,2,1,0],-0.000148668885231018,-0.000148683786392212,0.99985134601593,0.99985134601593,0.13671875,0.29296875,0.841796875,0.708984375,0,0,0,0,[0,0,0,0],[-0.6,-0.6,0.6,0.6],426.666656494141,512,512,512,512,256,256,70.0761184692383,150.076126098633]},{"id":26354,"path":"Assets/Content/Sprites/Ingredients/tofu.png","assetBundleId":-1,"data":["tofu",6,26352,[-0.008203134,0.01992188,0,0.3363281,0.2566406,0],[0.328125,0.1804688,0,0.7734375,0.6503906,0.31875,0.01875,0,0.765625,0.515625,0.328125,0.028125,0,0.7734375,0.5234375,0.3070312,0.1921875,0,0.7558594,0.6601563,0.2109375,-0.05859375,0,0.6757813,0.4511719,0.09375,0.2765625,0,0.578125,0.7304688,0.046875,-0.1734375,0,0.5390625,0.3554688,0.04453125,0.2765625,0,0.5371094,0.7304688,-0.0796875,-0.2367188,0,0.4335938,0.3027344,-0.1007813,-0.2367188,0,0.4160156,0.3027344,-0.1523438,0.2390625,0,0.3730469,0.6992188,-0.1828125,0.2226563,0,0.3476563,0.6855469,-0.20625,0.1242188,0,0.328125,0.6035156,-0.3210938,0.0609375,0,0.2324219,0.5507813,-0.3445313,0.0328125,0,0.2128906,0.5273438,-0.3445313,-0.0984375,0,0.2128906,0.4179688],[15,14,9,13,9,14,12,9,13,11,9,12,10,9,11,7,9,10,8,9,7,6,8,7,5,6,7,4,6,5,3,4,5,1,4,3,0,1,3,2,1,0],-0.000148668885231018,-0.0000522434711456299,0.99985134601593,0.999947786331177,0.212890625,0.302734375,0.7734375,0.73046875,0,0,0,0,[0,0,0,0],[-0.6,-0.6,0.6,0.6],426.666656494141,512,512,512,512,256,256,109.076118469238,155.026748657227]},{"id":26396,"path":"Assets/Content/Sprites/Ingredients/ygrt.png","assetBundleId":-1,"data":["ygrt",6,26394,[0.1335938,0.008203119,0,0.4664063,0.3996094,0],[0.2390625,-0.1617188,0,0.6992188,0.3652344,0.24375,-0.1734375,0,0.703125,0.3554688,0.24375,-0.16875,0,0.703125,0.359375,0.2390625,-0.1757813,0,0.6992188,0.3535156,0.234375,-0.1617188,0,0.6953125,0.3652344,0.2320313,-0.1757813,0,0.6933594,0.3535156,0.2296875,-0.1640625,0,0.6914063,0.3632813,0.2296875,-0.1710937,0,0.6914063,0.3574219,0.459375,-0.1570313,0,0.8828125,0.3691406,0.4640625,-0.1640625,0,0.8867188,0.3632813,0.4640625,-0.159375,0,0.8867188,0.3671875,0.459375,-0.1757813,0,0.8828125,0.3535156,0.3960938,-0.1757813,0,0.8300781,0.3535156,0.3585938,-0.1570313,0,0.7988281,0.3691406,0.3515625,-0.1710937,0,0.7929688,0.3574219,0.3492188,-0.1617188,0,0.7910156,0.3652344,0.3492188,-0.16875,0,0.7910156,0.359375,0.6,-0.15,0,1,0.375,0.590625,-0.1710937,0,0.9921875,0.3574219,0.6,-0.16875,0,1,0.359375,0.5085937,-0.15,0,0.9238281,0.375,0.4828125,-0.1570313,0,0.9023438,0.3691406,0.4828125,-0.1710937,0,0.9023438,0.3574219,-0.1265625,0.3234375,0,0.3945313,0.7695313,-0.2625,-0.0890625,0,0.28125,0.4257813,-0.2578125,-0.09375,0,0.2851563,0.421875,-0.2671875,-0.0890625,0,0.2773438,0.4257813,-0.271875,-0.09375,0,0.2734375,0.421875,-0.3328125,0.1453125,0,0.2226563,0.6210938,-0.271875,-0.0984375,0,0.2734375,0.4179688,0.290625,0.1757813,0,0.7421875,0.6464844,0.2203125,-0.2695313,0,0.6835938,0.2753906,0.2179688,0.24375,0,0.6816406,0.703125,0.1429688,-0.375,0,0.6191406,0.1875,0.05625,-0.3914063,0,0.546875,0.1738281,0.03046875,0.4078125,0,0.5253906,0.8398438,-0.05390625,0.4078125,0,0.4550781,0.8398438,-0.0796875,-0.3914063,0,0.4335938,0.1738281,-0.2578125,-0.0984375,0,0.2851563,0.4179688,-0.2625,-0.103125,0,0.28125,0.4140625,-0.2648438,-0.2953125,0,0.2792969,0.2539063,-0.2671875,-0.103125,0,0.2773438,0.4140625,-0.3328125,-0.05859375,0,0.2226563,0.4511719,0.4289063,-0.08671875,0,0.8574219,0.4277344,0.4242188,-0.09375,0,0.8535156,0.421875,0.4289063,-0.0890625,0,0.8574219,0.4257813,0.421875,-0.0796875,0,0.8515625,0.4335938,0.3867188,-0.0796875,0,0.8222656,0.4335938,0.384375,-0.09375,0,0.8203125,0.421875,0.3796875,-0.08671875,0,0.8164063,0.4277344,0.3796875,-0.0890625,0,0.8164063,0.4257813,0.2976563,0.03515625,0,0.7480469,0.5292969,0.3070312,0.03515625,0,0.7558594,0.5292969,0.3070312,0.03515625,0,0.7558594,0.5292969,0.3117188,0.06328125,0,0.7597656,0.5527344,0.3140625,0.05625,0,0.7617188,0.546875,0.3140625,0.065625,0,0.7617188,0.5546875,0.3117188,0.0515625,0,0.7597656,0.5429688,0.3117188,0.04921875,0,0.7597656,0.5410156,0.3140625,0.1125,0,0.7617188,0.59375,0.3070312,0.05390625,0,0.7558594,0.5449219,0.3,0.05390625,0,0.75,0.5449219,0.2976563,0.0515625,0,0.7480469,0.5429688,0.365625,0.1710937,0,0.8046875,0.6425781,0.3632813,0.15,0,0.8027344,0.625,0.365625,0.1453125,0,0.8046875,0.6210938,0.3609375,0.1546875,0,0.8007813,0.6289063,0.3867188,0.1851563,0,0.8222656,0.6542969,0.3960938,0.1453125,0,0.8300781,0.6210938,0.3960938,0.1734375,0,0.8300781,0.6445313,0.375,0.1851563,0,0.8125,0.6542969,0.3632813,0.140625,0,0.8027344,0.6171875,0.3585938,0.13125,0,0.7988281,0.609375,0.3445313,0.0515625,0,0.7871094,0.5429688,0.3257813,0.046875,0,0.7714844,0.5390625,0.3117188,0.046875,0,0.7597656,0.5390625,0.3117188,0.0375,0,0.7597656,0.53125,0.6,0.0375,0,1,0.53125,0.58125,0.0046875,0,0.984375,0.5039063,0.6,0.01640625,0,1,0.5136719,0.5625,0.0375,0,0.96875,0.53125,0.5390625,0.01875,0,0.9492188,0.515625,0.5390625,0.0046875,0,0.9492188,0.5039063,0.5109375,0.0328125,0,0.9257813,0.5273438,0.5179688,0.0234375,0,0.9316406,0.5195313,0.5179688,0.03046875,0,0.9316406,0.5253906,0.5109375,0.02109375,0,0.9257813,0.5175781,0.50625,0.028125,0,0.921875,0.5234375,0.3890625,0.09375,0,0.8242188,0.578125,0.3960938,0.084375,0,0.8300781,0.5703125,0.3960938,0.09140625,0,0.8300781,0.5761719,0.3890625,0.08203125,0,0.8242188,0.5683594,0.384375,0.0890625,0,0.8203125,0.5742188,0.3773438,0.075,0,0.8144531,0.5625,0.384375,0.065625,0,0.8203125,0.5546875,0.384375,0.07265625,0,0.8203125,0.5605469,0.3773438,0.06328125,0,0.8144531,0.5527344,0.3726563,0.0703125,0,0.8105469,0.5585938,0.365625,0.0609375,0,0.8046875,0.5507813,0.3726563,0.0515625,0,0.8105469,0.5429688,0.3726563,0.05859375,0,0.8105469,0.5488281,0.365625,0.04921875,0,0.8046875,0.5410156,0.3609375,0.05625,0,0.8007813,0.546875,0.5929688,0.1617188,0,0.9941406,0.6347656,0.6,0.0890625,0,1,0.5742188,0.6,0.1617188,0,1,0.6347656,0.5695313,0.05859375,0,0.9746094,0.5488281,0.5484375,0.05859375,0,0.9570313,0.5488281,0.5414063,0.06796875,0,0.9511719,0.5566406,0.5414063,0.065625,0,0.9511719,0.5546875,0.4828125,0.0703125,0,0.9023438,0.5585938,0.4757813,0.0609375,0,0.8964844,0.5507813,0.4828125,0.06328125,0,0.9023438,0.5527344,0.4734375,0.0609375,0,0.8945313,0.5507813,0.4710938,0.0890625,0,0.8925781,0.5742188,0.4640625,0.08671875,0,0.8867188,0.5722656,0.4617188,0.0796875,0,0.8847656,0.5664063,0.4617188,0.075,0,0.8847656,0.5625,0.4617188,0.1101563,0,0.8847656,0.5917969,0.4710938,0.09375,0,0.8925781,0.578125,0.4617188,0.0890625,0,0.8847656,0.5742188,0.45,0.1054688,0,0.875,0.5878906,0.45,0.09609375,0,0.875,0.5800781,0.4007813,0.121875,0,0.8339844,0.6015625,0.4078125,0.1125,0,0.8398438,0.59375,0.4078125,0.1195313,0,0.8398438,0.5996094,0.4007813,0.1101563,0,0.8339844,0.5917969,0.3960938,0.1171875,0,0.8300781,0.5976563,0.4453125,0.140625,0,0.8710938,0.6171875,0.4429688,0.1289063,0,0.8691406,0.6074219,0.4476563,0.1335938,0,0.8730469,0.6113281,0.4382813,0.140625,0,0.8652344,0.6171875,0.4359375,0.1289063,0,0.8632813,0.6074219,0.4335938,0.1359375,0,0.8613281,0.6132813,0.440625,0.1992188,0,0.8671875,0.6660156,0.4429688,0.1875,0,0.8691406,0.65625,0.4429688,0.1945313,0,0.8691406,0.6621094,0.4382813,0.1851563,0,0.8652344,0.6542969,0.4265625,0.1828125,0,0.8554688,0.6523438,0.3914063,0.1992188,0,0.8261719,0.6660156,0.3890625,0.196875,0,0.8242188,0.6640625,0.3890625,0.1828125,0,0.8242188,0.6523438],[141,140,138,139,138,140,134,138,139,137,138,134,135,137,134,136,135,134,133,131,132,129,132,131,128,129,131,130,129,128,127,123,126,124,126,123,125,124,123,122,121,120,118,120,121,114,120,118,119,114,118,117,116,113,115,113,116,114,113,115,110,113,114,111,113,110,112,111,110,109,108,107,103,107,108,106,107,103,104,106,103,105,104,103,102,98,101,99,101,98,100,99,98,97,93,96,94,96,93,95,94,93,92,88,91,89,91,88,90,89,88,87,83,86,84,86,83,85,84,83,82,81,78,80,78,81,77,78,80,79,78,77,53,58,76,75,76,58,51,62,52,61,52,62,60,52,61,53,52,60,57,53,60,58,53,57,75,58,74,55,74,58,56,74,55,72,74,56,73,74,72,68,73,72,71,68,72,65,68,71,64,65,71,63,68,65,70,68,63,67,68,70,69,68,67,66,63,64,65,64,63,59,62,30,51,30,62,61,62,59,60,61,59,54,60,59,57,60,54,56,54,59,58,57,55,54,55,57,56,55,54,7,5,31,3,31,5,1,31,3,53,31,1,2,53,1,52,53,2,51,52,2,30,51,2,50,49,48,47,48,49,44,48,47,46,44,47,43,44,46,45,44,43,29,27,41,26,41,27,39,41,26,24,39,26,38,39,24,25,38,24,42,28,40,29,40,28,41,40,29,39,40,41,37,40,39,38,37,39,25,37,38,23,37,25,36,37,23,34,37,36,35,34,36,32,34,35,33,34,32,31,33,32,6,31,32,30,6,32,7,31,6,4,6,30,0,4,30,2,0,30,23,27,28,29,28,27,26,27,23,24,26,23,25,24,23,22,21,18,20,18,21,17,18,20,19,18,17,16,15,14,13,14,15,12,14,13,8,12,13,11,12,8,9,11,8,10,9,8,7,6,5,4,5,6,3,5,4,0,3,4,1,3,0,2,1,0],-0.0000522434711456299,-0.000148668885231018,0.999947786331177,0.99985134601593,0.22265625,0.173828125,1,0.83984375,0,0,0,0,[0,0,0,0],[-0.6,-0.6,0.6,0.6],426.666656494141,512,512,512,512,256,256,114.026748657227,89.0761184692383]},{"id":26250,"path":"Assets/Content/Sprites/Ingredients/mashed potatoes.png","assetBundleId":-1,"data":["mashed potatoes",6,26248,[0,-0.03867188,0,0.6,0.5613282,0],[0.5601563,-0.4453125,0,0.9667969,0.1289063,0.6,-0.5179688,0,1,0.06835938,0.6,-0.4453125,0,1,0.1289063,0.28125,-0.6,0,0.734375,0,-0.15,-0.6,0,0.375,0,-0.3632813,-0.5320312,0,0.1972656,0.05664065,-0.3703125,-0.4828125,0,0.1914063,0.09765625,-0.3703125,-0.4921875,0,0.1914063,0.08984375,-0.3703125,-0.4945313,0,0.1914063,0.08789063,-0.3703125,-0.5179688,0,0.1914063,0.06835938,-0.375,-0.4992188,0,0.1875,0.08398438,-0.3773438,-0.4851563,0,0.1855469,0.09570313,-0.384375,-0.4851563,0,0.1796875,0.09570313,-0.384375,-0.4992188,0,0.1796875,0.08398438,-0.3890625,-0.4898438,0,0.1757813,0.09179688,-0.3890625,-0.4945313,0,0.1757813,0.08789063,-0.1617188,-0.4265625,0,0.3652344,0.1445313,-0.1570313,-0.4382813,0,0.3691406,0.1347656,-0.1570313,-0.43125,0,0.3691406,0.140625,-0.1617188,-0.4429688,0,0.3652344,0.1308594,-0.16875,-0.4265625,0,0.359375,0.1445313,-0.16875,-0.4429688,0,0.359375,0.1308594,-0.1734375,-0.43125,0,0.3554688,0.140625,-0.1734375,-0.4382813,0,0.3554688,0.1347656,0.1382813,-0.421875,0,0.6152344,0.1484375,0.1429688,-0.43125,0,0.6191406,0.140625,0.1429688,-0.4265625,0,0.6191406,0.1445313,0.1382813,-0.4359375,0,0.6152344,0.1367188,0.13125,-0.421875,0,0.609375,0.1484375,0.13125,-0.4359375,0,0.609375,0.1367188,0.1265625,-0.4265625,0,0.6054688,0.1445313,0.1265625,-0.43125,0,0.6054688,0.140625,-0.58125,-0.3304687,0,0.015625,0.2246094,-0.5859375,-0.3421875,0,0.01171875,0.2148438,-0.58125,-0.3375,0,0.015625,0.21875,-0.5929688,-0.3234375,0,0.005859375,0.2304688,-0.5953125,-0.3421875,0,0.00390622,0.2148438,-0.6,-0.3234375,0,0,0.2304688,-0.6,-0.3398438,0,0,0.2167969,0.1546875,0.2953125,0,0.6289063,0.7460938,0.1523438,0.2882813,0,0.6269531,0.7402344,0.1546875,0.28125,0,0.6289063,0.734375,0.15,0.3,0,0.625,0.75,0.1429688,0.3304687,0,0.6191406,0.7753906,0.1429688,0.2882813,0,0.6191406,0.7402344,0.1523438,0.3679688,0,0.6269531,0.8066406,0.16875,0.3257813,0,0.640625,0.7714844,0.1828125,0.3539062,0,0.6523438,0.7949219,0.15,0.3257813,0,0.625,0.7714844,0.1429688,0.3609375,0,0.6191406,0.8007813,0.1710937,0.3164063,0,0.6425781,0.7636719,0.1640625,0.3210938,0,0.6367188,0.7675781,0.1546875,0.3140625,0,0.6289063,0.7617188,0.196875,-0.2578125,0,0.6640625,0.2851563,0.196875,-0.2765625,0,0.6640625,0.2695313,0.196875,-0.2671875,0,0.6640625,0.2773438,0.1851563,-0.28125,0,0.6542969,0.265625,0.08203125,-0.28125,0,0.5683594,0.265625,0.0796875,-0.2578125,0,0.5664063,0.2851563,0.065625,-0.2625,0,0.5546875,0.28125,0.065625,-0.2789063,0,0.5546875,0.2675781,0.00703125,-0.2625,0,0.5058594,0.28125,0.00703125,-0.2742188,0,0.5058594,0.2714844,0.009375,-0.2695313,0,0.5078125,0.2753906,-0.00234375,-0.2601562,0,0.4980469,0.2832031,-0.028125,-0.2601562,0,0.4765625,0.2832031,-0.03046875,-0.2742188,0,0.4746094,0.2714844,-0.0328125,-0.2648438,0,0.4726563,0.2792969,-0.07265625,-0.2554688,0,0.4394531,0.2871094,-0.07734375,-0.2695313,0,0.4355469,0.2753906,-0.0703125,-0.2625,0,0.4414063,0.28125,-0.09140625,-0.2554688,0,0.4238281,0.2871094,-0.09140625,-0.2695313,0,0.4238281,0.2753906,-0.09609375,-0.2601562,0,0.4199219,0.2832031,-0.09609375,-0.2648438,0,0.4199219,0.2792969,-0.121875,-0.253125,0,0.3984375,0.2890625,-0.1148438,-0.2625,0,0.4042969,0.28125,-0.1148438,-0.2554688,0,0.4042969,0.2871094,-0.121875,-0.2648438,0,0.3984375,0.2792969,-0.1265625,-0.2578125,0,0.3945313,0.2851563,-0.1476562,-0.2484375,0,0.3769531,0.2929688,-0.1523438,-0.2625,0,0.3730469,0.28125,-0.1453125,-0.2554688,0,0.3789063,0.2871094,-0.1546875,-0.2484375,0,0.3710938,0.2929688,-0.1546875,-0.2625,0,0.3710938,0.28125,-0.159375,-0.253125,0,0.3671875,0.2890625,-0.159375,-0.2578125,0,0.3671875,0.2851563,-0.1335938,-0.2507813,0,0.3886719,0.2910156,-0.1359375,-0.2625,0,0.3867188,0.28125,-0.13125,-0.2578125,0,0.390625,0.2851563,-0.140625,-0.2507813,0,0.3828125,0.2910156,-0.1429688,-0.2625,0,0.3808594,0.28125,-0.1617188,-0.2507813,0,0.3652344,0.2910156,-0.1664063,-0.2578125,0,0.3613281,0.2851563,-0.1617188,-0.253125,0,0.3652344,0.2890625,-0.16875,-0.24375,0,0.359375,0.296875,-0.1710937,-0.24375,0,0.3574219,0.296875,-0.1734375,-0.2578125,0,0.3554688,0.2851563,-0.178125,-0.2507813,0,0.3515625,0.2910156,-0.178125,-0.253125,0,0.3515625,0.2890625,-0.1828125,-0.2414063,0,0.3476563,0.2988281,-0.178125,-0.2460938,0,0.3515625,0.2949219,-0.1828125,-0.2554688,0,0.3476563,0.2871094,-0.1851563,-0.2414063,0,0.3457031,0.2988281,-0.1875,-0.2554688,0,0.34375,0.2871094,-0.1921875,-0.2484375,0,0.3398438,0.2929688,-0.1921875,-0.2507813,0,0.3398438,0.2910156,-0.20625,-0.2390625,0,0.328125,0.3007813,-0.20625,-0.2484375,0,0.328125,0.2929688,-0.20625,-0.24375,0,0.328125,0.296875,-0.2132813,-0.2507813,0,0.3222656,0.2910156,-0.215625,-0.234375,0,0.3203125,0.3046875,-0.225,-0.234375,0,0.3125,0.3046875,-0.225,-0.2460938,0,0.3125,0.2949219,-0.2273438,-0.2390625,0,0.3105469,0.3007813,-0.2015625,-0.1757813,0,0.3320313,0.3535156,-0.1945313,-0.1851563,0,0.3378906,0.3457031,-0.1945313,-0.178125,0,0.3378906,0.3515625,-0.2015625,-0.1875,0,0.3320313,0.34375,-0.20625,-0.1804688,0,0.328125,0.3496094,-0.196875,-0.2390625,0,0.3359375,0.3007813,-0.1921875,-0.24375,0,0.3398438,0.296875,-0.196875,-0.253125,0,0.3359375,0.2890625,-0.2015625,-0.2390625,0,0.3320313,0.3007813,-0.2015625,-0.253125,0,0.3320313,0.2890625,-0.2296875,-0.2296875,0,0.3085938,0.3085938,-0.234375,-0.2414063,0,0.3046875,0.2988281,-0.2273438,-0.2367188,0,0.3105469,0.3027344,-0.2625,-0.2132813,0,0.28125,0.3222656,-0.2695313,-0.2367188,0,0.2753906,0.3027344,-0.28125,-0.2132813,0,0.265625,0.3222656,-0.28125,-0.2226563,0,0.265625,0.3144531,-0.2859375,-0.1945313,0,0.2617188,0.3378906,-0.2835937,-0.215625,0,0.2636719,0.3203125,-0.2835937,-0.2109375,0,0.2636719,0.3242188,-0.290625,-0.2179688,0,0.2578125,0.3183594,-0.31875,-0.2109375,0,0.234375,0.3242188,-0.3210938,-0.1945313,0,0.2324219,0.3378906,-0.3210938,-0.2085938,0,0.2324219,0.3261719,0.02578125,-0.1921875,0,0.5214844,0.3398438,0.0234375,-0.2039063,0,0.5195313,0.3300781,0.028125,-0.1992188,0,0.5234375,0.3339844,0.01171875,-0.1921875,0,0.5097656,0.3398438,0.009375,-0.2039063,0,0.5078125,0.3300781,0.00703125,-0.196875,0,0.5058594,0.3359375,0.046875,-0.1945313,0,0.5390625,0.3378906,0.04453125,-0.20625,0,0.5371094,0.328125,0.04921875,-0.2015625,0,0.5410156,0.3320313,0.0328125,-0.1945313,0,0.5273438,0.3378906,0.03046875,-0.20625,0,0.5253906,0.328125,0.1265625,-0.1945313,0,0.6054688,0.3378906,0.1335938,-0.2039063,0,0.6113281,0.3300781,0.1335938,-0.196875,0,0.6113281,0.3359375,0.1265625,-0.20625,0,0.6054688,0.328125,0.121875,-0.1992188,0,0.6015625,0.3339844,0.09609375,-0.1945313,0,0.5800781,0.3378906,0.09375,-0.20625,0,0.578125,0.328125,0.0984375,-0.2015625,0,0.5820313,0.3320313,0.0796875,-0.1945313,0,0.5664063,0.3378906,0.07734375,-0.20625,0,0.5644531,0.328125,0.075,-0.1992188,0,0.5625,0.3339844,-0.02109375,-0.1921875,0,0.4824219,0.3398438,-0.0234375,-0.2039063,0,0.4804688,0.3300781,-0.01875,-0.1992188,0,0.484375,0.3339844,-0.028125,-0.1921875,0,0.4765625,0.3398438,-0.03046875,-0.2039063,0,0.4746094,0.3300781,-0.0328125,-0.196875,0,0.4726563,0.3359375,0.159375,-0.1921875,0,0.6328125,0.3398438,0.1570313,-0.2039063,0,0.6308594,0.3300781,0.1617188,-0.1992188,0,0.6347656,0.3339844,0.1453125,-0.1921875,0,0.6210938,0.3398438,0.1429688,-0.2039063,0,0.6191406,0.3300781,0.140625,-0.196875,0,0.6171875,0.3359375,0.1851563,-0.1921875,0,0.6542969,0.3398438,0.1828125,-0.2039063,0,0.6523438,0.3300781,0.1875,-0.1992188,0,0.65625,0.3339844,0.1757813,-0.1921875,0,0.6464844,0.3398438,0.1734375,-0.2039063,0,0.6445313,0.3300781,0.1710937,-0.196875,0,0.6425781,0.3359375,-0.03515625,-0.1898438,0,0.4707031,0.3417969,-0.0375,-0.2015625,0,0.46875,0.3320313,-0.065625,-0.1898438,0,0.4453125,0.3417969,-0.06796875,-0.2015625,0,0.4433594,0.3320313,-0.0703125,-0.1945313,0,0.4414063,0.3378906,0.2695313,-0.1851563,0,0.7246094,0.3457031,0.2648438,-0.2015625,0,0.7207031,0.3320313,0.271875,-0.1921875,0,0.7265625,0.3398438,0.2578125,-0.1828125,0,0.7148438,0.3476563,0.24375,-0.1828125,0,0.703125,0.3476563,0.2203125,-0.1875,0,0.6835938,0.34375,0.2109375,-0.2015625,0,0.6757813,0.3320313,0.2085938,-0.1945313,0,0.6738281,0.3378906,-0.1054688,-0.1851563,0,0.4121094,0.3457031,-0.1078125,-0.196875,0,0.4101563,0.3359375,-0.103125,-0.1921875,0,0.4140625,0.3398438,-0.1195313,-0.1851563,0,0.4003906,0.3457031,-0.121875,-0.196875,0,0.3984375,0.3359375,-0.1242188,-0.1898438,0,0.3964844,0.3417969,-0.15,-0.1828125,0,0.375,0.3476563,-0.1429688,-0.1921875,0,0.3808594,0.3398438,-0.1429688,-0.1851563,0,0.3808594,0.3457031,-0.15,-0.1945313,0,0.375,0.3378906,-0.1546875,-0.1875,0,0.3710938,0.34375,0.3867188,0.234375,0,0.8222656,0.6953125,0.3515625,0.2367188,0,0.7929688,0.6972656,0.3632813,0.234375,0,0.8027344,0.6953125,0.3328125,0.2765625,0,0.7773438,0.7304688,0.3140625,0.2859375,0,0.7617188,0.7382813,0.3140625,0.2695313,0,0.7617188,0.7246094,0.3140625,0.2671875,0,0.7617188,0.7226563,0.4265625,0.0609375,0,0.8554688,0.5507813,0.4242188,0.06328125,0,0.8535156,0.5527344,0.4242188,0.05625,0,0.8535156,0.546875,0.4242188,0.065625,0,0.8535156,0.5546875,0.4195313,0.07265625,0,0.8496094,0.5605469,0.4148438,0.05390625,0,0.8457031,0.5449219,0.4101563,0.0796875,0,0.8417969,0.5664063,0.3867188,0.08671875,0,0.8222656,0.5722656,0.3867188,0.05859375,0,0.8222656,0.5488281,0.3796875,0.0609375,0,0.8164063,0.5507813,0.375,0.065625,0,0.8125,0.5546875,0.365625,0.09140625,0,0.8046875,0.5761719,0.365625,0.075,0,0.8046875,0.5625,0.3492188,0.0890625,0,0.7910156,0.5742188,0.3914063,0.3304687,0,0.8261719,0.7753906,0.3914063,0.234375,0,0.8261719,0.6953125,0.3257813,0.46875,0,0.7714844,0.890625,0.3210938,0.3,0,0.7675781,0.75,0.3210938,0.290625,0,0.7675781,0.7421875,0.31875,0.2859375,0,0.765625,0.7382813,0.4640625,0.1757813,0,0.8867188,0.6464844,0.459375,0.09375,0,0.8828125,0.578125,0.4640625,0.1546875,0,0.8867188,0.6289063,0.4429688,0.08671875,0,0.8691406,0.5722656,0.35625,0.1007813,0,0.796875,0.5839844,0.3539062,0.09140625,0,0.7949219,0.5761719,0.3351563,0.1054688,0,0.7792969,0.5878906,0.3164063,0.1078125,0,0.7636719,0.5898438,0.3140625,0.2648438,0,0.7617188,0.7207031,0.3070312,0.2625,0,0.7558594,0.71875,0.3,0.2648438,0,0.75,0.7207031,0.2976563,0.271875,0,0.7480469,0.7265625,0.2953125,0.1195313,0,0.7460938,0.5996094,0.4101563,-0.1359375,0,0.8417969,0.3867188,0.403125,-0.140625,0,0.8359375,0.3828125,0.4078125,-0.140625,0,0.8398438,0.3828125,0.421875,0.0421875,0,0.8515625,0.5351563,0.4640625,-0.05859375,0,0.8867188,0.4511719,0.4640625,-0.00234375,0,0.8867188,0.4980469,0.3328125,0.103125,0,0.7773438,0.5859375,0.309375,0.1078125,0,0.7578125,0.5898438,0.3070312,0.1101563,0,0.7558594,0.5917969,0.2976563,0.1125,0,0.7480469,0.59375,0.2859375,0.1125,0,0.7382813,0.59375,0.2835937,0.1125,0,0.7363281,0.59375,0.2742188,-0.1570313,0,0.7285156,0.3691406,0.4265625,0.06328125,0,0.8554688,0.5527344,0.4242188,0.07734375,0,0.8535156,0.5644531,0.4523438,0.07734375,0,0.8769531,0.5644531,0.5625,0.06328125,0,0.96875,0.5527344,0.571875,0.02578125,0,0.9765625,0.5214844,0.571875,0.046875,0,0.9765625,0.5390625,0.46875,0.02578125,0,0.890625,0.5214844,0.5859375,-0.01875,0,0.9882813,0.484375,0.6,-0.0984375,0,1,0.4179688,0.6,-0.028125,0,1,0.4765625,0.5765625,-0.01875,0,0.9804688,0.484375,0.5742188,-0.02578125,0,0.9785156,0.4785156,0.5460938,-0.140625,0,0.9550781,0.3828125,0.4265625,-0.1828125,0,0.8554688,0.3476563,0.4007813,-0.1898438,0,0.8339844,0.3417969,0.375,-0.1875,0,0.8125,0.34375,0.3632813,-0.16875,0,0.8027344,0.359375,0.4054688,-0.1921875,0,0.8378906,0.3398438,0.290625,-0.2765625,0,0.7421875,0.2695313,0.20625,-0.2601562,0,0.671875,0.2832031,0.3609375,-0.1734375,0,0.8007813,0.3554688,0.35625,-0.1875,0,0.796875,0.34375,0.3609375,-0.1828125,0,0.8007813,0.3476563,0.3398438,-0.1921875,0,0.7832031,0.3398438,0.3140625,-0.1734375,0,0.7617188,0.3554688,0.3,-0.1921875,0,0.75,0.3398438,0.2976563,-0.1851563,0,0.7480469,0.3457031,-0.1710937,-0.178125,0,0.3574219,0.3515625,-0.1734375,-0.1898438,0,0.3554688,0.3417969,-0.16875,-0.1851563,0,0.359375,0.3457031,-0.178125,-0.178125,0,0.3515625,0.3515625,-0.1804688,-0.1898438,0,0.3496094,0.3417969,-0.1828125,-0.1828125,0,0.3476563,0.3476563,-0.2179688,-0.1734375,0,0.3183594,0.3554688,-0.2203125,-0.1851563,0,0.3164063,0.3457031,-0.215625,-0.1804688,0,0.3203125,0.3496094,-0.225,-0.1734375,0,0.3125,0.3554688,-0.2273438,-0.1851563,0,0.3105469,0.3457031,-0.2296875,-0.178125,0,0.3085938,0.3515625,-0.2390625,-0.16875,0,0.3007813,0.359375,-0.2414063,-0.1804688,0,0.2988281,0.3496094,-0.2367188,-0.1757813,0,0.3027344,0.3535156,-0.2460938,-0.16875,0,0.2949219,0.359375,-0.2484375,-0.1804688,0,0.2929688,0.3496094,-0.2507813,-0.1734375,0,0.2910156,0.3554688,-0.3960938,0.1007813,0,0.1699219,0.5839844,-0.3890625,0.07734375,0,0.1757813,0.5644531,-0.3726563,0.1007813,0,0.1894531,0.5839844,-0.4148438,0.1007813,0,0.1542969,0.5839844,-0.4289063,0.084375,0,0.1425781,0.5703125,-0.4617188,0.084375,0,0.1152344,0.5703125,-0.4664063,0.04921875,0,0.1113281,0.5410156,-0.5015625,0.065625,0,0.08203122,0.5546875,-0.5015625,0.04921875,0,0.08203122,0.5410156,-0.3914063,0.1335938,0,0.1738281,0.6113281,-0.346875,0.1335938,0,0.2109375,0.6113281,-0.3960938,0.1148438,0,0.1699219,0.5957031,-0.3632813,0.08671875,0,0.1972656,0.5722656,-0.3632813,0.1007813,0,0.1972656,0.5839844,-0.3515625,-0.1734375,0,0.2070313,0.3554688,-0.35625,-0.1710937,0,0.203125,0.3574219,-0.3585938,-0.1757813,0,0.2011719,0.3535156,-0.3398438,0.1335938,0,0.2167969,0.6113281,-0.3304687,0.1054688,0,0.2246094,0.5878906,-0.3304687,0.13125,0,0.2246094,0.609375,-0.3585938,0.1007813,0,0.2011719,0.5839844,-0.3375,-0.1382813,0,0.21875,0.3847656,-0.3375,-0.1664063,0,0.21875,0.3613281,-0.3609375,-0.1757813,0,0.1992188,0.3535156,-0.39375,-0.1757813,0,0.171875,0.3535156,-0.3960938,-0.1101563,0,0.1699219,0.4082031,-0.4757813,-0.1101563,0,0.1035156,0.4082031,-0.3960938,-0.0984375,0,0.1699219,0.4179688,-0.3375,-0.1382813,0,0.21875,0.3847656,-0.39375,0.0703125,0,0.171875,0.5585938,-0.3960938,0.05859375,0,0.1699219,0.5488281,-0.1804688,0.3632813,0,0.3496094,0.8027344,-0.24375,0.1945313,0,0.296875,0.6621094,-0.2367188,0.1921875,0,0.3027344,0.6601563,-0.2484375,0.1898438,0,0.2929688,0.6582031,-0.2953125,-0.159375,0,0.2539063,0.3671875,-0.103125,0.3796875,0,0.4140625,0.8164063,-0.1289063,0.3539062,0,0.3925781,0.7949219,-0.1265625,0.3421875,0,0.3945313,0.7851563,-0.1335938,0.3585938,0,0.3886719,0.7988281,-0.1429688,0.3585938,0,0.3808594,0.7988281,-0.1617188,-0.178125,0,0.3652344,0.3515625,-0.1429688,0.31875,0,0.3808594,0.765625,-0.1664063,0.3679688,0,0.3613281,0.8066406,-0.2367188,0.1851563,0,0.3027344,0.6542969,-0.24375,0.1828125,0,0.296875,0.6523438,-0.0703125,0.4734375,0,0.4414063,0.8945313,-0.06328125,0.4570313,0,0.4472656,0.8808594,-0.05625,0.4734375,0,0.453125,0.8945313,-0.07265625,0.4617188,0,0.4394531,0.8847656,0.1382813,0.2859375,0,0.6152344,0.7382813,0.075,-0.178125,0,0.5625,0.3515625,0.1382813,0.2742188,0,0.6152344,0.7285156,-0.084375,0.4664063,0,0.4296875,0.8886719,-0.103125,0.4640625,0,0.4140625,0.8867188,-0.1265625,0.3210938,0,0.3945313,0.7675781,-0.1335938,0.31875,0,0.3886719,0.765625,0.1546875,0.2695313,0,0.6289063,0.7246094,0.15,0.2648438,0,0.625,0.7207031,0.1429688,0.2648438,0,0.6191406,0.7207031,-0.3351563,-0.1828125,0,0.2207031,0.3476563,-0.3304687,-0.1945313,0,0.2246094,0.3378906,-0.3304687,-0.1875,0,0.2246094,0.34375,-0.3375,-0.196875,0,0.21875,0.3359375,-0.3421875,-0.1851563,0,0.2148438,0.3457031,-0.3421875,-0.1921875,0,0.2148438,0.3398438,-0.346875,-0.1734375,0,0.2109375,0.3554688,-0.3445313,-0.1851563,0,0.2128906,0.3457031,-0.3445313,-0.178125,0,0.2128906,0.3515625,-0.3515625,-0.1875,0,0.2070313,0.34375,-0.3585938,-0.1851563,0,0.2011719,0.3457031,-0.3609375,-0.1804688,0,0.1992188,0.3496094,-0.5296875,-0.0046875,0,0.05859375,0.4960938,-0.5320312,-0.07734375,0,0.05664065,0.4355469,-0.5554687,-0.0046875,0,0.0371094,0.4960938,-0.5554687,-0.03515625,0,0.0371094,0.4707031,-0.2695313,-0.1664063,0,0.2753906,0.3613281,-0.271875,-0.1757813,0,0.2734375,0.3535156,-0.2695313,-0.1734375,0,0.2753906,0.3554688,-0.2835937,-0.1617188,0,0.2636719,0.3652344,-0.2835937,-0.1757813,0,0.2636719,0.3535156,-0.290625,-0.1617188,0,0.2578125,0.3652344,-0.290625,-0.16875,0,0.2578125,0.359375,-0.290625,-0.1710937,0,0.2578125,0.3574219,-0.2976563,-0.159375,0,0.2519531,0.3671875,-0.2976563,-0.1710937,0,0.2519531,0.3574219,-0.3023438,-0.1640625,0,0.2480469,0.3632813,-0.3023438,-0.159375,0,0.2480469,0.3671875,-0.3023438,-0.1664063,0,0.2480469,0.3613281,-0.3070312,-0.1546875,0,0.2441406,0.3710938,-0.309375,-0.16875,0,0.2421875,0.359375,-0.3140625,-0.1570313,0,0.2382813,0.3691406,-0.3140625,-0.1640625,0,0.2382813,0.3632813,0.5742188,-0.00234375,0,0.9785156,0.4980469,0.571875,-0.02109375,0,0.9765625,0.4824219,0.5789062,-0.01640625,0,0.9824219,0.4863281,0.5578125,0.01640625,0,0.9648438,0.5136719,0.5460938,0.0234375,0,0.9550781,0.5195313,0.5414063,0.0234375,0,0.9511719,0.5195313,0.5367188,0.01875,0,0.9472656,0.515625,0.5367188,0.01171875,0,0.9472656,0.5097656,-0.534375,0.03984375,0,0.0546875,0.5332031,-0.5203125,0.03046875,0,0.06640628,0.5253906,-0.5203125,0.03984375,0,0.06640628,0.5332031,-0.5367188,0,0,0.05273435,0.5,-0.5554687,0.0140625,0,0.0371094,0.5117188,-0.5554687,0,0,0.0371094,0.5,-0.5695313,0.084375,0,0.02539063,0.5703125,-0.571875,0.07265625,0,0.02343747,0.5605469,-0.5695313,0.0796875,0,0.02539063,0.5664063,-0.5765625,0.0890625,0,0.01953125,0.5742188,-0.5859375,0.0890625,0,0.01171875,0.5742188,-0.5929688,0.07265625,0,0.005859375,0.5605469,-0.5976563,0.0796875,0,0.001953125,0.5664063,-0.4289063,0.1007813,0,0.1425781,0.5839844,-0.4007813,0.1265625,0,0.1660156,0.6054688,-0.4007813,0.1148438,0,0.1660156,0.5957031,-0.4898438,0.1265625,0,0.09179688,0.6054688,-0.5414063,0.1195313,0,0.04882813,0.5996094,-0.553125,0.1054688,0,0.0390625,0.5878906,-0.553125,0.084375,0,0.0390625,0.5703125,0.2976563,0.2953125,0,0.7480469,0.7460938,0.253125,0.3164063,0,0.7109375,0.7636719,0.2976563,0.2859375,0,0.7480469,0.7382813,0.2765625,0.3398438,0,0.7304688,0.7832031,0.2765625,0.346875,0,0.7304688,0.7890625,0.2695313,0.3375,0,0.7246094,0.78125,0.2648438,0.3421875,0,0.7207031,0.7851563,0.3023438,0.2765625,0,0.7519531,0.7304688,0.3023438,0.2765625,0,0.7519531,0.7304688,0.3070312,0.2765625,0,0.7558594,0.7304688,0.3117188,0.3070312,0,0.7597656,0.7558594,0.3023438,0.3070312,0,0.7519531,0.7558594,0.2976563,0.3,0,0.7480469,0.75,0.271875,0.3515625,0,0.7265625,0.7929688,0.2648438,0.46875,0,0.7207031,0.890625,0.2648438,0.3492188,0,0.7207031,0.7910156,0.1851563,0.3726563,0,0.6542969,0.8105469,0.1828125,0.375,0,0.6523438,0.8125,0.1757813,0.3960938,0,0.6464844,0.8300781,0.1734375,0.4101563,0,0.6445313,0.8417969,0.1734375,0.3984375,0,0.6445313,0.8320313,0.225,0.3257813,0,0.6875,0.7714844,0.225,0.31875,0,0.6875,0.765625,0.2179688,0.3164063,0,0.6816406,0.7636719,0.2132813,0.3234375,0,0.6777344,0.7695313,0.2039063,0.3070312,0,0.6699219,0.7558594,0.2039063,0.3023438,0,0.6699219,0.7519531,0.196875,0.2953125,0,0.6640625,0.7460938,0.1875,0.2953125,0,0.65625,0.7460938,0.1851563,0.3023438,0,0.6542969,0.7519531,0.1664063,0.3023438,0,0.6386719,0.7519531,0.159375,0.2953125,0,0.6328125,0.7460938,0.2179688,0.328125,0,0.6816406,0.7734375,0.1992188,0.3140625,0,0.6660156,0.7617188,0.1851563,0.3140625,0,0.6542969,0.7617188,0.1710937,0.384375,0,0.6425781,0.8203125,0.1734375,0.3914063,0,0.6445313,0.8261719,0.16875,0.4007813,0,0.640625,0.8339844,0.1617188,0.3796875,0,0.6347656,0.8164063,0.1546875,0.3796875,0,0.6289063,0.8164063,0.1523438,0.3867188,0,0.6269531,0.8222656,0.1828125,0.3726563,0,0.6523438,0.8105469,0.1828125,0.3539062,0,0.6523438,0.7949219,0.1734375,0.375,0,0.6445313,0.8125,0.159375,0.375,0,0.6328125,0.8125,-0.1757813,0.4335938,0,0.3535156,0.8613281,-0.1734375,0.39375,0,0.3554688,0.828125,-0.1734375,0.4242188,0,0.3554688,0.8535156,-0.1757813,0.3890625,0,0.3535156,0.8242188,-0.1804688,0.4359375,0,0.3496094,0.8632813,-0.1851563,0.3890625,0,0.3457031,0.8242188,-0.1921875,0.4359375,0,0.3398438,0.8632813,-0.1921875,0.39375,0,0.3398438,0.828125,-0.1148438,0.403125,0,0.4042969,0.8359375,-0.1195313,0.3890625,0,0.4003906,0.8242188,-0.1148438,0.39375,0,0.4042969,0.828125,-0.121875,0.4101563,0,0.3984375,0.8417969,-0.13125,0.3890625,0,0.390625,0.8242188,-0.140625,0.4101563,0,0.3828125,0.8417969,-0.1453125,0.4078125,0,0.3789063,0.8398438,-0.1453125,0.3984375,0,0.3789063,0.8320313,-0.1078125,0.45,0,0.4101563,0.875,-0.1101563,0.43125,0,0.4082031,0.859375,-0.1078125,0.4335938,0,0.4101563,0.8613281,-0.121875,0.43125,0,0.3984375,0.859375,-0.13125,0.4710938,0,0.390625,0.8925781,-0.15,0.4546875,0,0.375,0.8789063,-0.1523438,0.4710938,0,0.3730469,0.8925781,-0.1546875,0.46875,0,0.3710938,0.890625,-0.1546875,0.4617188,0,0.3710938,0.8847656,-0.1546875,0.5039063,0,0.3710938,0.9199219,-0.1617188,0.4640625,0,0.3652344,0.8867188,-0.1546875,0.478125,0,0.3710938,0.8984375,-0.1664063,0.5039063,0,0.3613281,0.9199219,-0.1710937,0.5015625,0,0.3574219,0.9179688,-0.178125,0.4640625,0,0.3515625,0.8867188,-0.1804688,0.4945313,0,0.3496094,0.9121094,-0.1804688,0.4710938,0,0.3496094,0.8925781,-0.0890625,0.4734375,0,0.4257813,0.8945313,-0.1007813,0.46875,0,0.4160156,0.890625,-0.09140625,0.46875,0,0.4238281,0.890625,-0.103125,0.5039063,0,0.4140625,0.9199219,-0.1101563,0.4710938,0,0.4082031,0.8925781,-0.1242188,0.5226563,0,0.3964844,0.9355469,-0.15,0.5226563,0,0.375,0.9355469,-0.1523438,0.4992188,0,0.3730469,0.9160156,-0.1570313,0.515625,0,0.3691406,0.9296875,-0.1570313,0.5085937,0,0.3691406,0.9238281],[509,508,492,506,492,508,507,492,506,504,507,506,505,504,506,503,504,505,501,504,503,500,501,503,502,501,500,499,498,497,496,497,498,493,497,496,495,493,496,492,493,495,494,493,492,491,490,488,489,488,490,487,488,489,486,488,487,483,486,487,484,486,483,485,484,483,482,481,479,480,479,481,478,479,480,476,479,478,475,476,478,477,476,475,474,473,472,471,472,473,470,472,471,467,470,471,468,470,467,469,468,467,458,442,440,465,458,439,440,439,458,463,439,438,463,465,439,45,466,47,465,47,466,463,47,465,464,47,463,462,459,461,460,461,459,457,460,459,442,457,459,458,457,442,428,437,427,435,427,437,425,427,435,426,425,435,451,456,450,455,450,456,449,450,455,448,449,455,447,448,455,446,454,445,444,445,454,443,444,454,423,454,47,456,47,454,451,47,456,455,456,454,446,455,454,447,455,446,443,454,423,42,52,39,453,39,52,51,453,52,452,453,51,50,452,51,352,353,255,360,255,353,359,255,360,358,255,359,41,255,358,39,255,41,453,255,39,452,255,453,50,255,452,451,255,50,47,451,50,450,255,451,449,255,450,448,255,449,447,255,448,446,255,447,445,255,446,444,255,445,443,255,444,423,255,443,254,255,423,241,254,423,430,241,423,429,430,423,253,254,241,242,253,241,424,422,207,442,441,440,436,440,441,439,440,436,438,439,436,423,438,436,428,423,436,437,428,436,435,437,436,226,435,436,426,435,226,434,426,226,422,426,434,433,434,226,432,433,226,227,432,226,422,434,207,433,207,434,432,207,433,227,207,432,229,207,227,228,229,227,423,424,429,207,429,424,431,429,207,208,431,207,429,431,209,208,209,431,241,430,240,239,240,430,429,239,430,209,239,429,238,239,209,423,428,422,427,422,428,425,422,427,426,422,425,424,423,422,421,420,306,419,306,420,418,306,419,416,306,418,415,306,416,304,415,416,417,304,416,306,415,305,304,305,415,414,412,413,409,413,412,411,409,412,408,409,411,410,409,408,407,406,405,402,405,406,403,405,402,404,403,402,401,400,395,399,395,400,398,395,399,397,395,398,394,395,397,396,395,394,393,392,391,390,391,392,389,391,390,388,389,390,387,389,388,387,385,386,383,386,385,382,383,385,384,383,381,382,381,383,380,381,382,378,381,380,377,378,380,379,378,377,376,375,374,373,374,375,327,374,373,328,327,373,326,327,328,372,324,371,317,371,324,370,371,317,315,370,317,368,370,315,367,368,315,369,368,367,366,365,364,361,364,365,362,364,361,363,362,361,322,329,336,319,336,329,320,336,319,335,333,346,345,346,333,334,345,333,343,341,357,340,357,341,356,357,340,338,356,340,339,356,338,353,351,360,44,360,351,359,360,44,40,359,44,358,359,40,41,358,40,342,343,352,357,352,343,356,352,357,339,352,356,337,352,339,355,352,337,354,352,355,348,352,354,349,352,348,49,352,349,45,49,349,351,352,49,353,352,351,44,351,49,43,44,49,350,347,348,349,348,347,336,335,342,346,342,335,345,342,346,334,342,345,332,342,334,344,342,332,341,342,344,337,341,344,343,342,341,340,341,337,338,340,337,339,338,337,311,332,318,320,318,332,335,320,332,336,320,335,333,335,332,334,333,332,328,331,329,330,329,331,302,329,330,313,329,302,314,329,313,321,329,314,319,329,321,326,328,322,329,322,328,327,326,325,322,325,326,324,325,322,316,324,322,317,324,316,315,316,322,323,315,322,303,311,314,321,314,311,319,321,311,318,319,311,320,319,318,317,316,315,302,303,313,314,313,303,301,312,303,310,303,312,311,303,310,309,308,307,306,307,308,302,307,306,305,302,306,304,302,305,301,302,304,303,302,301,300,298,299,296,299,298,295,296,298,297,296,295,294,292,293,290,293,292,289,290,292,291,290,289,288,286,287,284,287,286,283,284,286,285,284,283,282,280,281,279,281,280,276,279,280,277,279,276,278,277,276,54,55,274,275,274,55,273,274,275,268,274,273,269,268,273,272,244,271,270,271,244,269,270,244,245,269,244,243,269,245,267,269,243,268,269,267,264,268,267,266,264,267,263,264,266,265,264,263,210,256,262,258,262,256,259,262,258,260,262,259,261,260,259,213,257,256,258,256,257,211,213,210,256,210,213,255,254,244,253,244,254,252,244,253,251,244,252,250,244,251,237,244,250,249,244,237,223,244,249,222,244,223,220,244,222,219,244,220,246,244,219,243,244,246,247,243,246,248,247,246,245,244,243,242,241,237,240,237,241,239,237,240,238,237,239,209,237,238,204,237,209,236,237,204,235,236,204,205,235,204,234,235,205,233,234,205,203,233,205,230,233,203,231,233,230,232,231,230,207,229,206,228,206,229,227,206,228,226,206,227,224,206,226,203,206,224,225,203,224,223,221,222,220,222,221,217,220,221,219,220,217,218,219,217,215,218,217,216,215,217,214,215,216,212,215,214,213,212,214,211,212,213,212,211,210,209,208,204,207,204,208,206,204,207,203,204,206,205,204,203,202,198,201,199,201,198,200,199,198,197,195,196,193,196,195,192,193,195,194,193,192,191,189,190,185,190,189,188,185,189,187,185,188,184,185,187,186,185,184,183,181,182,180,182,181,179,180,181,166,180,179,178,176,177,174,177,176,173,174,176,175,174,173,172,170,171,168,171,170,167,168,170,169,168,167,166,164,165,162,165,164,161,162,164,163,162,161,160,158,159,156,159,158,155,156,158,157,156,155,154,150,153,151,153,150,152,151,150,141,148,149,146,149,148,145,146,148,147,146,145,144,142,143,140,143,142,139,140,142,141,140,139,138,137,136,132,136,137,135,136,132,133,135,132,134,133,132,131,130,129,128,129,130,126,129,128,125,126,128,127,126,125,108,109,124,123,124,109,122,124,123,120,122,123,105,122,120,121,105,120,119,115,118,116,118,115,117,116,115,114,112,113,110,113,112,111,110,112,107,110,111,108,110,107,109,108,107,106,105,104,103,104,105,102,104,103,100,102,103,98,102,100,101,98,100,99,98,97,96,97,98,93,97,96,95,93,96,92,93,95,94,93,92,82,90,91,88,91,90,87,88,90,89,88,87,86,85,84,83,84,85,81,84,83,80,81,83,82,81,80,79,75,78,76,78,75,77,76,75,74,73,72,71,72,73,69,72,71,68,69,71,70,69,68,67,65,66,62,66,65,64,62,65,61,62,64,63,62,61,60,59,57,58,57,59,53,57,58,56,57,53,54,56,53,55,54,53,43,48,42,52,42,48,46,52,48,51,52,46,50,51,46,47,50,46,43,49,48,45,48,49,46,48,45,47,46,45,44,43,40,42,40,43,39,40,42,41,40,39,38,37,36,35,36,37,33,36,35,32,33,35,34,33,32,31,30,29,28,29,30,27,29,28,24,27,28,25,27,24,26,25,24,23,22,21,20,21,22,19,21,20,16,19,20,17,19,16,18,17,16,15,14,13,12,13,14,10,13,12,11,10,12,7,10,11,8,10,7,9,8,5,7,5,8,6,5,7,0,5,6,4,5,0,3,4,0,1,3,0,2,1,0],0,0,1,1,0,0,1,0.935546875,0,0,0,0,[0,0,0,0],[-0.6,-0.6,0.6,0.6],426.666656494141,512,512,512,512,256,256,0,0]},{"id":26576,"path":"Assets/Content/Sprites/Ingredients/lemon juice.png","assetBundleId":-1,"data":["lemon juice",6,26574,[-0.02226563,0.001171872,0,0.2519531,0.4066406,0],[-0.196875,0.3609375,0,0.3359375,0.8007813,-0.2414063,0.3421875,0,0.2988281,0.7851563,-0.2203125,0.2929688,0,0.3164063,0.7441406,0.1617188,0.2507813,0,0.6347656,0.7089844,0.1265625,-0.3539062,0,0.6054688,0.2050781,0.1570313,-0.2648438,0,0.6308594,0.2792969,0.16875,0.39375,0,0.640625,0.828125,0.121875,0.4078125,0,0.6015625,0.8398438,0.05625,-0.4054688,0,0.546875,0.1621094,0.03046875,0.4078125,0,0.5253906,0.8398438,0.0140625,0.3820313,0,0.5117188,0.8183594,0,0.3351563,0,0.5,0.7792969,-0.1242188,-0.4054688,0,0.3964844,0.1621094,-0.1851563,-0.3914063,0,0.3457031,0.1738281,-0.2296875,-0.3421875,0,0.3085938,0.2148438,-0.2320313,0.03515625,0,0.3066406,0.5292969,-0.2742188,-0.0703125,0,0.2714844,0.4414063,-0.2742188,-0.2226563,0,0.2714844,0.3144531,0.225,0.1125,0,0.6875,0.59375,0.2296875,-0.065625,0,0.6914063,0.4453125,0.2296875,0.0515625,0,0.6914063,0.5429688,0.215625,0.1828125,0,0.6796875,0.6523438,0.1921875,-0.1289063,0,0.6601563,0.3925781],[5,3,22,21,22,3,19,22,21,18,19,21,20,19,18,17,16,14,15,14,16,2,14,15,13,14,2,0,13,2,11,13,0,12,13,11,8,12,11,10,8,11,9,8,10,7,8,9,4,8,7,6,4,7,3,4,6,5,4,3,2,1,0],-0.000148683786392212,-0.000148668885231018,0.99985134601593,0.99985134601593,0.271484375,0.162109375,0.69140625,0.83984375,0,0,0,0,[0,0,0,0],[-0.6,-0.6,0.6,0.6],426.666656494141,512,512,512,512,256,256,139.076126098633,83.0761184692383]},{"id":26508,"path":"Assets/Content/Sprites/Ingredients/cream.png","assetBundleId":-1,"data":["cream",6,26506,[0.09140626,0.07500002,0,0.5085938,0.4265625,0],[0.4265625,-0.3328125,0,0.8554688,0.2226563,0.4289063,-0.3492188,0,0.8574219,0.2089844,0.4289063,-0.3375,0,0.8574219,0.21875,0.421875,-0.3515625,0,0.8515625,0.2070313,0.4171875,-0.3328125,0,0.8476563,0.2226563,0.4125,-0.3515625,0,0.84375,0.2070313,0.4101563,-0.3351563,0,0.8417969,0.2207031,0.4101563,-0.346875,0,0.8417969,0.2109375,0.5859375,0.1382813,0,0.9882813,0.6152344,0.5882813,0.1148438,0,0.9902344,0.5957031,0.5882813,0.1382813,0,0.9902344,0.6152344,0.5765625,0.1101563,0,0.9804688,0.5917969,0.5859375,0.1523438,0,0.9882813,0.6269531,0.5882813,0.1523438,0,0.9902344,0.6269531,0.5953125,0.1710937,0,0.9960938,0.6425781,0.6,0.1335938,0,1,0.6113281,0.6,0.1710937,0,1,0.6425781,0.5953125,0.1335938,0,0.9960938,0.6113281,0.5859375,0.1640625,0,0.9882813,0.6367188,0.5742188,0.1523438,0,0.9785156,0.6269531,0.5742188,0.1101563,0,0.9785156,0.5917969,0.5695313,0.1453125,0,0.9746094,0.6210938,0.5695313,0.1148438,0,0.9746094,0.5957031,0.46875,-0.3328125,0,0.890625,0.2226563,0.4710938,-0.3421875,0,0.8925781,0.2148438,0.4710938,-0.3375,0,0.8925781,0.21875,0.4664063,-0.3515625,0,0.8886719,0.2070313,0.459375,-0.3328125,0,0.8828125,0.2226563,0.4523438,-0.3351563,0,0.8769531,0.2207031,0.4523438,-0.3515625,0,0.8769531,0.2070313,0.00703125,-0.3164063,0,0.5058594,0.2363281,-0.09609375,-0.346875,0,0.4199219,0.2109375,0.00703125,-0.346875,0,0.5058594,0.2109375,-0.1054688,-0.3164063,0,0.4121094,0.2363281,-0.1054688,-0.3421875,0,0.4121094,0.2148438,0.421875,-0.1523438,0,0.8515625,0.3730469,0.4171875,-0.1664063,0,0.8476563,0.3613281,0.421875,-0.1570313,0,0.8515625,0.3691406,0.4148438,-0.1476562,0,0.8457031,0.3769531,0.3820313,-0.1476562,0,0.8183594,0.3769531,0.3796875,-0.1664063,0,0.8164063,0.3613281,0.375,-0.1546875,0,0.8125,0.3710938,0.375,-0.1617188,0,0.8125,0.3652344,0.2039063,-0.31875,0,0.6699219,0.234375,0.35625,-0.346875,0,0.796875,0.2109375,0.35625,-0.31875,0,0.796875,0.234375,0.2015625,-0.3328125,0,0.6679688,0.2226563,0.2015625,-0.346875,0,0.6679688,0.2109375,0.1570313,-0.3117188,0,0.6308594,0.2402344,0.15,-0.3398438,0,0.625,0.2167969,0.1570313,-0.3304687,0,0.6308594,0.2246094,0.03046875,-0.3398438,0,0.5253906,0.2167969,0.02578125,-0.3117188,0,0.5214844,0.2402344,0.02109375,-0.3140625,0,0.5175781,0.2382813,0.01875,-0.3210938,0,0.515625,0.2324219,0.01875,-0.3328125,0,0.515625,0.2226563,-0.1640625,-0.3304687,0,0.3632813,0.2246094,-0.1617188,-0.3351563,0,0.3652344,0.2207031,-0.1617188,-0.3304687,0,0.3652344,0.2246094,-0.16875,-0.3351563,0,0.359375,0.2207031,-0.1617188,-0.309375,0,0.3652344,0.2421875,-0.3445313,-0.309375,0,0.2128906,0.2421875,-0.3445313,-0.3351563,0,0.2128906,0.2207031,-0.1570313,-0.3398438,0,0.3691406,0.2167969,-0.1570313,-0.3328125,0,0.3691406,0.2226563,-0.1640625,-0.3421875,0,0.3632813,0.2148438,0.4359375,0.1570313,0,0.8632813,0.6308594,0.4125,0.0046875,0,0.84375,0.5039063,0.4359375,0.1101563,0,0.8632813,0.5917969,0.3914063,0.2273438,0,0.8261719,0.6894531,0.328125,-0.196875,0,0.7734375,0.3359375,0.2789063,-0.2507813,0,0.7324219,0.2910156,0.2203125,0.346875,0,0.6835938,0.7890625,0.1828125,0.3539062,0,0.6523438,0.7949219,0.1734375,-0.2976563,0,0.6445313,0.2519531,0.1125,-0.309375,0,0.59375,0.2421875,0.01875,0.5015625,0,0.515625,0.9179688,-0.028125,0.5015625,0,0.4765625,0.9179688,-0.0515625,-0.309375,0,0.4570313,0.2421875,-0.07734375,0.43125,0,0.4355469,0.859375,-0.1382813,0.3257813,0,0.3847656,0.7714844,-0.1710937,-0.2835937,0,0.3574219,0.2636719,-0.2554688,-0.2179688,0,0.2871094,0.3183594,-0.2929688,-0.1523438,0,0.2558594,0.3730469,-0.3234375,0.2296875,0,0.2304688,0.6914063,-0.3796875,0.159375,0,0.1835938,0.6328125,-0.3796875,0.0796875,0,0.1835938,0.5664063,-0.39375,-0.3046875,0,0.171875,0.2460938,-0.3890625,-0.3164063,0,0.1757813,0.2363281,-0.3890625,-0.309375,0,0.1757813,0.2421875,-0.39375,-0.3210938,0,0.171875,0.2324219,-0.4125,-0.3046875,0,0.15625,0.2460938,-0.4125,-0.3210938,0,0.15625,0.2324219,-0.4171875,-0.309375,0,0.1523438,0.2421875,-0.2601562,-0.2273438,0,0.2832031,0.3105469,-0.2625,-0.2554688,0,0.28125,0.2871094,-0.2601562,-0.253125,0,0.2832031,0.2890625,-0.2648438,-0.225,0,0.2792969,0.3125,-0.2695313,-0.2554688,0,0.2753906,0.2871094,-0.271875,-0.2273438,0,0.2734375,0.3105469,-0.271875,-0.2507813,0,0.2734375,0.2910156,-0.3984375,-0.178125,0,0.1679688,0.3515625,-0.3796875,-0.1945313,0,0.1835938,0.3378906,-0.3796875,-0.178125,0,0.1835938,0.3515625,-0.3984375,-0.1945313,0,0.1679688,0.3378906],[104,101,102,103,102,101,100,99,98,97,98,99,95,98,97,94,95,97,96,95,94,93,91,92,90,92,91,87,90,91,88,90,87,89,88,87,86,85,83,84,83,85,80,83,84,82,83,80,81,82,80,78,81,80,79,78,80,77,78,79,75,78,77,76,75,77,73,75,76,74,75,73,71,74,73,72,71,73,69,71,72,70,71,69,67,70,69,66,67,69,68,67,66,59,57,65,63,65,57,58,63,57,64,63,58,62,61,59,60,59,61,56,59,60,58,56,60,59,56,57,58,57,56,55,54,51,53,51,54,52,51,53,48,51,52,49,51,48,50,49,48,47,46,44,43,44,46,45,44,43,42,41,40,39,40,41,36,40,39,38,36,39,35,36,38,37,36,35,34,33,31,30,31,33,32,31,30,29,28,26,27,26,28,23,26,27,24,26,23,25,24,23,22,21,20,19,20,21,11,20,19,12,11,19,8,11,12,10,13,17,12,18,13,14,13,18,17,13,14,15,17,14,16,15,14,8,12,10,13,10,12,11,8,9,10,9,8,7,6,5,4,5,6,3,5,4,0,3,4,1,3,0,2,1,0],-0.0000252127647399902,-0.000148668885231018,0.99997478723526,0.99985134601593,0.15234375,0.20703125,1,0.91796875,0,0,0,0,[0,0,0,0],[-0.6,-0.6,0.6,0.6],426.666656494141,512,512,512,512,256,256,78.0129089355469,106.076118469238]},{"id":26596,"path":"Assets/Content/Sprites/Ingredients/tilapia fillets.png","assetBundleId":-1,"data":["tilapia fillets",6,26594,[0.002343744,-0.04804687,0,0.5203125,0.2707031,0],[0.2179688,0.2179688,0,0.6816406,0.6816406,0.2460938,0.15,0,0.7050781,0.625,0.2507813,0.1804688,0,0.7089844,0.6503906,0.20625,0.1078125,0,0.671875,0.5898438,0.1828125,0.2226563,0,0.6523438,0.6855469,0.1875,-0.2273438,0,0.65625,0.3105469,0.103125,0.2226563,0,0.5859375,0.6855469,0.03515625,-0.31875,0,0.5292969,0.234375,-0.0796875,-0.31875,0,0.4335938,0.234375,-0.08203125,0.178125,0,0.4316406,0.6484375,-0.13125,-0.3140625,0,0.390625,0.2382813,-0.1570313,0.1570313,0,0.3691406,0.6308594,-0.3023438,0.0984375,0,0.2480469,0.5820313,-0.3679688,-0.1875,0,0.1933594,0.34375,-0.5085937,-0.028125,0,0.0761719,0.4765625,-0.5085937,-0.08671875,0,0.0761719,0.4277344,-0.5179688,-0.046875,0,0.06835938,0.4609375,-0.5179688,-0.07265625,0,0.06835938,0.4394531,0.4710938,0.1265625,0,0.8925781,0.6054688,0.5226563,0.09375,0,0.9355469,0.578125,0.5226563,0.1148438,0,0.9355469,0.5957031,0.4265625,-0.02109375,0,0.8554688,0.4824219,0.421875,0.1101563,0,0.8515625,0.5917969,0.3984375,-0.065625,0,0.8320313,0.4453125,0.35625,0.1335938,0,0.796875,0.6113281,0.2742188,-0.1851563,0,0.7285156,0.3457031],[5,3,25,24,25,3,23,25,24,22,23,24,21,23,22,18,21,22,19,21,18,20,19,18,17,16,15,14,15,16,13,15,14,12,13,14,10,13,12,11,10,12,9,10,11,8,10,9,6,8,9,7,8,6,5,7,6,4,5,6,3,5,4,0,3,4,1,3,0,2,1,0],-0.000148676335811615,-0.000148668885231018,0.99985134601593,0.99985134601593,0.068359375,0.234375,0.935546875,0.685546875,0,0,0,0,[0,0,0,0],[-0.6,-0.6,0.6,0.6],426.666656494141,512,512,512,512,256,256,35.0761222839355,120.076118469238]},{"id":26560,"path":"Assets/Content/Sprites/Ingredients/bread.png","assetBundleId":-1,"data":["bread",6,26558,[0.05859374,-0.002343744,0,0.4617187,0.3046875,0],[0.1734375,0.1335938,0,0.6445313,0.6113281,0.1523438,0.07265625,0,0.6269531,0.5605469,0.1617188,0.08671875,0,0.6347656,0.5722656,0.1429688,0.1898438,0,0.6191406,0.6582031,0.5203125,-0.1171875,0,0.9335938,0.4023438,0.5085937,-0.159375,0,0.9238281,0.3671875,0.5203125,-0.1289063,0,0.9335938,0.3925781,0.4710938,-0.02578125,0,0.8925781,0.4785156,0.4429688,0.0234375,0,0.8691406,0.5195313,0.43125,-0.225,0,0.859375,0.3125,0.3867188,0.04453125,0,0.8222656,0.5371094,0.3210938,-0.2625,0,0.7675781,0.28125,0.2976563,-0.3070312,0,0.7480469,0.2441406,0.2648438,0.065625,0,0.7207031,0.5546875,0.2648438,-0.3070312,0,0.7207031,0.2441406,0.178125,-0.2765625,0,0.6484375,0.2695313,0,-0.2226563,0,0.5,0.3144531,-0.140625,0.3023438,0,0.3828125,0.7519531,-0.140625,-0.2296875,0,0.3828125,0.3085938,-0.271875,-0.1640625,0,0.2734375,0.3632813,-0.2765625,0.3023438,0,0.2695313,0.7519531,-0.3632813,-0.1054688,0,0.1972656,0.4121094,-0.3773438,0.04921875,0,0.1855469,0.5410156,-0.3867188,0.2507813,0,0.1777344,0.7089844,-0.403125,0.1945313,0,0.1640625,0.6621094,-0.403125,0.1007813,0,0.1640625,0.5839844],[25,24,22,23,22,24,20,22,23,21,22,20,19,21,20,17,19,20,18,19,17,16,18,17,3,16,17,15,16,3,1,15,3,13,15,1,14,15,13,12,14,13,10,12,13,11,12,10,9,11,10,8,9,10,5,9,8,7,5,8,4,5,7,6,5,4,3,0,1,2,1,0],-0.000148668885231018,-0.0000522434711456299,0.99985134601593,0.999947786331177,0.1640625,0.244140625,0.93359375,0.751953125,0,0,0,0,[0,0,0,0],[-0.6,-0.6,0.6,0.6],426.666656494141,512,512,512,512,256,256,84.0761184692383,125.026748657227]},{"id":26580,"path":"Assets/Content/Sprites/Tiles/tile_c3_t5.png","assetBundleId":-1,"data":["tile_c3_t5",6,26578,[0,0,0,0.5688889,0.5688889,0],[-0.5688889,0.5688889,0,0,1,0.5688889,-0.5688889,0,1,0,0.5688889,0.5688889,0,1,1,-0.5688889,-0.5688889,0,0,0],[3,0,1,2,1,0],0,0,1,1,0,0,1,1,0,0,0,0,[0,0,0,0],[-0.5688889,-0.5688889,0.5688889,0.5688889],112.5,128,128,128,128,64,64,0,0]},{"id":26668,"path":"Assets/Content/Sprites/Ingredients/peas.png","assetBundleId":-1,"data":["peas",6,26666,[0.05390625,0.04218751,0,0.4429688,0.3140625,0],[0.496875,0.06796875,0,0.9140625,0.5566406,0.4851563,-0.0328125,0,0.9042969,0.4726563,0.496875,0.00234375,0,0.9140625,0.5019531,0.4453125,0.121875,0,0.8710938,0.6015625,0.4945313,-0.1007813,0,0.9121094,0.4160156,0.4945313,-0.04453125,0,0.9121094,0.4628906,0.3117188,-0.271875,0,0.7597656,0.2734375,0.2039063,0.140625,0,0.6699219,0.6171875,0.0703125,0.2179688,0,0.5585938,0.6816406,0.028125,-0.271875,0,0.5234375,0.2734375,-0.00703125,0.3421875,0,0.4941406,0.7851563,-0.07734375,0.35625,0,0.4355469,0.796875,-0.09140625,-0.1828125,0,0.4238281,0.3476563,-0.1195313,0.35625,0,0.4003906,0.796875,-0.1242188,0.3445313,0,0.3964844,0.7871094,-0.1242188,0.328125,0,0.3964844,0.7734375,-0.1289063,0.3445313,0,0.3925781,0.7871094,-0.1992188,-0.1242188,0,0.3339844,0.3964844,-0.3140625,0.35625,0,0.2382813,0.796875,-0.1265625,0.35625,0,0.3945313,0.796875,-0.3585938,0.075,0,0.2011719,0.5625,-0.3890625,0.2320313,0,0.1757813,0.6933594,-0.3890625,0.1429688,0,0.1757813,0.6191406],[22,21,20,18,20,21,17,20,18,16,17,18,19,16,18,17,16,12,15,12,16,14,12,15,13,12,14,11,12,13,9,12,11,10,9,11,8,9,10,6,9,8,7,6,8,3,6,7,4,6,3,1,4,3,5,4,1,3,0,1,2,1,0],-0.000148668885231018,-0.000148683786392212,0.99985134601593,0.99985134601593,0.17578125,0.2734375,0.9140625,0.796875,0,0,0,0,[0,0,0,0],[-0.6,-0.6,0.6,0.6],426.666656494141,512,512,512,512,256,256,90.0761184692383,140.076126098633]},{"id":26746,"path":"Assets/Content/Sprites/Ingredients/Worcestershire sauce.png","assetBundleId":-1,"data":["Worcestershire sauce",6,26744,[0.028125,0.09492187,0,0.4078125,0.4042969,0],[-0.2578125,-0.2320313,0,0.2851563,0.3066406,-0.2625,-0.2578125,0,0.28125,0.2851563,-0.2578125,-0.2507813,0,0.2851563,0.2910156,-0.2648438,-0.225,0,0.2792969,0.3125,-0.2671875,-0.225,0,0.2773438,0.3125,-0.2671875,-0.2578125,0,0.2773438,0.2851563,-0.2742188,-0.2296875,0,0.2714844,0.3085938,-0.2742188,-0.2554688,0,0.2714844,0.2871094,0.2414063,0.3,0,0.7011719,0.75,0.2507813,0.2859375,0,0.7089844,0.7382813,0.2554688,0.309375,0,0.7128906,0.7578125,0.2414063,0.2953125,0,0.7011719,0.7460938,0.4171875,0.1828125,0,0.8476563,0.6523438,0.4359375,0.09375,0,0.8632813,0.578125,0.4359375,0.1570313,0,0.8632813,0.6308594,0.3984375,-0.0234375,0,0.8320313,0.4804688,0.3609375,0.2460938,0,0.8007813,0.7050781,0.346875,-0.159375,0,0.7890625,0.3671875,0.3023438,-0.2296875,0,0.7519531,0.3085938,0.271875,0.3023438,0,0.7265625,0.7519531,0.2507813,-0.271875,0,0.7089844,0.2734375,0.1429688,-0.309375,0,0.6191406,0.2421875,0.1007813,0.3140625,0,0.5839844,0.7617188,-0.0375,0.365625,0,0.46875,0.8046875,-0.046875,-0.309375,0,0.4609375,0.2421875,-0.09609375,0.365625,0,0.4199219,0.8046875,-0.103125,0.3632813,0,0.4140625,0.8027344,-0.1359375,-0.3,0,0.3867188,0.25,-0.2320313,-0.2460938,0,0.3066406,0.2949219,-0.2695313,-0.2109375,0,0.2753906,0.3242188,-0.3257813,0.2320313,0,0.2285156,0.6933594,-0.3796875,0.1570313,0,0.1835938,0.6308594,-0.3796875,0.0703125,0,0.1835938,0.5585938,0.1476562,0.375,0,0.6230469,0.8125,0.1429688,0.3679688,0,0.6191406,0.8066406,0.1476562,0.3726563,0,0.6230469,0.8105469,0.1359375,0.3867188,0,0.6132813,0.8222656,0.1335938,0.3679688,0,0.6113281,0.8066406,0.1289063,0.3867188,0,0.6074219,0.8222656,0.1265625,0.3820313,0,0.6054688,0.8183594,0.1265625,0.3726563,0,0.6054688,0.8105469,-0.0234375,0.4664063,0,0.4804688,0.8886719,-0.01875,0.459375,0,0.484375,0.8828125,-0.01875,0.4664063,0,0.484375,0.8886719,-0.02578125,0.46875,0,0.4785156,0.890625,-0.03515625,0.4757813,0,0.4707031,0.8964844,-0.0375,0.4289063,0,0.46875,0.8574219,-0.0515625,0.4078125,0,0.4570313,0.8398438,-0.06328125,0.4546875,0,0.4472656,0.8789063,-0.0703125,0.4078125,0,0.4414063,0.8398438,-0.07265625,0.4265625,0,0.4394531,0.8554688,-0.07265625,0.4125,0,0.4394531,0.84375,0.0140625,0.4992188,0,0.5117188,0.9160156,0.01875,0.478125,0,0.515625,0.8984375,0.01875,0.496875,0,0.515625,0.9140625,-0.009375,0.4664063,0,0.4921875,0.8886719,-0.0140625,0.4992188,0,0.4882813,0.9160156,-0.0234375,0.4757813,0,0.4804688,0.8964844,-0.02578125,0.4828125,0,0.4785156,0.9023438,-0.02578125,0.4757813,0,0.4785156,0.8964844],[44,45,59,44,59,41,57,41,59,43,41,57,59,58,57,56,57,58,43,57,56,55,43,56,52,55,56,53,55,52,54,53,52,51,50,49,48,49,50,47,49,48,45,47,48,46,47,45,42,46,45,44,42,45,41,42,44,43,42,41,40,39,37,38,37,39,36,37,38,34,37,36,33,34,36,35,34,33,32,31,29,30,29,31,26,29,30,28,29,26,27,28,26,24,27,26,25,24,26,23,24,25,21,24,23,22,21,23,9,21,22,20,21,9,18,20,9,10,18,9,19,18,10,16,18,19,17,18,16,15,17,16,12,15,16,13,15,12,14,13,12,11,8,9,10,9,8,7,6,5,4,5,6,1,5,4,3,1,4,0,1,3,2,1,0],-0.0000522434711456299,-0.0000522434711456299,0.999947786331177,0.999947786331177,0.18359375,0.2421875,0.86328125,0.916015625,0,0,0,0,[0,0,0,0],[-0.6,-0.6,0.6,0.6],426.666656494141,512,512,512,512,256,256,94.0267486572266,124.026748657227]},{"id":26642,"path":"Assets/Content/Sprites/Ingredients/cream cheese.png","assetBundleId":-1,"data":["cream cheese",6,26640,[-0.07617188,-0.02109374,0,0.4582031,0.459375,0],[0.02578125,-0.4617188,0,0.5214844,0.1152344,0.028125,-0.478125,0,0.5234375,0.1015625,0.028125,-0.46875,0,0.5234375,0.109375,0.0234375,-0.4804688,0,0.5195313,0.09960938,0.01640625,-0.4617188,0,0.5136719,0.1152344,0.01171875,-0.4804688,0,0.5097656,0.09960938,0.009375,-0.4640625,0,0.5078125,0.1132813,0.009375,-0.4734375,0,0.5078125,0.1054688,0.3796875,0.1125,0,0.8164063,0.59375,0.3820313,0.03046875,0,0.8183594,0.5253906,0.3820313,0.09375,0,0.8183594,0.578125,0.375,-0.0046875,0,0.8125,0.4960938,0.3632813,0.140625,0,0.8027344,0.6171875,0.2695313,-0.2460938,0,0.7246094,0.2949219,0.1992188,-0.3,0,0.6660156,0.25,0.1804688,0.2765625,0,0.6503906,0.7304688,0.1078125,0.3117188,0,0.5898438,0.7597656,0.08671875,-0.3304687,0,0.5722656,0.2246094,0.0515625,0.328125,0,0.5429688,0.7734375,0.028125,0.3867188,0,0.5234375,0.8222656,0.01171875,0.3867188,0,0.5097656,0.8222656,-0.0234375,0.3703125,0,0.4804688,0.8085938,-0.08203125,-0.3304687,0,0.4316406,0.2246094,-0.13125,-0.3257813,0,0.390625,0.2285156,-0.1476562,0.2976563,0,0.3769531,0.7480469,-0.1757813,0.2601562,0,0.3535156,0.7167969,-0.2414063,0.2742188,0,0.2988281,0.7285156,-0.2460938,-0.271875,0,0.2949219,0.2734375,-0.2859375,-0.2203125,0,0.2617188,0.3164063,-0.31875,0.2320313,0,0.234375,0.6933594,-0.3328125,0.178125,0,0.2226563,0.6484375,-0.346875,-0.09140625,0,0.2109375,0.4238281,-0.384375,0.140625,0,0.1796875,0.6171875,-0.3867188,0.1148438,0,0.1777344,0.5957031,-0.3867188,0.01171875,0,0.1777344,0.5097656,-0.4992188,-0.24375,0,0.08398438,0.296875,-0.5039063,-0.2601562,0,0.08007813,0.2832031,-0.4992188,-0.2507813,0,0.08398438,0.2910156,-0.50625,-0.2367188,0,0.078125,0.3027344,-0.5320312,-0.2367188,0,0.05664065,0.3027344,-0.5320312,-0.2601562,0,0.05664065,0.2832031,-0.534375,-0.2390625,0,0.0546875,0.3007813,-0.534375,-0.2578125,0,0.0546875,0.2851563,0.0375,0.4382813,0,0.53125,0.8652344,0.04453125,0.4195313,0,0.5371094,0.8496094,0.04453125,0.4335938,0,0.5371094,0.8613281,0.03515625,0.4054688,0,0.5292969,0.8378906,0.03046875,0.4335938,0,0.5253906,0.8613281,0.02109375,0.4148438,0,0.5175781,0.8457031,0.02109375,0.4054688,0,0.5175781,0.8378906],[49,48,46,47,46,48,43,46,47,44,46,43,45,44,43,42,41,40,39,40,41,36,40,39,38,36,39,35,36,38,37,36,35,34,33,31,32,31,33,30,31,32,28,31,30,29,28,30,26,28,29,27,28,26,23,27,26,25,23,26,24,23,25,21,23,24,22,23,21,17,22,21,20,17,21,19,17,20,18,17,19,16,17,18,14,17,16,15,14,16,12,14,15,13,14,12,11,13,12,8,11,12,9,11,8,10,9,8,7,6,5,4,5,6,3,5,4,0,3,4,1,3,0,2,1,0],-0.000148672610521317,-0.000148676335811615,0.99985134601593,0.99985134601593,0.0546875,0.099609375,0.818359375,0.865234375,0,0,0,0,[0,0,0,0],[-0.6,-0.6,0.6,0.6],426.666656494141,512,512,512,512,256,256,28.0761203765869,51.0761222839355]},{"id":26694,"path":"Assets/Content/Sprites/Particles/cloud_blurry.png","assetBundleId":-1,"data":["cloud_blurry",6,26692,[0,0,0,2.56,2.48,0],[2.56,1.08,0,1,0.7109375,2.52,-1.54,0,0.9921875,0.1992188,2.56,-1.34,0,1,0.2382813,2.38,1.14,0,0.9648438,0.7226563,2.14,-2.12,0,0.9179688,0.08593753,2.02,1.58,0,0.8945313,0.8085938,1.96,1.78,0,0.8828125,0.8476563,1.62,-2.42,0,0.8164063,0.02734375,1.5,2.3,0,0.7929688,0.9492188,1.26,-2.48,0,0.7460938,0.015625,1.1,2.48,0,0.7148438,0.984375,-1.3,2.48,0,0.2460938,0.984375,-1.52,2.4,0,0.203125,0.96875,-1.54,-2.48,0,0.1992188,0.015625,-1.76,-2.38,0,0.15625,0.03515622,-1.96,-2.26,0,0.1171875,0.05859375,-2.14,1.84,0,0.08203122,0.859375,-2.3,-1.92,0,0.05078125,0.125,-2.52,1.2,0,0.0078125,0.734375,-2.52,-1.58,0,0.0078125,0.1914063,-2.56,1.06,0,0,0.7070313,-2.56,-1.48,0,0,0.2109375],[21,20,19,18,19,20,17,19,18,16,17,18,15,17,16,12,15,16,14,15,12,13,14,12,9,13,12,11,9,12,10,9,11,8,9,10,7,9,8,6,7,8,4,7,6,5,4,6,3,4,5,1,4,3,0,1,3,2,1,0],0,-0.000104496255517006,1,0.999895513057709,0,0.015625,1,0.984375,0,0,0,0,[0,0,0,0],[-2.56,-2.56,2.56,2.56],50,256,256,256,256,128,128,0,4.02675104141235]},{"id":26850,"path":"Assets/Content/Sprites/Ingredients/salt.png","assetBundleId":-1,"data":["salt",6,26848,[0.02226563,0.02109374,0,0.3550782,0.4101563,0],[0.225,0.0609375,0,0.6875,0.5507813,0.2109375,0.1453125,0,0.6757813,0.6210938,0.225,0.01171875,0,0.6875,0.5097656,0.3726563,-0.159375,0,0.8105469,0.3671875,0.3773438,-0.2929688,0,0.8144531,0.2558594,0.3773438,-0.1851563,0,0.8144531,0.3457031,0.3375,-0.06796875,0,0.78125,0.4433594,0.2976563,-0.3726563,0,0.7480469,0.1894531,0.234375,-0.3585938,0,0.6953125,0.2011719,0.1757813,-0.3140625,0,0.6464844,0.2382813,0.16875,0.2835937,0,0.640625,0.7363281,0.140625,0.3234375,0,0.6171875,0.7695313,0.07734375,-0.3890625,0,0.5644531,0.1757813,-0.0421875,0.43125,0,0.4648438,0.859375,-0.06796875,0.43125,0,0.4433594,0.859375,-0.1054688,0.4007813,0,0.4121094,0.8339844,-0.2132813,-0.3890625,0,0.3222656,0.1757813,-0.2390625,0.3164063,0,0.3007813,0.7636719,-0.2765625,0.28125,0,0.2695313,0.734375,-0.28125,0.20625,0,0.265625,0.671875,-0.3210938,-0.13125,0,0.2324219,0.390625,-0.3257813,-0.290625,0,0.2285156,0.2578125,-0.3328125,-0.1570313,0,0.2226563,0.3691406,-0.3328125,-0.2742188,0,0.2226563,0.2714844,-0.3328125,0.1078125,0,0.2226563,0.5898438,-0.3328125,-0.02109375,0,0.2226563,0.4824219,0.3539062,0.2671875,0,0.7949219,0.7226563,0.3632813,0.2015625,0,0.8027344,0.6679688,0.3632813,0.2601562,0,0.8027344,0.7167969,0.3234375,0.1921875,0,0.7695313,0.6601563,0.2671875,0.2882813,0,0.7226563,0.7402344,0.2460938,0.1921875,0,0.7050781,0.6601563,0.2039063,0.2882813,0,0.6699219,0.7402344,0.2039063,0.2203125,0,0.6699219,0.6835938],[33,32,31,30,31,32,29,31,30,26,29,30,27,29,26,28,27,26,25,24,20,19,20,24,23,22,21,20,21,22,16,21,20,19,16,20,18,16,19,17,16,18,15,16,17,12,16,15,14,12,15,13,12,14,11,12,13,9,12,11,10,9,11,1,9,10,8,9,1,2,8,1,6,8,2,7,8,6,4,7,6,3,4,6,5,4,3,2,1,0],-0.000148668885231018,-0.000100225210189819,0.99985134601593,0.999899744987488,0.22265625,0.17578125,0.814453125,0.859375,0,0,0,0,[0,0,0,0],[-0.6,-0.6,0.6,0.6],426.666656494141,512,512,512,512,256,256,114.076118469238,90.0513153076172]},{"id":26812,"path":"Assets/Content/Sprites/Ingredients/pinto bean.png","assetBundleId":-1,"data":["pinto bean",6,26810,[-0.004687518,-0.02578124,0,0.5953125,0.5203125,0],[0.5273438,-0.4265625,0,0.9394531,0.1445313,0.54375,-0.4875,0,0.953125,0.09375,0.54375,-0.4523438,0,0.953125,0.1230469,0.4804688,-0.4265625,0,0.9003906,0.1445313,0.4382813,-0.525,0,0.8652344,0.06249997,0.4101563,-0.5273438,0,0.8417969,0.06054688,0.3539062,-0.5273438,0,0.7949219,0.06054688,0.3492188,-0.4921875,0,0.7910156,0.08984375,0.3492188,-0.5203125,0,0.7910156,0.06640628,-0.4335938,-0.4617188,0,0.1386719,0.1152344,-0.43125,-0.4898438,0,0.140625,0.09179688,-0.43125,-0.46875,0,0.140625,0.109375,-0.4570313,-0.4148438,0,0.1191406,0.1542969,-0.46875,-0.4898438,0,0.109375,0.09179688,-0.553125,-0.3867188,0,0.0390625,0.1777344,-0.6,-0.3867188,0,0,0.1777344,-0.6,-0.4335938,0,0,0.1386719,0.571875,-0.375,0,0.9765625,0.1875,0.5882813,-0.39375,0,0.9902344,0.171875,0.5882813,-0.375,0,0.9902344,0.1875,0.5484375,-0.4242188,0,0.9570313,0.1464844,0.5367188,-0.3820313,0,0.9472656,0.1816406,0.4804688,-0.4242188,0,0.9003906,0.1464844,0.4757813,-0.4125,0,0.8964844,0.15625,0.4757813,-0.4195313,0,0.8964844,0.1503906,-0.2132813,-0.3726563,0,0.3222656,0.1894531,-0.2085938,-0.384375,0,0.3261719,0.1796875,-0.2085938,-0.3773438,0,0.3261719,0.1855469,-0.2132813,-0.3890625,0,0.3222656,0.1757813,-0.2203125,-0.3726563,0,0.3164063,0.1894531,-0.2203125,-0.3890625,0,0.3164063,0.1757813,-0.225,-0.3773438,0,0.3125,0.1855469,-0.225,-0.384375,0,0.3125,0.1796875,-0.5976563,-0.2742188,0,0.001953125,0.2714844,-0.5929688,-0.2859375,0,0.005859375,0.2617188,-0.5929688,-0.2789063,0,0.005859375,0.2675781,-0.6,-0.2742188,0,0,0.2714844,-0.6,-0.2882813,0,0,0.2597656,0.225,0.178125,0,0.6875,0.6484375,0.2179688,0.15,0,0.6816406,0.625,0.2390625,0.1804688,0,0.6992188,0.6503906,0.2085938,0.178125,0,0.6738281,0.6484375,0.234375,0.140625,0,0.6953125,0.6171875,0.2296875,0.1429688,0,0.6914063,0.6191406,0.2296875,0.1429688,0,0.6914063,0.6191406,0.2039063,-0.2109375,0,0.6699219,0.3242188,0.20625,-0.2203125,0,0.671875,0.3164063,0.20625,-0.2132813,0,0.671875,0.3222656,0.1992188,-0.2367188,0,0.6660156,0.3027344,0.16875,-0.2109375,0,0.640625,0.3242188,0.1382813,-0.2460938,0,0.6152344,0.2949219,0.0796875,-0.2484375,0,0.5664063,0.2929688,0.06328125,-0.2203125,0,0.5527344,0.3164063,0.01875,-0.2484375,0,0.515625,0.2929688,0,-0.2460938,0,0.5,0.2949219,-0.00234375,-0.2320313,0,0.4980469,0.3066406,-0.00234375,-0.24375,0,0.4980469,0.296875,-0.178125,0.3117188,0,0.3515625,0.7597656,-0.2039063,0.1945313,0,0.3300781,0.6621094,-0.178125,0.309375,0,0.3515625,0.7578125,-0.2085938,0.1992188,0,0.3261719,0.6660156,-0.2132813,0.2671875,0,0.3222656,0.7226563,-0.2132813,0.1992188,0,0.3222656,0.6660156,-0.1710937,-0.215625,0,0.3574219,0.3203125,-0.1664063,-0.225,0,0.3613281,0.3125,-0.1664063,-0.2203125,0,0.3613281,0.3164063,-0.1710937,-0.2296875,0,0.3574219,0.3085938,-0.1757813,-0.215625,0,0.3535156,0.3203125,-0.1757813,-0.2296875,0,0.3535156,0.3085938,-0.1804688,-0.2203125,0,0.3496094,0.3164063,-0.1804688,-0.225,0,0.3496094,0.3125,-0.1945313,-0.2132813,0,0.3378906,0.3222656,-0.1945313,-0.2226563,0,0.3378906,0.3144531,-0.1945313,-0.2179688,0,0.3378906,0.3183594,-0.1992188,-0.2085938,0,0.3339844,0.3261719,-0.2015625,-0.2085938,0,0.3320313,0.3261719,-0.2015625,-0.225,0,0.3320313,0.3125,-0.2085938,-0.215625,0,0.3261719,0.3203125,-0.2085938,-0.2179688,0,0.3261719,0.3183594,-0.1921875,0.3539062,0,0.3398438,0.7949219,-0.178125,0.3234375,0,0.3515625,0.7695313,-0.1757813,0.3421875,0,0.3535156,0.7851563,-0.2085938,0.3539062,0,0.3261719,0.7949219,-0.2132813,0.3398438,0,0.3222656,0.7832031,-0.121875,-0.2226563,0,0.3984375,0.3144531,-0.1242188,-0.2320313,0,0.3964844,0.3066406,-0.121875,-0.2273438,0,0.3984375,0.3105469,-0.1289063,-0.2179688,0,0.3925781,0.3183594,-0.1570313,-0.215625,0,0.3691406,0.3203125,-0.1570313,-0.2320313,0,0.3691406,0.3066406,-0.1640625,-0.2226563,0,0.3632813,0.3144531,-0.1640625,-0.225,0,0.3632813,0.3125,-0.1546875,0.1734375,0,0.3710938,0.6445313,-0.1804688,0.16875,0,0.3496094,0.640625,-0.1757813,0.1640625,0,0.3535156,0.6367188,-0.1875,0.1664063,0,0.34375,0.6386719,-0.2039063,0.1734375,0,0.3300781,0.6445313,-0.1875,0.159375,0,0.34375,0.6328125,-0.1640625,0.3328125,0,0.3632813,0.7773438,-0.1617188,0.309375,0,0.3652344,0.7578125,-0.1617188,0.3304687,0,0.3652344,0.7753906,-0.1664063,0.3070312,0,0.3613281,0.7558594,-0.1757813,0.3070312,0,0.3535156,0.7558594,-0.1546875,0.3257813,0,0.3710938,0.7714844,-0.20625,0.1804688,0,0.328125,0.6503906,-0.1617188,0.3328125,0,0.3652344,0.7773438,-0.1617188,0.3421875,0,0.3652344,0.7851563,-0.16875,0.3445313,0,0.359375,0.7871094,-0.1734375,0.3445313,0,0.3554688,0.7871094,-0.1757813,0.3421875,0,0.3535156,0.7851563,-0.140625,0.3609375,0,0.3828125,0.8007813,-0.1828125,-0.2132813,0,0.3476563,0.3222656,-0.1875,-0.2273438,0,0.34375,0.3105469,-0.1898438,-0.2132813,0,0.3417969,0.3222656,-0.1898438,-0.2273438,0,0.3417969,0.3105469,-0.3609375,-0.16875,0,0.1992188,0.359375,-0.3820313,-0.1570313,0,0.1816406,0.3691406,-0.3820313,-0.1664063,0,0.1816406,0.3613281,-0.496875,0.0421875,0,0.0859375,0.5351563,-0.3820313,-0.08203125,0,0.1816406,0.4316406,-0.5085937,-0.075,0,0.0761719,0.4375,-0.5578125,-0.0375,0,0.03515625,0.46875,-0.5625,0.0421875,0,0.03125,0.5351563,-0.5625,-0.00703125,0,0.03125,0.4941406,-0.3046875,-0.178125,0,0.2460938,0.3515625,-0.3328125,-0.1875,0,0.2226563,0.34375,-0.3046875,-0.1875,0,0.2460938,0.34375,-0.3046875,-0.1664063,0,0.2460938,0.3613281,-0.3328125,0.1007813,0,0.2226563,0.5839844,-0.2976563,0.1195313,0,0.2519531,0.5996094,-0.3421875,0.0984375,0,0.2148438,0.5820313,-0.3820313,0.04921875,0,0.1816406,0.5410156,-0.2085938,-0.2085938,0,0.3261719,0.3261719,-0.2109375,-0.2039063,0,0.3242188,0.3300781,-0.2132813,-0.2203125,0,0.3222656,0.3164063,-0.234375,-0.2203125,0,0.3046875,0.3164063,-0.2484375,-0.2179688,0,0.2929688,0.3183594,-0.2601562,-0.2132813,0,0.2832031,0.3222656,-0.2648438,-0.1875,0,0.2792969,0.34375,-0.290625,-0.1828125,0,0.2578125,0.3476563,-0.3023438,-0.1828125,0,0.2480469,0.3476563,-0.3023438,-0.1945313,0,0.2480469,0.3378906,-0.2109375,0.1640625,0,0.3242188,0.6367188,-0.2085938,0.1710937,0,0.3261719,0.6425781,-0.2132813,0.1921875,0,0.3222656,0.6601563,-0.215625,0.1992188,0,0.3203125,0.6660156,-0.225,0.1640625,0,0.3125,0.6367188,-0.2273438,0.1828125,0,0.3105469,0.6523438,-0.2273438,0.1664063,0,0.3105469,0.6386719,0.46875,0,0,0.890625,0.5,0.4945313,-0.08671875,0,0.9121094,0.4277344,0.4945313,-0.0421875,0,0.9121094,0.4648438,0.46875,-0.1054688,0,0.890625,0.4121094,0.4523438,0,0,0.8769531,0.5,0.4523438,-0.1054688,0,0.8769531,0.4121094,-0.3070312,0.1453125,0,0.2441406,0.6210938,-0.3914063,0.1148438,0,0.1738281,0.5957031,-0.403125,0.1148438,0,0.1640625,0.5957031,-0.43125,0.1453125,0,0.140625,0.6210938,-0.4382813,0.1148438,0,0.1347656,0.5957031,-0.4546875,0.121875,0,0.1210938,0.6015625,-0.4570313,0.1335938,0,0.1191406,0.6113281,-0.4570313,0.1265625,0,0.1191406,0.6054688,-0.4078125,0.09140625,0,0.1601563,0.5761719,-0.4265625,0.1125,0,0.1445313,0.59375,-0.440625,0.09140625,0,0.1328125,0.5761719,-0.4429688,0.0984375,0,0.1308594,0.5820313,-0.5085937,0.1335938,0,0.0761719,0.6113281,-0.515625,0.1125,0,0.0703125,0.59375,-0.5085937,0.121875,0,0.0761719,0.6015625,-0.553125,0.1335938,0,0.0390625,0.6113281,-0.5765625,0.1007813,0,0.01953125,0.5839844,-0.6,0.121875,0,0,0.6015625,-0.6,0.1007813,0,0,0.5839844,-0.2554688,0.140625,0,0.2871094,0.6171875,-0.2578125,0.1429688,0,0.2851563,0.6191406,-0.2953125,0.1429688,0,0.2539063,0.6191406,-0.2976563,0.1359375,0,0.2519531,0.6132813,-0.3,0.1453125,0,0.25,0.6210938,-0.2976563,0.1335938,0,0.2519531,0.6113281,-0.2976563,0.121875,0,0.2519531,0.6015625,-0.2554688,0.1335938,0,0.2871094,0.6113281,-0.2625,0.1195313,0,0.28125,0.5996094,-0.2953125,0.1195313,0,0.2539063,0.5996094,-0.1757813,0.1570313,0,0.3535156,0.6308594,-0.1828125,0.1546875,0,0.3476563,0.6289063,0.2390625,0.24375,0,0.6992188,0.703125,0.2320313,0.24375,0,0.6933594,0.703125,0.2390625,0.24375,0,0.6992188,0.703125,0.2273438,0.2554688,0,0.6894531,0.7128906,0.2273438,0.2554688,0,0.6894531,0.7128906,0.2273438,0.2484375,0,0.6894531,0.7070313,0.2414063,0.2554688,0,0.7011719,0.7128906,0.2414063,0.2484375,0,0.7011719,0.7070313,0.2390625,0.2578125,0,0.6992188,0.7148438,0.2320313,0.2578125,0,0.6933594,0.7148438,0.2460938,0.271875,0,0.7050781,0.7265625,0.2296875,0.2648438,0,0.6914063,0.7207031,0.225,0.2671875,0,0.6875,0.7226563,0.2109375,0.3234375,0,0.6757813,0.7695313,0.2109375,0.3164063,0,0.6757813,0.7636719,0.2085938,0.3117188,0,0.6738281,0.7597656,0.2015625,0.3117188,0,0.6679688,0.7597656,0.196875,0.3164063,0,0.6640625,0.7636719,0.13125,0.3492188,0,0.609375,0.7910156,0.1664063,0.4359375,0,0.6386719,0.8632813,0.1171875,0.3703125,0,0.5976563,0.8085938,0.1171875,0.3632813,0,0.5976563,0.8027344,0.1171875,0.3632813,0,0.5976563,0.8027344,0.2460938,0.4359375,0,0.7050781,0.8632813,0.2367188,0.2859375,0,0.6972656,0.7382813,0.2460938,0.2789063,0,0.7050781,0.7324219,0.2296875,0.2859375,0,0.6914063,0.7382813,0.225,0.2765625,0,0.6875,0.7304688,0.2085938,0.3257813,0,0.6738281,0.7714844,0.2015625,0.3257813,0,0.6679688,0.7714844,0.196875,0.3234375,0,0.6640625,0.7695313,0.3023438,0.2132813,0,0.7519531,0.6777344,0.3,0.215625,0,0.75,0.6796875,0.2976563,0.2132813,0,0.7480469,0.6777344,0.3023438,0.3515625,0,0.7519531,0.7929688,0.3117188,0.2132813,0,0.7597656,0.6777344,0.3117188,0.2648438,0,0.7597656,0.7207031,0.271875,0.2132813,0,0.7265625,0.6777344,0.3210938,0.1078125,0,0.7675781,0.5898438,0.365625,0.103125,0,0.8046875,0.5859375,0.2953125,0.1078125,0,0.7460938,0.5898438,0.2929688,0.103125,0,0.7441406,0.5859375,0.2484375,0.1335938,0,0.7070313,0.6113281,0.2929688,0.09375,0,0.7441406,0.578125,0.225,0.159375,0,0.6875,0.6328125,0.225,0.1476562,0,0.6875,0.6230469,0.3679688,0.084375,0,0.8066406,0.5703125,0.3679688,0.0984375,0,0.8066406,0.5820313,0.3,0.084375,0,0.75,0.5703125,0.3679688,0.103125,0,0.8066406,0.5859375,0.3867188,0.06796875,0,0.8222656,0.5566406,0.4078125,0.0140625,0,0.8398438,0.5117188,0.4171875,0.01171875,0,0.8476563,0.5097656,0.3796875,0.06796875,0,0.8164063,0.5566406,0.3632813,0.03984375,0,0.8027344,0.5332031,0.3515625,0.06796875,0,0.7929688,0.5566406,0.346875,0.05859375,0,0.7890625,0.5488281,0.346875,0.05390625,0,0.7890625,0.5449219,0.4476563,0.0515625,0,0.8730469,0.5429688,0.4546875,0.00703125,0,0.8789063,0.5058594,0.4546875,0.046875,0,0.8789063,0.5390625,0.4359375,0.00703125,0,0.8632813,0.5058594,0.4335938,0.05625,0,0.8613281,0.546875,0.3960938,0.065625,0,0.8300781,0.5546875,0.590625,-0.009375,0,0.9921875,0.4921875,0.5882813,-0.0234375,0,0.9902344,0.4804688,0.590625,-0.01875,0,0.9921875,0.484375,0.5859375,-0.0046875,0,0.9882813,0.4960938,0.5789062,-0.0234375,0,0.9824219,0.4804688,0.5484375,0.0140625,0,0.9570313,0.5117188,0.5414063,-0.009375,0,0.9511719,0.4921875,0.5203125,0.0234375,0,0.9335938,0.5195313,0.515625,0.01875,0,0.9296875,0.515625,0.515625,0.00703125,0,0.9296875,0.5058594,0.43125,-0.159375,0,0.859375,0.3671875,0.43125,-0.01171875,0,0.859375,0.4902344,0.4171875,-0.1828125,0,0.8476563,0.3476563,0.140625,0.2929688,0,0.6171875,0.7441406,0.140625,0.28125,0,0.6171875,0.734375,0.1382813,0.2789063,0,0.6152344,0.7324219,0.1289063,0.2789063,0,0.6074219,0.7324219,0.121875,0.2835937,0,0.6015625,0.7363281,0.1101563,0.2976563,0,0.5917969,0.7480469,0.1148438,0.3492188,0,0.5957031,0.7910156,0.1101563,0.290625,0,0.5917969,0.7421875,0.103125,0.2789063,0,0.5859375,0.7324219,0.09609375,0.2765625,0,0.5800781,0.7304688,0.09375,0.2648438,0,0.578125,0.7207031,0.09375,0.253125,0,0.578125,0.7109375,0.0890625,0.2273438,0,0.5742188,0.6894531,0.0890625,0.2226563,0,0.5742188,0.6855469,0.07734375,0.215625,0,0.5644531,0.6796875,0.065625,0.215625,0,0.5546875,0.6796875,-0.00234375,0.2929688,0,0.4980469,0.7441406,0.05859375,0.234375,0,0.5488281,0.6953125,-0.00234375,0.2835937,0,0.4980469,0.7363281,-0.01171875,0.2765625,0,0.4902344,0.7304688,-0.02109375,0.2765625,0,0.4824219,0.7304688,-0.02578125,0.2789063,0,0.4785156,0.7324219,-0.103125,0.4289063,0,0.4140625,0.8574219,-0.065625,0.4476563,0,0.4453125,0.8730469,-0.103125,0.4242188,0,0.4140625,0.8535156,-0.103125,0.4101563,0,0.4140625,0.8417969,-0.1242188,0.4429688,0,0.3964844,0.8691406,-0.1101563,0.440625,0,0.4082031,0.8671875,-0.1242188,0.4429688,0,0.3964844,0.8691406,-0.1359375,0.4429688,0,0.3867188,0.8691406,-0.2625,-0.1828125,0,0.28125,0.3476563,0.2554688,0.2085938,0,0.7128906,0.6738281,0.2695313,0.1992188,0,0.7246094,0.6660156,0.2695313,0.2085938,0,0.7246094,0.6738281,0.24375,0.1828125,0,0.703125,0.6523438,0.2484375,0.2085938,0,0.7070313,0.6738281,0.2109375,0.1992188,0,0.6757813,0.6660156,0.2085938,0.1898438,0,0.6738281,0.6582031,0.1382813,0.2953125,0,0.6152344,0.7460938,0.1289063,0.3492188,0,0.6074219,0.7910156,0.121875,0.2953125,0,0.6015625,0.7460938,0.08671875,0.2320313,0,0.5722656,0.6933594,0.0703125,0.2460938,0,0.5585938,0.7050781,0.05859375,0.2460938,0,0.5488281,0.7050781,0.08671875,0.2742188,0,0.5722656,0.7285156,0.08671875,0.2507813,0,0.5722656,0.7089844,0.0796875,0.271875,0,0.5664063,0.7265625,0.0796875,0.2625,0,0.5664063,0.71875,-0.0046875,0.2976563,0,0.4960938,0.7480469,-0.01875,0.2976563,0,0.484375,0.7480469,-0.02578125,0.2859375,0,0.4785156,0.7382813,0.09140625,0.2789063,0,0.5761719,0.7324219,0.0890625,0.39375,0,0.5742188,0.828125,0.1007813,0.365625,0,0.5839844,0.8046875,0.09609375,0.3,0,0.5800781,0.75,0.1007813,0.3632813,0,0.5839844,0.8027344,0.09375,0.2976563,0,0.578125,0.7480469,0.09140625,0.2859375,0,0.5761719,0.7382813,0.1078125,0.3726563,0,0.5898438,0.8105469,0.1078125,0.3,0,0.5898438,0.75,0.1148438,0.3632813,0,0.5957031,0.8027344,-0.20625,0.4171875,0,0.328125,0.8476563,-0.2015625,0.3773438,0,0.3320313,0.8144531,-0.2015625,0.4125,0,0.3320313,0.84375,-0.2085938,0.3726563,0,0.3261719,0.8105469,-0.2132813,0.4171875,0,0.3222656,0.8476563,-0.2179688,0.3726563,0,0.3183594,0.8105469,-0.2203125,0.4148438,0,0.3164063,0.8457031,-0.2203125,0.3820313,0,0.3164063,0.8183594,-0.1476562,0.384375,0,0.3769531,0.8203125,-0.1523438,0.3726563,0,0.3730469,0.8105469,-0.1476562,0.375,0,0.3769531,0.8125,-0.1546875,0.3914063,0,0.3710938,0.8261719,-0.16875,0.3726563,0,0.359375,0.8105469,-0.1710937,0.3914063,0,0.3574219,0.8261719,-0.1757813,0.3890625,0,0.3535156,0.8242188,-0.1757813,0.3796875,0,0.3535156,0.8164063,-0.1828125,0.478125,0,0.3476563,0.8984375,-0.1804688,0.459375,0,0.3496094,0.8828125,-0.1804688,0.4734375,0,0.3496094,0.8945313,-0.1828125,0.4523438,0,0.3476563,0.8769531,-0.1851563,0.478125,0,0.3457031,0.8984375,-0.1851563,0.4523438,0,0.3457031,0.8769531,-0.1710937,0.4476563,0,0.3574219,0.8730469,-0.1734375,0.45,0,0.3554688,0.875,-0.1757813,0.45,0,0.3535156,0.875,-0.1359375,0.4453125,0,0.3867188,0.8710938,-0.1242188,0.4710938,0,0.3964844,0.8925781,-0.1382813,0.4898438,0,0.3847656,0.9082031,-0.1429688,0.4945313,0,0.3808594,0.9121094,-0.1476562,0.4429688,0,0.3769531,0.8691406,-0.1710937,0.4945313,0,0.3574219,0.9121094,-0.1851563,0.4898438,0,0.3457031,0.9082031,-0.1054688,0.4476563,0,0.4121094,0.8730469,-0.1101563,0.4453125,0,0.4082031,0.8710938,0.2414063,-0.4734375,0,0.7011719,0.1054688,0.24375,-0.5085937,0,0.703125,0.0761719,0.24375,-0.4734375,0,0.703125,0.1054688,0.2132813,-0.5460938,0,0.6777344,0.04492188,0.0703125,-0.5460938,0,0.5585938,0.04492188,0.046875,-0.54375,0,0.5390625,0.04687503,-0.01171875,-0.5273438,0,0.4902344,0.06054688,-0.028125,-0.5203125,0,0.4765625,0.06640628,-0.03984375,-0.4757813,0,0.4667969,0.1035156,0.1148438,0.365625,0,0.5957031,0.8046875,0.1054688,0.3585938,0,0.5878906,0.7988281,0.1125,0.375,0,0.59375,0.8125,0.1148438,0.3726563,0,0.5957031,0.8105469,0.1101563,0.375,0,0.5917969,0.8125,-0.00234375,-0.5460938,0,0.4980469,0.04492188,-0.00234375,-0.534375,0,0.4980469,0.0546875,-0.0890625,-0.4289063,0,0.4257813,0.1425781,-0.16875,-0.5460938,0,0.359375,0.04492188,-0.4078125,-0.4289063,0,0.1601563,0.1425781,-0.4078125,-0.5296875,0,0.1601563,0.05859375,-0.065625,-0.2273438,0,0.4453125,0.3105469,-0.06796875,-0.2390625,0,0.4433594,0.3007813,-0.065625,-0.234375,0,0.4453125,0.3046875,-0.08203125,-0.2226563,0,0.4316406,0.3144531,-0.0984375,-0.2226563,0,0.4179688,0.3144531,-0.0984375,-0.2390625,0,0.4179688,0.3007813,-0.1007813,-0.225,0,0.4160156,0.3125,-0.1007813,-0.2320313,0,0.4160156,0.3066406,-0.140625,0.4289063,0,0.3828125,0.8574219,-0.1429688,0.4101563,0,0.3808594,0.8417969,-0.140625,0.4125,0,0.3828125,0.84375,-0.1476562,0.4382813,0,0.3769531,0.8652344,-0.1523438,0.4101563,0,0.3730469,0.8417969,-0.1804688,0.45,0,0.3496094,0.875,-0.1828125,0.4453125,0,0.3476563,0.8710938,-0.1828125,0.4359375,0,0.3476563,0.8632813,-0.1851563,0.4453125,0,0.3457031,0.8710938,-0.1898438,0.4429688,0,0.3417969,0.8691406,-0.1945313,0.478125,0,0.3378906,0.8984375,-0.2039063,0.4429688,0,0.3300781,0.8691406,-0.20625,0.4617188,0,0.328125,0.8847656,-0.20625,0.45,0,0.328125,0.875],[399,398,397,396,397,398,395,397,396,344,395,396,394,395,344,345,394,344,394,345,343,343,341,348,342,348,341,393,392,390,391,390,392,348,390,391,346,390,348,389,390,346,387,390,389,386,387,389,388,387,386,385,384,383,382,383,384,379,383,382,381,379,382,378,379,381,380,379,378,377,376,375,374,375,376,365,375,374,372,375,365,366,365,374,373,372,365,317,318,322,368,322,318,323,322,368,268,322,323,269,268,323,323,367,208,367,370,208,206,208,370,207,208,206,321,371,367,369,367,371,370,367,369,318,316,368,321,368,316,323,368,321,367,323,321,366,358,365,364,365,358,363,364,358,362,363,358,361,362,358,359,361,358,360,359,358,288,290,287,357,356,285,286,285,356,344,355,340,354,340,355,342,340,354,348,342,354,347,348,354,346,347,354,352,346,354,353,346,352,292,353,352,351,292,352,349,292,351,350,349,351,289,349,350,292,349,291,289,291,349,348,347,346,345,344,343,340,343,344,341,343,340,342,341,340,339,338,336,337,336,338,335,336,337,333,336,335,332,333,335,334,333,332,331,330,329,328,329,330,327,329,328,324,327,328,325,327,324,326,325,324,203,216,202,215,202,216,201,202,215,214,201,215,200,201,214,199,200,214,267,303,266,301,266,303,265,266,301,264,265,301,263,264,301,269,323,302,208,302,323,204,302,208,314,320,272,319,272,320,317,272,319,271,272,317,322,271,317,270,271,322,268,270,322,321,316,315,320,315,316,314,315,320,319,320,316,317,319,316,318,317,316,315,312,286,313,286,312,284,286,313,311,312,315,279,311,315,306,279,315,280,279,306,305,306,315,309,305,315,310,305,309,307,309,315,314,307,315,273,307,314,272,273,314,284,313,283,312,283,313,282,283,312,311,282,312,281,282,311,279,281,311,305,310,304,308,304,310,275,304,308,274,275,308,198,213,197,212,197,213,196,197,212,210,196,212,211,196,210,310,309,308,307,308,309,274,308,307,273,274,307,280,306,278,305,278,306,277,278,305,304,277,305,276,277,304,275,276,304,302,303,269,267,269,303,301,303,302,204,301,302,294,301,204,263,301,294,298,263,294,299,263,298,300,263,299,41,263,300,41,300,38,299,38,300,298,38,299,40,38,298,294,40,298,40,294,297,295,297,294,296,295,294,232,241,234,242,234,241,243,234,242,239,241,232,233,239,232,236,239,233,124,127,293,129,293,127,180,293,129,183,293,180,182,293,183,262,293,182,181,262,182,174,262,181,146,262,174,148,146,174,142,262,146,185,262,142,143,185,142,96,185,143,104,96,143,97,185,96,184,262,185,94,262,184,92,262,94,103,262,92,110,262,103,284,262,110,292,284,110,291,284,292,289,284,291,288,284,289,290,288,289,287,284,288,285,284,287,286,284,285,283,262,284,282,262,283,281,262,282,278,262,281,279,278,281,280,278,279,277,262,278,276,262,277,275,262,276,274,262,275,273,262,274,272,262,273,271,262,272,270,262,271,268,262,270,267,262,268,269,267,268,266,262,267,265,262,266,39,262,265,264,39,265,263,39,264,41,39,263,43,262,39,44,262,43,42,262,44,228,262,42,229,262,228,234,262,229,243,262,234,240,262,243,237,262,240,238,262,237,260,262,238,261,260,238,259,258,256,257,256,258,255,256,257,254,256,255,253,254,255,251,254,253,250,251,253,252,251,250,236,249,238,248,238,249,247,238,248,244,247,248,245,247,244,246,245,244,243,242,240,241,240,242,239,240,241,237,240,239,236,237,239,238,237,236,233,225,235,229,227,234,226,234,227,224,234,226,232,234,224,225,232,224,233,232,225,231,230,43,219,43,230,42,43,219,228,42,219,227,228,219,229,228,227,226,227,219,224,226,219,217,224,219,225,224,217,186,193,223,192,223,193,196,223,192,211,223,196,209,223,211,220,223,209,219,223,220,218,219,220,217,218,220,221,217,220,222,221,220,219,218,217,209,216,205,203,205,216,215,216,209,214,215,209,199,214,209,213,199,209,198,199,213,212,213,209,210,212,209,211,210,209,208,207,204,206,204,207,205,204,206,203,204,205,189,204,203,202,189,203,201,189,202,200,189,201,199,189,200,198,189,199,197,189,198,195,189,197,196,195,197,194,195,196,192,194,196,189,195,186,194,186,195,192,186,194,193,186,192,191,190,187,189,187,190,186,187,189,188,187,186,144,145,62,97,95,185,93,185,95,184,185,93,94,184,93,180,179,183,177,183,179,176,183,177,182,183,176,175,182,176,181,182,175,174,181,175,130,155,128,129,128,155,178,129,155,179,129,178,180,129,179,144,62,104,60,104,62,58,104,60,155,61,178,176,178,61,177,178,176,179,178,177,175,176,61,174,175,61,147,174,61,148,174,147,145,147,61,62,145,61,173,172,171,170,171,172,168,171,170,167,168,170,169,168,167,166,164,165,163,165,164,157,163,164,130,163,157,156,130,157,162,161,160,158,160,161,159,160,158,157,159,158,155,157,158,156,157,155,130,156,155,154,153,152,149,152,153,150,152,149,151,150,149,148,147,146,145,146,147,142,146,145,144,142,145,104,142,144,143,142,104,126,140,141,137,141,140,139,137,140,138,137,139,133,137,138,136,137,133,135,136,133,134,135,133,78,134,133,132,78,133,77,78,132,119,131,127,130,127,131,128,127,130,129,127,128,116,119,115,127,115,119,124,115,127,115,124,125,126,125,124,123,122,121,118,121,122,120,121,118,116,120,118,119,116,118,117,116,115,72,73,114,113,114,73,112,114,113,111,112,113,69,112,111,57,80,98,81,98,80,100,105,103,110,103,105,81,109,98,108,98,109,107,98,108,106,98,107,105,98,106,100,98,105,104,58,96,92,96,58,59,92,58,102,92,59,101,92,102,99,92,101,100,92,99,103,92,100,59,57,102,98,102,57,101,102,98,99,101,98,100,99,98,92,93,96,95,96,93,97,96,95,94,93,92,91,90,89,88,89,90,85,89,88,87,85,88,84,85,87,86,85,84,61,83,57,82,57,83,79,57,82,80,57,79,81,80,79,78,77,76,75,76,77,72,76,75,74,72,75,71,72,74,73,72,71,70,69,68,67,68,69,66,68,67,63,66,67,64,66,63,65,64,63,62,61,60,57,60,61,58,60,57,59,58,57,56,55,54,52,54,55,53,54,52,51,53,52,49,51,52,50,51,49,48,50,49,45,48,49,46,48,45,47,46,45,44,43,42,41,38,39,40,39,38,37,36,34,33,34,36,35,34,33,32,31,30,29,30,31,28,30,29,25,28,29,26,28,25,27,26,25,24,23,22,21,22,23,20,22,21,17,20,21,18,20,17,19,18,17,16,15,13,14,13,15,12,13,14,10,13,12,9,10,12,11,10,9,8,7,6,3,6,7,5,6,3,4,5,3,1,4,3,0,1,3,2,1,0],0,-0.0000252202153205872,1,0.99997478723526,0,0.044921875,0.9921875,0.912109375,0,0,0,0,[0,0,0,0],[-0.6,-0.6,0.6,0.6],426.666656494141,512,512,512,512,256,256,0,23.0129127502441]},{"id":26936,"path":"Assets/Content/Sprites/Ingredients/pepper.png","assetBundleId":-1,"data":["pepper",6,26934,[0,0,0,0.6,0.4335938,0],[-0.31875,-0.3421875,0,0.234375,0.2148438,-0.328125,-0.2929688,0,0.2265625,0.2558594,-0.31875,-0.3796875,0,0.234375,0.1835938,-0.3164063,-0.3398438,0,0.2363281,0.2167969,-0.3070312,-0.3820313,0,0.2441406,0.1816406,-0.309375,-0.3679688,0,0.2421875,0.1933594,0.6,-0.2390625,0,1,0.3007813,0.5742188,-0.3398438,0,0.9785156,0.2167969,0.6,-0.3210938,0,1,0.2324219,0.534375,-0.2390625,0,0.9453125,0.3007813,0.4054688,-0.4171875,0,0.8378906,0.1523438,0.3140625,-0.4335938,0,0.7617188,0.1386719,-0.1335938,-0.4335938,0,0.3886719,0.1386719,-0.3070312,-0.4054688,0,0.2441406,0.1621094,-0.3070312,-0.384375,0,0.2441406,0.1796875,-0.3632813,-0.4054688,0,0.1972656,0.1621094,-0.4382813,-0.4007813,0,0.1347656,0.1660156,-0.515625,-0.2929688,0,0.0703125,0.2558594,-0.515625,-0.3351563,0,0.0703125,0.2207031,-0.0703125,0.4007813,0,0.4414063,0.8339844,-0.06796875,0.3914063,0,0.4433594,0.8261719,-0.06796875,0.3984375,0,0.4433594,0.8320313,-0.0796875,0.3773438,0,0.4335938,0.8144531,-0.09140625,0.3867188,0,0.4238281,0.8222656,-0.103125,0.3960938,0,0.4140625,0.8300781,-0.1125,0.3960938,0,0.40625,0.8300781,-0.1382813,0.4007813,0,0.3847656,0.8339844,-0.1195313,0.39375,0,0.4003906,0.828125,-0.1195313,0.3867188,0,0.4003906,0.8222656,-0.1382813,0.3867188,0,0.3847656,0.8222656,-0.06796875,0.4242188,0,0.4433594,0.8535156,-0.09375,0.4335938,0,0.421875,0.8613281,-0.121875,0.4335938,0,0.3984375,0.8613281,-0.1335938,0.4171875,0,0.3886719,0.8476563,-0.1382813,0.403125,0,0.3847656,0.8359375,0.1242188,0.271875,0,0.6035156,0.7265625,0.1289063,0.2554688,0,0.6074219,0.7128906,0.1289063,0.2671875,0,0.6074219,0.7226563,0.121875,0.2625,0,0.6015625,0.71875,0.1335938,0.3351563,0,0.6113281,0.7792969,0.1382813,0.3304687,0,0.6152344,0.7753906,0.1382813,0.3398438,0,0.6152344,0.7832031,0.13125,0.3304687,0,0.609375,0.7753906,0.1265625,0.3351563,0,0.6054688,0.7792969,0.1171875,0.309375,0,0.5976563,0.7578125,0.1242188,0.3398438,0,0.6035156,0.7832031,0.1382813,0.3632813,0,0.6152344,0.8027344,0.13125,0.3492188,0,0.609375,0.7910156,0.1382813,0.3492188,0,0.6152344,0.7910156,0.1242188,0.3445313,0,0.6035156,0.7871094,0.1148438,0.2601562,0,0.5957031,0.7167969,0.1171875,0.2953125,0,0.5976563,0.7460938,-0.046875,0.365625,0,0.4609375,0.8046875,0.1148438,0.2507813,0,0.5957031,0.7089844,0.16875,0.4007813,0,0.640625,0.8339844,-0.04921875,0.3796875,0,0.4589844,0.8164063,-0.05390625,0.4007813,0,0.4550781,0.8339844,-0.05390625,0.3890625,0,0.4550781,0.8242188,0.1335938,0.290625,0,0.6113281,0.7421875,0.140625,0.2835937,0,0.6171875,0.7363281,0.1429688,0.2953125,0,0.6191406,0.7460938,0.1335938,0.2882813,0,0.6113281,0.7402344,0.1265625,0.290625,0,0.6054688,0.7421875,0.1242188,0.2789063,0,0.6035156,0.7324219,0.1382813,0.3023438,0,0.6152344,0.7519531,0.1429688,0.3,0,0.6191406,0.75,0.1476562,0.3304687,0,0.6230469,0.7753906,0.1476562,0.3140625,0,0.6230469,0.7617188,0.140625,0.3421875,0,0.6171875,0.7851563,0.1289063,0.24375,0,0.6074219,0.703125,0.121875,0.2414063,0,0.6015625,0.7011719,-0.084375,0.3632813,0,0.4296875,0.8027344,-0.0796875,0.365625,0,0.4335938,0.8046875,-0.09609375,0.3632813,0,0.4199219,0.8027344,-0.1171875,0.3773438,0,0.4023438,0.8144531,-0.1195313,0.3820313,0,0.4003906,0.8183594,-0.09140625,-0.3023438,0,0.4238281,0.2480469,-0.08671875,-0.3164063,0,0.4277344,0.2363281,-0.08671875,-0.3046875,0,0.4277344,0.2460938,-0.1007813,-0.3023438,0,0.4160156,0.2480469,-0.103125,-0.3046875,0,0.4140625,0.2460938,-0.103125,-0.3164063,0,0.4140625,0.2363281,-0.1289063,0.3539062,0,0.3925781,0.7949219,-0.1359375,0.365625,0,0.3867188,0.8046875,-0.1429688,0.365625,0,0.3808594,0.8046875,-0.4195313,-0.2414063,0,0.1503906,0.2988281,-0.4242188,-0.2554688,0,0.1464844,0.2871094,-0.4195313,-0.2484375,0,0.1503906,0.2929688,-0.4289063,-0.2554688,0,0.1425781,0.2871094,-0.4335938,-0.2296875,0,0.1386719,0.3085938,-0.4453125,-0.2484375,0,0.1289063,0.2929688,-0.4570313,-0.24375,0,0.1191406,0.296875,-0.459375,-0.225,0,0.1171875,0.3125,-0.4710938,-0.225,0,0.1074219,0.3125,-0.4710938,-0.2367188,0,0.1074219,0.3027344,-0.4734375,-0.2296875,0,0.1054688,0.3085938,-0.1476562,0.3632813,0,0.3769531,0.8027344,-0.3914063,-0.1875,0,0.1738281,0.34375,-0.1476562,0.3304687,0,0.3769531,0.7753906,-0.5320312,0.1523438,0,0.05664065,0.6269531,-0.5320312,-0.09140625,0,0.05664065,0.4238281,-0.1335938,0.3257813,0,0.3886719,0.7714844,-0.1289063,0.328125,0,0.3925781,0.7734375,-0.1429688,0.3257813,0,0.3808594,0.7714844,-0.5578125,-0.0984375,0,0.03515625,0.4179688,-0.5554687,-0.1101563,0,0.0371094,0.4082031,-0.5554687,-0.1007813,0,0.0371094,0.4160156,-0.5601563,-0.1125,0,0.0332031,0.40625,-0.5671875,-0.0984375,0,0.02734378,0.4179688,-0.5671875,-0.1125,0,0.02734378,0.40625,-0.5695313,-0.103125,0,0.02539063,0.4140625,-0.5695313,-0.1078125,0,0.02539063,0.4101563,-0.5742188,-0.1101563,0,0.02148438,0.4082031,-0.5695313,-0.1195313,0,0.02539063,0.4003906,-0.5695313,-0.1148438,0,0.02539063,0.4042969,-0.5742188,-0.1242188,0,0.02148438,0.3964844,-0.58125,-0.1101563,0,0.015625,0.4082031,-0.58125,-0.1242188,0,0.015625,0.3964844,-0.5859375,-0.1148438,0,0.01171875,0.4042969,-0.5859375,-0.1195313,0,0.01171875,0.4003906,-0.553125,0.0421875,0,0.0390625,0.5351563,-0.553125,0.02578125,0,0.0390625,0.5214844,-0.5507813,0.0375,0,0.04101563,0.53125,-0.5601563,0.0421875,0,0.0332031,0.5351563,-0.5765625,0.03515625,0,0.01953125,0.5292969,-0.5929688,-0.0046875,0,0.005859375,0.4960938,-0.6,0.0140625,0,0,0.5117188,-0.6,-0.0046875,0,0,0.4960938,0.3773438,0.08671875,0,0.8144531,0.5722656,0.39375,-0.1875,0,0.828125,0.34375,0.39375,0.08671875,0,0.828125,0.5722656,0.3492188,0.09140625,0,0.7910156,0.5761719,0.3445313,0.1007813,0,0.7871094,0.5839844,0.3140625,0.2460938,0,0.7617188,0.7050781,0.3140625,0.225,0,0.7617188,0.6875,0.3070312,0.2203125,0,0.7558594,0.6835938,0.3070312,0.140625,0,0.7558594,0.6171875,0.290625,0.1265625,0,0.7421875,0.6054688,0.2671875,0.1265625,0,0.7226563,0.6054688,0.2507813,0.15,0,0.7089844,0.625,0.2460938,0.1453125,0,0.7050781,0.6210938,0.234375,0.1453125,0,0.6953125,0.6210938,0.2296875,0.1476562,0,0.6914063,0.6230469,0.2226563,0.159375,0,0.6855469,0.6328125,0.2132813,0.159375,0,0.6777344,0.6328125,0.1664063,0.2742188,0,0.6386719,0.7285156,0.2109375,0.1640625,0,0.6757813,0.6367188,0.1664063,0.2789063,0,0.6386719,0.7324219,0.159375,0.2671875,0,0.6328125,0.7226563,0.1570313,0.2671875,0,0.6308594,0.7226563,0.1476562,0.2765625,0,0.6230469,0.7304688,0.1359375,0.2695313,0,0.6132813,0.7246094,-0.05625,0.3867188,0,0.453125,0.8222656,-0.04921875,0.3773438,0,0.4589844,0.8144531,-0.084375,0.3421875,0,0.4296875,0.7851563,-0.084375,0.3304687,0,0.4296875,0.7753906,-0.09140625,0.328125,0,0.4238281,0.7734375,-0.09140625,0.2976563,0,0.4238281,0.7480469,-0.09140625,0.28125,0,0.4238281,0.734375,-0.0984375,0.2742188,0,0.4179688,0.7285156,-0.1007813,0.2742188,0,0.4160156,0.7285156,-0.1101563,0.3375,0,0.4082031,0.78125,-0.1054688,0.2789063,0,0.4121094,0.7324219,-0.1078125,0.3304687,0,0.4101563,0.7753906,0.3820313,0.1078125,0,0.8183594,0.5898438,0.39375,0.1007813,0,0.828125,0.5839844,0.3492188,0.1078125,0,0.7910156,0.5898438,0.39375,0.1148438,0,0.828125,0.5957031,0.5765625,0.04921875,0,0.9804688,0.5410156,0.5601563,0.03984375,0,0.9667969,0.5332031,0.5765625,0.03984375,0,0.9804688,0.5332031,0.5484375,0.065625,0,0.9570313,0.5546875,0.4992188,0.08203125,0,0.9160156,0.5683594,0.4945313,0.0609375,0,0.9121094,0.5507813,0.4828125,0.08203125,0,0.9023438,0.5683594,0.4804688,0.07734375,0,0.9003906,0.5644531,0.4804688,0.06796875,0,0.9003906,0.5566406,0.3984375,0.0890625,0,0.8320313,0.5742188,0.3984375,0.0984375,0,0.8320313,0.5820313,0.2789063,0.2109375,0,0.7324219,0.6757813,0.2671875,0.2039063,0,0.7226563,0.6699219,0.2789063,0.2109375,0,0.7324219,0.6757813,0.2765625,0.2203125,0,0.7304688,0.6835938,0.2789063,0.2179688,0,0.7324219,0.6816406,0.2648438,0.2203125,0,0.7207031,0.6835938,0.2484375,0.2179688,0,0.7070313,0.6816406,0.2484375,0.1921875,0,0.7070313,0.6601563,0.234375,0.1921875,0,0.6953125,0.6601563,0.2320313,0.2015625,0,0.6933594,0.6679688,0.2320313,0.196875,0,0.6933594,0.6640625,0.290625,0.2203125,0,0.7421875,0.6835938,0.271875,0.225,0,0.7265625,0.6875,0.2296875,0.1664063,0,0.6914063,0.6386719,0.2273438,0.1734375,0,0.6894531,0.6445313,0.2179688,0.1734375,0,0.6816406,0.6445313,0.2109375,0.16875,0,0.6757813,0.640625,0.159375,0.2859375,0,0.6328125,0.7382813,0.1476562,0.2789063,0,0.6230469,0.7324219,0.1546875,0.2859375,0,0.6289063,0.7382813,0.2554688,0.2765625,0,0.7128906,0.7304688,0.2460938,0.2835937,0,0.7050781,0.7363281,0.2367188,0.2742188,0,0.6972656,0.7285156,0.2226563,0.3117188,0,0.6855469,0.7597656,0.2367188,0.2695313,0,0.6972656,0.7246094,0.24375,0.2835937,0,0.703125,0.7363281,0.2203125,0.4007813,0,0.6835938,0.8339844,0.215625,0.3140625,0,0.6796875,0.7617188,0.2109375,0.309375,0,0.6757813,0.7578125,0.2601562,0.4078125,0,0.7167969,0.8398438,0.3140625,0.3539062,0,0.7617188,0.7949219,0.1734375,0.4078125,0,0.6445313,0.8398438,0.234375,0.1804688,0,0.6953125,0.6503906,0.2296875,0.1570313,0,0.6914063,0.6308594,0.253125,0.2648438,0,0.7109375,0.7207031,0.2507813,0.2578125,0,0.7089844,0.7148438,0.253125,0.2507813,0,0.7109375,0.7089844,0.24375,0.2578125,0,0.703125,0.7148438,0.2414063,0.2648438,0,0.7011719,0.7207031,0.2390625,0.253125,0,0.6992188,0.7109375,0.2554688,0.271875,0,0.7128906,0.7265625,0.2484375,0.2460938,0,0.7070313,0.7050781,0.2414063,0.2460938,0,0.7011719,0.7050781,0.2226563,0.3046875,0,0.6855469,0.7539063,0.215625,0.3023438,0,0.6796875,0.7519531,-0.0984375,0.3070312,0,0.4179688,0.7558594,-0.1054688,0.3046875,0,0.4121094,0.7539063,-0.09140625,0.346875,0,0.4238281,0.7890625,-0.1054688,0.346875,0,0.4121094,0.7890625,-0.1101563,0.3445313,0,0.4082031,0.7871094],[161,228,163,227,163,228,156,163,227,226,156,227,155,156,226,154,155,226,207,206,223,222,223,206,202,222,206,162,225,160,224,160,225,159,160,224,158,159,224,157,158,224,73,228,74,161,74,228,227,228,73,226,227,73,71,226,73,154,226,71,156,225,163,162,163,225,224,225,156,157,224,156,150,197,149,198,149,197,196,149,198,148,149,196,145,148,196,147,145,196,35,63,37,61,37,63,151,37,61,59,151,61,203,201,217,204,217,201,213,217,204,200,213,204,199,213,200,219,213,199,218,216,221,220,221,216,214,220,216,215,220,214,67,221,65,191,65,221,66,221,67,207,221,66,54,207,66,223,221,207,218,221,223,222,218,223,202,218,222,203,218,202,220,191,221,215,191,220,213,191,215,219,191,213,199,191,219,203,217,218,216,218,217,213,216,217,214,216,213,215,214,213,143,192,142,212,142,192,211,212,192,189,211,192,187,211,189,186,211,187,180,211,186,146,195,144,194,144,195,143,144,194,193,143,194,192,143,193,142,212,141,211,141,212,140,141,211,180,140,211,139,140,180,138,139,180,137,138,180,181,137,180,179,137,181,190,137,179,136,137,190,135,136,190,179,183,190,54,210,205,208,205,210,133,205,208,209,133,208,54,205,207,206,207,205,202,206,205,133,202,205,200,202,133,204,202,200,201,202,204,203,202,201,199,200,133,191,199,133,134,191,133,191,196,65,198,65,196,197,65,198,150,65,197,147,196,191,185,147,191,188,147,185,195,147,188,146,147,195,194,195,188,193,194,188,192,193,188,189,192,188,184,185,191,182,184,191,134,182,191,183,182,134,190,183,134,135,190,134,189,188,187,185,187,188,186,187,185,180,186,185,184,180,185,182,180,184,179,180,182,183,179,182,181,180,179,130,165,177,178,177,165,176,175,173,174,173,175,172,173,174,169,173,172,171,169,172,168,169,171,170,169,168,167,166,133,132,133,166,164,166,167,165,164,167,132,166,131,128,131,166,164,128,166,130,128,164,165,130,164,98,162,97,160,97,162,129,97,160,103,162,98,101,162,103,102,162,101,82,162,102,75,162,82,74,162,75,161,162,74,163,162,161,159,129,160,158,129,159,157,129,158,156,129,157,155,129,156,154,129,155,71,129,154,72,129,71,22,129,72,20,129,22,52,129,20,21,52,20,152,52,21,153,52,152,53,129,52,70,129,53,69,129,70,36,129,69,37,129,36,151,129,37,59,129,151,150,129,59,60,150,59,65,150,60,149,129,150,144,129,149,148,144,149,146,144,148,145,146,148,147,146,145,143,129,144,142,129,143,141,129,142,140,129,141,139,129,140,138,129,139,137,129,138,136,129,137,135,129,136,134,129,135,133,129,134,132,129,133,131,129,132,128,129,131,130,129,128,127,126,125,124,125,126,121,125,124,123,121,124,120,121,123,122,121,120,119,118,117,116,117,118,115,117,116,112,115,116,113,115,112,114,113,112,111,110,109,108,109,110,107,109,108,104,107,108,105,107,104,106,105,104,98,96,103,84,103,96,101,103,84,83,101,84,82,101,83,102,101,82,100,99,97,26,97,99,96,97,26,98,97,96,84,96,26,29,84,26,95,93,94,91,94,93,92,91,93,89,91,92,90,91,89,88,90,89,85,88,89,86,88,85,87,86,85,28,27,23,25,23,27,24,23,25,84,29,83,28,83,29,82,83,28,75,82,28,81,80,77,79,77,80,76,77,79,78,77,76,75,28,74,23,74,28,73,74,23,71,73,23,22,71,23,72,71,22,53,50,70,38,70,50,69,70,38,36,69,38,51,44,62,42,62,44,58,62,42,40,58,42,64,58,40,45,49,43,47,43,49,39,43,47,48,39,47,41,39,48,41,48,68,40,41,66,68,66,41,48,46,68,54,68,46,66,68,54,64,40,65,66,65,40,67,65,66,58,64,60,65,60,64,50,51,38,63,38,51,62,63,51,35,38,63,61,63,62,58,61,62,59,61,58,60,59,58,57,56,55,54,55,56,52,55,54,46,52,54,49,52,46,44,52,49,50,52,44,53,52,50,51,50,44,45,44,49,47,49,46,48,47,46,45,43,44,42,44,43,39,42,43,40,42,39,41,40,39,38,35,36,37,36,35,26,34,19,33,19,34,32,19,33,31,19,32,30,19,31,21,19,30,29,26,28,27,28,26,25,27,26,19,25,26,24,25,19,23,24,19,22,23,19,20,22,19,21,20,19,18,17,16,1,16,17,15,16,1,2,15,1,13,15,2,4,13,2,14,13,4,5,9,4,12,4,9,11,12,9,10,11,9,7,10,9,6,7,9,8,7,6,2,0,4,3,4,0,5,4,3,3,0,1,2,1,0],0,-0.000148668885231018,1,0.99985134601593,0,0.138671875,1,0.861328125,0,0,0,0,[0,0,0,0],[-0.6,-0.6,0.6,0.6],426.666656494141,512,512,512,512,256,256,0,71.0761184692383]},{"id":26970,"path":"Assets/Content/Sprites/Tiles/Special/tile_ice_3.png","assetBundleId":-1,"data":["tile_ice_3",6,26968,[0,0,0,0.5155556,0.5688889,0],[0.4844444,-0.07111111,0,0.9257813,0.4375,0.5155556,-0.4444444,0,0.953125,0.109375,0.5155556,-0.1466667,0,0.953125,0.3710938,0.4044445,-0.5688889,0,0.8554688,0,-0.16,0.06222222,0,0.359375,0.5546875,-0.2533333,0.06222222,0,0.2773438,0.5546875,-0.3288889,-0.5688889,0,0.2109375,0,-0.4222222,-0.4622222,0,0.1289063,0.09375,-0.4266667,-0.4755556,0,0.125,0.08203125,-0.44,-0.4844444,0,0.1132813,0.07421875,-0.5022222,-0.4,0,0.05859372,0.1484375,-0.5155556,-0.1511111,0,0.046875,0.3671875,-0.5155556,-0.3288889,0,0.046875,0.2109375,-0.4266667,-0.5066667,0,0.125,0.0546875,-0.4755556,-0.02222222,0,0.08203125,0.4804688,-0.4577778,-0.03555556,0,0.09765625,0.46875,-0.4622222,-0.02222222,0,0.09375,0.4804688,-0.4755556,-0.05333333,0,0.08203125,0.453125,-0.4888889,-0.05333333,0,0.0703125,0.453125,-0.4933333,-0.03555556,0,0.06640625,0.46875,-0.4933333,-0.04444445,0,0.06640625,0.4609375,0.3911111,0.5688889,0,0.84375,1,0.4044445,0.4888889,0,0.8554688,0.9296875,0.4044445,0.5377778,0,0.8554688,0.9726563,0.3866667,0.4888889,0,0.8398438,0.9296875,0.2088889,0.5688889,0,0.6835938,1,0.2088889,0.5333334,0,0.6835938,0.96875,-0.02222222,0.1955556,0,0.4804688,0.671875,-0.03111111,0.16,0,0.4726563,0.640625,-0.02222222,0.1644444,0,0.4804688,0.6445313,-0.04,0.16,0,0.4648438,0.640625,-0.05777778,0.1955556,0,0.4492188,0.671875,-0.06222222,0.1822222,0,0.4453125,0.6601563,-0.2088889,0.5688889,0,0.3164063,1,-0.3466667,0.3688889,0,0.1953125,0.8242188,-0.2088889,0.5555556,0,0.3164063,0.9882813,-0.3644444,0.5688889,0,0.1796875,1,-0.3777778,0.5644444,0,0.1679688,0.9960938,-0.4577778,0.2666667,0,0.09765625,0.734375,-0.5155556,0.4222222,0,0.046875,0.8710938,-0.5155556,0.2666667,0,0.046875,0.734375],[40,39,38,37,38,39,34,38,37,36,34,37,33,34,36,35,34,33,32,31,30,27,30,31,28,30,27,29,28,27,26,25,24,21,24,25,22,24,21,23,22,21,20,19,18,14,18,19,17,18,14,15,17,14,16,15,14,13,7,6,12,11,10,5,10,11,9,10,5,8,9,5,7,8,5,6,7,5,3,6,5,4,3,5,0,3,4,1,3,0,2,1,0],-0.000297345221042633,0,0.999702632427216,1,0.046875,0,0.953125,1,0,0,0,0,[0,0,0,0],[-0.5688889,-0.5688889,0.5688889,0.5688889],225,256,256,256,256,128,128,12.0761203765869,0]},{"id":27006,"path":"Assets/Content/Sprites/Tiles/tile_c2_t2.png","assetBundleId":-1,"data":["tile_c2_t2",6,27004,[0,0,0,1.2,1.2,0],[-1.2,1.2,0,0,1,1.2,-1.2,0,1,0,1.2,1.2,0,1,1,-1.2,-1.2,0,0,0],[3,0,1,2,1,0],0,0,1,1,0,0,1,1,0,0,0,0,[0,0,0,0],[-1.2,-1.2,1.2,1.2],53.3333320617676,128,128,128,128,64,64,0,0]},{"id":26986,"path":"Assets/Content/Sprites/Ingredients/marinara sauce.png","assetBundleId":-1,"data":["marinara sauce",6,26984,[0.028125,0.09492187,0,0.4078125,0.4042969,0],[-0.2578125,-0.2320313,0,0.2851563,0.3066406,-0.2625,-0.2578125,0,0.28125,0.2851563,-0.2578125,-0.2507813,0,0.2851563,0.2910156,-0.2648438,-0.225,0,0.2792969,0.3125,-0.2671875,-0.225,0,0.2773438,0.3125,-0.2671875,-0.2578125,0,0.2773438,0.2851563,-0.2742188,-0.2296875,0,0.2714844,0.3085938,-0.2742188,-0.2554688,0,0.2714844,0.2871094,0.2414063,0.3,0,0.7011719,0.75,0.2507813,0.2859375,0,0.7089844,0.7382813,0.2554688,0.309375,0,0.7128906,0.7578125,0.2414063,0.2953125,0,0.7011719,0.7460938,0.4171875,0.1828125,0,0.8476563,0.6523438,0.4359375,0.09375,0,0.8632813,0.578125,0.4359375,0.1570313,0,0.8632813,0.6308594,0.3984375,-0.0234375,0,0.8320313,0.4804688,0.3609375,0.2460938,0,0.8007813,0.7050781,0.346875,-0.159375,0,0.7890625,0.3671875,0.3023438,-0.2296875,0,0.7519531,0.3085938,0.271875,0.3023438,0,0.7265625,0.7519531,0.2507813,-0.271875,0,0.7089844,0.2734375,0.1429688,-0.309375,0,0.6191406,0.2421875,0.1007813,0.3140625,0,0.5839844,0.7617188,-0.0375,0.365625,0,0.46875,0.8046875,-0.046875,-0.309375,0,0.4609375,0.2421875,-0.09609375,0.365625,0,0.4199219,0.8046875,-0.103125,0.3632813,0,0.4140625,0.8027344,-0.1359375,-0.3,0,0.3867188,0.25,-0.2320313,-0.2460938,0,0.3066406,0.2949219,-0.2695313,-0.2109375,0,0.2753906,0.3242188,-0.3257813,0.2320313,0,0.2285156,0.6933594,-0.3796875,0.1570313,0,0.1835938,0.6308594,-0.3796875,0.0703125,0,0.1835938,0.5585938,0.1476562,0.375,0,0.6230469,0.8125,0.1429688,0.3679688,0,0.6191406,0.8066406,0.1476562,0.3726563,0,0.6230469,0.8105469,0.1359375,0.3867188,0,0.6132813,0.8222656,0.1335938,0.3679688,0,0.6113281,0.8066406,0.1289063,0.3867188,0,0.6074219,0.8222656,0.1265625,0.3820313,0,0.6054688,0.8183594,0.1265625,0.3726563,0,0.6054688,0.8105469,-0.0234375,0.4664063,0,0.4804688,0.8886719,-0.01875,0.459375,0,0.484375,0.8828125,-0.01875,0.4664063,0,0.484375,0.8886719,-0.02578125,0.46875,0,0.4785156,0.890625,-0.03515625,0.4757813,0,0.4707031,0.8964844,-0.0375,0.4289063,0,0.46875,0.8574219,-0.0515625,0.4078125,0,0.4570313,0.8398438,-0.06328125,0.4546875,0,0.4472656,0.8789063,-0.0703125,0.4078125,0,0.4414063,0.8398438,-0.07265625,0.4265625,0,0.4394531,0.8554688,-0.07265625,0.4125,0,0.4394531,0.84375,0.0140625,0.4992188,0,0.5117188,0.9160156,0.01875,0.478125,0,0.515625,0.8984375,0.01875,0.496875,0,0.515625,0.9140625,-0.009375,0.4664063,0,0.4921875,0.8886719,-0.0140625,0.4992188,0,0.4882813,0.9160156,-0.0234375,0.4757813,0,0.4804688,0.8964844,-0.02578125,0.4828125,0,0.4785156,0.9023438,-0.02578125,0.4757813,0,0.4785156,0.8964844],[44,45,59,44,59,41,57,41,59,43,41,57,59,58,57,56,57,58,43,57,56,55,43,56,52,55,56,53,55,52,54,53,52,51,50,49,48,49,50,47,49,48,45,47,48,46,47,45,42,46,45,44,42,45,41,42,44,43,42,41,40,39,37,38,37,39,36,37,38,34,37,36,33,34,36,35,34,33,32,31,29,30,29,31,26,29,30,28,29,26,27,28,26,24,27,26,25,24,26,23,24,25,21,24,23,22,21,23,9,21,22,20,21,9,18,20,9,10,18,9,19,18,10,16,18,19,17,18,16,15,17,16,12,15,16,13,15,12,14,13,12,11,8,9,10,9,8,7,6,5,4,5,6,1,5,4,3,1,4,0,1,3,2,1,0],-0.0000522434711456299,-0.0000522434711456299,0.999947786331177,0.999947786331177,0.18359375,0.2421875,0.86328125,0.916015625,0,0,0,0,[0,0,0,0],[-0.6,-0.6,0.6,0.6],426.666656494141,512,512,512,512,256,256,94.0267486572266,124.026748657227]},{"id":27114,"path":"Assets/Content/Sprites/Ingredients/rice.png","assetBundleId":-1,"data":["rice",6,27112,[0.01640625,0.03632812,0,0.3867188,0.4394531,0],[-0.2882813,0.4476563,0,0.2597656,0.8730469,-0.3164063,0.4382813,0,0.2363281,0.8652344,-0.2882813,0.440625,0,0.2597656,0.8671875,0.2484375,0.3398438,0,0.7070313,0.7832031,0.2320313,0.3914063,0,0.6933594,0.8261719,0.2460938,0.215625,0,0.7050781,0.6796875,0.2625,-0.00234375,0,0.71875,0.4980469,0.2601562,0.0328125,0,0.7167969,0.5273438,0.2625,-0.03984375,0,0.71875,0.4667969,0.403125,-0.09609375,0,0.8359375,0.4199219,0.3820313,-0.16875,0,0.8183594,0.359375,0.403125,-0.1382813,0,0.8359375,0.3847656,0.3796875,-0.07265625,0,0.8164063,0.4394531,0.3726563,-0.2414063,0,0.8105469,0.2988281,0.3328125,-0.3070312,0,0.7773438,0.2441406,0.3140625,-0.04921875,0,0.7617188,0.4589844,0.271875,-0.35625,0,0.7265625,0.203125,0.2578125,0.05859375,0,0.7148438,0.5488281,0.2554688,0.1007813,0,0.7128906,0.5839844,0.253125,0.1265625,0,0.7109375,0.6054688,0.2507813,0.1570313,0,0.7089844,0.6308594,0.2484375,0.1851563,0,0.7070313,0.6542969,0.215625,0.4757813,0,0.6796875,0.8964844,0.2296875,0.4546875,0,0.6914063,0.8789063,0.2085938,-0.3984375,0,0.6738281,0.1679688,0.1757813,-0.403125,0,0.6464844,0.1640625,0.16875,0.4757813,0,0.640625,0.8964844,0.06796875,-0.403125,0,0.5566406,0.1640625,0.01171875,-0.39375,0,0.5097656,0.171875,-0.05625,-0.3632813,0,0.453125,0.1972656,-0.103125,0.4476563,0,0.4140625,0.8730469,-0.1453125,-0.3773438,0,0.3789063,0.1855469,-0.2742188,-0.3890625,0,0.2714844,0.1757813,-0.31875,0.2953125,0,0.234375,0.7460938,-0.3492188,-0.3164063,0,0.2089844,0.2363281,-0.3539062,0,0,0.2050781,0.5,-0.3679688,-0.2929688,0,0.1933594,0.2558594,-0.3703125,-0.2179688,0,0.1914063,0.3183594,-0.3703125,-0.2625,0,0.1914063,0.28125],[38,37,36,35,36,37,34,36,35,33,34,35,32,34,33,1,32,33,2,32,1,30,32,2,31,32,30,29,31,30,26,29,30,28,29,26,27,28,26,25,27,26,22,25,26,24,25,22,16,24,22,4,16,22,23,4,22,5,16,4,21,16,5,20,16,21,19,16,20,18,16,19,17,16,18,7,16,17,8,16,7,15,16,8,14,16,15,12,14,15,13,14,12,10,13,12,9,10,12,11,10,9,8,7,6,5,4,3,2,1,0],-0.000148668885231018,-0.000148668885231018,0.99985134601593,0.99985134601593,0.19140625,0.1640625,0.8359375,0.896484375,0,0,0,0,[0,0,0,0],[-0.6,-0.6,0.6,0.6],426.666656494141,512,512,512,512,256,256,98.0761184692383,84.0761184692383]},{"id":27190,"path":"Assets/Content/Sprites/Ingredients/Gruyère chese.png","assetBundleId":-1,"data":["Gruyère chese",6,27188,[0.01992188,0.03281249,0,0.3621094,0.3304688,0],[0.3632813,-0.121875,0,0.8027344,0.3984375,0.3820313,-0.2648438,0,0.8183594,0.2792969,0.3820313,-0.1992188,0,0.8183594,0.3339844,0.35625,-0.2789063,0,0.796875,0.2675781,0.2390625,-0.2976563,0,0.6992188,0.2519531,0.1617188,0.00703125,0,0.6347656,0.5058594,0.03984375,-0.01875,0,0.5332031,0.484375,0.009375,-0.2976563,0,0.5078125,0.2519531,-0.02578125,0.1382813,0,0.4785156,0.6152344,-0.06796875,-0.2929688,0,0.4433594,0.2558594,-0.08671875,0.3539062,0,0.4277344,0.7949219,-0.1359375,0.3632813,0,0.3867188,0.8027344,-0.1828125,-0.2320313,0,0.3476563,0.3066406,-0.2179688,0.3632813,0,0.3183594,0.8027344,-0.2625,-0.178125,0,0.28125,0.3515625,-0.271875,0.2203125,0,0.2734375,0.6835938,-0.328125,-0.1453125,0,0.2265625,0.3789063,-0.3328125,-0.0328125,0,0.2226563,0.4726563,-0.3421875,-0.09375,0,0.2148438,0.421875,-0.3421875,-0.121875,0,0.2148438,0.3984375],[19,18,16,17,16,18,15,16,17,14,16,15,13,14,15,12,14,13,11,12,13,9,12,11,10,9,11,8,9,10,7,9,8,6,7,8,4,7,6,5,4,6,0,4,5,3,4,0,1,3,0,2,1,0],0,-0.000148683786392212,1,0.99985134601593,0.21484375,0.251953125,0.818359375,0.802734375,0,0,0,0,[0,0,0,0],[-0.6,-0.6,0.6,0.6],426.666656494141,512,512,512,512,256,256,110,129.076126098633]},{"id":26978,"path":"Assets/Content/Sprites/Tiles/new tile_c1_t1.png","assetBundleId":-1,"data":["new tile_c1_t1",6,26976,[0,0,0,0.5688889,0.5688889,0],[-0.5688889,0.5688889,0,0,1,0.5688889,-0.5688889,0,1,0,0.5688889,0.5688889,0,1,1,-0.5688889,-0.5688889,0,0,0],[3,0,1,2,1,0],0,0,1,1,0,0,1,1,0,0,0,0,[0,0,0,0],[-0.5688889,-0.5688889,0.5688889,0.5688889],112.5,128,128,128,128,64,64,0,0]},{"id":27198,"path":"Assets/Content/Sprites/Ingredients/honey.png","assetBundleId":-1,"data":["honey",6,27196,[-0.01523437,0.007031247,0,0.4042969,0.3984375,0],[-0.4148438,0.1757813,0,0.1542969,0.6464844,-0.3796875,0.08671875,0,0.1835938,0.5722656,-0.375,0.2039063,0,0.1875,0.6699219,-0.4195313,0.1664063,0,0.1503906,0.6386719,-0.4195313,0.1382813,0,0.1503906,0.6152344,-0.3515625,-0.1757813,0,0.2070313,0.3535156,-0.3421875,-0.1992188,0,0.2148438,0.3339844,-0.3398438,-0.196875,0,0.2167969,0.3359375,-0.35625,-0.1734375,0,0.203125,0.3554688,-0.35625,-0.1992188,0,0.203125,0.3339844,-0.3726563,-0.1921875,0,0.1894531,0.3398438,-0.3773438,-0.1734375,0,0.1855469,0.3554688,-0.3773438,-0.1828125,0,0.1855469,0.3476563,-0.3398438,-0.1804688,0,0.2167969,0.3496094,-0.3398438,-0.196875,0,0.2167969,0.3359375,-0.31875,0.2320313,0,0.234375,0.6933594,-0.35625,-0.16875,0,0.203125,0.359375,-0.3867188,-0.0421875,0,0.1777344,0.4648438,0.3890625,0.1664063,0,0.8242188,0.6386719,0.3867188,0.1335938,0,0.8222656,0.6113281,0.3890625,0.1359375,0,0.8242188,0.6132813,0.3796875,0.1945313,0,0.8164063,0.6621094,0.328125,0.07734375,0,0.7734375,0.5644531,0.3210938,0.2132813,0,0.7675781,0.6777344,0.346875,-0.01640625,0,0.7890625,0.4863281,0.3304687,-0.15,0,0.7753906,0.375,0.3492188,-0.05625,0,0.7910156,0.453125,0.271875,-0.2601562,0,0.7265625,0.2832031,0.2625,0.3492188,0,0.71875,0.7910156,0.24375,0.375,0,0.703125,0.8125,0.234375,-0.309375,0,0.6953125,0.2421875,0.1945313,-0.3515625,0,0.6621094,0.2070313,0.1875,0.4007813,0,0.65625,0.8339844,0.1429688,0.4054688,0,0.6191406,0.8378906,0.1382813,-0.3773438,0,0.6152344,0.1855469,0.05859375,-0.3914063,0,0.5488281,0.1738281,-0.0890625,-0.3914063,0,0.4257813,0.1738281,-0.15,0.4054688,0,0.375,0.8378906,-0.159375,-0.3773438,0,0.3671875,0.1855469,-0.2015625,-0.3585938,0,0.3320313,0.2011719,-0.234375,-0.3375,0,0.3046875,0.21875,-0.2765625,0.384375,0,0.2695313,0.8203125,-0.2976563,0.3515625,0,0.2519531,0.7929688,-0.3,0.3046875,0,0.25,0.7539063,-0.3023438,-0.2625,0,0.2480469,0.28125],[7,14,44,13,44,14,15,44,13,43,44,15,40,44,43,42,40,43,41,40,42,37,40,41,39,40,37,38,39,37,36,38,37,33,36,37,35,36,33,34,35,33,31,34,33,32,31,33,29,31,32,30,31,29,27,30,29,28,27,29,23,27,28,25,27,23,22,25,23,24,25,22,26,25,24,23,21,22,19,22,21,18,19,21,20,19,18,17,1,16,2,16,1,15,16,2,5,16,15,13,5,15,5,13,7,14,7,13,12,11,10,8,10,11,9,10,8,6,9,8,5,6,8,7,6,5,4,3,1,0,1,3,2,1,0],-0.0000172853469848633,-0.000148668885231018,0.999982714653015,0.99985134601593,0.150390625,0.173828125,0.82421875,0.837890625,0,0,0,0,[0,0,0,0],[-0.6,-0.6,0.6,0.6],426.666656494141,512,512,512,512,256,256,77.0088500976563,89.0761184692383]},{"id":27012,"path":"Assets/Content/Sprites/Ingredients/cumin.png","assetBundleId":-1,"data":["cumin",6,27010,[0,0.03164062,0,0.6,0.4371094,0],[-0.103125,-0.3820313,0,0.4140625,0.1816406,-0.0984375,-0.39375,0,0.4179688,0.171875,-0.0984375,-0.384375,0,0.4179688,0.1796875,-0.121875,-0.3820313,0,0.3984375,0.1816406,-0.1289063,-0.4054688,0,0.3925781,0.1621094,-0.1570313,-0.4054688,0,0.3691406,0.1621094,-0.159375,-0.3914063,0,0.3671875,0.1738281,-0.159375,-0.403125,0,0.3671875,0.1640625,0.103125,-0.3914063,0,0.5859375,0.1738281,0.1078125,-0.4007813,0,0.5898438,0.1660156,0.1078125,-0.3960938,0,0.5898438,0.1699219,0.103125,-0.4054688,0,0.5859375,0.1621094,0.0984375,-0.3914063,0,0.5820313,0.1738281,0.0984375,-0.4054688,0,0.5820313,0.1621094,0.09375,-0.3960938,0,0.578125,0.1699219,0.09375,-0.4007813,0,0.578125,0.1660156,-0.5671875,-0.3375,0,0.02734378,0.21875,-0.571875,-0.346875,0,0.02343747,0.2109375,-0.5671875,-0.3445313,0,0.02734378,0.2128906,-0.58125,-0.3257813,0,0.015625,0.2285156,-0.5835938,-0.346875,0,0.01367185,0.2109375,-0.6,-0.3257813,0,0,0.2285156,-0.6,-0.3398438,0,0,0.2167969,0.1195313,-0.3164063,0,0.5996094,0.2363281,0.1242188,-0.3257813,0,0.6035156,0.2285156,0.1242188,-0.3210938,0,0.6035156,0.2324219,0.1195313,-0.3304687,0,0.5996094,0.2246094,0.1148438,-0.3164063,0,0.5957031,0.2363281,0.1148438,-0.3304687,0,0.5957031,0.2246094,0.1101563,-0.3210938,0,0.5917969,0.2324219,0.1101563,-0.3257813,0,0.5917969,0.2285156,0.1921875,-0.2882813,0,0.6601563,0.2597656,0.196875,-0.3,0,0.6640625,0.25,0.196875,-0.2929688,0,0.6640625,0.2558594,0.1921875,-0.3046875,0,0.6601563,0.2460938,0.1851563,-0.2882813,0,0.6542969,0.2597656,0.1851563,-0.3046875,0,0.6542969,0.2460938,0.1804688,-0.2929688,0,0.6503906,0.2558594,0.1804688,-0.3,0,0.6503906,0.25,0.309375,0.2203125,0,0.7578125,0.6835938,0.2671875,0.2132813,0,0.7226563,0.6777344,0.2695313,0.20625,0,0.7246094,0.671875,0.2554688,0.2132813,0,0.7128906,0.6777344,0.2109375,0.1898438,0,0.6757813,0.6582031,0.1828125,0.2203125,0,0.6523438,0.6835938,0.2109375,0.1828125,0,0.6757813,0.6523438,0.3140625,-0.1523438,0,0.7617188,0.3730469,0.2484375,-0.1851563,0,0.7070313,0.3457031,0.3140625,-0.1617188,0,0.7617188,0.3652344,0.1992188,-0.1523438,0,0.6660156,0.3730469,0.1898438,-0.196875,0,0.6582031,0.3359375,0.02578125,-0.196875,0,0.5214844,0.3359375,0.0234375,-0.1828125,0,0.5195313,0.3476563,0.0234375,-0.1898438,0,0.5195313,0.3417969,0.0234375,-0.1921875,0,0.5195313,0.3398438,0.6,0.06796875,0,1,0.5566406,0.5976563,-0.04453125,0,0.9980469,0.4628906,0.6,-0.046875,0,1,0.4609375,0.5953125,-0.04453125,0,0.9960938,0.4628906,0.5882813,-0.0515625,0,0.9902344,0.4570313,0.5835938,-0.028125,0,0.9863281,0.4765625,0.5882813,-0.05390625,0,0.9902344,0.4550781,0.5601563,-0.01171875,0,0.9667969,0.4902344,0.553125,-0.01171875,0,0.9609375,0.4902344,0.5484375,-0.0140625,0,0.9570313,0.4882813,0.5039063,-0.03046875,0,0.9199219,0.4746094,0.5484375,-0.01875,0,0.9570313,0.484375,0.4148438,0.05625,0,0.8457031,0.546875,0.3773438,0.3773438,0,0.8144531,0.8144531,0.6,-0.06328125,0,1,0.4472656,0.5976563,-0.06328125,0,0.9980469,0.4472656,0.6,-0.1476562,0,1,0.3769531,0.5835938,-0.0375,0,0.9863281,0.46875,0.58125,-0.0421875,0,0.984375,0.4648438,0.5695313,-0.0421875,0,0.9746094,0.4648438,0.3140625,-0.1710937,0,0.7617188,0.3574219,0.2414063,-0.2273438,0,0.7011719,0.3105469,0.2226563,-0.2296875,0,0.6855469,0.3085938,0.159375,-0.2296875,0,0.6328125,0.3085938,0.1570313,-0.2226563,0,0.6308594,0.3144531,0.1570313,-0.2203125,0,0.6308594,0.3164063,0.1546875,-0.2179688,0,0.6289063,0.3183594,0.4429688,-0.0421875,0,0.8691406,0.4648438,0.45,-0.00234375,0,0.875,0.4980469,0.3351563,-0.1265625,0,0.7792969,0.3945313,0.309375,0.3257813,0,0.7578125,0.7714844,0.2742188,0.3914063,0,0.7285156,0.8261719,0.2695313,0.1921875,0,0.7246094,0.6601563,0.2320313,0.1828125,0,0.6933594,0.6523438,0.103125,0.2765625,0,0.5859375,0.7304688,0.0796875,0.3,0,0.5664063,0.75,0.09375,0.3,0,0.578125,0.75,0.075,0.3023438,0,0.5625,0.7519531,-0.07734375,-0.1757813,0,0.4355469,0.3535156,0.01875,0.4265625,0,0.515625,0.8554688,-0.1171875,0.3820313,0,0.4023438,0.8183594,-0.1195313,0.3867188,0,0.4003906,0.8222656,-0.1265625,0.4148438,0,0.3945313,0.8457031,-0.1289063,0.4265625,0,0.3925781,0.8554688,0.2367188,0.28125,0,0.6972656,0.734375,0.2367188,0.2765625,0,0.6972656,0.7304688,0.2367188,0.2554688,0,0.6972656,0.7128906,0.2367188,0.2507813,0,0.6972656,0.7089844,0.234375,0.2460938,0,0.6953125,0.7050781,0.2273438,0.2460938,0,0.6894531,0.7050781,0.2203125,0.253125,0,0.6835938,0.7109375,0.2179688,0.271875,0,0.6816406,0.7265625,0.2296875,0.2882813,0,0.6914063,0.7402344,0.2273438,0.2882813,0,0.6894531,0.7402344,0.2203125,0.28125,0,0.6835938,0.734375,0.1523438,0.3023438,0,0.6269531,0.7519531,0.1453125,0.3046875,0,0.6210938,0.7539063,0.140625,0.3,0,0.6171875,0.75,0.1289063,0.290625,0,0.6074219,0.7421875,0.1335938,0.2789063,0,0.6113281,0.7324219,0.1148438,0.290625,0,0.5957031,0.7421875,0.1101563,0.3445313,0,0.5917969,0.7871094,0.1148438,0.2742188,0,0.5957031,0.7285156,0.103125,0.4148438,0,0.5859375,0.8457031,0.103125,0.3609375,0,0.5859375,0.8007813,0.103125,0.3445313,0,0.5859375,0.7871094,0.2320313,-0.2695313,0,0.6933594,0.2753906,0.2507813,-0.2835937,0,0.7089844,0.2636719,0.2507813,-0.2695313,0,0.7089844,0.2753906,0.2320313,-0.2835937,0,0.6933594,0.2636719,0.2625,-0.2648438,0,0.71875,0.2792969,0.2601562,-0.2765625,0,0.7167969,0.2695313,0.2648438,-0.271875,0,0.7207031,0.2734375,0.2554688,-0.2648438,0,0.7128906,0.2792969,0.253125,-0.2765625,0,0.7109375,0.2695313,-0.0234375,-0.225,0,0.4804688,0.3125,-0.02578125,-0.2367188,0,0.4785156,0.3027344,-0.02109375,-0.2320313,0,0.4824219,0.3066406,-0.0421875,-0.2226563,0,0.4648438,0.3144531,-0.07265625,-0.2226563,0,0.4394531,0.3144531,-0.0796875,-0.2367188,0,0.4335938,0.3027344,-0.08203125,-0.2273438,0,0.4316406,0.3105469,-0.08203125,-0.2320313,0,0.4316406,0.3066406,0.075,-0.2226563,0,0.5625,0.3144531,0.0796875,-0.2320313,0,0.5664063,0.3066406,0.0796875,-0.2273438,0,0.5664063,0.3105469,0.075,-0.2367188,0,0.5625,0.3027344,0.065625,-0.2226563,0,0.5546875,0.3144531,0.0609375,-0.2367188,0,0.5507813,0.3027344,0.05859375,-0.2296875,0,0.5488281,0.3085938,0.1078125,-0.2203125,0,0.5898438,0.3164063,0.1054688,-0.2367188,0,0.5878906,0.3027344,0.1078125,-0.2296875,0,0.5898438,0.3085938,0.09140625,-0.2367188,0,0.5761719,0.3027344,0.084375,-0.2203125,0,0.5703125,0.3164063,0.084375,-0.2320313,0,0.5703125,0.3066406,0.1125,-0.2179688,0,0.59375,0.3183594,0.13125,-0.234375,0,0.609375,0.3046875,0.13125,-0.2179688,0,0.609375,0.3183594,0.1125,-0.234375,0,0.59375,0.3046875,0.1570313,-0.2226563,0,0.6308594,0.3144531,0.1570313,-0.2296875,0,0.6308594,0.3085938,0.1523438,-0.215625,0,0.6269531,0.3203125,0.1523438,-0.2320313,0,0.6269531,0.3066406,0.1429688,-0.215625,0,0.6191406,0.3203125,0.1382813,-0.2320313,0,0.6152344,0.3066406,0.1359375,-0.2203125,0,0.6132813,0.3164063,0.1359375,-0.225,0,0.6132813,0.3125,0.1523438,0.2953125,0,0.6269531,0.7460938,0.1453125,0.2929688,0,0.6210938,0.7441406,0.1289063,0.271875,0,0.6074219,0.7265625,0.1242188,0.271875,0,0.6035156,0.7265625,0.1101563,0.3210938,0,0.5917969,0.7675781,0.1054688,0.3046875,0,0.5878906,0.7539063,0.103125,0.3046875,0,0.5859375,0.7539063,0.1429688,0.4382813,0,0.6191406,0.8652344,0.2507813,0.4382813,0,0.7089844,0.8652344,0.103125,0.4171875,0,0.5859375,0.8476563,0.01640625,-0.1992188,0,0.5136719,0.3339844,0.0140625,-0.1828125,0,0.5117188,0.3476563,-0.0890625,-0.1992188,0,0.4257813,0.3339844,-0.09375,-0.1828125,0,0.421875,0.3476563,-0.09609375,-0.1898438,0,0.4199219,0.3417969,-0.09609375,-0.196875,0,0.4199219,0.3359375,-0.2460938,-0.140625,0,0.2949219,0.3828125,-0.3351563,-0.1101563,0,0.2207031,0.4082031,-0.3890625,-0.1101563,0,0.1757813,0.4082031,-0.2085938,0.440625,0,0.3261719,0.8671875,-0.2039063,0.43125,0,0.3300781,0.859375,-0.2039063,0.4359375,0,0.3300781,0.8632813,-0.2085938,0.4195313,0,0.3261719,0.8496094,-0.20625,0.45,0,0.328125,0.875,-0.2039063,0.4453125,0,0.3300781,0.8710938,-0.2085938,0.45,0,0.3261719,0.875,-0.1851563,0.421875,0,0.3457031,0.8515625,-0.1851563,0.4195313,0,0.3457031,0.8496094,-0.1828125,0.4195313,0,0.3476563,0.8496094,-0.1875,0.421875,0,0.34375,0.8515625,-0.1429688,0.459375,0,0.3808594,0.8828125,-0.1546875,0.4265625,0,0.3710938,0.8554688,-0.1429688,0.4265625,0,0.3808594,0.8554688,-0.159375,0.46875,0,0.3671875,0.890625,-0.1570313,0.4195313,0,0.3691406,0.8496094,-0.2085938,0.46875,0,0.3261719,0.890625,-0.1382813,0.28125,0,0.3847656,0.734375,-0.1335938,0.4148438,0,0.3886719,0.8457031,-0.1429688,0.4195313,0,0.3808594,0.8496094,-0.159375,0.3890625,0,0.3671875,0.8242188,-0.1617188,0.384375,0,0.3652344,0.8203125,-0.1617188,0.384375,0,0.3652344,0.8203125,-0.1640625,0.35625,0,0.3632813,0.796875,-0.1640625,0.3445313,0,0.3632813,0.7871094,-0.16875,0.3445313,0,0.359375,0.7871094,-0.1710937,0.3304687,0,0.3574219,0.7753906,-0.1195313,0.3632813,0,0.4003906,0.8027344,-0.1242188,0.3984375,0,0.3964844,0.8320313,-0.1875,0.2320313,0,0.34375,0.6933594,-0.2320313,0.3421875,0,0.3066406,0.7851563,-0.1898438,0.2789063,0,0.3417969,0.7324219,-0.421875,0.140625,0,0.1484375,0.6171875,-0.421875,-0.103125,0,0.1484375,0.4140625,-0.1734375,0.3023438,0,0.3554688,0.7519531,-0.1757813,0.2789063,0,0.3535156,0.7324219,-0.1734375,0.28125,0,0.3554688,0.734375,-0.1898438,0.3140625,0,0.3417969,0.7617188,-0.178125,0.3164063,0,0.3515625,0.7636719,-0.1734375,0.3070312,0,0.3554688,0.7558594,-0.1898438,0.3164063,0,0.3417969,0.7636719,-0.1710937,0.2507813,0,0.3574219,0.7089844,-0.1640625,0.2953125,0,0.3632813,0.7460938,-0.1617188,0.4007813,0,0.3652344,0.8339844,-0.159375,0.39375,0,0.3671875,0.828125,-0.16875,0.384375,0,0.359375,0.8203125,-0.1898438,0.3914063,0,0.3417969,0.8261719,-0.2039063,0.421875,0,0.3300781,0.8515625,-0.2039063,0.4054688,0,0.3300781,0.8378906,-0.1265625,-0.196875,0,0.3945313,0.3359375,-0.1335938,-0.2367188,0,0.3886719,0.3027344,-0.1265625,-0.234375,0,0.3945313,0.3046875,-0.1382813,-0.196875,0,0.3847656,0.3359375,-0.1429688,-0.1921875,0,0.3808594,0.3398438,-0.1710937,-0.2367188,0,0.3574219,0.3027344,-0.1382813,-0.1828125,0,0.3847656,0.3476563,-0.1265625,-0.1828125,0,0.3945313,0.3476563,-0.1429688,-0.1875,0,0.3808594,0.34375,-0.1265625,-0.1804688,0,0.3945313,0.3496094,-0.2320313,-0.225,0,0.3066406,0.3125,-0.3421875,-0.1828125,0,0.2148438,0.3476563,-0.365625,-0.16875,0,0.1953125,0.359375,-0.3773438,-0.1617188,0,0.1855469,0.3652344,-0.4242188,-0.1101563,0,0.1464844,0.4082031,-0.4242188,-0.1171875,0,0.1464844,0.4023438,-0.4242188,-0.1242188,0,0.1464844,0.3964844,-0.1007813,-0.1828125,0,0.4160156,0.3476563,-0.1054688,-0.196875,0,0.4121094,0.3359375,-0.0984375,-0.1898438,0,0.4179688,0.3417969,-0.3726563,-0.1664063,0,0.1894531,0.3613281,-0.365625,-0.1757813,0,0.1953125,0.3535156,-0.3726563,-0.178125,0,0.1894531,0.3515625,-0.3773438,-0.1710937,0,0.1855469,0.3574219,-0.4242188,-0.1007813,0,0.1464844,0.4160156,-0.440625,-0.1171875,0,0.1328125,0.4023438,-0.4546875,-0.1148438,0,0.1210938,0.4042969,-0.5039063,-0.009375,0,0.08007813,0.4921875,-0.534375,-0.09375,0,0.0546875,0.421875,-0.5460938,-0.009375,0,0.04492188,0.4921875,-0.5460938,-0.05390625,0,0.04492188,0.4550781,-0.5109375,0.03515625,0,0.07421875,0.5292969,-0.5085937,0.0234375,0,0.0761719,0.5195313,-0.5085937,0.0328125,0,0.0761719,0.5273438,-0.5273438,0.03515625,0,0.06054688,0.5292969,-0.534375,-0.0046875,0,0.0546875,0.4960938,-0.5414063,-0.00703125,0,0.04882813,0.4941406,-0.5460938,0.01171875,0,0.04492188,0.5097656,-0.5460938,-0.00234375,0,0.04492188,0.4980469,-0.5507813,0.06796875,0,0.04101563,0.5566406,-0.553125,0.0421875,0,0.0390625,0.5351563,-0.5507813,0.0515625,0,0.04101563,0.5429688,-0.5742188,0.06796875,0,0.02148438,0.5566406,-0.5882813,0.03046875,0,0.009765625,0.5253906,-0.6,0.05625,0,0,0.546875,-0.6,0.03046875,0,0,0.5253906,0.225,0.2671875,0,0.6875,0.7226563,0.2226563,0.2671875,0,0.6855469,0.7226563,0.2296875,0.2601562,0,0.6914063,0.7167969,0.2226563,0.2601562,0,0.6855469,0.7167969,0.09375,0.3679688,0,0.578125,0.8066406,0.1007813,0.3679688,0,0.5839844,0.8066406,0.09140625,0.3492188,0,0.5761719,0.7910156,0.084375,0.3492188,0,0.5703125,0.7910156,0.08203125,0.3609375,0,0.5683594,0.8007813,0.08203125,0.3539062,0,0.5683594,0.7949219,0.09140625,0.3445313,0,0.5761719,0.7871094,0.075,0.3117188,0,0.5625,0.7597656,-0.2203125,0.384375,0,0.3164063,0.8203125,-0.2179688,0.346875,0,0.3183594,0.7890625,-0.2179688,0.3609375,0,0.3183594,0.8007813,-0.2203125,0.3421875,0,0.3164063,0.7851563,-0.2226563,0.3867188,0,0.3144531,0.8222656,-0.2320313,0.3867188,0,0.3066406,0.8222656,-0.2390625,0.384375,0,0.3007813,0.8203125,-0.2390625,0.346875,0,0.3007813,0.7890625,-0.1664063,0.3632813,0,0.3613281,0.8027344,-0.1664063,0.3609375,0,0.3613281,0.8007813,-0.178125,0.3445313,0,0.3515625,0.7871094,-0.1851563,0.365625,0,0.3457031,0.8046875,-0.1921875,0.3585938,0,0.3398438,0.7988281,-0.1921875,0.3492188,0,0.3398438,0.7910156,-0.2109375,0.4125,0,0.3242188,0.84375,-0.2203125,0.45,0,0.3164063,0.875,-0.2273438,0.4359375,0,0.3105469,0.8632813,-0.2273438,0.4125,0,0.3105469,0.84375],[306,305,303,304,303,305,188,303,304,185,303,188,182,185,188,207,298,206,205,206,298,205,298,204,302,301,299,300,299,301,297,299,300,207,299,297,298,207,297,296,295,212,294,212,295,292,212,294,293,292,294,289,292,293,290,292,289,291,290,289,169,120,168,116,168,120,167,168,116,286,284,288,287,288,284,283,287,284,120,287,283,119,120,283,118,285,94,288,94,285,92,94,288,286,288,285,281,285,118,282,281,118,119,282,118,92,288,90,287,90,288,91,90,287,120,91,287,169,91,120,286,285,284,281,284,285,283,284,281,119,283,281,282,119,281,213,212,219,117,115,166,113,166,115,165,166,113,114,165,113,105,280,104,279,104,280,103,104,279,101,103,279,102,103,101,106,278,105,280,105,278,279,280,278,277,279,278,100,279,277,101,279,100,89,91,169,45,43,88,42,88,43,87,88,42,40,87,42,41,87,40,106,109,278,108,278,109,277,278,108,100,277,108,107,100,108,99,100,107,276,275,274,273,274,275,271,274,273,270,271,273,272,271,270,269,268,267,265,267,268,266,267,265,263,266,265,262,263,265,264,263,262,261,260,259,258,259,260,257,259,258,255,257,258,256,257,255,246,256,255,245,246,255,254,251,253,252,253,251,243,252,251,231,238,249,248,249,238,250,249,248,247,246,244,245,244,246,181,244,245,179,244,181,243,244,179,242,243,179,241,242,179,237,241,179,240,237,179,239,241,237,236,241,239,235,236,239,238,237,240,235,239,234,237,234,239,231,234,237,238,231,237,236,235,232,234,232,235,231,232,234,233,232,231,184,187,192,204,226,203,202,203,226,202,226,197,230,229,228,192,228,229,227,228,192,190,227,192,191,227,190,225,227,191,204,227,225,226,204,225,213,217,211,223,211,217,218,223,217,216,223,218,224,223,216,219,222,216,220,216,222,221,216,220,213,219,217,216,217,219,218,217,216,197,194,201,195,201,194,215,214,181,212,181,214,180,181,212,179,180,212,93,179,212,211,93,212,213,211,212,199,93,211,200,93,199,210,93,200,209,93,210,95,93,209,208,207,199,206,199,207,205,199,206,204,199,205,203,199,204,202,199,203,197,199,202,201,199,197,195,199,201,200,199,195,188,198,186,196,186,198,187,186,196,192,187,196,189,192,196,191,189,196,197,191,196,194,197,196,193,194,196,195,194,193,192,189,190,191,190,189,182,188,184,186,184,188,187,184,186,185,182,183,184,183,182,181,180,179,178,177,175,176,175,177,174,175,176,173,175,174,53,173,174,54,173,53,118,172,86,170,86,172,171,86,170,112,111,164,163,164,111,110,163,111,169,117,89,44,89,117,168,117,169,167,117,168,116,117,167,166,44,117,165,44,166,114,44,165,112,44,114,164,44,112,163,44,164,110,44,163,162,161,160,159,160,161,158,160,159,157,158,159,156,158,157,80,156,157,155,156,80,155,79,78,155,80,79,154,151,152,153,152,151,150,149,148,145,148,149,146,148,145,147,146,145,144,142,143,141,143,142,138,141,142,139,141,138,140,139,138,137,136,135,134,135,136,131,135,134,133,131,134,130,131,133,132,131,130,123,128,129,126,129,128,125,126,128,127,126,125,124,121,122,123,122,121,120,119,116,118,116,119,86,116,118,115,116,86,117,116,115,111,115,86,113,115,111,112,113,111,114,113,112,110,111,86,44,110,86,109,44,86,106,44,109,108,109,86,107,108,86,99,107,86,106,105,44,104,44,105,39,44,104,103,39,104,102,39,103,101,39,102,100,39,101,99,39,100,86,39,99,85,39,86,98,94,97,96,97,94,95,96,94,93,95,94,92,93,94,84,93,92,90,84,92,89,84,90,91,89,90,44,84,89,45,84,44,88,84,45,87,84,88,41,84,87,39,84,41,85,84,39,75,47,48,86,68,85,84,85,68,67,84,68,82,84,67,83,82,67,66,64,74,63,74,64,62,74,63,60,74,62,73,74,60,72,73,60,81,47,80,79,80,47,78,79,47,77,78,47,76,77,47,71,76,47,75,71,47,48,71,75,46,71,48,65,71,46,66,71,65,74,71,66,73,71,74,72,71,73,60,71,72,61,71,60,70,71,61,69,71,70,61,59,70,58,70,59,56,70,58,69,70,56,57,69,56,68,55,67,65,67,55,64,65,55,66,65,64,63,64,55,62,63,55,60,62,55,59,60,55,61,60,59,58,59,55,56,58,55,57,56,55,54,53,51,52,51,53,49,51,52,50,51,49,47,50,49,46,47,49,48,47,46,39,42,44,43,44,42,45,44,43,40,42,39,41,40,39,38,37,36,35,36,37,34,36,35,31,34,35,32,34,31,33,32,31,30,29,28,27,28,29,26,28,27,23,26,27,24,26,23,25,24,23,22,21,20,19,20,21,17,20,19,16,17,19,18,17,16,15,14,13,12,13,14,11,13,12,8,11,12,9,11,8,10,9,8,7,6,5,3,5,6,4,5,3,1,4,3,0,1,3,2,1,0],0,-0.000148668885231018,1,0.99985134601593,0,0.162109375,1,0.890625,0,0,0,0,[0,0,0,0],[-0.6,-0.6,0.6,0.6],426.666656494141,512,512,512,512,256,256,0,83.0761184692383]},{"id":27376,"path":"Assets/Content/Sprites/Ingredients/carrot.png","assetBundleId":-1,"data":["carrot",6,27374,[-0.02695312,0.03984375,0,0.4511719,0.3304688,0],[0.2273438,-0.178125,0,0.6894531,0.3515625,0.2203125,-0.225,0,0.6835938,0.3125,0.2273438,-0.2109375,0,0.6894531,0.3242188,0.2085938,-0.178125,0,0.6738281,0.3515625,0.2085938,-0.225,0,0.6738281,0.3125,0.1921875,-0.2203125,0,0.6601563,0.3164063,0.1898438,-0.1898438,0,0.6582031,0.3417969,0.1898438,-0.2203125,0,0.6582031,0.3164063,-0.2460938,0.1054688,0,0.2949219,0.5878906,-0.2601562,0.09375,0,0.2832031,0.578125,-0.253125,0.09375,0,0.2890625,0.578125,-0.2296875,0.15,0,0.3085938,0.625,-0.2296875,0.13125,0,0.3085938,0.609375,-0.2648438,0.1828125,0,0.2792969,0.6523438,-0.2695313,0.1828125,0,0.2753906,0.6523438,-0.2789063,0.09375,0,0.2675781,0.578125,-0.2953125,0.1617188,0,0.2539063,0.6347656,-0.3070312,0.15,0,0.2441406,0.625,-0.3070312,0.1171875,0,0.2441406,0.5976563,-0.1382813,0.3070312,0,0.3847656,0.7558594,-0.1664063,0.24375,0,0.3613281,0.703125,-0.1382813,0.271875,0,0.3847656,0.7265625,-0.1734375,0.3398438,0,0.3554688,0.7832031,-0.1992188,0.24375,0,0.3339844,0.703125,-0.20625,0.3398438,0,0.328125,0.7832031,-0.2273438,0.309375,0,0.3105469,0.7578125,-0.2273438,0.2695313,0,0.3105469,0.7246094,0.2789063,-0.1125,0,0.7324219,0.40625,0.2742188,-0.1125,0,0.7285156,0.40625,0.2671875,-0.1242188,0,0.7226563,0.3964844,0.290625,-0.09375,0,0.7421875,0.421875,0.2976563,-0.09375,0,0.7480469,0.421875,0.2976563,-0.09375,0,0.7480469,0.421875,0.2859375,-0.0984375,0,0.7382813,0.4179688,0.2859375,-0.1054688,0,0.7382813,0.4121094,0.3445313,0.3375,0,0.7871094,0.78125,0.3351563,0.2039063,0,0.7792969,0.6699219,0.28125,0.3703125,0,0.734375,0.8085938,0.2203125,-0.16875,0,0.6835938,0.359375,0.1101563,0.3703125,0,0.5917969,0.8085938,0.103125,0.3679688,0,0.5859375,0.8066406,0.09140625,0.2765625,0,0.5761719,0.7304688,-0.08671875,-0.290625,0,0.4277344,0.2578125,-0.121875,0.1992188,0,0.3984375,0.6660156,-0.4007813,-0.290625,0,0.1660156,0.2578125,-0.4617188,-0.05859375,0,0.1152344,0.4511719,-0.4640625,-0.1804688,0,0.1132813,0.3496094,-0.478125,-0.09609375,0,0.1015625,0.4199219,-0.478125,-0.1523438,0,0.1015625,0.3730469,0.3773438,0.234375,0,0.8144531,0.6953125,0.4242188,0.08671875,0,0.8535156,0.5722656,0.4242188,0.215625,0,0.8535156,0.6796875,0.3726563,-0.0234375,0,0.8105469,0.4804688,0.3023438,-0.1078125,0,0.7519531,0.4101563,0.3023438,-0.0984375,0,0.7519531,0.4179688,0.2976563,-0.1125,0,0.7480469,0.40625,0.290625,-0.1125,0,0.7421875,0.40625,0.2859375,-0.1078125,0,0.7382813,0.4101563,0.3046875,-0.1359375,0,0.7539063,0.3867188,0.3046875,-0.1125,0,0.7539063,0.40625,0.28125,-0.1453125,0,0.734375,0.3789063,0.2671875,-0.1242188,0,0.7226563,0.3964844,0.2671875,-0.1453125,0,0.7226563,0.3789063],[62,61,60,29,60,61,27,60,29,56,60,27,58,60,56,55,58,56,59,58,55,57,34,56,31,56,34,55,56,31,53,55,31,54,53,31,31,36,52,49,52,36,50,52,49,51,50,49,48,47,46,45,46,47,44,46,45,9,44,45,42,44,9,10,42,9,8,42,10,43,42,8,41,42,43,38,42,41,40,38,41,39,38,40,37,38,39,29,38,37,28,29,37,27,28,37,34,27,37,33,34,37,35,33,37,30,33,35,32,30,35,31,32,35,36,31,35,34,33,31,30,31,33,32,31,30,29,28,27,26,25,23,24,23,25,22,23,24,20,23,22,19,20,22,21,20,19,18,17,15,16,15,17,14,15,16,9,15,14,13,9,14,11,9,13,8,9,11,12,8,11,10,9,8,7,6,5,3,5,6,4,5,3,1,4,3,0,1,3,2,1,0],-0.0000522509217262268,-0.0000522434711456299,0.999947726726532,0.999947786331177,0.1015625,0.2578125,0.853515625,0.80859375,0,0,0,0,[0,0,0,0],[-0.6,-0.6,0.6,0.6],426.666656494141,512,512,512,512,256,256,52.0267524719238,132.026748657227]},{"id":27458,"path":"Assets/Content/Sprites/Tiles/tile_c3_t3.png","assetBundleId":-1,"data":["tile_c3_t3",6,27456,[0,0,0,1.2,1.2,0],[-1.2,1.2,0,0,1,1.2,-1.2,0,1,0,1.2,1.2,0,1,1,-1.2,-1.2,0,0,0],[3,0,1,2,1,0],0,0,1,1,0,0,1,1,0,0,0,0,[0,0,0,0],[-1.2,-1.2,1.2,1.2],53.3333320617676,128,128,128,128,64,64,0,0]},{"id":27302,"path":"Assets/Content/Sprites/Ingredients/chicken breasts.png","assetBundleId":-1,"data":["chicken breasts",6,27300,[-0.005859375,-0.06914063,0,0.4746094,0.3855469,0],[-0.375,-0.4054688,0,0.1875,0.1621094,-0.3679688,-0.4148438,0,0.1933594,0.1542969,-0.3679688,-0.4078125,0,0.1933594,0.1601563,-0.375,-0.4171875,0,0.1875,0.1523438,-0.3796875,-0.4101563,0,0.1835938,0.1582031,-0.3632813,-0.2835937,0,0.1972656,0.2636719,-0.35625,-0.2929688,0,0.203125,0.2558594,-0.35625,-0.2859375,0,0.203125,0.2617188,-0.3632813,-0.2953125,0,0.1972656,0.2539063,-0.3679688,-0.2882813,0,0.1933594,0.2597656,-0.3773438,-0.3703125,0,0.1855469,0.1914063,-0.3703125,-0.3796875,0,0.1914063,0.1835938,-0.3703125,-0.3726563,0,0.1914063,0.1894531,-0.3773438,-0.3820313,0,0.1855469,0.1816406,-0.3820313,-0.375,0,0.1816406,0.1875,-0.2742188,-0.346875,0,0.2714844,0.2109375,-0.2601562,-0.43125,0,0.2832031,0.140625,-0.2601562,-0.3679688,0,0.2832031,0.1933594,-0.2835937,-0.346875,0,0.2636719,0.2109375,-0.290625,-0.3515625,0,0.2578125,0.2070313,-0.2953125,-0.4546875,0,0.2539063,0.1210938,-0.3,-0.346875,0,0.25,0.2109375,-0.3421875,-0.4546875,0,0.2148438,0.1210938,-0.3585938,-0.346875,0,0.2011719,0.2109375,-0.3585938,-0.4476563,0,0.2011719,0.1269531,-0.271875,-0.16875,0,0.2734375,0.359375,-0.2601562,-0.1921875,0,0.2832031,0.3398438,-0.2601562,-0.1757813,0,0.2832031,0.3535156,-0.28125,-0.16875,0,0.265625,0.359375,-0.2976563,-0.1757813,0,0.2519531,0.3535156,-0.2976563,-0.178125,0,0.2519531,0.3515625,-0.2414063,0.2132813,0,0.2988281,0.6777344,-0.2976563,-0.1757813,0,0.2519531,0.3535156,-0.3023438,-0.1757813,0,0.2480469,0.3535156,-0.3070312,-0.1734375,0,0.2441406,0.3554688,-0.3585938,0.140625,0,0.2011719,0.6171875,-0.3703125,0.1453125,0,0.1914063,0.6210938,-0.403125,0.2132813,0,0.1640625,0.6777344,-0.234375,0.2578125,0,0.3046875,0.7148438,-0.234375,0.2226563,0,0.3046875,0.6855469,-0.3070312,0.2578125,0,0.2441406,0.7148438,-0.4101563,0.24375,0,0.1582031,0.703125,-0.4101563,0.225,0,0.1582031,0.6875,-0.234375,0.3164063,0,0.3046875,0.7636719,-0.4171875,0.3164063,0,0.1523438,0.7636719,0.3492188,0.2039063,0,0.7910156,0.6699219,0.46875,-0.1054688,0,0.890625,0.4121094,0.46875,0.103125,0,0.890625,0.5859375,0.3375,-0.2625,0,0.78125,0.28125,0.1851563,0.2578125,0,0.6542969,0.7148438,-0.07265625,-0.2625,0,0.4394531,0.28125,-0.09140625,-0.2601562,0,0.4238281,0.2832031,-0.2976563,-0.3351563,0,0.2519531,0.2207031,-0.2859375,-0.3398438,0,0.2617188,0.2167969,-0.3023438,-0.3398438,0,0.2480469,0.2167969,-0.3304687,-0.3304687,0,0.2246094,0.2246094,-0.3234375,-0.3398438,0,0.2304688,0.2167969,-0.3234375,-0.3328125,0,0.2304688,0.2226563,-0.3304687,-0.3421875,0,0.2246094,0.2148438,-0.3351563,-0.3351563,0,0.2207031,0.2207031,0.3304687,-0.271875,0,0.7753906,0.2734375,0.3539062,-0.309375,0,0.7949219,0.2421875,0.3539062,-0.271875,0,0.7949219,0.2734375,0.3210938,-0.2742188,0,0.7675781,0.2714844,0.3210938,-0.3328125,0,0.7675781,0.2226563,0.290625,-0.3375,0,0.7421875,0.21875,0.2859375,-0.3164063,0,0.7382813,0.2363281,0.2859375,-0.3328125,0,0.7382813,0.2226563,-0.3445313,-0.2835937,0,0.2128906,0.2636719,-0.3398438,-0.2976563,0,0.2167969,0.2519531,-0.3398438,-0.2882813,0,0.2167969,0.2597656,-0.346875,-0.3,0,0.2109375,0.25,-0.3515625,-0.2859375,0,0.2070313,0.2617188,-0.3515625,-0.2953125,0,0.2070313,0.2539063,-0.2953125,-0.28125,0,0.2539063,0.265625,-0.2929688,-0.3,0,0.2558594,0.25,-0.2929688,-0.2859375,0,0.2558594,0.2617188,-0.31875,-0.28125,0,0.234375,0.265625,-0.31875,-0.3,0,0.234375,0.25,-0.3070312,-0.2296875,0,0.2441406,0.3085938,-0.2742188,-0.2789063,0,0.2714844,0.2675781,-0.2742188,-0.2296875,0,0.2714844,0.3085938,-0.3070312,-0.234375,0,0.2441406,0.3046875,-0.3070312,-0.2789063,0,0.2441406,0.2675781,-0.31875,-0.2273438,0,0.234375,0.3105469,-0.3609375,-0.2273438,0,0.1992188,0.3105469,-0.3726563,-0.2367188,0,0.1894531,0.3027344,-0.3726563,-0.2789063,0,0.1894531,0.2675781,-0.4078125,0.2132813,0,0.1601563,0.6777344,-0.4171875,0.225,0,0.1523438,0.6875,-0.3984375,0.1429688,0,0.1679688,0.6191406,-0.4101563,0.1359375,0,0.1582031,0.6132813,-0.4101563,-0.065625,0,0.1582031,0.4453125,-0.3328125,-0.1898438,0,0.2226563,0.3417969,-0.3328125,-0.196875,0,0.2226563,0.3359375,-0.3328125,-0.1945313,0,0.2226563,0.3378906,-0.3351563,-0.1851563,0,0.2207031,0.3457031,-0.3351563,-0.196875,0,0.2207031,0.3359375,-0.3351563,-0.1828125,0,0.2207031,0.3476563,-0.328125,-0.1757813,0,0.2265625,0.3535156,-0.3023438,-0.178125,0,0.2480469,0.3515625,-0.3,-0.1757813,0,0.25,0.3535156,-0.3257813,-0.2015625,0,0.2285156,0.3320313,-0.3023438,-0.1875,0,0.2480469,0.34375,-0.2976563,-0.2015625,0,0.2519531,0.3320313,-0.2976563,-0.1921875,0,0.2519531,0.3398438,-0.2625,-0.2015625,0,0.28125,0.3320313,-0.2601562,-0.196875,0,0.2832031,0.3359375,-0.2882813,-0.2015625,0,0.2597656,0.3320313,-0.3351563,-0.2015625,0,0.2207031,0.3320313,-0.3421875,-0.1851563,0,0.2148438,0.3457031,-0.3445313,-0.2015625,0,0.2128906,0.3320313,-0.3492188,-0.1898438,0,0.2089844,0.3417969,-0.3492188,-0.1992188,0,0.2089844,0.3339844,-0.3679688,-0.1757813,0,0.1933594,0.3535156,-0.3632813,-0.1875,0,0.1972656,0.34375,-0.3632813,-0.1804688,0,0.1972656,0.3496094,-0.3703125,-0.1898438,0,0.1914063,0.3417969,-0.375,-0.178125,0,0.1875,0.3515625,-0.375,-0.1851563,0,0.1875,0.3457031,-0.4476563,0.1007813,0,0.1269531,0.5839844,-0.4429688,0.06796875,0,0.1308594,0.5566406,-0.4429688,0.0984375,0,0.1308594,0.5820313,-0.4570313,0.1007813,0,0.1191406,0.5839844,-0.459375,0.0515625,0,0.1171875,0.5429688,-0.478125,0.0515625,0,0.1015625,0.5429688,-0.4804688,0.0796875,0,0.09960938,0.5664063,-0.4804688,0.0609375,0,0.09960938,0.5507813],[127,126,125,123,125,126,124,125,123,121,124,123,120,121,123,122,121,120,119,118,117,114,117,118,115,117,114,116,115,114,113,112,111,110,111,112,109,111,110,96,109,110,97,109,96,109,97,94,105,30,108,26,108,30,106,108,26,107,106,26,29,32,28,33,32,101,29,101,32,30,101,29,103,100,105,101,105,100,30,105,101,102,103,104,105,104,103,94,95,102,93,102,95,99,102,93,33,102,99,100,102,33,103,102,100,101,100,33,96,98,93,99,93,98,97,96,94,93,94,96,95,94,93,92,91,34,90,34,91,35,34,90,44,42,89,88,89,42,37,88,42,87,86,83,85,83,86,84,83,85,82,83,84,83,82,80,79,80,82,81,80,79,78,77,75,74,75,77,76,75,74,73,72,71,68,71,72,69,71,68,70,69,68,67,66,65,63,65,66,64,65,63,61,64,63,60,61,63,62,61,60,59,55,58,56,58,55,57,56,55,54,52,21,18,21,52,53,18,52,26,27,51,31,51,27,39,51,31,38,51,39,49,51,38,50,51,49,48,50,49,45,48,49,46,48,45,47,46,45,43,41,44,42,44,41,40,41,43,38,40,43,42,41,37,40,37,41,31,37,40,38,31,40,39,31,38,37,31,36,35,36,31,34,35,31,33,34,31,32,33,31,28,32,31,25,28,31,27,25,31,30,29,26,28,26,29,25,26,28,27,26,25,19,21,18,24,23,22,21,22,23,20,22,21,19,20,21,16,20,19,18,16,19,15,16,18,17,16,15,14,10,13,11,13,10,12,11,10,9,5,8,6,8,5,7,6,5,4,0,3,1,3,0,2,1,0],-0.0000838041305541992,-0.000148676335811615,0.999916195869446,0.99985134601593,0.099609375,0.12109375,0.890625,0.763671875,0,0,0,0,[0,0,0,0],[-0.6,-0.6,0.6,0.6],426.666656494141,512,512,512,512,256,256,51.0429077148438,62.0761222839355]},{"id":27514,"path":"Assets/Content/Sprites/Ingredients/lemon zest.png","assetBundleId":-1,"data":["lemon zest",6,27512,[0.004687518,0.02226563,0,0.5953125,0.4511719,0],[0.1195313,0.309375,0,0.5996094,0.7578125,0.1242188,0.3023438,0,0.6035156,0.7519531,0.1242188,0.3046875,0,0.6035156,0.7539063,0.1242188,0.2953125,0,0.6035156,0.7460938,0.1171875,0.2929688,0,0.5976563,0.7441406,0.1289063,0.2976563,0,0.6074219,0.7480469,0.13125,0.2882813,0,0.609375,0.7402344,0.1335938,0.2976563,0,0.6113281,0.7480469,0.1382813,0.3210938,0,0.6152344,0.7675781,0.140625,0.3046875,0,0.6171875,0.7539063,0.1429688,0.3164063,0,0.6191406,0.7636719,0.1335938,0.2976563,0,0.6113281,0.7480469,0.13125,0.31875,0,0.609375,0.765625,0.1429688,0.3820313,0,0.6191406,0.8183594,0.1382813,0.3703125,0,0.6152344,0.8085938,0.1429688,0.3773438,0,0.6191406,0.8144531,0.1359375,0.384375,0,0.6132813,0.8203125,0.1335938,0.3703125,0,0.6113281,0.8085938,0.1335938,0.3820313,0,0.6113281,0.8183594,0.1289063,0.3726563,0,0.6074219,0.8105469,0.1453125,0.4101563,0,0.6210938,0.8417969,-0.09609375,-0.2976563,0,0.4199219,0.2519531,-0.09375,-0.3117188,0,0.421875,0.2402344,-0.09375,-0.3023438,0,0.421875,0.2480469,-0.1007813,-0.3140625,0,0.4160156,0.2382813,-0.1054688,-0.3140625,0,0.4121094,0.2382813,-0.1101563,-0.2976563,0,0.4082031,0.2519531,-0.1101563,-0.3117188,0,0.4082031,0.2402344,-0.1007813,0.3070312,0,0.4160156,0.7558594,-0.1125,0.3070312,0,0.40625,0.7558594,-0.1007813,0.3070312,0,0.4160156,0.7558594,-0.1148438,0.3257813,0,0.4042969,0.7714844,-0.1148438,0.309375,0,0.4042969,0.7578125,-0.0984375,0.3328125,0,0.4179688,0.7773438,-0.0984375,0.3164063,0,0.4179688,0.7636719,-0.1007813,0.3398438,0,0.4160156,0.7832031,-0.1101563,0.3398438,0,0.4082031,0.7832031,-0.1148438,0.3375,0,0.4042969,0.78125,-0.08203125,0.2742188,0,0.4316406,0.7285156,-0.09375,0.2976563,0,0.421875,0.7480469,-0.1148438,0.2625,0,0.4042969,0.71875,-0.196875,-0.3984375,0,0.3359375,0.1679688,-0.1945313,-0.4242188,0,0.3378906,0.1464844,-0.1945313,-0.4078125,0,0.3378906,0.1601563,-0.196875,-0.4289063,0,0.3359375,0.1425781,-0.2203125,-0.4289063,0,0.3164063,0.1425781,-0.2460938,-0.39375,0,0.2949219,0.171875,-0.290625,-0.4195313,0,0.2578125,0.1503906,-0.3140625,-0.39375,0,0.2382813,0.171875,-0.3140625,-0.4125,0,0.2382813,0.15625,0.5132813,-0.31875,0,0.9277344,0.234375,0.5484375,-0.365625,0,0.9570313,0.1953125,0.5484375,-0.31875,0,0.9570313,0.234375,0.4429688,-0.4054688,0,0.8691406,0.1621094,0.3726563,-0.384375,0,0.8105469,0.1796875,0.3609375,-0.4054688,0,0.8007813,0.1621094,0.3585938,-0.384375,0,0.7988281,0.1796875,0.3585938,-0.403125,0,0.7988281,0.1640625,0.31875,0.2625,0,0.765625,0.71875,0.2976563,0.2554688,0,0.7480469,0.7128906,0.3234375,0.2554688,0,0.7695313,0.7128906,0.2578125,0.2882813,0,0.7148438,0.7402344,0.2507813,0.290625,0,0.7089844,0.7421875,0.1710937,0.309375,0,0.6425781,0.7578125,0.2460938,0.2859375,0,0.7050781,0.7382813,0.1640625,0.3164063,0,0.6367188,0.7636719,0.1546875,0.3164063,0,0.6289063,0.7636719,0.1523438,0.309375,0,0.6269531,0.7578125,0.121875,0.35625,0,0.6015625,0.796875,0.1195313,0.3492188,0,0.5996094,0.7910156,0.3257813,0.3210938,0,0.7714844,0.7675781,0.3257813,0.2554688,0,0.7714844,0.7128906,0.3117188,0.3609375,0,0.7597656,0.8007813,0.2625,0.309375,0,0.71875,0.7578125,0.2625,0.3023438,0,0.71875,0.7519531,0.2507813,0.2976563,0,0.7089844,0.7480469,0.2296875,0.3375,0,0.6914063,0.78125,0.2460938,0.3023438,0,0.7050781,0.7519531,0.2296875,0.3445313,0,0.6914063,0.7871094,0.2226563,0.3351563,0,0.6855469,0.7792969,0.2179688,0.3398438,0,0.6816406,0.7832031,0.1875,0.4382813,0,0.65625,0.8652344,0.215625,0.4476563,0,0.6796875,0.8730469,0.3609375,0.1195313,0,0.8007813,0.5996094,0.3585938,0.121875,0,0.7988281,0.6015625,0.3585938,0.121875,0,0.7988281,0.6015625,0.39375,0.1289063,0,0.828125,0.6074219,0.39375,0.1125,0,0.828125,0.59375,0.39375,0.121875,0,0.828125,0.6015625,0.3820313,0.1335938,0,0.8183594,0.6113281,0.3726563,0.1125,0,0.8105469,0.59375,0.3585938,0.1335938,0,0.7988281,0.6113281,0.4828125,-0.07734375,0,0.9023438,0.4355469,0.4335938,-0.1640625,0,0.8613281,0.3632813,0.4828125,-0.1242188,0,0.9023438,0.3964844,0.4265625,0.065625,0,0.8554688,0.5546875,0.3773438,-0.1804688,0,0.8144531,0.3496094,0.3421875,0.1359375,0,0.7851563,0.6132813,0.290625,0.2484375,0,0.7421875,0.7070313,0.290625,0.2390625,0,0.7421875,0.6992188,0.271875,0.2273438,0,0.7265625,0.6894531,0.2601562,0.1828125,0,0.7167969,0.6523438,0.2601562,0.178125,0,0.7167969,0.6484375,0.253125,0.1710937,0,0.7109375,0.6425781,0.2414063,0.1710937,0,0.7011719,0.6425781,0.2367188,0.1757813,0,0.6972656,0.6464844,0.234375,0.1898438,0,0.6953125,0.6582031,0.234375,0.1945313,0,0.6953125,0.6621094,0.2296875,0.1851563,0,0.6914063,0.6542969,0.225,0.1851563,0,0.6875,0.6542969,0.2203125,0.1898438,0,0.6835938,0.6582031,0.1429688,0.2882813,0,0.6191406,0.7402344,0.13125,0.2742188,0,0.609375,0.7285156,0.1242188,0.271875,0,0.6035156,0.7265625,0.1171875,0.28125,0,0.5976563,0.734375,-0.0421875,0.4359375,0,0.4648438,0.8632813,-0.04921875,0.384375,0,0.4589844,0.8203125,-0.04921875,0.3820313,0,0.4589844,0.8183594,-0.05859375,0.4148438,0,0.4511719,0.8457031,-0.05625,0.4101563,0,0.453125,0.8417969,-0.05859375,0.2578125,0,0.4511719,0.7148438,-0.0984375,0.2671875,0,0.4179688,0.7226563,-0.121875,0.1992188,0,0.3984375,0.6660156,-0.1382813,0.2085938,0,0.3847656,0.6738281,-0.1335938,0.2085938,0,0.3886719,0.6738281,-0.1429688,0.20625,0,0.3808594,0.671875,-0.365625,-0.08671875,0,0.1953125,0.4277344,-0.365625,-0.0984375,0,0.1953125,0.4179688,-0.375,-0.1804688,0,0.1875,0.3496094,-0.3984375,-0.1195313,0,0.1679688,0.4003906,-0.4476563,-0.1195313,0,0.1269531,0.4003906,-0.4757813,-0.1101563,0,0.1035156,0.4082031,0.3890625,0.1570313,0,0.8242188,0.6308594,0.3820313,0.140625,0,0.8183594,0.6171875,0.3679688,-0.3421875,0,0.8066406,0.2148438,0.3726563,-0.3585938,0,0.8105469,0.2011719,0.3539062,-0.384375,0,0.7949219,0.1796875,0.3421875,-0.3421875,0,0.7851563,0.2148438,0.3257813,-0.346875,0,0.7714844,0.2109375,0.3070312,-0.3726563,0,0.7558594,0.1894531,0.3046875,-0.3609375,0,0.7539063,0.1992188,0.3046875,-0.365625,0,0.7539063,0.1953125,-0.3328125,-0.3351563,0,0.2226563,0.2207031,-0.3328125,-0.346875,0,0.2226563,0.2109375,-0.3304687,-0.3421875,0,0.2246094,0.2148438,-0.3421875,-0.346875,0,0.2148438,0.2109375,-0.3515625,-0.3328125,0,0.2070313,0.2226563,-0.3539062,-0.3445313,0,0.2050781,0.2128906,-0.35625,-0.3375,0,0.203125,0.21875,0.5976563,-0.2460938,0,0.9980469,0.2949219,0.6,-0.2929688,0,1,0.2558594,0.6,-0.2460938,0,1,0.2949219,0.5835938,-0.309375,0,0.9863281,0.2421875,0.5554687,-0.2625,0,0.9628906,0.28125,0.5296875,-0.3117188,0,0.9414063,0.2402344,0.4921875,-0.2929688,0,0.9101563,0.2558594,0.4757813,-0.3046875,0,0.8964844,0.2460938,0.4757813,-0.3117188,0,0.8964844,0.2402344,-0.4945313,-0.09609375,0,0.08789063,0.4199219,-0.4945313,-0.103125,0,0.08789063,0.4140625,-0.3703125,-0.075,0,0.1914063,0.4375,-0.384375,-0.07265625,0,0.1796875,0.4394531,-0.4828125,-0.07265625,0,0.09765625,0.4394531,-0.4945313,-0.0796875,0,0.08789063,0.4335938,-0.5132813,0.103125,0,0.0722656,0.5859375,-0.525,0.0890625,0,0.06249997,0.5742188,-0.525,-0.075,0,0.06249997,0.4375,-0.07265625,0.4289063,0,0.4394531,0.8574219,-0.08203125,0.4265625,0,0.4316406,0.8554688,-0.084375,0.3585938,0,0.4296875,0.7988281,-0.0515625,0.403125,0,0.4570313,0.8359375,-0.05625,0.4148438,0,0.453125,0.8457031,-0.0609375,0.4359375,0,0.4492188,0.8632813,-0.0609375,0.4335938,0,0.4492188,0.8613281,-0.1242188,0.3398438,0,0.3964844,0.7832031,-0.13125,0.2085938,0,0.390625,0.6738281,-0.1382813,0.2109375,0,0.3847656,0.6757813,-0.1429688,0.35625,0,0.3808594,0.796875,-0.1546875,0.253125,0,0.3710938,0.7109375,-0.5859375,-0.2578125,0,0.01171875,0.2851563,-0.5789062,-0.2671875,0,0.01757815,0.2773438,-0.5789062,-0.2601562,0,0.01757815,0.2832031,-0.5859375,-0.2695313,0,0.01171875,0.2753906,-0.590625,-0.2625,0,0.00781253,0.28125,-0.4453125,-0.2273438,0,0.1289063,0.3105469,-0.440625,-0.2484375,0,0.1328125,0.2929688,-0.440625,-0.2367188,0,0.1328125,0.3027344,-0.46875,-0.2484375,0,0.109375,0.2929688,-0.4804688,-0.215625,0,0.09960938,0.3203125,-0.5015625,-0.215625,0,0.08203122,0.3203125,-0.5015625,-0.2296875,0,0.08203122,0.3085938,0.5367188,0.09375,0,0.9472656,0.578125,0.5320312,0.08203125,0,0.9433594,0.5683594,0.5367188,0.084375,0,0.9472656,0.5703125,0.525,0.08203125,0,0.9375,0.5683594,0.5179688,0.1054688,0,0.9316406,0.5878906,0.5039063,0.1054688,0,0.9199219,0.5878906,0.5039063,0.08671875,0,0.9199219,0.5722656,0.496875,0.103125,0,0.9140625,0.5859375,0.496875,0.09609375,0,0.9140625,0.5800781,0.4453125,0.121875,0,0.8710938,0.6015625,0.45,0.1078125,0,0.875,0.5898438,0.45,0.1148438,0,0.875,0.5957031,0.4453125,0.1054688,0,0.8710938,0.5878906,0.4265625,0.1265625,0,0.8554688,0.6054688,0.4125,0.1289063,0,0.84375,0.6074219,0.4054688,0.1054688,0,0.8378906,0.5878906,0.4007813,0.1289063,0,0.8339844,0.6074219,0.39375,0.1101563,0,0.828125,0.5917969,0.2554688,0.1898438,0,0.7128906,0.6582031,0.2460938,0.1898438,0,0.7050781,0.6582031,0.2390625,0.1875,0,0.6992188,0.65625,0.2484375,0.2179688,0,0.7070313,0.6816406,0.2390625,0.2179688,0,0.6992188,0.6816406,0.2367188,0.225,0,0.6972656,0.6875,0.2601562,0.4476563,0,0.7167969,0.8730469,0.2578125,0.3140625,0,0.7148438,0.7617188,0.253125,0.3140625,0,0.7109375,0.7617188,0.2460938,0.3070312,0,0.7050781,0.7558594,0.225,0.3492188,0,0.6875,0.7910156,0.2179688,0.346875,0,0.6816406,0.7890625,0.2765625,0.2484375,0,0.7304688,0.7070313,0.2460938,0.2414063,0,0.7050781,0.7011719,0.2296875,0.1992188,0,0.6914063,0.6660156,0.225,0.1992188,0,0.6875,0.6660156,0.2203125,0.1945313,0,0.6835938,0.6621094,0.2578125,0.28125,0,0.7148438,0.734375,0.2507813,0.2789063,0,0.7089844,0.7324219,0.1710937,0.3070312,0,0.6425781,0.7558594,0.1640625,0.3,0,0.6367188,0.75,0.1617188,0.3,0,0.6347656,0.75,-0.1265625,0.45,0,0.3945313,0.875,-0.1265625,0.43125,0,0.3945313,0.859375,-0.1265625,0.4335938,0,0.3945313,0.8613281,-0.1289063,0.45,0,0.3925781,0.875,-0.13125,0.4546875,0,0.390625,0.8789063,-0.13125,0.4242188,0,0.390625,0.8535156,-0.1265625,0.4570313,0,0.3945313,0.8808594,-0.13125,0.4570313,0,0.390625,0.8808594,-0.13125,0.46875,0,0.390625,0.890625,-0.1195313,0.4734375,0,0.4003906,0.8945313,-0.075,0.4453125,0,0.4375,0.8710938,-0.0796875,0.4289063,0,0.4335938,0.8574219,-0.075,0.43125,0,0.4375,0.859375,-0.08671875,0.4289063,0,0.4277344,0.8574219,-0.09375,0.4734375,0,0.421875,0.8945313,-0.140625,0.3984375,0,0.3828125,0.8320313,-0.1476562,0.3609375,0,0.3769531,0.8007813,-0.140625,0.3632813,0,0.3828125,0.8027344,-0.15,0.403125,0,0.375,0.8359375,-0.1570313,0.4007813,0,0.3691406,0.8339844,-0.1570313,0.3726563,0,0.3691406,0.8105469,-0.09140625,0.3773438,0,0.4238281,0.8144531,-0.09609375,0.3632813,0,0.4199219,0.8027344,-0.09140625,0.365625,0,0.4238281,0.8046875,-0.0984375,0.3820313,0,0.4179688,0.8183594,-0.1101563,0.3632813,0,0.4082031,0.8027344,-0.1148438,0.3820313,0,0.4042969,0.8183594,-0.1171875,0.3773438,0,0.4023438,0.8144531,-0.1171875,0.3679688,0,0.4023438,0.8066406,0.1289063,0.3773438,0,0.6074219,0.8144531,0.1289063,0.3726563,0,0.6074219,0.8105469,-0.09375,0.4242188,0,0.421875,0.8535156,-0.08671875,0.3984375,0,0.4277344,0.8320313,-0.08671875,0.4101563,0,0.4277344,0.8417969,-0.103125,0.3984375,0,0.4140625,0.8320313,-0.1101563,0.4335938,0,0.4082031,0.8613281,-0.1195313,0.403125,0,0.4003906,0.8359375,-0.1265625,0.4171875,0,0.3945313,0.8476563,-0.1382813,0.4570313,0,0.3847656,0.8808594,-0.1429688,0.4242188,0,0.3808594,0.8535156,-0.1476562,0.4429688,0,0.3769531,0.8691406,-0.1476562,0.4265625,0,0.3769531,0.8554688],[272,271,270,269,270,271,236,270,269,238,236,269,235,236,238,268,232,267,233,267,232,266,267,233,265,267,266,262,265,266,263,265,262,264,263,262,261,260,19,18,19,260,259,258,256,257,256,258,255,256,257,253,256,255,252,253,255,254,253,252,251,250,247,249,247,250,246,247,249,248,247,246,231,237,244,240,244,237,245,244,240,241,244,245,242,244,241,243,242,241,238,239,237,240,237,239,235,238,234,237,234,238,231,234,237,236,235,232,234,232,235,231,232,234,233,232,231,80,220,79,219,79,220,76,79,219,78,76,219,67,66,230,65,230,66,229,230,65,228,229,65,63,228,65,77,218,75,217,75,218,74,75,217,216,74,217,73,74,216,114,4,113,3,113,4,112,113,3,6,112,3,68,69,115,4,115,69,114,115,4,0,4,69,110,225,109,224,109,225,108,109,224,223,108,224,106,108,223,107,106,223,214,222,213,212,213,222,221,212,222,100,212,221,99,100,221,98,99,221,64,62,227,226,227,62,61,226,62,7,11,111,9,111,11,10,111,9,230,111,10,59,111,230,67,230,10,229,59,230,228,59,229,63,59,228,227,59,63,64,227,63,226,59,227,61,59,226,59,222,111,214,111,222,225,111,214,110,111,225,224,225,214,223,224,214,107,223,214,105,107,214,221,222,59,98,221,59,215,220,82,80,82,220,219,220,215,78,219,215,218,78,215,77,78,218,217,218,215,216,217,215,73,216,215,72,73,215,105,214,211,213,211,214,210,211,213,212,210,213,209,210,212,100,209,212,101,209,100,105,211,104,210,104,211,103,104,210,209,103,210,102,103,209,101,102,209,85,97,84,208,87,206,88,206,87,207,206,88,205,206,207,203,206,205,204,203,205,200,203,204,201,203,200,202,201,200,199,198,197,196,197,198,194,197,196,195,194,196,191,194,195,192,194,191,193,192,191,190,189,187,188,187,189,184,187,188,185,187,184,186,185,184,183,179,182,180,182,179,181,180,179,178,177,176,174,176,177,124,176,174,175,124,174,122,175,174,31,122,174,40,122,31,32,40,31,173,172,171,115,171,172,170,171,115,116,170,115,169,168,120,167,120,168,118,120,167,166,165,158,164,158,165,163,158,164,125,163,164,162,163,125,161,162,125,160,161,125,126,160,125,158,163,131,162,131,163,161,131,162,130,131,161,129,130,161,127,129,161,160,127,161,126,127,160,159,158,131,157,156,154,155,154,156,153,154,155,152,154,153,149,152,153,150,152,149,151,150,149,148,146,147,145,147,146,142,145,146,143,145,142,144,143,142,141,140,139,138,139,140,136,139,138,137,136,138,134,136,137,56,136,134,54,56,134,135,54,134,60,132,97,133,97,132,131,130,128,129,128,130,127,128,129,96,128,127,126,96,127,125,96,126,123,96,125,122,96,123,124,122,123,40,96,122,121,96,40,120,96,121,117,96,120,118,117,120,119,117,118,116,96,117,115,96,116,114,96,115,113,96,114,112,96,113,6,96,112,7,96,6,111,96,7,110,96,111,109,96,110,108,96,109,105,96,108,106,105,108,107,105,106,104,96,105,103,96,104,102,96,103,101,96,102,100,96,101,99,96,100,98,96,99,59,96,98,60,96,59,97,96,60,85,96,97,83,96,85,95,96,83,93,96,95,92,93,95,94,93,92,84,91,83,89,83,91,90,83,89,87,90,89,86,87,89,88,87,86,85,84,83,19,75,68,58,68,75,17,75,19,14,75,17,15,75,14,13,75,15,77,75,13,20,77,13,80,77,20,81,80,20,82,80,81,79,77,80,76,77,79,78,77,76,74,58,75,73,58,74,72,58,73,70,58,72,60,58,70,71,60,70,0,69,2,68,2,69,12,2,68,8,12,68,65,8,68,62,65,68,61,62,68,58,61,68,10,8,65,66,10,65,67,10,66,63,65,62,64,63,62,59,61,58,60,59,58,57,56,55,54,55,56,53,55,54,50,53,54,51,53,50,52,51,50,49,48,47,46,47,48,45,47,46,41,45,46,44,45,41,42,44,41,43,42,41,40,32,38,29,38,32,30,38,29,28,38,30,39,38,28,31,37,28,36,28,37,35,28,36,33,28,35,34,28,33,32,31,29,28,29,31,30,29,28,27,26,25,21,25,26,24,25,21,22,24,21,23,22,21,18,20,16,13,16,20,1,2,5,7,5,2,19,18,17,16,17,18,14,17,16,13,14,16,15,14,13,2,12,7,8,7,12,11,7,8,9,11,8,10,9,8,3,1,6,5,6,1,7,6,5,4,0,3,1,3,0,2,1,0],-0.0000251904129981995,-0.000148668885231018,0.99997478723526,0.99985134601593,0.00781252980232239,0.142578125,1,0.89453125,0,0,0,0,[0,0,0,0],[-0.6,-0.6,0.6,0.6],426.666656494141,512,512,512,512,256,256,4.01291275024414,73.0761184692383]},{"id":27032,"path":"Assets/Content/Sprites/Ingredients/turmeric.png","assetBundleId":-1,"data":["turmeric",6,27030,[-0.004687503,-0.01171875,0,0.3984375,0.2789063,0],[0.39375,0.1570313,0,0.828125,0.6308594,0.3304687,0.03515625,0,0.7753906,0.5292969,0.39375,0.1195313,0,0.828125,0.5996094,0.2601562,0.2671875,0,0.7167969,0.7226563,0.3117188,-0.2625,0,0.7597656,0.28125,0.2554688,-0.290625,0,0.7128906,0.2578125,0.1453125,-0.290625,0,0.6210938,0.2578125,0.00703125,-0.253125,0,0.5058594,0.2890625,-0.03515625,0.2671875,0,0.4707031,0.7226563,-0.08671875,-0.253125,0,0.4277344,0.2890625,-0.1242188,-0.15,0,0.3964844,0.375,-0.1429688,-0.140625,0,0.3808594,0.3828125,-0.2132813,0.1992188,0,0.3222656,0.6660156,-0.2226563,-0.1828125,0,0.3144531,0.3476563,-0.3140625,-0.16875,0,0.2382813,0.359375,-0.3351563,0.1242188,0,0.2207031,0.6035156,-0.403125,0.03046875,0,0.1640625,0.5253906,-0.403125,-0.06796875,0,0.1640625,0.4433594,0.3328125,-0.1195313,0,0.7773438,0.4003906],[4,1,18,17,16,14,15,14,16,12,14,15,13,14,12,11,13,12,8,11,12,10,11,8,9,10,8,7,9,8,3,7,8,6,7,3,5,6,3,4,5,3,1,4,3,0,1,3,2,1,0],-0.000148668885231018,-0.000148683786392212,0.99985134601593,0.99985134601593,0.1640625,0.2578125,0.828125,0.72265625,0,0,0,0,[0,0,0,0],[-0.6,-0.6,0.6,0.6],426.666656494141,512,512,512,512,256,256,84.0761184692383,132.076126098633]},{"id":27526,"path":"Assets/Content/Sprites/Tiles/Special/tile_unknown.png","assetBundleId":-1,"data":["tile_unknown",6,27524,[0.001111113,0,0,0.1788889,0.3244444,0],[0.06888889,-0.1866667,0,0.5605469,0.3359375,0.05555556,-0.3244444,0,0.5488281,0.2148438,0.06888889,-0.28,0,0.5605469,0.2539063,0.04666667,-0.1622222,0,0.5410156,0.3574219,-0.07111111,-0.3244444,0,0.4375,0.2148438,-0.08666667,-0.1622222,0,0.4238281,0.3574219,-0.1111111,-0.1777778,0,0.4023438,0.34375,-0.1111111,-0.3044444,0,0.4023438,0.2324219,0.18,0.3244444,0,0.6582031,0.7851563,0.04,-0.1288889,0,0.5351563,0.3867188,0.18,-0.02888889,0,0.6582031,0.4746094,0.03777778,-0.1355556,0,0.5332031,0.3808594,0.03333334,-0.1377778,0,0.5292969,0.3789063,-0.08666667,-0.1377778,0,0.4238281,0.3789063,-0.09555556,-0.1266667,0,0.4160156,0.3886719,-0.1022222,-0.1133333,0,0.4101563,0.4003906,-0.12,0.3244444,0,0.3945313,0.7851563,-0.1644444,0.1333333,0,0.3554688,0.6171875,-0.1777778,0.2955556,0,0.34375,0.7597656,-0.1777778,0.1333333,0,0.34375,0.6171875],[19,18,17,16,17,18,15,17,16,8,15,16,14,15,8,13,14,8,12,13,8,11,12,8,9,11,8,10,9,8,7,6,4,5,4,6,3,4,5,1,4,3,0,1,3,2,1,0],-0.000148683786392212,-0.000148668885231018,0.99985134601593,0.99985134601593,0.34375,0.21484375,0.658203125,0.78515625,0,0,0,0,[0,0,0,0],[-0.5688889,-0.5688889,0.5688889,0.5688889],450,512,512,512,512,256,256,176.076126098633,110.076118469238]},{"id":27540,"path":"Assets/Content/Sprites/Ingredients/egg.png","assetBundleId":-1,"data":["egg",6,27538,[-0.03281249,0.02695313,0,0.4476563,0.3058594,0],[0.3492188,0.1359375,0,0.7910156,0.6132813,0.4148438,0.04453125,0,0.8457031,0.5371094,0.4148438,0.0984375,0,0.8457031,0.5820313,0.3351563,-0.084375,0,0.7792969,0.4296875,0.225,-0.16875,0,0.6875,0.359375,0.1945313,0.2484375,0,0.6621094,0.7070313,0.140625,-0.1804688,0,0.6171875,0.3496094,0.1054688,0.3234375,0,0.5878906,0.7695313,0.08203125,0.3328125,0,0.5683594,0.7773438,0.0375,-0.2554688,0,0.53125,0.2871094,0.03515625,0.3328125,0,0.5292969,0.7773438,0.00234375,0.3023438,0,0.5019531,0.7519531,-0.009375,-0.2671875,0,0.4921875,0.2773438,-0.0421875,-0.2789063,0,0.4648438,0.2675781,-0.1195313,0.271875,0,0.4003906,0.7265625,-0.1476562,-0.2789063,0,0.3769531,0.2675781,-0.20625,0.1992188,0,0.328125,0.6660156,-0.2601562,0.2414063,0,0.2832031,0.7011719,-0.2882813,-0.1945313,0,0.2597656,0.3378906,-0.3398438,0.1851563,0,0.2167969,0.6542969,-0.3421875,-0.178125,0,0.2148438,0.3515625,-0.4054688,-0.103125,0,0.1621094,0.4140625,-0.4734375,0.0046875,0,0.1054688,0.5039063,-0.4804688,0.07265625,0,0.09960938,0.5605469,-0.4804688,0.0234375,0,0.09960938,0.5195313],[24,23,22,19,22,23,21,22,19,20,21,19,18,20,19,17,18,19,15,18,17,16,15,17,14,15,16,13,15,14,11,13,14,12,13,11,9,12,11,10,9,11,8,9,10,6,9,8,7,6,8,5,6,7,4,6,5,0,4,5,3,4,0,1,3,0,2,1,0],-0.0000522509217262268,-0.000148683786392212,0.999947726726532,0.99985134601593,0.099609375,0.267578125,0.845703125,0.77734375,0,0,0,0,[0,0,0,0],[-0.6,-0.6,0.6,0.6],426.666656494141,512,512,512,512,256,256,51.0267524719238,137.076126098633]},{"id":27698,"path":"Assets/Content/Sprites/Ingredients/russet potatoes.png","assetBundleId":-1,"data":["russet potatoes",6,27696,[-0.007031262,-0.004687503,0,0.50625,0.3398438,0],[0.4992188,0.1335938,0,0.9160156,0.6113281,0.4289063,-0.1757813,0,0.8574219,0.3535156,0.4992188,-0.1757813,0,0.9160156,0.3535156,0.39375,0.2578125,0,0.828125,0.7148438,0.3914063,-0.0984375,0,0.8261719,0.4179688,0.2835937,-0.1875,0,0.7363281,0.34375,0.1710937,0.3351563,0,0.6425781,0.7792969,0.2742188,-0.2742188,0,0.7285156,0.2714844,0.159375,-0.2953125,0,0.6328125,0.2539063,0.1570313,-0.2203125,0,0.6308594,0.3164063,0.15,-0.2179688,0,0.625,0.3183594,0.1453125,-0.2226563,0,0.6210938,0.3144531,0.075,-0.3046875,0,0.5625,0.2460938,-0.06796875,0.3351563,0,0.4433594,0.7792969,-0.1289063,0.3257813,0,0.3925781,0.7714844,-0.13125,-0.2976563,0,0.390625,0.2519531,-0.2273438,-0.2742188,0,0.3105469,0.2714844,-0.3,-0.253125,0,0.25,0.2890625,-0.3914063,-0.2179688,0,0.1738281,0.3183594,-0.4757813,0.15,0,0.1035156,0.625,-0.5132813,0.08671875,0,0.0722656,0.5722656,-0.5132813,-0.01640625,0,0.0722656,0.4863281,0.4195313,-0.2742188,0,0.8496094,0.2714844,0.3421875,-0.2578125,0,0.7851563,0.2851563,0.2039063,-0.3023438,0,0.6699219,0.2480469,0.1921875,-0.3445313,0,0.6601563,0.2128906,-0.1242188,-0.3117188,0,0.3964844,0.2402344,-0.1921875,-0.3445313,0,0.3398438,0.2128906,-0.28125,-0.3351563,0,0.265625,0.2207031,-0.3375,-0.2414063,0,0.21875,0.2988281,-0.3679688,-0.2484375,0,0.1933594,0.2929688,0.3585938,-0.2203125,0,0.7988281,0.3164063,0.365625,-0.2296875,0,0.8046875,0.3085938,0.365625,-0.225,0,0.8046875,0.3125,0.3539062,-0.2390625,0,0.7949219,0.3007813,0.3304687,-0.2484375,0,0.7753906,0.2929688,0.1570313,-0.2273438,0,0.6308594,0.3105469,0.15,-0.2296875,0,0.625,0.3085938,0.3398438,-0.1710937,0,0.7832031,0.3574219,0.346875,-0.1804688,0,0.7890625,0.3496094,0.346875,-0.1734375,0,0.7890625,0.3554688,0.3398438,-0.1828125,0,0.7832031,0.3476563,0.3351563,-0.1757813,0,0.7792969,0.3535156,0.3257813,-0.1757813,0,0.7714844,0.3535156,0.3234375,-0.1875,0,0.7695313,0.34375,0.328125,-0.1828125,0,0.7734375,0.3476563,0.31875,-0.1757813,0,0.765625,0.3535156,0.3164063,-0.1875,0,0.7636719,0.34375,0.3140625,-0.1804688,0,0.7617188,0.3496094],[48,46,47,44,47,46,43,44,46,45,44,43,42,38,41,39,41,38,40,39,38,11,10,37,36,37,10,9,36,10,12,11,8,37,8,11,36,8,37,9,8,36,7,5,35,31,35,5,34,35,31,32,34,31,33,32,31,30,29,28,26,28,29,27,28,26,25,27,26,24,25,26,22,25,24,23,22,24,1,22,23,2,22,1,21,20,18,19,18,20,14,18,19,17,18,14,16,17,14,15,16,14,12,15,14,13,12,14,6,12,13,11,12,6,10,11,6,9,10,6,8,9,6,7,8,6,5,7,6,3,5,6,4,5,3,1,4,3,0,1,3,2,1,0],-0.000148706138134003,-0.000148668885231018,0.999851286411285,0.99985134601593,0.0722655951976776,0.212890625,0.916015625,0.779296875,0,0,0,0,[0,0,0,0],[-0.6,-0.6,0.6,0.6],426.666656494141,512,512,512,512,256,256,37.0761222839355,109.076118469238]},{"id":27564,"path":"Assets/Content/Sprites/Ingredients/chiken full.png","assetBundleId":-1,"data":["chiken full",6,27562,[0.002343744,-0.05976564,0,0.5085938,0.4535156,0],[-0.253125,-0.4382813,0,0.2890625,0.1347656,-0.2578125,-0.45,0,0.2851563,0.125,-0.2507813,-0.4453125,0,0.2910156,0.1289063,-0.2625,-0.4359375,0,0.28125,0.1367188,-0.2648438,-0.4476563,0,0.2792969,0.1269531,-0.2671875,-0.440625,0,0.2773438,0.1328125,-0.271875,-0.43125,0,0.2734375,0.140625,-0.271875,-0.4429688,0,0.2734375,0.1308594,-0.2695313,-0.4382813,0,0.2753906,0.1347656,-0.2929688,-0.4429688,0,0.2558594,0.1308594,-0.3234375,-0.4148438,0,0.2304688,0.1542969,-0.3257813,-0.4382813,0,0.2285156,0.1347656,-0.328125,-0.4148438,0,0.2265625,0.1542969,-0.328125,-0.4335938,0,0.2265625,0.1386719,0.4476563,-0.2953125,0,0.8730469,0.2539063,0.45,-0.3210938,0,0.875,0.2324219,0.45,-0.2859375,0,0.875,0.2617188,0.440625,-0.3234375,0,0.8671875,0.2304688,0.4359375,-0.31875,0,0.8632813,0.234375,0.4335938,-0.2789063,0,0.8613281,0.2675781,0.4289063,-0.28125,0,0.8574219,0.265625,0.4289063,-0.2953125,0,0.8574219,0.2539063,0.45,-0.2789063,0,0.875,0.2675781,0.4335938,-0.2789063,0,0.8613281,0.2675781,0.4640625,0.39375,0,0.8867188,0.828125,0.3304687,-0.1640625,0,0.7753906,0.3632813,0.271875,-0.365625,0,0.7265625,0.1953125,0.09375,-0.403125,0,0.578125,0.1640625,0.009375,-0.3890625,0,0.5078125,0.1757813,0.00234375,-0.384375,0,0.5019531,0.1796875,-0.1523438,0.39375,0,0.3730469,0.828125,0.5109375,-0.0421875,0,0.9257813,0.4648438,0.5109375,0.375,0,0.9257813,0.8125,0.3539062,-0.2085938,0,0.7949219,0.3261719,0.3632813,-0.290625,0,0.8027344,0.2578125,0.3679688,-0.2132813,0,0.8066406,0.3222656,0.3398438,-0.234375,0,0.7832031,0.3046875,0.009375,-0.403125,0,0.5078125,0.1640625,0.00703125,-0.3890625,0,0.5058594,0.1757813,0.0046875,-0.403125,0,0.5039063,0.1640625,0.00703125,-0.3960938,0,0.5058594,0.1699219,-0.1546875,-0.403125,0,0.3710938,0.1640625,-0.2296875,-0.3632813,0,0.3085938,0.1972656,-0.2765625,0.3539062,0,0.2695313,0.7949219,-0.2953125,-0.3164063,0,0.2539063,0.2363281,-0.43125,-0.2742188,0,0.140625,0.2714844,-0.4382813,-0.1171875,0,0.1347656,0.4023438,-0.440625,0.1359375,0,0.1328125,0.6132813,-0.440625,-0.1148438,0,0.1328125,0.4042969,-0.440625,-0.1171875,0,0.1328125,0.4023438,-0.45,-0.1289063,0,0.125,0.3925781,-0.4617188,-0.1570313,0,0.1152344,0.3691406,-0.4757813,0.07734375,0,0.1035156,0.5644531,-0.478125,-0.1851563,0,0.1015625,0.3457031,-0.50625,-0.1335938,0,0.078125,0.3886719,-0.2015625,-0.4148438,0,0.3320313,0.1542969,-0.1992188,-0.43125,0,0.3339844,0.140625,-0.1992188,-0.4195313,0,0.3339844,0.1503906,-0.2039063,-0.4335938,0,0.3300781,0.1386719,-0.215625,-0.4148438,0,0.3203125,0.1542969,-0.2179688,-0.4195313,0,0.3183594,0.1503906,-0.2179688,-0.4335938,0,0.3183594,0.1386719,-0.2859375,-0.365625,0,0.2617188,0.1953125,-0.3796875,-0.3304687,0,0.1835938,0.2246094,-0.3351563,-0.3515625,0,0.2207031,0.2070313,-0.4429688,-0.2742188,0,0.1308594,0.2714844,-0.2695313,-0.3609375,0,0.2753906,0.1992188,-0.2742188,-0.3703125,0,0.2714844,0.1914063,-0.2695313,-0.3773438,0,0.2753906,0.1855469,-0.2765625,-0.4125,0,0.2695313,0.15625,-0.2695313,-0.3984375,0,0.2753906,0.1679688,-0.309375,-0.4125,0,0.2421875,0.15625,-0.39375,-0.3960938,0,0.171875,0.1699219,-0.4617188,-0.2742188,0,0.1152344,0.2714844,-0.4617188,-0.3117188,0,0.1152344,0.2402344,-0.403125,-0.3914063,0,0.1640625,0.1738281,-0.4101563,-0.4078125,0,0.1582031,0.1601563,-0.403125,-0.4054688,0,0.1640625,0.1621094,-0.4171875,-0.3796875,0,0.1523438,0.1835938,-0.4171875,-0.4054688,0,0.1523438,0.1621094,-0.4289063,-0.3796875,0,0.1425781,0.1835938,-0.4335938,-0.3867188,0,0.1386719,0.1777344,0.3421875,-0.346875,0,0.7851563,0.2109375,0.3234375,-0.3609375,0,0.7695313,0.1992188,0.3421875,-0.3539062,0,0.7851563,0.2050781,0.3164063,-0.3609375,0,0.7636719,0.1992188,0.3398438,-0.3375,0,0.7832031,0.21875,0.3421875,-0.3421875,0,0.7851563,0.2148438,0.3304687,-0.3375,0,0.7753906,0.21875,0.3140625,-0.3445313,0,0.7617188,0.2128906,0.3117188,-0.3515625,0,0.7597656,0.2070313,0.3117188,-0.3609375,0,0.7597656,0.1992188,0.3820313,-0.3257813,0,0.8183594,0.2285156,0.4148438,-0.3773438,0,0.8457031,0.1855469,0.4148438,-0.3257813,0,0.8457031,0.2285156,0.2929688,-0.5132813,0,0.7441406,0.0722656,0.2226563,-0.4125,0,0.6855469,0.15625,-0.140625,-0.5132813,0,0.3828125,0.0722656,-0.2320313,-0.4640625,0,0.3066406,0.1132813,-0.2484375,-0.4382813,0,0.2929688,0.1347656,-0.2484375,-0.4546875,0,0.2929688,0.1210938,-0.4453125,-0.271875,0,0.1289063,0.2734375,-0.4476563,-0.1265625,0,0.1269531,0.3945313,-0.459375,-0.1523438,0,0.1171875,0.3730469,-0.4640625,-0.2273438,0,0.1132813,0.3105469,-0.4664063,-0.178125,0,0.1113281,0.3515625,-0.459375,-0.2460938,0,0.1171875,0.2949219,-0.46875,-0.2789063,0,0.109375,0.2675781,-0.459375,-0.2648438,0,0.1171875,0.2792969,-0.50625,-0.2671875,0,0.078125,0.2773438,-0.4898438,-0.3023438,0,0.09179688,0.2480469,-0.4875,-0.3164063,0,0.09375,0.2363281,-0.4851563,-0.3070312,0,0.09570313,0.2441406,-0.4945313,-0.3023438,0,0.08789063,0.2480469,-0.4945313,-0.31875,0,0.08789063,0.234375,-0.4992188,-0.3070312,0,0.08398438,0.2441406,-0.4992188,-0.3140625,0,0.08398438,0.2382813],[116,115,114,113,114,115,111,114,113,110,111,113,112,111,110,109,54,107,53,107,54,106,107,53,108,107,106,105,103,104,101,104,103,102,101,103,46,101,102,65,101,46,45,65,46,100,99,98,96,98,99,97,98,96,95,97,96,85,95,96,93,95,85,83,93,85,84,93,83,82,93,84,92,93,82,94,93,92,91,90,85,89,85,90,88,85,89,82,85,88,86,82,88,87,82,86,85,82,83,84,83,82,81,80,79,78,79,80,76,79,78,75,76,78,77,76,75,74,73,72,65,72,73,63,72,65,71,72,63,64,71,63,62,71,64,69,71,62,68,69,62,70,69,68,45,44,62,66,62,44,67,62,66,65,45,63,62,63,45,64,63,62,61,60,58,59,58,60,55,58,59,56,58,55,57,56,55,54,52,53,51,53,52,47,51,52,50,51,47,49,50,47,48,49,47,46,48,47,43,46,47,45,46,43,44,45,43,42,44,43,30,42,43,41,42,30,39,41,30,29,39,30,38,39,29,40,39,38,37,28,27,25,36,26,34,26,36,33,34,36,35,34,33,16,22,31,24,31,22,32,31,24,30,24,29,28,29,24,27,28,24,26,27,24,25,26,24,19,25,24,23,19,24,22,23,24,19,23,14,22,14,23,16,14,22,21,20,18,19,18,20,14,18,19,17,18,14,15,17,14,16,15,14,13,12,11,10,11,12,9,11,10,6,9,10,7,9,6,8,7,6,5,3,4,1,4,3,0,1,3,2,1,0],-0.0000838041305541992,-0.000148706138134003,0.999916195869446,0.999851286411285,0.078125,0.0722655951976776,0.92578125,0.828125,0,0,0,0,[0,0,0,0],[-0.6,-0.6,0.6,0.6],426.666656494141,512,512,512,512,256,256,40.0429077148438,37.0761222839355]},{"id":27746,"path":"Assets/Content/Sprites/Ingredients/sweet petato.png","assetBundleId":-1,"data":["sweet petato",6,27744,[-0.007031247,-0.09726563,0,0.346875,0.2824219,0],[0.1148438,-0.3234375,0,0.5957031,0.2304688,0.1171875,-0.3375,0,0.5976563,0.21875,0.1171875,-0.3304687,0,0.5976563,0.2246094,0.1054688,-0.3773438,0,0.5878906,0.1855469,0.0984375,-0.3796875,0,0.5820313,0.1835938,0.0515625,-0.3796875,0,0.5429688,0.1835938,0.00703125,-0.3234375,0,0.5058594,0.2304688,0.0046875,-0.328125,0,0.5039063,0.2265625,0.0046875,-0.3539062,0,0.5039063,0.2050781,0.3398438,-0.07265625,0,0.7832031,0.4394531,0.3117188,-0.234375,0,0.7597656,0.3046875,0.3398438,-0.1570313,0,0.7832031,0.3691406,0.2953125,0,0,0.7460938,0.5,0.234375,-0.2765625,0,0.6953125,0.2695313,0.08203125,-0.2765625,0,0.5683594,0.2695313,0.05625,-0.271875,0,0.546875,0.2734375,0,0.1851563,0,0.5,0.6542969,-0.01875,-0.2203125,0,0.484375,0.3164063,-0.2132813,-0.1523438,0,0.3222656,0.3730469,-0.2367188,0.1851563,0,0.3027344,0.6542969,-0.2695313,-0.09609375,0,0.2753906,0.4199219,-0.3539062,0.1125,0,0.2050781,0.59375,-0.3539062,0.046875,0,0.2050781,0.5390625,-0.234375,-0.1523438,0,0.3046875,0.3730469,-0.2414063,-0.1617188,0,0.2988281,0.3652344,-0.234375,-0.159375,0,0.3046875,0.3671875,-0.24375,-0.13125,0,0.296875,0.390625,-0.2578125,-0.1265625,0,0.2851563,0.3945313,-0.2601562,-0.1429688,0,0.2832031,0.3808594,-0.2671875,-0.1265625,0,0.2773438,0.3945313,-0.2671875,-0.1335938,0,0.2773438,0.3886719],[30,29,28,27,28,29,24,28,27,26,24,27,23,24,26,25,24,23,22,21,20,19,20,21,18,20,19,16,18,19,17,18,16,15,17,16,12,15,16,14,15,12,13,14,12,10,13,12,9,10,12,11,10,9,8,7,5,6,5,7,0,5,6,4,5,0,3,4,0,1,3,0,2,1,0],-0.000148668885231018,-0.000148668885231018,0.99985134601593,0.99985134601593,0.205078125,0.18359375,0.783203125,0.654296875,0,0,0,0,[0,0,0,0],[-0.6,-0.6,0.6,0.6],426.666656494141,512,512,512,512,256,256,105.076118469238,94.0761184692383]},{"id":27612,"path":"Assets/Content/Sprites/Ingredients/chickpeas.png","assetBundleId":-1,"data":["chickpeas",6,27610,[0,-0.07265626,0,0.6,0.4570313,0],[-0.234375,-0.1898438,0,0.3046875,0.3417969,-0.2390625,-0.196875,0,0.3007813,0.3359375,-0.234375,-0.1945313,0,0.3046875,0.3378906,-0.2484375,-0.196875,0,0.2929688,0.3359375,-0.2578125,-0.1875,0,0.2851563,0.34375,-0.2578125,-0.1945313,0,0.2851563,0.3378906,-0.234375,-0.1875,0,0.3046875,0.34375,-0.234375,-0.1898438,0,0.3046875,0.3417969,-0.2367188,-0.1828125,0,0.3027344,0.3476563,-0.2578125,-0.1828125,0,0.2851563,0.3476563,-0.1523438,-0.4992188,0,0.3730469,0.08398438,-0.1546875,-0.5296875,0,0.3710938,0.05859375,-0.1523438,-0.525,0,0.3730469,0.06249997,-0.196875,-0.4640625,0,0.3359375,0.1132813,-0.2835937,-0.5296875,0,0.2636719,0.05859375,-0.3117188,-0.4429688,0,0.2402344,0.1308594,-0.4382813,-0.5109375,0,0.1347656,0.07421875,-0.440625,-0.4429688,0,0.1328125,0.1308594,-0.440625,-0.496875,0,0.1328125,0.0859375,0.03046875,-0.4898438,0,0.5253906,0.09179688,-0.0421875,-0.5226563,0,0.4648438,0.06445313,0.03046875,-0.5015625,0,0.5253906,0.08203122,-0.1007813,-0.5226563,0,0.4160156,0.06445313,-0.1125,-0.4898438,0,0.40625,0.09179688,-0.1125,-0.5085937,0,0.40625,0.0761719,0.5882813,-0.3257813,0,0.9902344,0.2285156,0.6,-0.403125,0,1,0.1640625,0.6,-0.3257813,0,1,0.2285156,0.5273438,-0.4453125,0,0.9394531,0.1289063,0.4546875,-0.4453125,0,0.8789063,0.1289063,0.4476563,-0.3773438,0,0.8730469,0.1855469,0.403125,-0.4195313,0,0.8359375,0.1503906,0.403125,-0.4335938,0,0.8359375,0.1386719,-0.1546875,-0.39375,0,0.3710938,0.171875,-0.1570313,-0.4078125,0,0.3691406,0.1601563,-0.1546875,-0.4054688,0,0.3710938,0.1621094,-0.1664063,-0.4078125,0,0.3613281,0.1601563,-0.1710937,-0.39375,0,0.3574219,0.171875,-0.1710937,-0.4054688,0,0.3574219,0.1621094,-0.1382813,-0.3773438,0,0.3847656,0.1855469,-0.1359375,-0.3914063,0,0.3867188,0.1738281,-0.1359375,-0.384375,0,0.3867188,0.1796875,-0.1429688,-0.39375,0,0.3808594,0.171875,-0.15,-0.3773438,0,0.375,0.1855469,-0.1570313,-0.3796875,0,0.3691406,0.1835938,-0.1570313,-0.3867188,0,0.3691406,0.1777344,-0.1148438,-0.3773438,0,0.4042969,0.1855469,-0.1171875,-0.3914063,0,0.4023438,0.1738281,-0.1148438,-0.3890625,0,0.4042969,0.1757813,-0.1265625,-0.3914063,0,0.3945313,0.1738281,-0.13125,-0.3773438,0,0.390625,0.1855469,-0.13125,-0.3890625,0,0.390625,0.1757813,-0.5109375,-0.3304687,0,0.07421875,0.2246094,-0.515625,-0.3421875,0,0.0703125,0.2148438,-0.5085937,-0.3375,0,0.0761719,0.21875,-0.5203125,-0.3257813,0,0.06640628,0.2285156,-0.5226563,-0.3398438,0,0.06445313,0.2167969,-0.5273438,-0.3257813,0,0.06054688,0.2285156,-0.5296875,-0.3328125,0,0.05859375,0.2226563,-0.09375,-0.2273438,0,0.421875,0.3105469,-0.009375,-0.24375,0,0.4921875,0.296875,-0.009375,-0.2273438,0,0.4921875,0.3105469,-0.09609375,-0.2296875,0,0.4199219,0.3085938,-0.09609375,-0.24375,0,0.4199219,0.296875,-0.121875,-0.2273438,0,0.3984375,0.3105469,-0.1171875,-0.2414063,0,0.4023438,0.2988281,-0.1171875,-0.2320313,0,0.4023438,0.3066406,-0.1359375,-0.225,0,0.3867188,0.3125,-0.1617188,-0.2179688,0,0.3652344,0.3183594,-0.2226563,-0.2085938,0,0.3144531,0.3261719,-0.2765625,-0.1898438,0,0.2695313,0.3417969,-0.271875,-0.1898438,0,0.2734375,0.3417969,-0.4078125,-0.2414063,0,0.1601563,0.2988281,0.1359375,-0.2320313,0,0.6132813,0.3066406,0.1359375,-0.2367188,0,0.6132813,0.3027344,0.1359375,-0.2320313,0,0.6132813,0.3066406,0.13125,-0.2390625,0,0.609375,0.3007813,0.121875,-0.2390625,0,0.6015625,0.3007813,0.13125,-0.2226563,0,0.609375,0.3144531,0.1359375,-0.2296875,0,0.6132813,0.3085938,0.121875,-0.2226563,0,0.6015625,0.3144531,0.1171875,-0.2390625,0,0.5976563,0.3007813,0.1148438,-0.2273438,0,0.5957031,0.3105469,0.1148438,-0.2320313,0,0.5957031,0.3066406,0.1359375,-0.225,0,0.6132813,0.3125,0.1664063,-0.2132813,0,0.6386719,0.3222656,0.1476562,-0.2203125,0,0.6230469,0.3164063,-0.009375,-0.1945313,0,0.4921875,0.3378906,-0.0140625,-0.2085938,0,0.4882813,0.3261719,-0.009375,-0.20625,0,0.4921875,0.328125,-0.0703125,-0.1945313,0,0.4414063,0.3378906,-0.0703125,-0.2085938,0,0.4414063,0.3261719,-0.075,-0.196875,0,0.4375,0.3359375,-0.075,-0.2039063,0,0.4375,0.3300781,-0.1359375,0.3398438,0,0.3867188,0.7832031,-0.1265625,-0.1992188,0,0.3945313,0.3339844,-0.1289063,0.3421875,0,0.3925781,0.7851563,-0.1359375,-0.1992188,0,0.3867188,0.3339844,-0.1242188,-0.20625,0,0.3964844,0.328125,-0.140625,-0.2039063,0,0.3828125,0.3300781,-0.1195313,-0.20625,0,0.4003906,0.328125,-0.1242188,-0.20625,0,0.3964844,0.328125,-0.1007813,-0.1945313,0,0.4160156,0.3378906,-0.103125,-0.20625,0,0.4140625,0.328125,-0.1007813,-0.2015625,0,0.4160156,0.3320313,-0.1054688,-0.1921875,0,0.4121094,0.3398438,-0.1195313,-0.1921875,0,0.4003906,0.3398438,0.0140625,0.2601562,0,0.5117188,0.7167969,0.02109375,0.2507813,0,0.5175781,0.7089844,0.02109375,0.2578125,0,0.5175781,0.7148438,0.0140625,0.2484375,0,0.5117188,0.7070313,0.009375,0.2554688,0,0.5078125,0.7128906,-0.1171875,0.3234375,0,0.4023438,0.7695313,-0.1125,0.3117188,0,0.40625,0.7597656,0.065625,0.2835937,0,0.5546875,0.7363281,0.05859375,0.2601562,0,0.5488281,0.7167969,0.065625,0.28125,0,0.5546875,0.734375,0.05390625,-0.1921875,0,0.5449219,0.3398438,0.05859375,0.2296875,0,0.5488281,0.6914063,0.04921875,-0.196875,0,0.5410156,0.3359375,0.04453125,-0.225,0,0.5371094,0.3125,0.04453125,-0.2273438,0,0.5371094,0.3105469,0.0421875,-0.1945313,0,0.5351563,0.3378906,0.0375,-0.1921875,0,0.53125,0.3398438,0.07265625,0.290625,0,0.5605469,0.7421875,-0.028125,0.3492188,0,0.4765625,0.7910156,-0.121875,0.3445313,0,0.3984375,0.7871094,-0.1242188,0.3492188,0,0.3964844,0.7910156,0.0703125,0.2765625,0,0.5585938,0.7304688,0.0703125,0.2765625,0,0.5585938,0.7304688,0.07734375,0.2859375,0,0.5644531,0.7382813,0.0703125,0.2226563,0,0.5585938,0.6855469,0.07265625,0.225,0,0.5605469,0.6875,0.06796875,0.2132813,0,0.5566406,0.6777344,0.06328125,-0.1898438,0,0.5527344,0.3417969,0.07265625,0.2765625,0,0.5605469,0.7304688,0.08203125,0.2835937,0,0.5683594,0.7363281,0.0796875,0.2953125,0,0.5664063,0.7460938,0.08203125,0.2929688,0,0.5683594,0.7441406,0.07734375,0.2953125,0,0.5644531,0.7460938,0.075,0.225,0,0.5625,0.6875,0.08203125,0.215625,0,0.5683594,0.6796875,0.084375,0.2226563,0,0.5703125,0.6855469,0.075,0.2085938,0,0.5625,0.6738281,0.07265625,0.2085938,0,0.5605469,0.6738281,0.0421875,-0.2015625,0,0.5351563,0.3320313,0.0375,-0.20625,0,0.53125,0.328125,0.01875,-0.20625,0,0.515625,0.328125,0.0140625,-0.2039063,0,0.5117188,0.3300781,0.0140625,-0.1921875,0,0.5117188,0.3398438,0.075,-0.1992188,0,0.5625,0.3339844,0.07265625,-0.1921875,0,0.5605469,0.3398438,0.06328125,-0.20625,0,0.5527344,0.328125,0.0515625,-0.2039063,0,0.5429688,0.3300781,-0.1617188,-0.196875,0,0.3652344,0.3359375,-0.1546875,-0.196875,0,0.3710938,0.3359375,-0.1570313,0.2742188,0,0.3691406,0.7285156,-0.1523438,-0.2015625,0,0.3730469,0.3320313,-0.1640625,-0.1992188,0,0.3632813,0.3339844,-0.1476562,0.3257813,0,0.3769531,0.7714844,-0.1523438,0.309375,0,0.3730469,0.7578125,-0.1476562,0.3117188,0,0.3769531,0.7597656,-0.1546875,0.3351563,0,0.3710938,0.7792969,-0.1640625,0.309375,0,0.3632813,0.7578125,-0.1757813,0.31875,0,0.3535156,0.765625,-0.1570313,0.2929688,0,0.3691406,0.7441406,-0.1523438,0.2882813,0,0.3730469,0.7402344,-0.1757813,0.2929688,0,0.3535156,0.7441406,-0.178125,0.290625,0,0.3515625,0.7421875,-0.1828125,-0.1921875,0,0.3476563,0.3398438,-0.178125,0.2789063,0,0.3515625,0.7324219,-0.1875,-0.1875,0,0.34375,0.34375,-0.1921875,-0.1875,0,0.3398438,0.34375,-0.196875,-0.1921875,0,0.3359375,0.3398438,-0.2015625,0.3,0,0.3320313,0.75,-0.196875,-0.196875,0,0.3359375,0.3359375,-0.2015625,0.271875,0,0.3320313,0.7265625,-0.2015625,-0.1898438,0,0.3320313,0.3417969,-0.2015625,-0.1945313,0,0.3320313,0.3378906,-0.2015625,-0.1945313,0,0.3320313,0.3378906,-0.1476562,0.3398438,0,0.3769531,0.7832031,-0.1523438,-0.2039063,0,0.3730469,0.3300781,-0.140625,-0.2039063,0,0.3828125,0.3300781,-0.1382813,-0.1921875,0,0.3847656,0.3398438,-0.15,-0.1921875,0,0.375,0.3398438,-0.1523438,0.2765625,0,0.3730469,0.7304688,0.084375,0.2859375,0,0.5703125,0.7382813,0.084375,0.290625,0,0.5703125,0.7421875,0.07734375,0.2296875,0,0.5644531,0.6914063,0.084375,0.225,0,0.5703125,0.6875,0.1289063,0.35625,0,0.6074219,0.796875,0.09375,0.2179688,0,0.578125,0.6816406,0.09375,-0.1898438,0,0.578125,0.3417969,0.09375,0.2179688,0,0.578125,0.6816406,0.075,-0.1898438,0,0.5625,0.3417969,0.075,-0.2039063,0,0.5625,0.3300781,0.09375,-0.2039063,0,0.578125,0.3300781,0.1101563,0.2132813,0,0.5917969,0.6777344,0.1007813,0.2109375,0,0.5839844,0.6757813,0.1078125,0.2109375,0,0.5898438,0.6757813,0.1078125,0.2273438,0,0.5898438,0.6894531,0.1125,0.215625,0,0.59375,0.6796875,0.0984375,0.2273438,0,0.5820313,0.6894531,0.09375,0.2226563,0,0.578125,0.6855469,0.1125,-0.2367188,0,0.59375,0.3027344,0.1101563,-0.2414063,0,0.5917969,0.2988281,0.1125,-0.2390625,0,0.59375,0.3007813,0.1007813,-0.24375,0,0.5839844,0.296875,0.0421875,-0.234375,0,0.5351563,0.3046875,0.0421875,-0.24375,0,0.5351563,0.296875,0.1125,-0.225,0,0.59375,0.3125,0.1171875,-0.2390625,0,0.5976563,0.3007813,0.2296875,0.159375,0,0.6914063,0.6328125,0.2320313,0.1476562,0,0.6933594,0.6230469,0.2320313,0.1546875,0,0.6933594,0.6289063,0.2203125,0.159375,0,0.6835938,0.6328125,0.1992188,0.1523438,0,0.6660156,0.6269531,0.1921875,0.1289063,0,0.6601563,0.6074219,0.1804688,0.1265625,0,0.6503906,0.6054688,0.1757813,0.1335938,0,0.6464844,0.6113281,0.1617188,-0.1828125,0,0.6347656,0.3476563,0.16875,-0.1921875,0,0.640625,0.3398438,0.16875,-0.1851563,0,0.640625,0.3457031,0.1617188,-0.1945313,0,0.6347656,0.3378906,0.1570313,-0.1875,0,0.6308594,0.34375,0.140625,-0.1851563,0,0.6171875,0.3457031,0.1476562,-0.1945313,0,0.6230469,0.3378906,0.1476562,-0.1875,0,0.6230469,0.34375,0.140625,-0.196875,0,0.6171875,0.3359375,0.1359375,-0.1898438,0,0.6132813,0.3417969,0.1335938,-0.1851563,0,0.6113281,0.3457031,0.1359375,-0.1945313,0,0.6132813,0.3378906,0.1335938,-0.2015625,0,0.6113281,0.3320313,0.103125,-0.1851563,0,0.5859375,0.3457031,0.1007813,-0.1875,0,0.5839844,0.34375,0.1007813,-0.2015625,0,0.5839844,0.3320313,-0.20625,-0.1851563,0,0.328125,0.3457031,-0.2085938,-0.1851563,0,0.3261719,0.3457031,-0.215625,-0.1921875,0,0.3203125,0.3398438,-0.215625,-0.1921875,0,0.3203125,0.3398438,-0.215625,0.271875,0,0.3203125,0.7265625,-0.2179688,0.2765625,0,0.3183594,0.7304688,-0.2179688,-0.1921875,0,0.3183594,0.3398438,-0.2179688,-0.1921875,0,0.3183594,0.3398438,-0.2179688,0.2882813,0,0.3183594,0.7402344,-0.2039063,0.3117188,0,0.3300781,0.7597656,-0.2015625,0.309375,0,0.3320313,0.7578125,-0.2179688,0.3117188,0,0.3183594,0.7597656,-0.1828125,-0.196875,0,0.3476563,0.3359375,-0.1921875,-0.2015625,0,0.3398438,0.3320313,-0.1875,-0.2015625,0,0.34375,0.3320313,-0.196875,-0.196875,0,0.3359375,0.3359375,-0.1875,0.3609375,0,0.34375,0.8007813,-0.1898438,0.3351563,0,0.3417969,0.7792969,-0.1875,0.346875,0,0.34375,0.7890625,-0.1921875,0.3632813,0,0.3398438,0.8027344,-0.196875,0.3679688,0,0.3359375,0.8066406,-0.2039063,0.3351563,0,0.3300781,0.7792969,-0.20625,0.3632813,0,0.328125,0.8027344,-0.2109375,0.3421875,0,0.3242188,0.7851563,-0.1921875,0.3679688,0,0.3398438,0.8066406,-0.1875,0.3679688,0,0.34375,0.8066406,-0.1640625,-0.1898438,0,0.3632813,0.3417969,-0.1710937,0.2742188,0,0.3574219,0.7285156,-0.1710937,-0.1898438,0,0.3574219,0.3417969,-0.1757813,-0.1945313,0,0.3535156,0.3378906,-0.1757813,-0.1992188,0,0.3535156,0.3339844,-0.1828125,-0.196875,0,0.3476563,0.3359375,-0.159375,0.3421875,0,0.3671875,0.7851563,-0.1617188,0.3445313,0,0.3652344,0.7871094,-0.1640625,0.3445313,0,0.3632813,0.7871094,-0.1359375,0.3773438,0,0.3867188,0.8144531,-0.1570313,0.3398438,0,0.3691406,0.7832031,-0.159375,0.384375,0,0.3671875,0.8203125,-0.1898438,0.384375,0,0.3417969,0.8203125,-0.1921875,0.3796875,0,0.3398438,0.8164063,-0.1804688,0.3445313,0,0.3496094,0.7871094,-0.1875,0.3421875,0,0.34375,0.7851563,-0.1875,0.3304687,0,0.34375,0.7753906,-0.2109375,-0.1992188,0,0.3242188,0.3339844,-0.20625,-0.1992188,0,0.328125,0.3339844,-0.215625,-0.1945313,0,0.3203125,0.3378906,-0.234375,-0.1898438,0,0.3046875,0.3417969,-0.2296875,-0.1851563,0,0.3085938,0.3457031,-0.2320313,-0.196875,0,0.3066406,0.3359375,-0.2226563,-0.196875,0,0.3144531,0.3359375,-0.2203125,-0.1851563,0,0.3164063,0.3457031,-0.2625,-0.1921875,0,0.28125,0.3398438,-0.2648438,-0.1921875,0,0.2792969,0.3398438,-0.525,0.0609375,0,0.06249997,0.5507813,-0.525,-0.075,0,0.06249997,0.4375,0.1875,0.2226563,0,0.65625,0.6855469,0.1875,0.2109375,0,0.65625,0.6757813,0.1710937,0.2484375,0,0.6425781,0.7070313,0.1710937,0.2554688,0,0.6425781,0.7128906,0.1640625,0.2460938,0,0.6367188,0.7050781,0.159375,0.2507813,0,0.6328125,0.7089844,0.2484375,0.1664063,0,0.7070313,0.6386719,0.2460938,0.2859375,0,0.7050781,0.7382813,0.2671875,0.1757813,0,0.7226563,0.6464844,0.2671875,0.2179688,0,0.7226563,0.6816406,0.2085938,0.3398438,0,0.6738281,0.7832031,0.20625,0.2226563,0,0.671875,0.6855469,0.20625,0.2132813,0,0.671875,0.6777344,0.20625,0.2109375,0,0.671875,0.6757813,0.4382813,-0.0609375,0,0.8652344,0.4492188,0.2671875,-0.1804688,0,0.7226563,0.3496094,0.2765625,-0.178125,0,0.7304688,0.3515625,0.2578125,-0.1804688,0,0.7148438,0.3496094,0.2179688,-0.1921875,0,0.6816406,0.3398438,0.2554688,-0.1828125,0,0.7128906,0.3476563,0.2085938,-0.1898438,0,0.6738281,0.3417969,0.4382813,-0.00234375,0,0.8652344,0.4980469,0.4335938,-0.01171875,0,0.8613281,0.4902344,0.4382813,-0.009375,0,0.8652344,0.4921875,0.4289063,-0.01171875,0,0.8574219,0.4902344,0.3960938,0.0984375,0,0.8300781,0.5820313,0.3421875,0.03046875,0,0.7851563,0.5253906,0.3046875,0.03984375,0,0.7539063,0.5332031,0.1898438,-0.1898438,0,0.6582031,0.3417969,0.2015625,-0.1875,0,0.6679688,0.34375,0.1945313,-0.1851563,0,0.6621094,0.3457031,0.178125,-0.1828125,0,0.6484375,0.3476563,0.1804688,-0.1898438,0,0.6503906,0.3417969,0.1921875,0.20625,0,0.6601563,0.671875,0.2039063,0.20625,0,0.6699219,0.671875,0.1921875,-0.178125,0,0.6601563,0.3515625,0.1828125,-0.178125,0,0.6523438,0.3515625,0.6,-0.04453125,0,1,0.4628906,0.5882813,-0.0703125,0,0.9902344,0.4414063,0.6,-0.0703125,0,1,0.4414063,0.5132813,0.0046875,0,0.9277344,0.5039063,0.4828125,0.0140625,0,0.9023438,0.5117188,0.4546875,0.0140625,0,0.8789063,0.5117188,0.4476563,0.01171875,0,0.8730469,0.5097656,0.4476563,-0.00234375,0,0.8730469,0.4980469,0.4453125,-0.01875,0,0.8710938,0.484375,0.4523438,-0.028125,0,0.8769531,0.4765625,0.4523438,-0.02109375,0,0.8769531,0.4824219,0.4453125,-0.03046875,0,0.8710938,0.4746094,0.440625,-0.0234375,0,0.8671875,0.4804688,0.4242188,-0.05390625,0,0.8535156,0.4550781,0.4382813,-0.05390625,0,0.8652344,0.4550781,0.2085938,-0.1640625,0,0.6738281,0.3632813,0.4382813,-0.03515625,0,0.8652344,0.4707031,0.3890625,0,0,0.8242188,0.5,0.3609375,0.02109375,0,0.8007813,0.5175781,0.2671875,0.1664063,0,0.7226563,0.6386719,0.4546875,-0.1078125,0,0.8789063,0.4101563,0.4546875,-0.05390625,0,0.8789063,0.4550781,0.225,-0.2367188,0,0.6875,0.3027344,0.1382813,-0.2367188,0,0.6152344,0.3027344,0.4453125,-0.01171875,0,0.8710938,0.4902344,0.4382813,-0.02109375,0,0.8652344,0.4824219,0.4335938,-0.0140625,0,0.8613281,0.4882813,-0.5953125,-0.00703125,0,0.00390622,0.4941406,-0.5882813,-0.01640625,0,0.009765625,0.4863281,-0.5882813,-0.009375,0,0.009765625,0.4921875,-0.5953125,-0.01875,0,0.00390622,0.484375,-0.6,-0.01171875,0,0,0.4902344,-0.5554687,0.009375,0,0.0371094,0.5078125,-0.5625,-0.01640625,0,0.03125,0.4863281,-0.5554687,-0.00234375,0,0.0371094,0.4980469,-0.571875,0.009375,0,0.02343747,0.5078125,-0.5789062,-0.01640625,0,0.01757815,0.4863281,-0.5835938,-0.00234375,0,0.01367185,0.4980469,-0.5835938,-0.0140625,0,0.01367185,0.4882813,0.2015625,0.1992188,0,0.6679688,0.6660156,0.2039063,0.1921875,0,0.6699219,0.6601563,0.1945313,0.1992188,0,0.6621094,0.6660156,0.1898438,0.1945313,0,0.6582031,0.6621094,0.2039063,0.225,0,0.6699219,0.6875,0.1921875,0.225,0,0.6601563,0.6875,0.1875,0.2226563,0,0.65625,0.6855469,0.1945313,0.35625,0,0.6621094,0.796875,0.1664063,0.2601562,0,0.6386719,0.7167969,0.159375,0.2578125,0,0.6328125,0.7148438,0.1992188,0.1875,0,0.6660156,0.65625,0.1921875,0.1875,0,0.6601563,0.65625,-0.1710937,-0.2039063,0,0.3574219,0.3300781,-0.16875,-0.2039063,0,0.359375,0.3300781,-0.1757813,-0.1992188,0,0.3535156,0.3339844],[255,256,260,381,266,379,158,379,266,380,379,158,296,376,295,375,295,376,293,295,375,294,293,375,370,369,378,377,378,369,367,377,369,368,377,367,197,201,297,378,297,201,370,378,201,292,370,201,377,297,378,368,297,377,325,297,368,304,297,325,299,297,304,347,297,299,374,376,190,296,190,376,375,376,374,294,375,374,373,294,374,291,294,373,372,373,374,371,372,374,301,371,374,302,371,301,291,373,304,372,304,373,371,304,372,302,304,371,303,304,302,292,324,370,369,370,324,325,369,324,367,369,325,368,367,325,366,365,364,363,364,365,361,364,363,360,361,363,362,361,360,359,355,358,356,358,355,357,356,355,354,314,353,336,353,314,352,336,314,75,73,351,85,351,73,350,351,85,306,350,85,307,350,306,348,350,307,305,348,307,342,348,305,349,348,342,219,218,322,327,322,218,217,327,218,326,327,217,321,326,217,213,321,217,320,321,213,343,320,213,318,343,213,341,343,318,214,318,213,297,318,214,347,318,297,299,318,347,346,341,318,345,341,346,344,341,345,342,341,344,320,343,311,341,311,343,305,311,341,342,305,341,340,336,339,337,339,336,338,337,336,335,334,329,333,329,334,332,329,333,331,329,332,328,329,331,330,329,328,322,327,323,319,323,327,326,319,327,321,319,326,292,291,324,304,324,291,325,324,304,119,153,120,210,120,153,152,210,153,195,210,152,196,210,195,192,210,196,235,210,192,193,235,192,232,210,235,82,210,232,83,210,82,80,82,232,78,80,232,79,78,232,231,79,232,84,79,231,86,84,231,229,86,231,228,86,229,226,86,228,85,86,226,227,85,226,224,85,227,223,85,224,221,85,223,311,85,221,319,311,221,323,319,221,222,323,221,322,323,222,219,322,222,320,311,319,321,320,319,299,316,318,317,318,316,315,317,316,312,315,316,313,315,312,314,313,312,311,305,309,308,309,305,310,309,308,306,308,305,307,306,305,304,303,299,302,299,303,301,299,302,298,299,301,300,299,298,193,198,235,234,235,198,233,234,198,199,233,198,230,233,199,197,230,199,219,230,197,216,219,197,215,216,197,297,215,197,229,230,219,225,229,219,227,225,219,224,227,219,220,224,219,222,220,219,212,215,297,214,212,297,136,186,291,187,291,186,296,291,187,190,296,187,295,291,296,293,291,295,294,291,293,118,115,132,129,132,115,135,132,129,136,132,135,188,132,136,189,188,136,202,189,136,200,202,136,291,200,136,203,189,202,191,189,203,201,200,291,292,201,291,290,289,72,244,72,289,70,72,244,71,70,244,288,71,244,287,288,244,9,287,244,4,287,9,8,9,244,6,8,244,283,6,244,286,283,244,242,286,244,241,242,244,7,283,282,243,282,283,286,243,283,242,243,286,282,243,284,285,284,243,7,6,283,0,7,282,281,239,279,179,279,239,280,279,179,170,168,263,167,263,168,165,263,167,156,263,165,185,156,165,166,185,165,278,277,164,276,164,277,270,164,276,162,164,270,268,162,270,260,275,261,274,261,275,273,261,274,270,261,273,269,270,273,268,269,273,272,268,273,271,272,273,180,272,271,94,180,271,266,265,158,264,158,265,262,158,264,154,158,262,175,173,248,172,248,173,171,248,172,169,248,171,267,248,169,252,261,270,270,269,268,248,267,266,169,266,267,170,266,169,265,266,170,263,265,170,264,265,263,262,264,263,156,262,263,154,262,156,255,260,252,261,252,260,259,258,257,256,257,258,253,257,256,255,253,256,252,253,255,254,253,252,251,175,249,248,249,175,250,249,248,244,247,174,245,174,247,246,174,245,241,244,240,174,240,244,176,240,174,243,242,239,241,239,242,240,239,241,238,239,240,237,238,240,176,237,240,236,237,176,177,236,176,239,238,179,237,179,238,236,179,237,177,179,236,178,179,177,235,234,232,233,232,234,230,232,233,231,232,230,229,231,230,229,225,228,226,228,225,227,226,225,224,220,223,221,223,220,222,221,220,219,216,218,217,218,216,213,217,216,215,213,216,212,213,215,214,213,212,211,81,77,210,83,204,81,204,83,121,120,204,210,204,120,209,208,207,121,207,208,204,207,121,205,207,204,206,205,204,191,203,197,202,197,203,200,197,202,201,197,200,193,191,198,197,198,191,199,198,197,195,150,196,194,196,150,192,196,194,195,152,150,134,133,151,144,151,133,150,151,144,143,150,144,194,150,143,192,194,143,141,192,143,142,192,141,191,192,142,193,192,191,142,189,191,187,138,190,132,188,140,142,140,188,189,142,188,130,138,136,186,136,138,187,186,138,156,185,155,184,155,185,166,184,185,160,184,166,161,184,160,183,184,161,159,183,161,180,183,159,94,183,180,97,183,94,155,184,157,99,157,184,183,99,184,97,99,183,157,99,181,182,181,99,159,162,180,179,178,175,177,175,178,176,175,177,174,175,176,173,175,174,168,173,174,164,168,174,172,173,168,171,172,168,169,171,168,170,169,168,167,168,164,165,167,164,163,165,164,160,165,163,166,165,160,164,162,163,160,163,162,159,160,162,161,160,159,158,154,157,155,157,154,156,155,154,119,117,153,152,153,117,134,152,117,150,152,134,151,150,134,148,149,147,123,147,149,146,147,123,145,146,123,122,145,123,111,110,148,149,148,110,123,149,110,108,123,110,109,123,108,100,103,121,91,121,103,104,91,103,102,91,104,93,91,102,88,121,91,89,121,88,87,121,89,148,121,87,111,148,87,147,121,148,146,121,147,145,121,146,122,121,145,133,131,144,132,144,131,143,144,132,140,143,132,141,143,140,142,141,140,124,139,130,137,130,139,138,130,137,129,130,135,136,135,130,117,118,134,133,134,118,131,133,118,132,131,118,116,114,128,124,128,114,129,128,124,130,129,124,116,128,115,129,115,128,127,125,126,113,126,125,105,113,125,102,105,125,92,102,125,93,102,92,90,92,125,87,90,125,111,87,125,107,111,125,124,107,125,109,107,124,114,109,124,115,109,114,123,109,115,122,123,115,121,122,115,120,121,115,119,120,115,117,119,115,118,117,115,116,115,114,96,112,95,106,95,112,105,106,112,113,105,112,111,107,110,108,110,107,109,108,107,95,106,98,100,98,106,103,100,106,105,103,106,102,103,105,104,103,102,101,98,100,99,97,98,95,98,97,94,95,97,96,95,94,93,92,91,90,91,92,88,91,90,87,88,90,89,88,87,73,79,85,84,85,79,86,85,84,83,82,81,80,81,82,77,81,80,73,77,80,78,73,80,79,73,78,77,73,76,74,76,73,75,74,73,70,69,72,65,72,69,71,69,70,68,65,69,67,65,68,64,65,67,66,65,64,63,62,60,59,60,62,61,60,59,58,57,56,55,56,57,53,56,55,52,53,55,54,53,52,51,50,49,46,49,50,47,49,46,48,47,46,45,44,33,43,33,44,42,33,43,39,42,43,40,42,39,41,40,39,38,37,36,33,36,37,34,36,33,35,34,33,32,31,29,30,29,31,25,29,30,28,29,25,26,28,25,27,26,25,24,23,22,19,22,23,20,22,19,21,20,19,18,17,16,15,16,17,14,16,15,13,14,15,11,14,13,10,11,13,12,11,10,4,9,0,8,0,9,6,0,8,7,0,6,5,4,3,0,3,4,1,3,0,2,1,0],-0.0000252198660746217,-0.000148672610521317,0.99997478723526,0.99985134601593,0,0.05859375,1,0.8203125,0,0,0,0,[0,0,0,0],[-0.6,-0.6,0.6,0.6],426.666656494141,512,512,512,512,256,256,0.0129125714302063,30.0761203765869]},{"id":27766,"path":"Assets/Content/Sprites/Ingredients/oat.png","assetBundleId":-1,"data":["oat",6,27764,[0.01640625,0.03632812,0,0.3867188,0.4394531,0],[-0.2882813,0.4476563,0,0.2597656,0.8730469,-0.3164063,0.4382813,0,0.2363281,0.8652344,-0.2882813,0.440625,0,0.2597656,0.8671875,0.2484375,0.3398438,0,0.7070313,0.7832031,0.2320313,0.3914063,0,0.6933594,0.8261719,0.2460938,0.215625,0,0.7050781,0.6796875,0.2625,-0.00234375,0,0.71875,0.4980469,0.2601562,0.0328125,0,0.7167969,0.5273438,0.2625,-0.03984375,0,0.71875,0.4667969,0.403125,-0.09609375,0,0.8359375,0.4199219,0.3820313,-0.16875,0,0.8183594,0.359375,0.403125,-0.1382813,0,0.8359375,0.3847656,0.3796875,-0.07265625,0,0.8164063,0.4394531,0.3726563,-0.2414063,0,0.8105469,0.2988281,0.3328125,-0.3070312,0,0.7773438,0.2441406,0.3140625,-0.04921875,0,0.7617188,0.4589844,0.271875,-0.35625,0,0.7265625,0.203125,0.2578125,0.05859375,0,0.7148438,0.5488281,0.2554688,0.1007813,0,0.7128906,0.5839844,0.253125,0.1265625,0,0.7109375,0.6054688,0.2507813,0.1570313,0,0.7089844,0.6308594,0.2484375,0.1851563,0,0.7070313,0.6542969,0.215625,0.4757813,0,0.6796875,0.8964844,0.2296875,0.4546875,0,0.6914063,0.8789063,0.2085938,-0.3984375,0,0.6738281,0.1679688,0.1757813,-0.403125,0,0.6464844,0.1640625,0.16875,0.4757813,0,0.640625,0.8964844,0.06796875,-0.403125,0,0.5566406,0.1640625,0.01171875,-0.39375,0,0.5097656,0.171875,-0.05625,-0.3632813,0,0.453125,0.1972656,-0.103125,0.4476563,0,0.4140625,0.8730469,-0.1453125,-0.3773438,0,0.3789063,0.1855469,-0.2742188,-0.3890625,0,0.2714844,0.1757813,-0.31875,0.2953125,0,0.234375,0.7460938,-0.3492188,-0.3164063,0,0.2089844,0.2363281,-0.3539062,0,0,0.2050781,0.5,-0.3679688,-0.2929688,0,0.1933594,0.2558594,-0.3703125,-0.2179688,0,0.1914063,0.3183594,-0.3703125,-0.2625,0,0.1914063,0.28125],[38,37,36,35,36,37,34,36,35,33,34,35,32,34,33,1,32,33,2,32,1,30,32,2,31,32,30,29,31,30,26,29,30,28,29,26,27,28,26,25,27,26,22,25,26,24,25,22,16,24,22,4,16,22,23,4,22,5,16,4,21,16,5,20,16,21,19,16,20,18,16,19,17,16,18,7,16,17,8,16,7,15,16,8,14,16,15,12,14,15,13,14,12,10,13,12,9,10,12,11,10,9,8,7,6,5,4,3,2,1,0],-0.000148668885231018,-0.000148668885231018,0.99985134601593,0.99985134601593,0.19140625,0.1640625,0.8359375,0.896484375,0,0,0,0,[0,0,0,0],[-0.6,-0.6,0.6,0.6],426.666656494141,512,512,512,512,256,256,98.0761184692383,84.0761184692383]},{"id":27808,"path":"Assets/Content/Sprites/EXAMPLE.png","assetBundleId":-1,"data":["EXAMPLE",6,27806,[0,0,0,5.4,9.6,0],[-5.4,9.6,0,0,1,5.4,-9.6,0,1,-3.178915e-8,5.4,9.6,0,1,1,-5.4,-9.6,0,0,-3.178915e-8],[3,0,1,2,1,0],0,-3.17891455381414e-8,1,0.999999940395355,0,-3.17891455381414e-8,1,0.999999940395355,0,0,0,0,[0,0,0,0],[-5.4,-9.6,5.4,9.6],100,1080,1920,1080,1920,540,960,0,0]},{"id":27842,"path":"Assets/Content/Sprites/Ingredients/parsley.png","assetBundleId":-1,"data":["parsley",6,27840,[0.03281251,-0.005859375,0,0.440625,0.3574219,0],[0.3960938,0.046875,0,0.8300781,0.5390625,0.4734375,-0.1804688,0,0.8945313,0.3496094,0.4734375,-0.0515625,0,0.8945313,0.4570313,0.2578125,0.2390625,0,0.7148438,0.6992188,0.225,-0.1851563,0,0.6875,0.3457031,0.1617188,0.2648438,0,0.6347656,0.7207031,0.075,0.3328125,0,0.5625,0.7773438,0.0234375,-0.2203125,0,0.5195313,0.3164063,0.01640625,0.3515625,0,0.5136719,0.7929688,-0.08203125,-0.3632813,0,0.4316406,0.1972656,-0.1007813,0.3515625,0,0.4160156,0.7929688,-0.1898438,0.3234375,0,0.3417969,0.7695313,-0.2039063,-0.3632813,0,0.3300781,0.1972656,-0.2179688,-0.1453125,0,0.3183594,0.3789063,-0.2367188,-0.1546875,0,0.3027344,0.3710938,-0.2695313,-0.2226563,0,0.2753906,0.3144531,-0.3117188,-0.2414063,0,0.2402344,0.2988281,-0.39375,-0.225,0,0.171875,0.3125,-0.4078125,0.1640625,0,0.1601563,0.6367188,-0.4078125,-0.1992188,0,0.1601563,0.3339844,-0.2296875,-0.1992188,0,0.3085938,0.3339844,-0.2460938,-0.2085938,0,0.2949219,0.3261719,-0.2507813,-0.2765625,0,0.2910156,0.2695313,-0.2320313,-0.1945313,0,0.3066406,0.3378906],[15,14,23,22,21,12,20,12,21,13,12,20,19,18,17,11,17,18,16,17,11,15,16,11,14,15,11,13,14,11,12,13,11,9,12,11,10,9,11,8,9,10,7,9,8,6,7,8,4,7,6,5,4,6,3,4,5,1,4,3,0,1,3,2,1,0],-0.0000708699226379395,-0.00000789761543273926,0.999929130077362,0.99999213218689,0.16015625,0.197265625,0.89453125,0.79296875,0,0,0,0,[0,0,0,0],[-0.6,-0.6,0.6,0.6],426.666656494141,512,512,512,512,256,256,82.0362854003906,101.004043579102]},{"id":28048,"path":"Assets/Content/Sprites/Ingredients/masala salt.png","assetBundleId":-1,"data":["masala salt",6,28046,[0.02226563,0.02109374,0,0.3550782,0.4101563,0],[0.225,0.0609375,0,0.6875,0.5507813,0.2109375,0.1453125,0,0.6757813,0.6210938,0.225,0.01171875,0,0.6875,0.5097656,0.3726563,-0.159375,0,0.8105469,0.3671875,0.3773438,-0.2929688,0,0.8144531,0.2558594,0.3773438,-0.1851563,0,0.8144531,0.3457031,0.3375,-0.06796875,0,0.78125,0.4433594,0.2976563,-0.3726563,0,0.7480469,0.1894531,0.234375,-0.3585938,0,0.6953125,0.2011719,0.1757813,-0.3140625,0,0.6464844,0.2382813,0.16875,0.2835937,0,0.640625,0.7363281,0.140625,0.3234375,0,0.6171875,0.7695313,0.07734375,-0.3890625,0,0.5644531,0.1757813,-0.0421875,0.43125,0,0.4648438,0.859375,-0.06796875,0.43125,0,0.4433594,0.859375,-0.1054688,0.4007813,0,0.4121094,0.8339844,-0.2132813,-0.3890625,0,0.3222656,0.1757813,-0.2390625,0.3164063,0,0.3007813,0.7636719,-0.2765625,0.28125,0,0.2695313,0.734375,-0.28125,0.20625,0,0.265625,0.671875,-0.3210938,-0.13125,0,0.2324219,0.390625,-0.3257813,-0.290625,0,0.2285156,0.2578125,-0.3328125,-0.1570313,0,0.2226563,0.3691406,-0.3328125,-0.2742188,0,0.2226563,0.2714844,-0.3328125,0.1078125,0,0.2226563,0.5898438,-0.3328125,-0.02109375,0,0.2226563,0.4824219,0.3539062,0.2671875,0,0.7949219,0.7226563,0.3632813,0.2015625,0,0.8027344,0.6679688,0.3632813,0.2601562,0,0.8027344,0.7167969,0.3234375,0.1921875,0,0.7695313,0.6601563,0.2671875,0.2882813,0,0.7226563,0.7402344,0.2460938,0.1921875,0,0.7050781,0.6601563,0.2039063,0.2882813,0,0.6699219,0.7402344,0.2039063,0.2203125,0,0.6699219,0.6835938],[33,32,31,30,31,32,29,31,30,26,29,30,27,29,26,28,27,26,25,24,20,19,20,24,23,22,21,20,21,22,16,21,20,19,16,20,18,16,19,17,16,18,15,16,17,12,16,15,14,12,15,13,12,14,11,12,13,9,12,11,10,9,11,1,9,10,8,9,1,2,8,1,6,8,2,7,8,6,4,7,6,3,4,6,5,4,3,2,1,0],-0.000148668885231018,-0.000100225210189819,0.99985134601593,0.999899744987488,0.22265625,0.17578125,0.814453125,0.859375,0,0,0,0,[0,0,0,0],[-0.6,-0.6,0.6,0.6],426.666656494141,512,512,512,512,256,256,114.076118469238,90.0513153076172]},{"id":28074,"path":"Assets/Content/Sprites/Ingredients/sugar.png","assetBundleId":-1,"data":["sugar",6,28072,[0.02226563,0.02109374,0,0.3550782,0.4101563,0],[0.225,0.0609375,0,0.6875,0.5507813,0.2109375,0.1453125,0,0.6757813,0.6210938,0.225,0.01171875,0,0.6875,0.5097656,0.3726563,-0.159375,0,0.8105469,0.3671875,0.3773438,-0.2929688,0,0.8144531,0.2558594,0.3773438,-0.1851563,0,0.8144531,0.3457031,0.3375,-0.06796875,0,0.78125,0.4433594,0.2976563,-0.3726563,0,0.7480469,0.1894531,0.234375,-0.3585938,0,0.6953125,0.2011719,0.1757813,-0.3140625,0,0.6464844,0.2382813,0.16875,0.2835937,0,0.640625,0.7363281,0.140625,0.3234375,0,0.6171875,0.7695313,0.07734375,-0.3890625,0,0.5644531,0.1757813,-0.0421875,0.43125,0,0.4648438,0.859375,-0.06796875,0.43125,0,0.4433594,0.859375,-0.1054688,0.4007813,0,0.4121094,0.8339844,-0.2132813,-0.3890625,0,0.3222656,0.1757813,-0.2390625,0.3164063,0,0.3007813,0.7636719,-0.2765625,0.28125,0,0.2695313,0.734375,-0.28125,0.20625,0,0.265625,0.671875,-0.3210938,-0.13125,0,0.2324219,0.390625,-0.3257813,-0.290625,0,0.2285156,0.2578125,-0.3328125,-0.1570313,0,0.2226563,0.3691406,-0.3328125,-0.2742188,0,0.2226563,0.2714844,-0.3328125,0.1078125,0,0.2226563,0.5898438,-0.3328125,-0.02109375,0,0.2226563,0.4824219,0.3539062,0.2671875,0,0.7949219,0.7226563,0.3632813,0.2015625,0,0.8027344,0.6679688,0.3632813,0.2601562,0,0.8027344,0.7167969,0.3234375,0.1921875,0,0.7695313,0.6601563,0.2671875,0.2882813,0,0.7226563,0.7402344,0.2460938,0.1921875,0,0.7050781,0.6601563,0.2039063,0.2882813,0,0.6699219,0.7402344,0.2039063,0.2203125,0,0.6699219,0.6835938],[33,32,31,30,31,32,29,31,30,26,29,30,27,29,26,28,27,26,25,24,20,19,20,24,23,22,21,20,21,22,16,21,20,19,16,20,18,16,19,17,16,18,15,16,17,12,16,15,14,12,15,13,12,14,11,12,13,9,12,11,10,9,11,1,9,10,8,9,1,2,8,1,6,8,2,7,8,6,4,7,6,3,4,6,5,4,3,2,1,0],-0.000148668885231018,-0.000100225210189819,0.99985134601593,0.999899744987488,0.22265625,0.17578125,0.814453125,0.859375,0,0,0,0,[0,0,0,0],[-0.6,-0.6,0.6,0.6],426.666656494141,512,512,512,512,256,256,114.076118469238,90.0513153076172]},{"id":28142,"path":"Assets/Content/Sprites/Tiles/tile_c2_t1.png","assetBundleId":-1,"data":["tile_c2_t1",6,28140,[0,0,0,1.198889,1.198889,0],[-1.198889,1.198889,0,0,1,1.198889,-1.198889,0,1,0,1.198889,1.198889,0,1,1,-1.198889,-1.198889,0,0,0],[3,0,1,2,1,0],0,0,1,1,0,0,1,1,0,0,0,0,[0,0,0,0],[-1.198889,-1.198889,1.198889,1.198889],53.3827629089355,128,128,128,128,64,64,0,0]},{"id":28018,"path":"Assets/Content/Sprites/Ingredients/flour.png","assetBundleId":-1,"data":["flour",6,28016,[0.007031232,0.001171887,0,0.5671875,0.4816406,0],[-0.3820313,-0.4664063,0,0.1816406,0.1113281,-0.3796875,-0.478125,0,0.1835938,0.1015625,-0.3796875,-0.4710938,0,0.1835938,0.1074219,-0.384375,-0.4804688,0,0.1796875,0.09960938,-0.39375,-0.4664063,0,0.171875,0.1113281,-0.39375,-0.4804688,0,0.171875,0.09960938,-0.4007813,-0.46875,0,0.1660156,0.109375,-0.4007813,-0.478125,0,0.1660156,0.1015625,-0.1359375,0.3164063,0,0.3867188,0.7636719,-0.13125,0.3,0,0.390625,0.75,-0.1242188,0.3,0,0.3964844,0.75,-0.1359375,0.3023438,0,0.3867188,0.7519531,-0.121875,0.3375,0,0.3984375,0.78125,-0.1195313,0.3023438,0,0.4003906,0.7519531,-0.1195313,0.3304687,0,0.4003906,0.7753906,-0.121875,0.3,0,0.3984375,0.75,-0.1289063,0.3375,0,0.3925781,0.78125,-0.1359375,0.3328125,0,0.3867188,0.7773438,-0.1148438,0.271875,0,0.4042969,0.7265625,-0.1195313,0.2953125,0,0.4003906,0.7460938,-0.140625,0.24375,0,0.3828125,0.703125,-0.3515625,-0.4171875,0,0.2070313,0.1523438,-0.3445313,-0.4265625,0,0.2128906,0.1445313,-0.3445313,-0.4195313,0,0.2128906,0.1503906,-0.3515625,-0.4289063,0,0.2070313,0.1425781,-0.35625,-0.421875,0,0.203125,0.1484375,-0.1242188,-0.3679688,0,0.3964844,0.1933594,-0.1171875,-0.3773438,0,0.4023438,0.1855469,-0.1171875,-0.3703125,0,0.4023438,0.1914063,-0.1242188,-0.3796875,0,0.3964844,0.1835938,-0.1289063,-0.3726563,0,0.3925781,0.1894531,0.1640625,0.2929688,0,0.6367188,0.7441406,0.159375,0.2976563,0,0.6328125,0.7480469,0.159375,0.2953125,0,0.6328125,0.7460938,0.1757813,0.309375,0,0.6464844,0.7578125,0.1734375,0.2929688,0,0.6445313,0.7441406,0.1757813,0.2976563,0,0.6464844,0.7480469,0.16875,0.3117188,0,0.640625,0.7597656,0.1664063,0.2929688,0,0.6386719,0.7441406,0.1617188,0.3117188,0,0.6347656,0.7597656,0.159375,0.3070312,0,0.6328125,0.7558594,0.1875,0.2648438,0,0.65625,0.7207031,0.1476562,0.3117188,0,0.6230469,0.7597656,0.1476562,0.3117188,0,0.6230469,0.7597656,0.1476562,0.3046875,0,0.6230469,0.7539063,0.1476562,0.2835937,0,0.6230469,0.7363281,0.1875,-0.3585938,0,0.65625,0.2011719,0.1851563,-0.3726563,0,0.6542969,0.1894531,0.1875,-0.365625,0,0.65625,0.1953125,0.1828125,-0.35625,0,0.6523438,0.203125,0.1617188,-0.35625,0,0.6347656,0.203125,0.1570313,-0.3609375,0,0.6308594,0.1992188,0.1570313,-0.3726563,0,0.6308594,0.1894531,0.2039063,-0.3585938,0,0.6699219,0.2011719,0.2015625,-0.3703125,0,0.6679688,0.1914063,0.20625,-0.365625,0,0.671875,0.1953125,0.196875,-0.3585938,0,0.6640625,0.2011719,0.1945313,-0.3703125,0,0.6621094,0.1914063,0.1921875,-0.3632813,0,0.6601563,0.1972656,-0.5015625,-0.2929688,0,0.08203122,0.2558594,-0.50625,-0.3070312,0,0.078125,0.2441406,-0.5015625,-0.3023438,0,0.08203122,0.2480469,-0.5320312,-0.3070312,0,0.05664065,0.2441406,-0.5390625,-0.2765625,0,0.05078125,0.2695313,-0.5578125,-0.2765625,0,0.03515625,0.2695313,-0.5578125,-0.2859375,0,0.03515625,0.2617188,-0.4851563,0.084375,0,0.09570313,0.5703125,-0.4828125,0.07265625,0,0.09765625,0.5605469,-0.4828125,0.08203125,0,0.09765625,0.5683594,-0.5085937,0.084375,0,0.0761719,0.5703125,-0.525,0.08203125,0,0.06249997,0.5683594,-0.5273438,0.05625,0,0.06054688,0.546875,-0.5414063,0.05390625,0,0.04882813,0.5449219,-0.5578125,0.05390625,0,0.03515625,0.5449219,-0.5601563,0.0609375,0,0.0332031,0.5507813,0.4335938,0.103125,0,0.8613281,0.5859375,0.4265625,0.103125,0,0.8554688,0.5859375,0.4335938,0.08203125,0,0.8613281,0.5683594,0.440625,0.103125,0,0.8671875,0.5859375,0.4195313,0.1078125,0,0.8496094,0.5898438,0.403125,0.1078125,0,0.8359375,0.5898438,0.346875,0.2625,0,0.7890625,0.71875,0.3984375,0.103125,0,0.8320313,0.5859375,0.4265625,0.09375,0,0.8554688,0.578125,0.4125,0.09375,0,0.84375,0.578125,0.4007813,0.09609375,0,0.8339844,0.5800781,-0.1617188,0.1921875,0,0.3652344,0.6601563,-0.2976563,0.1125,0,0.2519531,0.59375,-0.2953125,0.1054688,0,0.2539063,0.5878906,-0.3117188,0.1125,0,0.2402344,0.59375,-0.4289063,0.065625,0,0.1425781,0.5546875,-0.3164063,0.1078125,0,0.2363281,0.5898438,-0.09375,0.4335938,0,0.421875,0.8613281,-0.0984375,0.4289063,0,0.4179688,0.8574219,-0.09609375,0.4148438,0,0.4199219,0.8457031,-0.08671875,0.2367188,0,0.4277344,0.6972656,-0.08671875,0.4335938,0,0.4277344,0.8613281,-0.103125,0.3492188,0,0.4140625,0.7910156,-0.0375,0.4429688,0,0.46875,0.8691406,-0.07734375,0.4289063,0,0.4355469,0.8574219,-0.06796875,0.403125,0,0.4433594,0.8359375,-0.0796875,0.4429688,0,0.4335938,0.8691406,-0.1523438,0.1921875,0,0.3730469,0.6601563,-0.1570313,0.3445313,0,0.3691406,0.7871094,-0.1570313,0.1921875,0,0.3691406,0.6601563,-0.1617188,0.1945313,0,0.3652344,0.6621094,-0.1710937,0.3421875,0,0.3574219,0.7851563,-0.1710937,0.2390625,0,0.3574219,0.6992188,-0.3,0.1007813,0,0.25,0.5839844,-0.3140625,0.1007813,0,0.2382813,0.5839844,0.2648438,0.1734375,0,0.7207031,0.6445313,0.2578125,0.1710937,0,0.7148438,0.6425781,0.271875,0.1710937,0,0.7265625,0.6425781,0.253125,0.1664063,0,0.7109375,0.6386719,0.2507813,0.1804688,0,0.7089844,0.6503906,0.253125,0.1546875,0,0.7109375,0.6289063,0.2296875,0.1757813,0,0.6914063,0.6464844,0.2296875,0.1710937,0,0.6914063,0.6425781,0.2320313,0.1828125,0,0.6933594,0.6523438,0.24375,0.1828125,0,0.703125,0.6523438,0.2765625,0.1523438,0,0.7304688,0.6269531,0.2765625,0.1640625,0,0.7304688,0.6367188,0.2671875,0.15,0,0.7226563,0.625,0.2554688,0.15,0,0.7128906,0.625,0.2507813,0.1757813,0,0.7089844,0.6464844,0.2414063,0.1664063,0,0.7011719,0.6386719,0.2367188,0.1664063,0,0.6972656,0.6386719,0.2929688,0.2367188,0,0.7441406,0.6972656,0.2742188,0.2039063,0,0.7285156,0.6699219,0.3046875,0.2367188,0,0.7539063,0.6972656,0.2671875,0.2015625,0,0.7226563,0.6679688,0.2554688,0.2179688,0,0.7128906,0.6816406,0.2460938,0.2085938,0,0.7050781,0.6738281,0.2460938,0.2015625,0,0.7050781,0.6679688,0.3117188,0.24375,0,0.7597656,0.703125,0.3070312,0.2367188,0,0.7558594,0.6972656,0.3070312,0.2132813,0,0.7558594,0.6777344,0.2976563,-0.234375,0,0.7480469,0.3046875,0.140625,0.290625,0,0.6171875,0.7421875,0.1335938,0.2789063,0,0.6113281,0.7324219,0.1335938,0.2648438,0,0.6113281,0.7207031,0.1265625,0.2625,0,0.6054688,0.71875,0.1195313,0.271875,0,0.5996094,0.7265625,-0.07265625,0.4125,0,0.4394531,0.84375,-0.1242188,0.2507813,0,0.3964844,0.7089844,-0.1523438,0.1875,0,0.3730469,0.65625,-0.3046875,-0.234375,0,0.2460938,0.3046875,-0.4289063,-0.1640625,0,0.1425781,0.3632813,0.1429688,0.3140625,0,0.6191406,0.7617188,0.140625,0.3210938,0,0.6171875,0.7675781,0.1382813,0.31875,0,0.6152344,0.765625,0.1382813,0.3140625,0,0.6152344,0.7617188,0.1289063,0.3070312,0,0.6074219,0.7558594,0.1265625,0.31875,0,0.6054688,0.765625,0.1289063,0.2953125,0,0.6074219,0.7460938,0.13125,0.290625,0,0.609375,0.7421875,0.121875,0.3351563,0,0.6015625,0.7792969,0.1195313,0.2835937,0,0.5996094,0.7363281,0.121875,0.3257813,0,0.6015625,0.7714844,0.1265625,0.2859375,0,0.6054688,0.7382813,0.2789063,0.2976563,0,0.7324219,0.7480469,0.2742188,0.28125,0,0.7285156,0.734375,0.2765625,0.2789063,0,0.7304688,0.7324219,0.2671875,0.2882813,0,0.7226563,0.7402344,0.2671875,0.28125,0,0.7226563,0.734375,0.2648438,0.2882813,0,0.7207031,0.7402344,0.2625,0.2789063,0,0.71875,0.7324219,0.2601562,0.2929688,0,0.7167969,0.7441406,0.2625,0.271875,0,0.71875,0.7265625,0.3398438,0.2742188,0,0.7832031,0.7285156,0.346875,0.24375,0,0.7890625,0.703125,0.346875,0.2929688,0,0.7890625,0.7441406,0.3210938,0.3679688,0,0.7675781,0.8066406,0.3164063,0.3773438,0,0.7636719,0.8144531,0.2789063,0.3,0,0.7324219,0.75,0.2765625,0.4523438,0,0.7304688,0.8769531,0.271875,0.309375,0,0.7265625,0.7578125,0.2671875,0.309375,0,0.7226563,0.7578125,0.2601562,0.3070312,0,0.7167969,0.7558594,0.2414063,0.3421875,0,0.7011719,0.7851563,0.2367188,0.346875,0,0.6972656,0.7890625,0.2296875,0.3445313,0,0.6914063,0.7871094,0.2273438,0.4523438,0,0.6894531,0.8769531,0.2296875,0.3375,0,0.6914063,0.78125,0.4570313,-0.196875,0,0.8808594,0.3359375,0.4570313,0.075,0,0.8808594,0.5625,0.2601562,0.1875,0,0.7167969,0.65625,0.4570313,0.07734375,0,0.8808594,0.5644531,0.4804688,0.103125,0,0.9003906,0.5859375,0.5695313,0.0796875,0,0.9746094,0.5664063,0.5742188,0.05625,0,0.9785156,0.546875,0.5742188,0.0703125,0,0.9785156,0.5585938,0.5203125,0.05625,0,0.9335938,0.546875,0.2765625,0.271875,0,0.7304688,0.7265625,0.2742188,0.2671875,0,0.7285156,0.7226563,0.2671875,0.2671875,0,0.7226563,0.7226563,0.2414063,0.3351563,0,0.7011719,0.7792969,0.234375,0.3328125,0,0.6953125,0.7773438,0.234375,0.24375,0,0.6953125,0.703125,0.1921875,0.4429688,0,0.6601563,0.8691406,0.1546875,0.3585938,0,0.6289063,0.7988281,0.1523438,0.3632813,0,0.6269531,0.8027344,0.15,0.3914063,0,0.625,0.8261719,0.1476562,0.3773438,0,0.6230469,0.8144531,0.1476562,0.3726563,0,0.6230469,0.8105469,0.1476562,0.3632813,0,0.6230469,0.8027344,0.1382813,0.3234375,0,0.6152344,0.7695313,0.1476562,0.3234375,0,0.6230469,0.7695313,0.1382813,0.3632813,0,0.6152344,0.8027344,0.121875,0.3351563,0,0.6015625,0.7792969,0.1546875,0.3375,0,0.6289063,0.78125,-0.15,0.4523438,0,0.375,0.8769531,-0.15,0.4335938,0,0.375,0.8613281,-0.15,0.4382813,0,0.375,0.8652344,-0.1546875,0.4546875,0,0.3710938,0.8789063,-0.159375,0.4664063,0,0.3671875,0.8886719,-0.159375,0.4289063,0,0.3671875,0.8574219,-0.1710937,0.4289063,0,0.3574219,0.8574219,-0.1734375,0.45,0,0.3554688,0.875,-0.1734375,0.4335938,0,0.3554688,0.8613281,-0.1546875,0.4664063,0,0.3710938,0.8886719,-0.15,0.4640625,0,0.375,0.8867188,-0.1546875,0.4757813,0,0.3710938,0.8964844,-0.1453125,0.4828125,0,0.3789063,0.9023438,-0.1078125,0.4828125,0,0.4101563,0.9023438,-0.09140625,0.4359375,0,0.4238281,0.8632813,-0.09140625,0.4570313,0,0.4238281,0.8808594,-0.1078125,0.4359375,0,0.4101563,0.8632813,-0.1664063,0.403125,0,0.3613281,0.8359375,-0.1640625,0.3632813,0,0.3632813,0.8027344,-0.1640625,0.3890625,0,0.3632813,0.8242188,-0.16875,0.3609375,0,0.359375,0.8007813,-0.1734375,0.4054688,0,0.3554688,0.8378906,-0.178125,0.4054688,0,0.3515625,0.8378906,-0.178125,0.3609375,0,0.3515625,0.8007813,-0.1828125,0.4007813,0,0.3476563,0.8339844,-0.1828125,0.365625,0,0.3476563,0.8046875,-0.1125,0.3820313,0,0.40625,0.8183594,-0.1101563,0.3703125,0,0.4082031,0.8085938,-0.1101563,0.3796875,0,0.4082031,0.8164063,-0.1125,0.3632813,0,0.40625,0.8027344,-0.1265625,0.3632813,0,0.3945313,0.8027344,-0.1359375,0.3820313,0,0.3867188,0.8183594,-0.1382813,0.3796875,0,0.3847656,0.8164063,-0.1382813,0.3703125,0,0.3847656,0.8085938,0.1476562,0.3867188,0,0.6230469,0.8222656,0.140625,0.3867188,0,0.6171875,0.8222656,0.1359375,0.365625,0,0.6132813,0.8046875,0.1289063,0.365625,0,0.6074219,0.8046875,0.1265625,0.3773438,0,0.6054688,0.8144531,0.1265625,0.3679688,0,0.6054688,0.8066406,-0.1289063,0.4382813,0,0.3925781,0.8652344,-0.1078125,0.4007813,0,0.4101563,0.8339844,-0.1078125,0.4171875,0,0.4101563,0.8476563,-0.140625,0.4007813,0,0.3828125,0.8339844,-0.15,0.4195313,0,0.375,0.8496094],[214,215,220,255,212,254,213,254,212,251,254,213,252,254,251,253,252,251,250,249,248,246,248,249,247,248,246,204,247,246,245,204,246,203,204,245,43,207,32,210,32,207,200,32,210,244,243,241,242,241,243,237,241,242,240,241,237,238,240,237,239,238,237,236,235,234,233,234,235,231,234,233,232,231,233,228,231,232,229,231,228,230,229,228,211,221,227,223,227,221,224,227,223,225,227,224,226,225,224,220,222,221,223,221,222,214,220,211,221,211,220,219,218,217,215,217,218,216,217,215,212,216,215,214,212,215,211,212,214,213,212,211,183,181,197,180,197,181,196,197,180,179,196,180,33,43,32,207,205,210,201,210,205,200,210,201,156,209,206,208,206,209,149,206,208,205,149,208,207,149,205,158,156,153,206,153,156,150,153,206,149,150,206,157,158,159,153,159,158,154,159,153,139,159,154,155,139,154,138,139,155,167,178,165,177,165,178,163,165,177,160,163,177,176,160,177,174,160,176,168,166,195,164,195,166,194,195,164,161,194,164,193,194,161,162,193,161,205,204,201,203,201,204,202,201,203,199,201,202,200,201,199,40,200,199,32,200,40,39,40,199,37,39,199,34,37,199,41,34,199,198,41,199,183,198,199,182,183,199,197,198,183,168,198,197,195,198,168,134,198,195,196,168,197,179,168,196,167,168,179,194,134,195,193,134,194,162,134,193,160,134,162,174,134,160,185,187,192,188,192,187,189,192,188,190,192,189,191,190,189,187,78,188,77,75,185,78,185,75,187,185,78,186,128,110,112,110,128,121,112,128,136,121,128,137,121,136,184,137,136,135,184,136,134,184,135,170,184,134,81,184,170,82,184,81,85,184,82,84,184,85,83,184,84,76,184,83,77,184,76,185,184,77,175,181,182,183,182,181,180,181,175,179,180,175,178,179,175,167,179,178,177,178,175,176,177,175,174,176,175,173,174,175,134,174,173,169,134,173,172,169,173,171,169,172,81,169,171,134,169,170,81,170,169,165,166,167,168,167,166,164,166,165,163,164,165,161,164,163,160,161,163,162,161,160,142,157,141,159,141,157,140,141,159,139,140,159,156,157,98,142,98,157,158,157,156,45,138,44,154,152,155,151,155,152,138,155,151,148,138,151,44,138,148,42,44,148,150,152,153,154,153,152,151,152,150,148,151,150,149,148,150,43,148,149,42,148,43,147,90,146,91,146,90,109,146,91,108,146,109,137,146,108,88,137,108,86,137,88,145,137,86,104,145,86,102,137,145,20,137,102,144,137,20,95,137,144,96,137,95,100,137,96,143,100,96,98,137,100,142,137,98,141,137,142,140,137,141,139,137,140,138,137,139,45,137,138,41,137,45,117,137,41,126,137,117,125,137,126,115,137,125,124,115,125,114,115,124,123,137,115,122,137,123,120,137,122,121,137,120,128,129,136,135,136,129,135,129,134,133,132,130,131,130,132,127,130,131,128,130,127,129,128,127,117,116,126,118,126,116,119,126,118,125,126,119,124,125,119,114,124,119,115,113,123,111,123,113,122,123,111,112,122,111,120,122,112,121,120,112,110,114,41,119,41,114,118,41,119,116,41,118,117,41,116,111,114,110,113,114,111,115,114,113,112,111,110,91,89,109,108,109,89,87,108,89,88,108,87,107,106,105,103,105,106,104,105,103,102,104,103,8,102,103,20,102,8,11,20,8,101,98,99,100,99,98,97,94,95,92,95,94,96,95,92,94,93,92,86,89,90,91,90,89,87,89,86,88,87,86,82,80,85,84,85,80,79,84,80,83,84,79,76,83,79,78,79,81,80,81,79,82,81,80,76,79,78,75,76,78,77,76,75,74,70,73,72,73,70,71,72,70,67,71,70,69,67,70,66,67,69,68,67,66,65,64,62,63,62,64,59,62,63,60,62,59,61,60,59,58,56,57,54,57,56,53,54,56,55,54,53,52,51,47,50,47,51,49,47,50,46,47,49,48,47,46,45,44,41,33,41,44,42,33,44,43,33,42,31,41,33,31,38,41,35,41,38,36,41,35,34,41,36,32,40,31,39,31,40,37,31,39,38,31,37,35,38,37,34,35,37,36,35,34,33,32,31,30,26,29,27,29,26,28,27,26,25,21,24,22,24,21,23,22,21,20,11,18,9,18,11,10,18,9,19,18,10,8,17,10,16,10,17,12,10,16,15,10,12,13,15,12,14,13,12,11,8,9,10,9,8,7,6,5,4,5,6,3,5,4,0,3,4,1,3,0,2,1,0],-0.000100258737802505,-0.0000252202153205872,0.999899744987488,0.99997478723526,0.0332030951976776,0.099609375,0.978515625,0.90234375,0,0,0,0,[0,0,0,0],[-0.6,-0.6,0.6,0.6],426.666656494141,512,512,512,512,256,256,17.0513172149658,51.0129127502441]},{"id":28182,"path":"Assets/Content/Sprites/Ingredients/ground turkey.png","assetBundleId":-1,"data":["ground turkey",6,28180,[-0.01054688,0.003515616,0,0.4019532,0.2683594,0],[-0.3960938,-0.09609375,0,0.1699219,0.4199219,-0.3890625,-0.1054688,0,0.1757813,0.4121094,-0.3890625,-0.0984375,0,0.1757813,0.4179688,-0.3960938,-0.1078125,0,0.1699219,0.4101563,-0.4007813,-0.1007813,0,0.1660156,0.4160156,-0.3960938,-0.0703125,0,0.1699219,0.4414063,-0.39375,-0.0796875,0,0.171875,0.4335938,-0.39375,-0.07265625,0,0.171875,0.4394531,-0.3960938,-0.084375,0,0.1699219,0.4296875,-0.403125,-0.084375,0,0.1640625,0.4296875,-0.4078125,-0.0703125,0,0.1601563,0.4414063,-0.4078125,-0.08203125,0,0.1601563,0.4316406,-0.3914063,-0.04921875,0,0.1738281,0.4589844,-0.39375,-0.0515625,0,0.171875,0.4570313,-0.3914063,-0.05390625,0,0.1738281,0.4550781,-0.3796875,-0.0234375,0,0.1835938,0.4804688,-0.3890625,-0.046875,0,0.1757813,0.4609375,-0.3820313,-0.04921875,0,0.1816406,0.4589844,-0.3914063,-0.028125,0,0.1738281,0.4765625,-0.3539062,-0.065625,0,0.2050781,0.4453125,-0.35625,-0.065625,0,0.203125,0.4453125,-0.3585938,-0.07734375,0,0.2011719,0.4355469,-0.3515625,-0.05390625,0,0.2070313,0.4550781,-0.3492188,-0.05390625,0,0.2089844,0.4550781,-0.35625,-0.05625,0,0.203125,0.453125,-0.3492188,-0.0375,0,0.2089844,0.46875,-0.3609375,-0.0328125,0,0.1992188,0.4726563,-0.3609375,-0.084375,0,0.1992188,0.4296875,-0.365625,-0.0375,0,0.1953125,0.46875,-0.3820313,-0.05625,0,0.1816406,0.453125,-0.3867188,-0.084375,0,0.1777344,0.4296875,-0.3890625,-0.05859375,0,0.1757813,0.4511719,-0.3914063,-0.06796875,0,0.1738281,0.4433594,-0.3445313,-0.0421875,0,0.2128906,0.4648438,-0.3421875,-0.0515625,0,0.2148438,0.4570313,-0.3398438,-0.0515625,0,0.2167969,0.4570313,-0.346875,-0.04453125,0,0.2109375,0.4628906,-0.3351563,-0.0421875,0,0.2207031,0.4648438,-0.3351563,-0.04921875,0,0.2207031,0.4589844,-0.3421875,-0.03984375,0,0.2148438,0.4667969,-0.3375,-0.05390625,0,0.21875,0.4550781,-0.3351563,-0.0609375,0,0.2207031,0.4492188,-0.3351563,-0.05625,0,0.2207031,0.453125,-0.3398438,-0.065625,0,0.2167969,0.4453125,-0.3492188,-0.06796875,0,0.2089844,0.4433594,-0.4078125,-0.046875,0,0.1601563,0.4609375,-0.4007813,-0.05625,0,0.1660156,0.453125,-0.4007813,-0.04921875,0,0.1660156,0.4589844,-0.4078125,-0.05859375,0,0.1601563,0.4511719,-0.4125,-0.0515625,0,0.15625,0.4570313,-0.3234375,-0.00234375,0,0.2304688,0.4980469,-0.3234375,-0.00703125,0,0.2304688,0.4941406,-0.3210938,-0.00703125,0,0.2324219,0.4941406,-0.328125,-0.00234375,0,0.2265625,0.4980469,-0.31875,0.0140625,0,0.234375,0.5117188,-0.3164063,-0.0046875,0,0.2363281,0.4960938,-0.3164063,0.0140625,0,0.2363281,0.5117188,-0.3257813,0.00703125,0,0.2285156,0.5058594,-0.3164063,-0.03515625,0,0.2363281,0.4707031,-0.3140625,-0.0375,0,0.2382813,0.46875,-0.309375,-0.03515625,0,0.2421875,0.4707031,-0.3164063,-0.0375,0,0.2363281,0.46875,0.3890625,-0.02578125,0,0.8242188,0.4785156,0.3914063,-0.07734375,0,0.8261719,0.4355469,0.3914063,-0.03984375,0,0.8261719,0.4667969,0.3820313,0.1125,0,0.8183594,0.59375,0.3703125,-0.16875,0,0.8085938,0.359375,0.2765625,-0.234375,0,0.7304688,0.3046875,0.1546875,0.253125,0,0.6289063,0.7109375,0.0984375,-0.2648438,0,0.5820313,0.2792969,-0.1101563,0.253125,0,0.4082031,0.7109375,-0.1101563,-0.2648438,0,0.4082031,0.2792969,-0.2601562,0.1289063,0,0.2832031,0.6074219,-0.2789063,-0.2132813,0,0.2675781,0.3222656,-0.3046875,-0.03046875,0,0.2460938,0.4746094,-0.3070312,-0.0234375,0,0.2441406,0.4804688,-0.3117188,0.01171875,0,0.2402344,0.5097656,-0.3164063,0.06328125,0,0.2363281,0.5527344,-0.3140625,-0.04453125,0,0.2382813,0.4628906,-0.3164063,-0.04453125,0,0.2363281,0.4628906,-0.3164063,-0.1710937,0,0.2363281,0.3574219,-0.3117188,0.00703125,0,0.2402344,0.5058594,-0.3140625,-0.0046875,0,0.2382813,0.4960938,-0.3140625,-0.0234375,0,0.2382813,0.4804688,-0.3164063,-0.01640625,0,0.2363281,0.4863281,-0.3164063,-0.02578125,0,0.2363281,0.4785156,-0.3210938,-0.03515625,0,0.2324219,0.4707031,-0.3210938,-0.046875,0,0.2324219,0.4609375,-0.3257813,-0.03984375,0,0.2285156,0.4667969,-0.31875,-0.028125,0,0.234375,0.4765625,-0.3164063,-0.028125,0,0.2363281,0.4765625,-0.3421875,-0.00234375,0,0.2148438,0.4980469,-0.3421875,-0.00703125,0,0.2148438,0.4941406,-0.3445313,-0.028125,0,0.2128906,0.4765625,-0.346875,-0.009375,0,0.2109375,0.4921875,-0.346875,-0.009375,0,0.2109375,0.4921875,-0.346875,-0.02109375,0,0.2109375,0.4824219,-0.3539062,-0.01875,0,0.2050781,0.484375,-0.3585938,-0.0328125,0,0.2011719,0.4726563,-0.3515625,-0.02578125,0,0.2070313,0.4785156,-0.3609375,-0.01875,0,0.1992188,0.484375,-0.365625,-0.0234375,0,0.1953125,0.4804688,-0.365625,-0.028125,0,0.1953125,0.4765625,-0.3890625,-0.0140625,0,0.1757813,0.4882813,-0.3820313,-0.0234375,0,0.1816406,0.4804688,-0.3820313,-0.01640625,0,0.1816406,0.4863281,-0.3890625,-0.02578125,0,0.1757813,0.4785156,-0.39375,-0.01875,0,0.171875,0.484375,-0.3585938,-0.00234375,0,0.2011719,0.4980469,-0.3609375,-0.0140625,0,0.1992188,0.4882813,-0.35625,-0.009375,0,0.203125,0.4921875,-0.365625,-0.00234375,0,0.1953125,0.4980469,-0.3679688,-0.0140625,0,0.1933594,0.4882813,-0.3703125,-0.00703125,0,0.1914063,0.4941406,-0.3421875,0,0,0.2148438,0.5,-0.3492188,0.00234375,0,0.2089844,0.5019531,-0.3492188,-0.009375,0,0.2089844,0.4921875,-0.3539062,-0.00234375,0,0.2050781,0.4980469,-0.0140625,0.271875,0,0.4882813,0.7265625,-0.01640625,0.2578125,0,0.4863281,0.7148438,-0.0140625,0.2601562,0,0.4882813,0.7167969,-0.0328125,0.271875,0,0.4726563,0.7265625,-0.03515625,0.2578125,0,0.4707031,0.7148438,-0.03984375,0.2648438,0,0.4667969,0.7207031],[123,121,122,119,122,121,118,119,121,120,119,118,92,94,91,117,115,116,94,116,115,114,94,115,91,94,114,113,111,112,109,112,111,108,109,111,110,109,108,107,103,106,104,106,103,105,104,103,102,101,26,100,26,101,98,26,100,97,98,100,99,98,97,79,61,78,59,78,61,58,89,90,58,90,60,85,60,90,83,60,85,75,60,83,74,60,75,96,95,93,94,93,95,92,93,94,89,93,92,91,89,92,53,89,91,51,89,53,52,89,51,84,89,52,85,89,84,90,89,85,88,86,87,79,87,86,61,79,86,55,56,82,76,82,56,81,82,76,85,84,83,55,83,84,82,83,55,75,83,82,81,75,82,76,75,81,80,79,73,78,73,79,59,73,78,60,73,59,74,73,60,56,77,76,72,76,77,75,76,72,74,75,72,73,74,72,71,73,72,70,71,72,69,71,70,68,69,70,67,69,68,65,67,68,66,67,65,63,66,65,62,63,65,64,63,62,61,58,59,60,59,58,53,57,50,54,50,57,52,50,54,55,52,54,56,55,54,53,50,51,52,51,50,36,25,33,49,45,48,46,48,45,47,46,45,14,12,31,16,31,12,29,31,16,17,29,16,19,23,44,43,44,23,25,43,23,36,43,25,34,43,36,35,43,34,41,43,35,40,41,35,42,41,40,33,39,35,37,35,39,38,35,37,36,33,34,35,34,33,32,14,30,31,30,14,29,30,31,27,30,29,17,27,29,15,27,17,28,27,15,26,27,28,21,27,26,24,21,26,25,24,26,20,21,24,22,24,25,23,22,25,20,24,19,22,19,24,23,19,22,21,20,19,12,18,16,15,16,18,17,16,15,14,13,12,11,10,9,5,9,10,8,9,5,6,8,5,7,6,5,4,0,3,1,3,0,2,1,0],-0.0000252127647399902,-0.000148683786392212,0.99997478723526,0.99985134601593,0.15625,0.279296875,0.826171875,0.7265625,0,0,0,0,[0,0,0,0],[-0.6,-0.6,0.6,0.6],426.666656494141,512,512,512,512,256,256,80.0129089355469,143.076126098633]},{"id":28104,"path":"Assets/Content/Sprites/Ingredients/soy sauce.png","assetBundleId":-1,"data":["soy sauce",6,28102,[0.0234375,0,0,0.1570313,0.46875,0],[0.07734375,0.46875,0,0.5644531,0.890625,0.09609375,0.3046875,0,0.5800781,0.7539063,0.1007813,0.45,0,0.5839844,0.875,0.09140625,-0.46875,0,0.5761719,0.109375,-0.0140625,0.46875,0,0.4882813,0.890625,-0.03046875,-0.46875,0,0.4746094,0.109375,-0.0328125,0.4664063,0,0.4726563,0.8886719,-0.04921875,0.4523438,0,0.4589844,0.8769531,-0.06328125,-0.4664063,0,0.4472656,0.1113281,-0.08203125,0.271875,0,0.4316406,0.7265625,-0.0890625,-0.4570313,0,0.4257813,0.1191406,-0.1289063,0.1921875,0,0.3925781,0.6601563,-0.1335938,0.1664063,0,0.3886719,0.6386719,-0.1335938,-0.4054688,0,0.3886719,0.1621094,0.1804688,0.1710937,0,0.6503906,0.6425781,0.1664063,-0.43125,0,0.6386719,0.140625,0.1804688,-0.3867188,0,0.6503906,0.1777344,0.1546875,0.2320313,0,0.6289063,0.6933594,0.1007813,-0.4664063,0,0.5839844,0.1113281],[3,1,18,17,18,1,15,18,17,14,15,17,16,15,14,13,12,10,11,10,12,9,10,11,8,10,9,7,8,9,5,8,7,6,5,7,4,5,6,3,5,4,0,3,4,1,3,0,2,1,0],-0.000148683786392212,-0.000148676335811615,0.99985134601593,0.99985134601593,0.388671875,0.109375,0.650390625,0.890625,0,0,0,0,[0,0,0,0],[-0.6,-0.6,0.6,0.6],426.666656494141,512,512,512,512,256,256,199.076126098633,56.0761222839355]},{"id":28310,"path":"Assets/Content/Sprites/Ingredients/onion.png","assetBundleId":-1,"data":["onion",6,28308,[-0.02109374,0.03515625,0,0.4125,0.3984375,0],[0.3679688,0.4335938,0,0.8066406,0.8613281,0.3914063,0.3609375,0,0.8261719,0.8007813,0.3914063,0.4101563,0,0.8261719,0.8417969,0.3492188,0.3304687,0,0.7910156,0.7753906,0.3257813,0.2460938,0,0.7714844,0.7050781,0.2789063,0.4335938,0,0.7324219,0.8613281,0.2976563,-0.1617188,0,0.7480469,0.3652344,0.215625,-0.2179688,0,0.6796875,0.3183594,0.2109375,0.3398438,0,0.6757813,0.7832031,0.1546875,-0.234375,0,0.6289063,0.3046875,0.0890625,-0.3234375,0,0.5742188,0.2304688,0.02578125,0.3328125,0,0.5214844,0.7773438,0.02109375,-0.3632813,0,0.5175781,0.1972656,-0.06796875,0.3046875,0,0.4433594,0.7539063,-0.0796875,-0.3632813,0,0.4335938,0.1972656,-0.09609375,0.2882813,0,0.4199219,0.7402344,-0.1710937,0.225,0,0.3574219,0.6875,-0.215625,0.1078125,0,0.3203125,0.5898438,-0.2296875,-0.3210938,0,0.3085938,0.2324219,-0.2953125,0.03046875,0,0.2539063,0.5253906,-0.3539062,0.01640625,0,0.2050781,0.5136719,-0.3703125,-0.2507813,0,0.1914063,0.2910156,-0.384375,0.00703125,0,0.1796875,0.5058594,-0.4195313,-0.1921875,0,0.1503906,0.3398438,-0.4335938,-0.06328125,0,0.1386719,0.4472656,-0.4335938,-0.15,0,0.1386719,0.375,0.3515625,-0.103125,0,0.7929688,0.4140625,0.3890625,0.01875,0,0.8242188,0.515625],[6,4,26,27,26,4,25,24,23,22,23,24,21,23,22,20,21,22,18,21,20,19,18,20,17,18,19,14,18,17,16,14,17,15,14,16,13,14,15,12,14,13,11,12,13,10,12,11,8,10,11,9,10,8,7,9,8,5,7,8,6,7,5,4,6,5,0,4,5,3,4,0,1,3,0,2,1,0],-0.000148668885231018,-0.000148668885231018,0.99985134601593,0.99985134601593,0.138671875,0.197265625,0.826171875,0.861328125,0,0,0,0,[0,0,0,0],[-0.6,-0.6,0.6,0.6],426.666656494141,512,512,512,512,256,256,71.0761184692383,101.076118469238]},{"id":28376,"path":"Assets/Content/Sprites/Ingredients/chives.png","assetBundleId":-1,"data":["chives",6,28374,[-0.001171872,0.009374999,0,0.4769531,0.2484375,0],[0.4195313,0.16875,0,0.8496094,0.640625,0.3679688,0.2578125,0,0.8066406,0.7148438,0.4195313,0.09609375,0,0.8496094,0.5800781,0.4757813,0.03046875,0,0.8964844,0.5253906,0.4242188,-0.084375,0,0.8535156,0.4296875,0.4757813,-0.03984375,0,0.8964844,0.4667969,0.3328125,0.2578125,0,0.7773438,0.7148438,0.2507813,-0.121875,0,0.7089844,0.3984375,-0.028125,0.1335938,0,0.4765625,0.6113281,-0.1125,-0.1804688,0,0.40625,0.3496094,-0.3703125,-0.2367188,0,0.1914063,0.3027344,-0.384375,0.00234375,0,0.1796875,0.5019531,-0.3890625,-0.2390625,0,0.1757813,0.3007813,-0.4125,-0.2390625,0,0.15625,0.3007813,-0.4335938,-0.2226563,0,0.1386719,0.3144531,-0.45,-0.02109375,0,0.125,0.4824219,-0.4523438,-0.03046875,0,0.1230469,0.4746094,-0.46875,-0.1640625,0,0.109375,0.3632813,-0.478125,-0.103125,0,0.1015625,0.4140625,-0.478125,-0.1382813,0,0.1015625,0.3847656],[19,18,17,16,17,18,14,17,16,15,14,16,11,14,15,13,14,11,12,13,11,10,12,11,8,10,11,9,10,8,7,9,8,6,7,8,4,7,6,1,4,6,2,4,1,3,4,2,5,4,3,2,1,0],-0.0000522509217262268,-0.000148683786392212,0.999947726726532,0.99985134601593,0.1015625,0.30078125,0.896484375,0.71484375,0,0,0,0,[0,0,0,0],[-0.6,-0.6,0.6,0.6],426.666656494141,512,512,512,512,256,256,52.0267524719238,154.076126098633]},{"id":28414,"path":"Assets/Content/Sprites/Ingredients/thyme.png","assetBundleId":-1,"data":["thyme",6,28412,[0,0.05742187,0,0.4453125,0.2847656,0],[0.1523438,0.05625,0,0.6269531,0.546875,0.15,0.03984375,0,0.625,0.5332031,0.1523438,0.0421875,0,0.6269531,0.5351563,0.1429688,0.05625,0,0.6191406,0.546875,0.1429688,0.03984375,0,0.6191406,0.5332031,0.1382813,0.05390625,0,0.6152344,0.5449219,0.1382813,0.0421875,0,0.6152344,0.5351563,0.2226563,0.05390625,0,0.6855469,0.5449219,0.2226563,0.0515625,0,0.6855469,0.5429688,0.2273438,0.05859375,0,0.6894531,0.5488281,0.2203125,0.0515625,0,0.6835938,0.5429688,0.31875,0.3421875,0,0.765625,0.7851563,0.3304687,0.1125,0,0.7753906,0.59375,0.384375,0.2671875,0,0.8203125,0.7226563,0.3140625,0.1054688,0,0.7617188,0.5878906,0.2695313,0.1007813,0,0.7246094,0.5839844,0.2625,0.08203125,0,0.71875,0.5683594,0.2273438,0.3421875,0,0.6894531,0.7851563,0.2273438,0.07265625,0,0.6894531,0.5605469,0.13125,-0.2273438,0,0.609375,0.3105469,0.09609375,-0.2273438,0,0.5800781,0.3105469,0.04921875,-0.2015625,0,0.5410156,0.3320313,0.028125,-0.1828125,0,0.5234375,0.3476563,0.02109375,-0.16875,0,0.5175781,0.359375,-0.02109375,-0.2273438,0,0.4824219,0.3105469,-0.2882813,0.01640625,0,0.2597656,0.5136719,-0.3304687,-0.2273438,0,0.2246094,0.3105469,-0.4453125,-0.1617188,0,0.1289063,0.3652344,-0.4453125,-0.20625,0,0.1289063,0.328125,0.2296875,0.06328125,0,0.6914063,0.5527344,0.4453125,0.09375,0,0.8710938,0.578125,0.375,-0.07265625,0,0.8125,0.4394531,0.4453125,-0.02578125,0,0.8710938,0.4785156,0.365625,0.140625,0,0.8046875,0.6171875,0.375,-0.084375,0,0.8125,0.4296875,0.3585938,-0.084375,0,0.7988281,0.4296875,0.3539062,-0.084375,0,0.7949219,0.4296875,0.2882813,0.06328125,0,0.7402344,0.5527344,0.3984375,-0.1570313,0,0.8320313,0.3691406,0.2578125,0.0796875,0,0.7148438,0.5664063,0.2390625,0.07265625,0,0.6992188,0.5605469,0.1875,-0.1242188,0,0.65625,0.3964844,0.1875,-0.13125,0,0.65625,0.390625,0.1828125,-0.1382813,0,0.6523438,0.3847656,0.178125,-0.1382813,0,0.6484375,0.3847656,0.15,0.0328125,0,0.625,0.5273438,0.1734375,-0.1359375,0,0.6445313,0.3867188,0.159375,0.03515625,0,0.6328125,0.5292969,0.0234375,-0.2109375,0,0.5195313,0.3242188,0.0234375,-0.1757813,0,0.5195313,0.3535156,0.1851563,-0.0046875,0,0.6542969,0.4960938,0.1828125,-0.121875,0,0.6523438,0.3984375,0.1804688,0.01875,0,0.6503906,0.515625,0.178125,-0.121875,0,0.6484375,0.3984375,0.1757813,0.028125,0,0.6464844,0.5234375,0.1734375,-0.1289063,0,0.6445313,0.3925781],[46,55,44,53,44,55,43,44,53,51,43,53,42,43,51,41,42,51,54,55,47,46,47,55,53,55,54,52,53,54,51,53,52,50,51,52,41,51,50,10,41,50,24,23,48,49,48,23,4,1,45,10,45,1,2,10,1,0,10,2,6,46,19,44,19,46,38,19,44,4,46,6,45,46,4,47,46,45,43,38,44,42,38,43,41,38,42,10,38,41,8,38,10,9,38,8,40,38,9,36,38,40,39,36,40,37,36,39,35,38,36,34,38,35,37,33,36,35,36,33,34,35,33,31,34,33,30,31,33,32,31,30,9,18,29,28,27,26,25,26,27,24,26,25,17,24,25,23,24,17,22,23,17,21,22,17,5,21,17,20,21,5,19,20,5,6,19,5,3,5,17,0,3,17,10,0,17,7,10,17,9,7,17,18,9,17,16,18,17,11,16,17,15,16,11,14,15,11,12,14,11,13,12,11,10,7,8,9,8,7,6,5,4,3,4,5,1,4,3,0,1,3,2,1,0],-0.000148668885231018,-0.0000371336936950684,0.99985134601593,0.999962866306305,0.12890625,0.310546875,0.87109375,0.78515625,0,0,0,0,[0,0,0,0],[-0.6,-0.6,0.6,0.6],426.666656494141,512,512,512,512,256,256,66.0761184692383,159.019012451172]},{"id":28380,"path":"Assets/Content/Sprites/Ingredients/sesame oil.png","assetBundleId":-1,"data":["sesame oil",6,28378,[0,0,0,0.24375,0.46875,0],[0.1101563,0.3890625,0,0.5917969,0.8242188,0.06328125,0.4617188,0,0.5527344,0.8847656,0.0703125,0.3140625,0,0.5585938,0.7617188,0.24375,-0.1898438,0,0.703125,0.3417969,0.1523438,-0.4359375,0,0.6269531,0.1367188,0.24375,-0.3421875,0,0.703125,0.2148438,0.08671875,0.03046875,0,0.5722656,0.5253906,0.0796875,-0.46875,0,0.5664063,0.109375,0.084375,0.1898438,0,0.5703125,0.6582031,0.028125,0.46875,0,0.5234375,0.890625,-0.0609375,-0.46875,0,0.4492188,0.109375,-0.075,0.2085938,0,0.4375,0.6738281,-0.07734375,0.46875,0,0.4355469,0.890625,-0.1148438,0.4007813,0,0.4042969,0.8339844,-0.1242188,-0.45,0,0.3964844,0.125,-0.1945313,-0.0234375,0,0.3378906,0.4804688,-0.2273438,-0.3492188,0,0.3105469,0.2089844,-0.24375,-0.225,0,0.296875,0.3125,-0.24375,-0.328125,0,0.296875,0.2265625],[18,17,16,15,16,17,14,16,15,11,14,15,10,14,11,13,12,11,9,11,12,10,11,9,7,10,9,1,7,9,2,7,1,8,7,2,6,7,8,4,7,6,3,4,6,5,4,3,2,1,0],-0.000148683786392212,-0.000148676335811615,0.99985134601593,0.99985134601593,0.296875,0.109375,0.703125,0.890625,0,0,0,0,[0,0,0,0],[-0.6,-0.6,0.6,0.6],426.666656494141,512,512,512,512,256,256,152.076126098633,56.0761222839355]},{"id":28596,"path":"Assets/Content/Sprites/Ingredients/brown sugar.png","assetBundleId":-1,"data":["brown sugar",6,28594,[0.02226563,0.02109374,0,0.3550782,0.4101563,0],[0.225,0.0609375,0,0.6875,0.5507813,0.2109375,0.1453125,0,0.6757813,0.6210938,0.225,0.01171875,0,0.6875,0.5097656,0.3726563,-0.159375,0,0.8105469,0.3671875,0.3773438,-0.2929688,0,0.8144531,0.2558594,0.3773438,-0.1851563,0,0.8144531,0.3457031,0.3375,-0.06796875,0,0.78125,0.4433594,0.2976563,-0.3726563,0,0.7480469,0.1894531,0.234375,-0.3585938,0,0.6953125,0.2011719,0.1757813,-0.3140625,0,0.6464844,0.2382813,0.16875,0.2835937,0,0.640625,0.7363281,0.140625,0.3234375,0,0.6171875,0.7695313,0.07734375,-0.3890625,0,0.5644531,0.1757813,-0.0421875,0.43125,0,0.4648438,0.859375,-0.06796875,0.43125,0,0.4433594,0.859375,-0.1054688,0.4007813,0,0.4121094,0.8339844,-0.2132813,-0.3890625,0,0.3222656,0.1757813,-0.2390625,0.3164063,0,0.3007813,0.7636719,-0.2765625,0.28125,0,0.2695313,0.734375,-0.28125,0.20625,0,0.265625,0.671875,-0.3210938,-0.13125,0,0.2324219,0.390625,-0.3257813,-0.290625,0,0.2285156,0.2578125,-0.3328125,-0.1570313,0,0.2226563,0.3691406,-0.3328125,-0.2742188,0,0.2226563,0.2714844,-0.3328125,0.1078125,0,0.2226563,0.5898438,-0.3328125,-0.02109375,0,0.2226563,0.4824219,0.3539062,0.2671875,0,0.7949219,0.7226563,0.3632813,0.2015625,0,0.8027344,0.6679688,0.3632813,0.2601562,0,0.8027344,0.7167969,0.3234375,0.1921875,0,0.7695313,0.6601563,0.2671875,0.2882813,0,0.7226563,0.7402344,0.2460938,0.1921875,0,0.7050781,0.6601563,0.2039063,0.2882813,0,0.6699219,0.7402344,0.2039063,0.2203125,0,0.6699219,0.6835938],[33,32,31,30,31,32,29,31,30,26,29,30,27,29,26,28,27,26,25,24,20,19,20,24,23,22,21,20,21,22,16,21,20,19,16,20,18,16,19,17,16,18,15,16,17,12,16,15,14,12,15,13,12,14,11,12,13,9,12,11,10,9,11,1,9,10,8,9,1,2,8,1,6,8,2,7,8,6,4,7,6,3,4,6,5,4,3,2,1,0],-0.000148668885231018,-0.000100225210189819,0.99985134601593,0.999899744987488,0.22265625,0.17578125,0.814453125,0.859375,0,0,0,0,[0,0,0,0],[-0.6,-0.6,0.6,0.6],426.666656494141,512,512,512,512,256,256,114.076118469238,90.0513153076172]},{"id":28432,"path":"Assets/Content/Sprites/Ingredients/pecan.png","assetBundleId":-1,"data":["pecan",6,28430,[0,-0.04101563,0,0.6,0.5589844,0],[-0.2367188,-0.2226563,0,0.3027344,0.3144531,-0.2671875,-0.2320313,0,0.2773438,0.3066406,-0.2367188,-0.2320313,0,0.3027344,0.3066406,-0.2742188,-0.2226563,0,0.2714844,0.3144531,-0.2296875,0.1734375,0,0.3085938,0.6445313,-0.2296875,0.1734375,0,0.3085938,0.6445313,-0.234375,0.1710937,0,0.3046875,0.6425781,-0.2296875,0.3164063,0,0.3085938,0.7636719,-0.2390625,0.1546875,0,0.3007813,0.6289063,-0.2390625,-0.2132813,0,0.3007813,0.3222656,-0.2390625,0.13125,0,0.3007813,0.609375,-0.271875,-0.2132813,0,0.2734375,0.3222656,-0.2789063,-0.215625,0,0.2675781,0.3203125,-0.2835937,-0.20625,0,0.2636719,0.328125,-0.3140625,0.07265625,0,0.2382813,0.5605469,-0.3210938,0.08203125,0,0.2324219,0.5683594,-0.3234375,0.084375,0,0.2304688,0.5703125,-0.3515625,0.084375,0,0.2070313,0.5703125,-0.3914063,0.075,0,0.1738281,0.5625,-0.4453125,0.0796875,0,0.1289063,0.5664063,-0.4476563,0.1171875,0,0.1269531,0.5976563,-0.4476563,0.08203125,0,0.1269531,0.5683594,-0.2273438,-0.2179688,0,0.3105469,0.3183594,-0.215625,-0.2226563,0,0.3203125,0.3144531,-0.2203125,-0.2179688,0,0.3164063,0.3183594,-0.2320313,-0.2226563,0,0.3066406,0.3144531,-0.2296875,0.3515625,0,0.3085938,0.7929688,-0.20625,0.3398438,0,0.328125,0.7832031,-0.2179688,0.3515625,0,0.3183594,0.7929688,-0.2226563,0.1757813,0,0.3144531,0.6464844,-0.215625,0.1640625,0,0.3203125,0.6367188,-0.215625,0.1757813,0,0.3203125,0.6464844,-0.1898438,0.2132813,0,0.3417969,0.6777344,-0.1945313,0.234375,0,0.3378906,0.6953125,-0.2085938,0.2109375,0,0.3261719,0.6757813,-0.1992188,-0.2203125,0,0.3339844,0.3164063,-0.1851563,-0.2226563,0,0.3457031,0.3144531,-0.1875,-0.2203125,0,0.34375,0.3164063,-0.2015625,-0.2226563,0,0.3320313,0.3144531,-0.1804688,0.3140625,0,0.3496094,0.7617188,-0.1898438,0.3046875,0,0.3417969,0.7539063,-0.1804688,0.3046875,0,0.3496094,0.7539063,-0.1921875,0.3257813,0,0.3398438,0.7714844,-0.1921875,0.309375,0,0.3398438,0.7578125,-0.1757813,0.3398438,0,0.3535156,0.7832031,-0.1757813,0.3046875,0,0.3535156,0.7539063,-0.1851563,0.346875,0,0.3457031,0.7890625,-0.1921875,0.3445313,0,0.3398438,0.7871094,-0.178125,0.2695313,0,0.3515625,0.7246094,-0.1640625,0.3773438,0,0.3632813,0.8144531,-0.159375,0.1875,0,0.3671875,0.65625,-0.140625,0.3703125,0,0.3828125,0.8085938,-0.1640625,0.2039063,0,0.3632813,0.6699219,-0.1734375,0.234375,0,0.3554688,0.6953125,-0.1851563,0.2671875,0,0.3457031,0.7226563,-0.1921875,0.2414063,0,0.3398438,0.7011719,-0.1828125,-0.2320313,0,0.3476563,0.3066406,-0.1828125,-0.225,0,0.3476563,0.3125,-0.1875,-0.2367188,0,0.34375,0.3027344,-0.2015625,-0.2367188,0,0.3320313,0.3027344,-0.20625,-0.2273438,0,0.328125,0.3105469,-0.20625,-0.2320313,0,0.328125,0.3066406,-0.159375,0.1734375,0,0.3671875,0.6445313,-0.1757813,0.15,0,0.3535156,0.625,-0.1945313,0.15,0,0.3378906,0.625,-0.2203125,0.13125,0,0.3164063,0.609375,-0.215625,0.1335938,0,0.3203125,0.6113281,-0.2132813,-0.2296875,0,0.3222656,0.3085938,-0.2132813,-0.225,0,0.3222656,0.3125,-0.2179688,-0.234375,0,0.3183594,0.3046875,-0.2296875,-0.234375,0,0.3085938,0.3046875,-0.234375,-0.225,0,0.3046875,0.3125,-0.234375,-0.2296875,0,0.3046875,0.3085938,-0.28125,-0.590625,0,0.265625,0.00781253,-0.271875,-0.6,0,0.2734375,0,-0.271875,-0.5976563,0,0.2734375,0.001953125,-0.4710938,-0.6,0,0.1074219,0,-0.4921875,-0.5789062,0,0.08984375,0.01757815,-0.5085937,-0.534375,0,0.0761719,0.0546875,-0.534375,-0.5273438,0,0.0546875,0.06054688,-0.5414063,-0.5273438,0,0.04882813,0.06054688,-0.5414063,-0.5390625,0,0.04882813,0.05078125,-0.54375,-0.5320312,0,0.04687503,0.05664065,0.5695313,-0.4875,0,0.9746094,0.09375,0.6,-0.5859375,0,1,0.01171875,0.6,-0.4875,0,1,0.09375,0.5460938,-0.6,0,0.9550781,0,0.06796875,-0.5929688,0,0.5566406,0.005859375,0.06796875,-0.6,0,0.5566406,0,-0.1734375,-0.4851563,0,0.3554688,0.09570313,-0.1710937,-0.4992188,0,0.3574219,0.08398438,-0.1710937,-0.4898438,0,0.3574219,0.09179688,-0.1734375,-0.5015625,0,0.3554688,0.08203122,-0.1804688,-0.5015625,0,0.3496094,0.08203122,-0.1875,-0.4851563,0,0.34375,0.09570313,-0.1875,-0.4992188,0,0.34375,0.08398438,0.1875,-0.4734375,0,0.65625,0.1054688,0.1851563,-0.4921875,0,0.6542969,0.08984375,0.1875,-0.4875,0,0.65625,0.09375,0.15,-0.4734375,0,0.625,0.1054688,0.15,-0.4921875,0,0.625,0.08984375,0.2085938,-0.4734375,0,0.6738281,0.1054688,0.2109375,-0.4828125,0,0.6757813,0.09765625,0.2109375,-0.478125,0,0.6757813,0.1015625,0.2085938,-0.4898438,0,0.6738281,0.09179688,0.1992188,-0.4898438,0,0.6660156,0.09179688,0.1945313,-0.4734375,0,0.6621094,0.1054688,0.1945313,-0.4875,0,0.6621094,0.09375,0.00234375,-0.3,0,0.5019531,0.25,0.00703125,-0.3164063,0,0.5058594,0.2363281,0.00703125,-0.3023438,0,0.5058594,0.2480469,-0.05859375,-0.3,0,0.4511719,0.25,-0.05859375,-0.3164063,0,0.4511719,0.2363281,-0.0609375,-0.3070312,0,0.4492188,0.2441406,-0.0609375,-0.3140625,0,0.4492188,0.2382813,-0.1359375,-0.2953125,0,0.3867188,0.2539063,-0.13125,-0.3140625,0,0.390625,0.2382813,-0.13125,-0.3,0,0.390625,0.25,-0.1945313,-0.2882813,0,0.3378906,0.2597656,-0.2015625,-0.3140625,0,0.3320313,0.2382813,-0.2320313,-0.2882813,0,0.3066406,0.2597656,-0.2320313,-0.2976563,0,0.3066406,0.2519531,-0.2320313,-0.3046875,0,0.3066406,0.2460938,-0.08671875,-0.2976563,0,0.4277344,0.2519531,-0.0796875,-0.3070312,0,0.4335938,0.2441406,-0.0796875,-0.3,0,0.4335938,0.25,-0.08671875,-0.3140625,0,0.4277344,0.2382813,-0.1148438,-0.3140625,0,0.4042969,0.2382813,-0.1171875,-0.2976563,0,0.4023438,0.2519531,-0.1171875,-0.309375,0,0.4023438,0.2421875,0.0515625,-0.3046875,0,0.5429688,0.2460938,0.0515625,-0.3117188,0,0.5429688,0.2402344,0.0515625,-0.3070312,0,0.5429688,0.2441406,0.04453125,-0.3023438,0,0.5371094,0.2480469,0.04453125,-0.3140625,0,0.5371094,0.2382813,0.03984375,-0.3070312,0,0.5332031,0.2441406,0.1617188,-0.2953125,0,0.6347656,0.2539063,0.1640625,-0.3046875,0,0.6367188,0.2460938,0.1640625,-0.2976563,0,0.6367188,0.2519531,0.1617188,-0.3117188,0,0.6347656,0.2402344,0.1078125,-0.2953125,0,0.5898438,0.2539063,0.103125,-0.3140625,0,0.5859375,0.2382813,0.05390625,-0.3,0,0.5449219,0.25,0.05390625,-0.3140625,0,0.5449219,0.2382813,0.1898438,-0.2953125,0,0.6582031,0.2539063,0.1875,-0.3070312,0,0.65625,0.2441406,0.1921875,-0.3023438,0,0.6601563,0.2480469,0.1828125,-0.2953125,0,0.6523438,0.2539063,0.1804688,-0.3070312,0,0.6503906,0.2441406,0.178125,-0.3,0,0.6484375,0.25,0.2109375,-0.2929688,0,0.6757813,0.2558594,0.2085938,-0.3046875,0,0.6738281,0.2460938,0.2132813,-0.3,0,0.6777344,0.25,0.2039063,-0.2929688,0,0.6699219,0.2558594,0.2015625,-0.3046875,0,0.6679688,0.2460938,0.1992188,-0.2976563,0,0.6660156,0.2519531,0.2367188,-0.2859375,0,0.6972656,0.2617188,0.2390625,-0.2976563,0,0.6992188,0.2519531,0.2390625,-0.290625,0,0.6992188,0.2578125,0.2296875,-0.3023438,0,0.6914063,0.2480469,0.225,-0.2859375,0,0.6875,0.2617188,0.2226563,-0.3023438,0,0.6855469,0.2480469,0.2179688,-0.290625,0,0.6816406,0.2578125,0.2179688,-0.3,0,0.6816406,0.25,-0.384375,0.075,0,0.1796875,0.5625,-0.3210938,0.07265625,0,0.2324219,0.5605469,-0.3210938,0.07265625,0,0.2324219,0.5605469,-0.403125,0.0375,0,0.1640625,0.53125,-0.4148438,0.0703125,0,0.1542969,0.5585938,-0.4476563,0.01875,0,0.1269531,0.515625,-0.4921875,-0.00234375,0,0.08984375,0.4980469,-0.4476563,0.01640625,0,0.1269531,0.5136719,-0.5367188,0.03046875,0,0.05273435,0.5253906,-0.5695313,0.009375,0,0.02539063,0.5078125,-0.5929688,-0.0421875,0,0.005859375,0.4648438,-0.6,-0.02109375,0,0,0.4824219,-0.6,-0.0421875,0,0,0.4648438,-0.2789063,-0.215625,0,0.2675781,0.3203125,-0.2789063,-0.2226563,0,0.2675781,0.3144531,-0.2976563,-0.2226563,0,0.2519531,0.3144531,-0.43125,-0.1875,0,0.140625,0.34375,-0.440625,-0.1382813,0,0.1328125,0.3847656,-0.2789063,-0.2320313,0,0.2675781,0.3066406,-0.4476563,-0.1007813,0,0.1269531,0.4160156,0.2695313,-0.2789063,0,0.7246094,0.2675781,0.2765625,-0.2882813,0,0.7304688,0.2597656,0.2765625,-0.28125,0,0.7304688,0.265625,0.2695313,-0.290625,0,0.7246094,0.2578125,0.2648438,-0.2835937,0,0.7207031,0.2636719,0.3210938,0.4828125,0,0.7675781,0.9023438,0.375,0.28125,0,0.8125,0.734375,0.375,0.3585938,0,0.8125,0.7988281,0.2109375,0.4828125,0,0.6757813,0.9023438,0.140625,0.43125,0,0.6171875,0.859375,0.140625,0.4242188,0,0.6171875,0.8535156,0.346875,-0.2484375,0,0.7890625,0.2929688,0.35625,-0.2554688,0,0.796875,0.2871094,0.3539062,-0.253125,0,0.7949219,0.2890625,0.346875,-0.2625,0,0.7890625,0.28125,0.3585938,-0.2554688,0,0.7988281,0.2871094,0.3421875,-0.253125,0,0.7851563,0.2890625,0.3421875,-0.2578125,0,0.7851563,0.2851563,0.403125,-0.2039063,0,0.8359375,0.3300781,0.3890625,-0.2203125,0,0.8242188,0.3164063,0.4242188,-0.1992188,0,0.8535156,0.3339844,0.3304687,-0.2203125,0,0.7753906,0.3164063,0.4054688,-0.2554688,0,0.8378906,0.2871094,0.45,-0.2226563,0,0.875,0.3144531,0.35625,-0.2484375,0,0.796875,0.2929688,0.3539062,-0.24375,0,0.7949219,0.296875,0.3539062,-0.2484375,0,0.7949219,0.2929688,0.3585938,0.2390625,0,0.7988281,0.6992188,0.375,0.2390625,0,0.8125,0.6992188,0.2953125,0.3023438,0,0.7460938,0.7519531,0.2859375,0.3140625,0,0.7382813,0.7617188,0.2742188,0.3023438,0,0.7285156,0.7519531,0.2507813,0.35625,0,0.7089844,0.796875,0.2742188,0.2929688,0,0.7285156,0.7441406,0.2765625,0.309375,0,0.7304688,0.7578125,0.2835937,0.3140625,0,0.7363281,0.7617188,0.2367188,0.35625,0,0.6972656,0.796875,0.196875,0.328125,0,0.6640625,0.7734375,0.2367188,0.3421875,0,0.6972656,0.7851563,0.2390625,0.3585938,0,0.6992188,0.7988281,0.1898438,0.3304687,0,0.6582031,0.7753906,0.1476562,0.375,0,0.6230469,0.8125,0.1851563,0.3257813,0,0.6542969,0.7714844,0.2460938,0.3585938,0,0.7050781,0.7988281,0.1429688,0.3773438,0,0.6191406,0.8144531,0.140625,0.403125,0,0.6171875,0.8359375,0.140625,0.3960938,0,0.6171875,0.8300781,0.140625,0.3773438,0,0.6171875,0.8144531,0.290625,0.2695313,0,0.7421875,0.7246094,0.28125,0.2671875,0,0.734375,0.7226563,0.2882813,0.2671875,0,0.7402344,0.7226563,0.2765625,0.2742188,0,0.7304688,0.7285156,0.2765625,0.271875,0,0.7304688,0.7265625,0.290625,0.2789063,0,0.7421875,0.7324219,0.2929688,0.271875,0,0.7441406,0.7265625,0.28125,0.28125,0,0.734375,0.734375,0.2765625,0.2765625,0,0.7304688,0.7304688,0.2953125,0.2976563,0,0.7460938,0.7480469,0.2789063,0.290625,0,0.7324219,0.7421875,0.2507813,0.3445313,0,0.7089844,0.7871094,0.2460938,0.3421875,0,0.7050781,0.7851563,0.196875,0.3210938,0,0.6640625,0.7675781,0.1898438,0.31875,0,0.6582031,0.765625,0.1476562,0.3539062,0,0.6230469,0.7949219,0.140625,0.3445313,0,0.6171875,0.7871094,0.140625,0.3328125,0,0.6171875,0.7773438,0.3140625,0.2273438,0,0.7617188,0.6894531,0.328125,0.2273438,0,0.7734375,0.6894531,0.2882813,0.2203125,0,0.7402344,0.6835938,0.2648438,0.2015625,0,0.7207031,0.6679688,0.3046875,-0.2648438,0,0.7539063,0.2792969,0.3117188,-0.2742188,0,0.7597656,0.2714844,0.3117188,-0.2671875,0,0.7597656,0.2773438,0.3046875,-0.2765625,0,0.7539063,0.2695313,0.3,-0.2695313,0,0.75,0.2753906,0.2929688,-0.271875,0,0.7441406,0.2734375,0.290625,-0.2835937,0,0.7421875,0.2636719,0.2953125,-0.2789063,0,0.7460938,0.2675781,0.2859375,-0.271875,0,0.7382813,0.2734375,0.2835937,-0.2835937,0,0.7363281,0.2636719,0.28125,-0.2765625,0,0.734375,0.2695313,0.1734375,0.3140625,0,0.6445313,0.7617188,0.2648438,0.1945313,0,0.7207031,0.6621094,0.1710937,0.3164063,0,0.6425781,0.7636719,0.1546875,0.3140625,0,0.6289063,0.7617188,0.1523438,-0.2179688,0,0.6269531,0.3183594,0.1546875,0.3046875,0,0.6289063,0.7539063,0.1453125,-0.2226563,0,0.6210938,0.3144531,0.1429688,-0.2226563,0,0.6191406,0.3144531,0.1429688,-0.2203125,0,0.6191406,0.3164063,0.159375,0.3164063,0,0.6328125,0.7636719,0.1382813,0.3140625,0,0.6152344,0.7617188,0.1359375,0.2976563,0,0.6132813,0.7480469,0.1265625,0.2929688,0,0.6054688,0.7441406,0.1242188,0.2789063,0,0.6035156,0.7324219,0.1242188,0.2648438,0,0.6035156,0.7207031,0.121875,0.2601562,0,0.6015625,0.7167969,0.1125,0.2601562,0,0.59375,0.7167969,0.1078125,0.271875,0,0.5898438,0.7265625,0.08671875,-0.2203125,0,0.5722656,0.3164063,0.1734375,0.2953125,0,0.6445313,0.7460938,0.1640625,0.2953125,0,0.6367188,0.7460938,0.1992188,-0.2507813,0,0.6660156,0.2910156,0.1453125,-0.2273438,0,0.6210938,0.3105469,0.1453125,-0.234375,0,0.6210938,0.3046875,0.1453125,-0.2367188,0,0.6210938,0.3027344,0.03984375,-0.225,0,0.5332031,0.3125,0.0796875,-0.2414063,0,0.5664063,0.2988281,0.0796875,-0.225,0,0.5664063,0.3125,0.03984375,-0.2414063,0,0.5332031,0.2988281,-0.1546875,-0.2226563,0,0.3710938,0.3144531,-0.15,-0.234375,0,0.375,0.3046875,-0.15,-0.2273438,0,0.375,0.3105469,-0.1546875,-0.2390625,0,0.3710938,0.3007813,-0.1734375,-0.2226563,0,0.3554688,0.3144531,-0.1734375,-0.2390625,0,0.3554688,0.3007813,-0.178125,-0.2273438,0,0.3515625,0.3105469,-0.178125,-0.234375,0,0.3515625,0.3046875,-0.234375,-0.2835937,0,0.3046875,0.2636719,-0.234375,-0.3,0,0.3046875,0.25,-0.2507813,-0.3,0,0.2910156,0.25,-0.3703125,-0.2601562,0,0.1914063,0.2832031,-0.5882813,-0.07265625,0,0.009765625,0.4394531,-0.5953125,-0.1476562,0,0.00390622,0.3769531,-0.6,-0.07265625,0,0,0.4394531,-0.6,-0.1265625,0,0,0.3945313,0.6,0.1453125,0,1,0.6210938,0.5625,0.06328125,0,0.96875,0.5527344,0.6,0.046875,0,1,0.5390625,0.5320312,0.06328125,0,0.9433594,0.5527344,0.5179688,-0.04921875,0,0.9316406,0.4589844,0.5320312,0.046875,0,0.9433594,0.5390625,0.4945313,-0.04921875,0,0.9121094,0.4589844,0.4875,-0.0515625,0,0.90625,0.4570313,0.4875,-0.06328125,0,0.90625,0.4472656,0.5929688,0.02578125,0,0.9941406,0.5214844,0.6,0.02578125,0,1,0.5214844,0.5414063,0.0328125,0,0.9511719,0.5273438,0.6,-0.06328125,0,1,0.4472656,0.5835938,-0.06328125,0,0.9863281,0.4472656,0.5179688,-0.05859375,0,0.9316406,0.4511719,0.515625,-0.065625,0,0.9296875,0.4453125,0.328125,0.2179688,0,0.7734375,0.6816406,0.3257813,0.2109375,0,0.7714844,0.6757813,0.2835937,0.1898438,0,0.7363281,0.6582031,0.2742188,0.1898438,0,0.7285156,0.6582031,0.4898438,-0.065625,0,0.9082031,0.4453125,0.6,-0.1125,0,1,0.40625,0.4734375,-0.2226563,0,0.8945313,0.3144531,0.6,-0.1710937,0,1,0.3574219,-0.5414063,0.084375,0,0.04882813,0.5703125,-0.5179688,0.065625,0,0.06835938,0.5546875,-0.5179688,0.084375,0,0.06835938,0.5703125,-0.5578125,0.03515625,0,0.03515625,0.5292969,-0.6,0.0703125,0,0,0.5585938,-0.6,0.03515625,0,0,0.5292969,0.00234375,0.3046875,0,0.5019531,0.7539063,0.00703125,0.2929688,0,0.5058594,0.7441406,0.00703125,0.3,0,0.5058594,0.75,-0.00234375,0.3046875,0,0.4980469,0.7539063,-0.009375,0.28125,0,0.4921875,0.734375,-0.01640625,0.2953125,0,0.4863281,0.7460938,-0.01640625,0.28125,0,0.4863281,0.734375,0.13125,0.31875,0,0.609375,0.765625,0.121875,0.309375,0,0.6015625,0.7578125,0.121875,0.2929688,0,0.6015625,0.7441406,0.1195313,0.2976563,0,0.5996094,0.7480469,-0.2132813,0.4945313,0,0.3222656,0.9121094,-0.2132813,0.4757813,0,0.3222656,0.8964844,-0.2132813,0.478125,0,0.3222656,0.8984375,-0.215625,0.496875,0,0.3203125,0.9140625,-0.215625,0.478125,0,0.3203125,0.8984375,-0.15,0.4710938,0,0.375,0.8925781,-0.1429688,0.4640625,0,0.3808594,0.8867188,-0.1429688,0.4710938,0,0.3808594,0.8925781,-0.1523438,0.4640625,0,0.3730469,0.8867188,-0.1429688,0.50625,0,0.3808594,0.921875,-0.1757813,0.5179688,0,0.3535156,0.9316406,-0.196875,0.4640625,0,0.3359375,0.8867188,-0.2015625,0.4640625,0,0.3320313,0.8867188,-0.215625,0.5179688,0,0.3203125,0.9316406,0.009375,-0.2273438,0,0.5078125,0.3105469,0.0140625,-0.2390625,0,0.5117188,0.3007813,0.0140625,-0.234375,0,0.5117188,0.3046875,0.00234375,-0.24375,0,0.5019531,0.296875,-0.06796875,-0.24375,0,0.4433594,0.296875,-0.075,-0.2273438,0,0.4375,0.3105469,-0.075,-0.2390625,0,0.4375,0.3007813,0.1148438,0.2859375,0,0.5957031,0.7382813,0.1289063,0.3257813,0,0.6074219,0.7714844,0.1195313,0.3257813,0,0.5996094,0.7714844,0.1101563,0.3304687,0,0.5917969,0.7753906,0.1078125,0.2835937,0,0.5898438,0.7363281,0.1289063,0.3773438,0,0.6074219,0.8144531,0.1101563,0.3398438,0,0.5917969,0.7832031,0.1359375,0.4054688,0,0.6132813,0.8378906,0.13125,0.4289063,0,0.609375,0.8574219,0.1289063,0.4054688,0,0.6074219,0.8378906,0.1171875,0.3890625,0,0.5976563,0.8242188,0.1171875,0.3867188,0,0.5976563,0.8222656,0.08671875,-0.2226563,0,0.5722656,0.3144531,-0.00703125,0.4710938,0,0.4941406,0.8925781,-0.1289063,0.3632813,0,0.3925781,0.8027344,-0.1359375,0.3726563,0,0.3867188,0.8105469,-0.1523438,0.4617188,0,0.3730469,0.8847656,0.1335938,0.3867188,0,0.6113281,0.8222656,0.121875,0.3820313,0,0.6015625,0.8183594,0.1429688,-0.2390625,0,0.6191406,0.3007813,0.08671875,-0.2390625,0,0.5722656,0.3007813,0.084375,-0.2296875,0,0.5703125,0.3085938,0.084375,-0.2367188,0,0.5703125,0.3027344,-0.1289063,0.3539062,0,0.3925781,0.7949219,-0.1289063,0.3515625,0,0.3925781,0.7929688,-0.1335938,0.365625,0,0.3886719,0.8046875,-0.1054688,-0.225,0,0.4121094,0.3125,-0.0984375,-0.234375,0,0.4179688,0.3046875,-0.0984375,-0.2320313,0,0.4179688,0.3066406,-0.1054688,-0.2414063,0,0.4121094,0.2988281,-0.1359375,-0.2414063,0,0.3867188,0.2988281,-0.1382813,-0.225,0,0.3847656,0.3125,-0.1429688,-0.2296875,0,0.3808594,0.3085938,-0.1429688,-0.234375,0,0.3808594,0.3046875,-0.2367188,0.4242188,0,0.3027344,0.8535156,-0.2296875,0.375,0,0.3085938,0.8125,-0.2296875,0.4125,0,0.3085938,0.84375,-0.2390625,0.375,0,0.3007813,0.8125,-0.2484375,0.4242188,0,0.2929688,0.8535156,-0.2484375,0.3796875,0,0.2929688,0.8164063,-0.1664063,0.39375,0,0.3613281,0.828125,-0.1710937,0.3796875,0,0.3574219,0.8164063,-0.1664063,0.3820313,0,0.3613281,0.8183594,-0.1734375,0.3984375,0,0.3554688,0.8320313,-0.1898438,0.3796875,0,0.3417969,0.8164063,-0.1945313,0.3984375,0,0.3378906,0.8320313,-0.196875,0.39375,0,0.3359375,0.828125,-0.196875,0.384375,0,0.3359375,0.8203125,-0.1617188,0.4382813,0,0.3652344,0.8652344,-0.1640625,0.4242188,0,0.3632813,0.8535156,-0.1617188,0.4265625,0,0.3652344,0.8554688,-0.1710937,0.4546875,0,0.3574219,0.8789063,-0.1757813,0.4242188,0,0.3535156,0.8535156,-0.2109375,0.4640625,0,0.3242188,0.8867188,-0.2109375,0.45,0,0.3242188,0.875,-0.215625,0.4617188,0,0.3203125,0.8847656,-0.225,0.4570313,0,0.3125,0.8808594,-0.2273438,0.496875,0,0.3105469,0.9140625,-0.234375,0.4570313,0,0.3046875,0.8808594,-0.2367188,0.4828125,0,0.3027344,0.9023438,-0.2367188,0.459375,0,0.3027344,0.8828125],[432,431,430,429,430,431,428,430,429,354,428,429,427,428,354,355,427,354,427,355,352,426,425,424,363,424,425,362,424,363,423,424,362,421,424,423,420,421,423,422,421,420,419,418,416,417,416,418,415,416,417,413,416,415,412,413,415,414,413,412,411,410,409,406,409,410,407,409,406,408,407,406,352,353,363,351,363,353,405,404,402,403,402,404,398,402,403,401,402,398,399,401,398,400,399,398,396,397,395,9,10,0,65,0,10,25,0,65,22,25,65,24,22,65,23,24,65,66,23,65,38,23,66,30,38,66,64,38,30,35,38,64,37,35,64,63,37,64,36,37,63,298,36,63,62,298,63,294,298,62,50,294,62,51,294,50,384,294,51,396,384,51,397,396,51,395,384,396,386,384,395,346,384,386,344,384,346,341,384,344,342,384,341,282,376,281,372,281,376,280,281,372,278,280,372,279,280,278,248,231,247,228,247,231,225,247,228,384,283,272,273,272,283,394,393,392,384,392,393,272,392,384,391,392,272,288,391,272,287,288,272,383,390,378,377,378,390,389,377,390,231,377,389,230,231,389,383,382,390,381,390,382,389,390,381,379,389,381,230,389,379,229,230,379,388,359,387,357,387,359,358,387,357,385,387,358,386,387,385,345,386,385,346,386,345,343,345,385,380,343,385,340,343,380,342,340,380,382,342,380,378,342,382,384,342,378,283,384,378,376,283,378,282,283,376,375,376,378,383,378,382,381,382,380,379,381,380,194,379,380,229,379,194,375,378,374,377,374,378,373,374,377,248,373,377,231,248,377,376,375,372,374,372,375,350,372,374,348,350,374,373,348,374,347,348,373,248,347,373,275,347,248,249,275,248,372,350,278,349,278,350,277,278,349,371,370,369,365,369,370,368,369,365,366,368,365,367,366,365,354,364,351,361,351,364,363,351,361,362,363,361,359,362,361,360,359,361,356,359,360,358,356,360,359,356,357,358,357,356,355,354,352,351,352,354,353,352,351,226,224,246,245,246,224,221,245,224,43,27,42,350,348,349,277,349,348,347,277,348,276,277,347,275,276,347,217,215,242,218,242,215,219,242,218,241,242,219,214,241,219,213,241,214,346,345,344,343,344,345,341,344,343,340,341,343,342,341,340,266,253,329,252,329,253,328,329,252,327,328,252,250,327,252,251,327,250,326,327,251,339,338,337,334,337,338,335,337,334,336,335,334,171,169,167,318,317,330,316,330,317,325,330,316,314,325,316,324,325,314,207,331,332,333,332,331,269,323,205,202,205,323,204,202,323,207,204,323,331,207,323,322,331,323,270,318,269,330,269,318,325,269,330,323,269,325,285,318,270,284,318,285,266,318,284,265,266,284,329,318,266,328,318,329,327,318,328,326,318,327,251,318,326,211,318,251,212,318,211,190,318,212,324,323,325,314,323,324,315,323,314,321,323,315,319,323,321,322,323,319,320,322,319,315,313,321,311,321,313,319,321,311,312,319,311,320,319,312,310,313,190,317,190,313,318,190,317,316,317,313,314,316,313,315,314,313,311,313,310,312,311,310,182,179,178,309,308,307,306,307,308,305,307,306,180,305,306,181,180,306,179,305,180,304,305,179,182,304,179,1,304,182,302,304,1,303,304,302,121,303,302,120,121,302,301,300,299,298,299,300,297,299,298,294,297,298,295,297,294,296,295,294,293,290,291,292,291,290,222,220,244,223,244,220,227,244,223,243,244,227,216,243,227,289,288,286,287,286,288,271,286,287,269,286,271,205,286,269,270,268,285,274,285,268,267,285,274,284,285,267,265,284,267,283,282,273,281,273,282,280,273,281,279,273,280,278,273,279,277,273,278,276,273,277,275,273,276,249,273,275,268,273,249,274,268,249,267,274,249,235,267,249,272,273,268,271,272,268,269,271,268,270,269,268,265,267,235,253,265,235,266,265,253,236,253,235,264,262,263,260,263,262,259,260,262,261,260,259,258,254,257,255,257,254,256,255,254,197,195,210,253,236,252,233,252,236,234,252,233,250,252,234,232,250,234,211,250,232,251,250,211,232,238,211,241,211,238,213,211,241,249,248,235,246,235,248,247,246,248,225,246,247,226,246,225,245,235,246,221,235,245,222,235,221,244,235,222,243,235,244,216,235,243,217,235,216,240,235,217,242,240,217,239,240,242,241,239,242,237,239,241,238,237,241,235,240,232,239,232,240,237,232,239,238,232,237,236,235,233,232,233,235,234,233,232,231,230,228,229,228,230,194,228,229,227,228,194,216,227,194,190,216,194,225,228,227,223,225,227,224,225,223,226,225,224,221,224,223,220,221,223,222,221,220,214,216,190,219,216,214,218,216,219,215,216,218,217,216,215,213,214,190,211,213,190,212,211,190,197,210,196,208,196,210,199,196,208,203,204,207,210,209,208,203,208,209,199,208,203,206,199,203,207,206,203,205,202,203,204,203,202,201,200,198,195,198,200,196,198,195,199,198,196,197,196,195,194,193,190,192,190,193,189,190,192,191,190,189,188,184,187,185,187,184,186,185,184,166,15,14,183,171,181,167,181,171,13,181,167,14,13,167,178,177,3,12,3,177,182,178,1,3,1,178,181,13,180,179,180,13,178,179,13,177,178,13,12,177,13,18,17,164,166,164,17,16,166,17,15,166,16,176,175,174,173,174,175,170,174,173,172,170,173,168,170,172,169,170,168,171,170,169,167,169,168,18,167,168,164,167,18,165,167,164,166,165,164,163,162,161,160,161,162,159,161,160,156,159,160,157,159,156,158,157,156,155,153,154,151,154,153,150,151,153,152,151,150,149,147,148,145,148,147,144,145,147,146,145,144,132,142,143,141,143,142,140,141,142,139,141,140,136,139,140,137,139,136,138,137,136,135,133,134,131,134,133,130,131,133,132,131,130,129,128,127,123,127,128,126,127,123,124,126,123,125,124,123,122,121,119,120,119,121,118,119,120,116,119,118,115,116,118,117,116,115,114,113,112,111,112,113,109,112,111,108,109,111,110,109,108,107,106,105,101,105,106,104,105,101,102,104,101,103,102,101,100,99,97,96,97,99,98,97,96,95,94,93,89,93,94,92,93,89,90,92,89,91,90,89,88,87,86,83,86,87,84,86,83,85,84,83,82,80,81,77,81,80,79,77,80,78,77,79,73,77,78,76,77,73,74,76,73,75,74,73,12,11,3,0,3,11,9,0,11,72,71,70,25,70,71,23,70,25,69,70,23,67,69,23,68,67,23,10,8,65,6,65,8,4,65,6,30,65,4,66,65,30,30,31,64,34,64,31,32,64,34,63,64,32,33,55,32,53,32,55,63,32,53,62,63,53,52,62,53,50,62,52,61,60,59,38,59,60,58,59,38,36,58,38,56,58,36,57,56,36,5,7,4,27,4,7,29,4,27,31,29,27,34,31,27,54,34,27,43,54,27,40,54,43,41,54,40,48,54,41,34,54,33,55,33,54,53,55,54,48,53,54,45,53,48,44,53,45,49,47,27,42,27,47,46,47,49,44,46,49,53,44,49,52,53,49,50,52,49,51,50,49,48,41,45,42,47,39,46,39,47,44,39,46,41,39,44,45,41,44,43,42,40,39,40,42,41,40,39,38,35,36,37,36,35,34,33,32,4,29,30,31,30,29,7,26,27,28,27,26,25,22,23,24,23,22,21,20,19,7,19,20,18,19,7,17,18,7,16,17,7,15,16,7,14,15,7,13,14,7,12,13,7,11,12,7,8,11,7,9,11,8,10,9,8,6,8,7,5,6,7,6,5,4,3,0,1,2,1,0],0,0,1,1,0,0,1,0.931640625,0,0,0,0,[0,0,0,0],[-0.6,-0.6,0.6,0.6],426.666656494141,512,512,512,512,256,256,0,0]},{"id":28622,"path":"Assets/Content/Sprites/Ingredients/puff pastry.png","assetBundleId":-1,"data":["puff pastry",6,28620,[0.02695313,-0.04335938,0,0.3996094,0.2308594,0],[0.4265625,-0.0375,0,0.8554688,0.46875,0.35625,-0.1617188,0,0.796875,0.3652344,0.4265625,-0.1054688,0,0.8554688,0.4121094,0.2039063,0.15,0,0.6699219,0.625,0.1453125,0.1828125,0,0.6210938,0.6523438,0.1335938,-0.234375,0,0.6113281,0.3046875,0.1007813,0.1875,0,0.5839844,0.65625,0.03984375,0.1875,0,0.5332031,0.65625,-0.0140625,-0.2601562,0,0.4882813,0.2832031,-0.04453125,0.178125,0,0.4628906,0.6484375,-0.07734375,-0.2742188,0,0.4355469,0.2714844,-0.1476562,-0.2742188,0,0.3769531,0.2714844,-0.178125,-0.2625,0,0.3515625,0.28125,-0.225,-0.1851563,0,0.3125,0.3457031,-0.3070312,0.1359375,0,0.2441406,0.6132813,-0.3164063,-0.1359375,0,0.2363281,0.3867188,-0.3304687,-0.0234375,0,0.2246094,0.4804688,-0.3726563,0.1125,0,0.1894531,0.59375,-0.3726563,0.084375,0,0.1894531,0.5703125,-0.3398438,-0.06796875,0,0.2167969,0.4433594],[19,16,15,18,17,16,14,16,17,15,16,14,13,15,14,9,13,14,12,13,9,11,12,9,10,11,9,8,10,9,7,8,9,5,8,7,6,5,7,4,5,6,1,5,4,3,1,4,0,1,3,2,1,0],-0.000148668885231018,-0.0000708699226379395,0.99985134601593,0.999929130077362,0.189453125,0.271484375,0.85546875,0.65625,0,0,0,0,[0,0,0,0],[-0.6,-0.6,0.6,0.6],426.666656494141,512,512,512,512,256,256,97.0761184692383,139.036285400391]},{"id":28554,"path":"Assets/Content/Sprites/Ingredients/Dijon mustard.png","assetBundleId":-1,"data":["Dijon mustard",6,28552,[0,0.01406249,0,0.31875,0.478125,0],[0.2296875,0.4921875,0,0.6914063,0.9101563,0.1453125,-0.39375,0,0.6210938,0.171875,0.215625,-0.05390625,0,0.6796875,0.4550781,-0.05859375,-0.4195313,0,0.4511719,0.1503906,-0.159375,-0.4171875,0,0.3671875,0.1523438,-0.1617188,-0.4101563,0,0.3652344,0.1582031,-0.178125,0.4921875,0,0.3515625,0.9101563,-0.2109375,0.4171875,0,0.3242188,0.8476563,-0.2109375,-0.2742188,0,0.3242188,0.2714844,0.2320313,-0.159375,0,0.6933594,0.3671875,0.3164063,-0.4054688,0,0.7636719,0.1621094,0.31875,-0.4195313,0,0.765625,0.1503906,0.31875,-0.4125,0,0.765625,0.15625,-0.2554688,-0.4335938,0,0.2871094,0.1386719,-0.2578125,-0.4640625,0,0.2851563,0.1132813,-0.2554688,-0.4570313,0,0.2871094,0.1191406,-0.2671875,-0.43125,0,0.2773438,0.140625,-0.2835937,-0.4640625,0,0.2636719,0.1132813,-0.2882813,-0.4546875,0,0.2597656,0.1210938,-0.2929688,-0.43125,0,0.2558594,0.140625,-0.2929688,-0.440625,0,0.2558594,0.1328125,0.1734375,-0.440625,0,0.6445313,0.1328125,0.1757813,-0.4570313,0,0.6464844,0.1191406,0.1757813,-0.45,0,0.6464844,0.125,0.1640625,-0.4640625,0,0.6367188,0.1132813,0.0796875,-0.4640625,0,0.5664063,0.1132813,0.0703125,-0.440625,0,0.5585938,0.1328125,0.0703125,-0.4570313,0,0.5585938,0.1191406,0.2273438,-0.440625,0,0.6894531,0.1328125,0.290625,-0.4640625,0,0.7421875,0.1132813,0.290625,-0.440625,0,0.7421875,0.1328125,0.2226563,-0.4640625,0,0.6855469,0.1132813,0.2179688,-0.4523438,0,0.6816406,0.1230469,0.2179688,-0.459375,0,0.6816406,0.1171875,0.1992188,-0.4453125,0,0.6660156,0.1289063,0.2015625,-0.459375,0,0.6679688,0.1171875,0.2015625,-0.4523438,0,0.6679688,0.1230469,0.1992188,-0.4617188,0,0.6660156,0.1152344,0.1757813,-0.4453125,0,0.6464844,0.1289063,0.1757813,-0.4617188,0,0.6464844,0.1152344,-0.1148438,-0.43125,0,0.4042969,0.140625,-0.1125,-0.4429688,0,0.40625,0.1308594,-0.1125,-0.4359375,0,0.40625,0.1367188,-0.1171875,-0.4453125,0,0.4023438,0.1289063,-0.121875,-0.43125,0,0.3984375,0.140625,-0.1265625,-0.4453125,0,0.3945313,0.1289063,-0.1289063,-0.4382813,0,0.3925781,0.1347656,-0.2507813,-0.4054688,0,0.2910156,0.1621094,-0.253125,-0.4171875,0,0.2890625,0.1523438,-0.2484375,-0.4125,0,0.2929688,0.15625,-0.3140625,-0.4054688,0,0.2382813,0.1621094,-0.3164063,-0.4171875,0,0.2363281,0.1523438,-0.31875,-0.4101563,0,0.234375,0.1582031],[52,50,51,48,51,50,47,48,50,49,48,47,46,44,45,43,45,44,40,43,44,41,43,40,42,41,40,39,22,37,23,37,22,38,37,23,34,37,38,35,37,34,36,35,34,33,32,31,28,31,32,29,31,28,30,29,28,27,26,25,21,25,26,24,25,21,22,24,21,23,22,21,20,19,18,16,18,19,17,18,16,14,17,16,13,14,16,15,14,13,3,1,11,10,11,1,12,11,10,1,2,9,8,7,5,6,5,7,0,5,6,4,5,0,3,4,0,1,3,0,2,1,0],-0.0000252127647399902,-0.0000252202153205872,0.99997478723526,0.99997478723526,0.234375,0.11328125,0.765625,0.91015625,0,0,0,0,[0,0,0,0],[-0.6,-0.6,0.6,0.6],426.666656494141,512,512,512,512,256,256,120.012908935547,58.0129127502441]},{"id":28740,"path":"Assets/Content/Sprites/Ingredients/shrimp.png","assetBundleId":-1,"data":["shrimp",6,28738,[0.009375006,-0.03046875,0,0.375,0.35625,0],[0.1335938,-0.1710937,0,0.6113281,0.3574219,0.13125,-0.1710937,0,0.609375,0.3574219,0.1289063,-0.1710937,0,0.6074219,0.3574219,0.3585938,-0.01875,0,0.7988281,0.484375,0.35625,-0.04921875,0,0.796875,0.4589844,0.3679688,-0.0375,0,0.8066406,0.46875,0.2765625,0.03515625,0,0.7304688,0.5292969,0.2742188,0.03515625,0,0.7285156,0.5292969,0.2273438,-0.075,0,0.6894531,0.4375,0.3796875,0.06796875,0,0.8164063,0.5566406,0.384375,0.0375,0,0.8203125,0.53125,0.384375,0.065625,0,0.8203125,0.5546875,0.3539062,0.1945313,0,0.7949219,0.6621094,0.328125,0.1992188,0,0.7734375,0.6660156,0.3164063,0.02109375,0,0.7636719,0.5175781,0.2882813,0.0328125,0,0.7402344,0.5273438,0.1617188,0.3234375,0,0.6347656,0.7695313,0.3375,-0.08671875,0,0.78125,0.4277344,0.2882813,-0.16875,0,0.7402344,0.359375,0.346875,-0.1101563,0,0.7890625,0.4082031,0.28125,-0.1828125,0,0.734375,0.3476563,0.2859375,-0.178125,0,0.7382813,0.3515625,0.271875,-0.1804688,0,0.7265625,0.3496094,0.2601562,-0.1710937,0,0.7167969,0.3574219,0.1570313,0.3257813,0,0.6308594,0.7714844,0.140625,-0.1710937,0,0.6171875,0.3574219,0.1195313,-0.1734375,0,0.5996094,0.3554688,0.1171875,-0.1757813,0,0.5976563,0.3535156,0.09375,-0.1828125,0,0.578125,0.3476563,0.04453125,-0.2296875,0,0.5371094,0.3085938,0.09375,-0.1921875,0,0.578125,0.3398438,-0.1453125,0.3257813,0,0.3789063,0.7714844,0.0375,-0.3867188,0,0.53125,0.1777344,-0.3421875,-0.3867188,0,0.2148438,0.1777344,-0.365625,-0.09375,0,0.1953125,0.421875,-0.365625,-0.3679688,0,0.1953125,0.1933594,0.2085938,-0.2320313,0,0.6738281,0.3066406,0.1992188,-0.196875,0,0.6660156,0.3359375,0.1195313,-0.1757813,0,0.5996094,0.3535156],[32,29,36,30,36,29,38,36,30,2,36,38,0,36,2,25,36,0,37,36,25,35,34,33,31,33,34,32,33,31,29,32,31,24,29,31,28,29,24,30,29,28,27,28,24,26,27,24,2,26,24,1,2,24,0,1,24,25,0,24,8,25,24,23,25,8,16,8,24,17,23,8,22,23,17,18,22,17,20,22,18,21,20,18,19,18,17,16,13,8,7,8,13,6,7,13,15,6,13,14,15,13,10,14,13,12,10,13,9,10,12,11,10,9,8,7,4,6,4,7,3,4,6,5,4,3,2,1,0],-0.0000522434711456299,-0.0000522434711456299,0.999947786331177,0.999947786331177,0.1953125,0.177734375,0.8203125,0.771484375,0,0,0,0,[0,0,0,0],[-0.6,-0.6,0.6,0.6],426.666656494141,512,512,512,512,256,256,100.026748657227,91.0267486572266]},{"id":28280,"path":"Assets/Content/Sprites/Ingredients/groung lamb.png","assetBundleId":-1,"data":["groung lamb",6,28278,[-0.002343744,-0.06796874,0,0.4078125,0.3421875,0],[-0.3117188,-0.2460938,0,0.2402344,0.2949219,-0.309375,-0.2789063,0,0.2421875,0.2675781,-0.2765625,-0.2789063,0,0.2695313,0.2675781,-0.3304687,-0.2460938,0,0.2246094,0.2949219,-0.253125,-0.3023438,0,0.2890625,0.2480469,-0.2507813,-0.3023438,0,0.2910156,0.2480469,-0.290625,-0.328125,0,0.2578125,0.2265625,-0.3164063,-0.3234375,0,0.2363281,0.2304688,-0.346875,-0.2789063,0,0.2109375,0.2675781,-0.3515625,-0.2460938,0,0.2070313,0.2949219,-0.3539062,-0.2648438,0,0.2050781,0.2792969,0.1195313,-0.3960938,0,0.5996094,0.1699219,0.121875,-0.4101563,0,0.6015625,0.1582031,0.121875,-0.403125,0,0.6015625,0.1640625,0.0890625,-0.3867188,0,0.5742188,0.1777344,0.04921875,-0.384375,0,0.5410156,0.1796875,-0.028125,-0.3796875,0,0.4765625,0.1835938,-0.2390625,-0.328125,0,0.3007813,0.2265625,-0.234375,-0.3234375,0,0.3046875,0.2304688,-0.2859375,-0.328125,0,0.2617188,0.2265625,-0.3398438,-0.3609375,0,0.2167969,0.1992188,-0.346875,-0.4101563,0,0.2109375,0.1582031,-0.2367188,-0.3164063,0,0.3027344,0.2363281,-0.4007813,-0.2765625,0,0.1660156,0.2695313,-0.39375,-0.3070312,0,0.171875,0.2441406,-0.39375,-0.2835937,0,0.171875,0.2636719,-0.4007813,-0.309375,0,0.1660156,0.2421875,-0.4078125,-0.2765625,0,0.1601563,0.2695313,-0.4101563,-0.28125,0,0.1582031,0.265625,-0.4101563,-0.3,0,0.1582031,0.25,0.09140625,0.225,0,0.5761719,0.6875,0.09375,0.2109375,0,0.578125,0.6757813,0.09375,0.2203125,0,0.578125,0.6835938,0.0796875,0.225,0,0.5664063,0.6875,0.0796875,0.2109375,0,0.5664063,0.6757813,0.07734375,0.2203125,0,0.5644531,0.6835938,0.07734375,0.2132813,0,0.5644531,0.6777344,0.0984375,0.2320313,0,0.5820313,0.6933594,0.0890625,0.2367188,0,0.5742188,0.6972656,0.2015625,0.2742188,0,0.6679688,0.7285156,0.121875,0.2320313,0,0.6015625,0.6933594,0.1523438,-0.28125,0,0.6269531,0.265625,0.1171875,0.2367188,0,0.5976563,0.6972656,0.1101563,0.234375,0,0.5917969,0.6953125,0.1078125,0.2460938,0,0.5898438,0.7050781,0.1101563,0.2273438,0,0.5917969,0.6894531,0.09140625,0.2460938,0,0.5761719,0.7050781,0.0890625,0.2414063,0,0.5742188,0.7011719,0.0703125,0.2320313,0,0.5585938,0.6933594,0.06328125,0.2390625,0,0.5527344,0.6992188,0.05390625,0.2414063,0,0.5449219,0.7011719,0.04921875,0.2367188,0,0.5410156,0.6972656,-0.2414063,0.2742188,0,0.2988281,0.7285156,0.04921875,0.2296875,0,0.5410156,0.6914063,0.3820313,-0.2507813,0,0.8183594,0.2910156,0.403125,-0.2484375,0,0.8359375,0.2929688,0.384375,-0.2484375,0,0.8203125,0.2929688,0.3492188,-0.3773438,0,0.7910156,0.1855469,0.3234375,-0.328125,0,0.7695313,0.2265625,0.3234375,-0.384375,0,0.7695313,0.1796875,0.4054688,-0.02109375,0,0.8378906,0.4824219,0.4054688,-0.2414063,0,0.8378906,0.2988281,0.384375,0.04453125,0,0.8203125,0.5371094,0.3445313,0.2320313,0,0.7871094,0.6933594,0.225,-0.4101563,0,0.6875,0.1582031,0.2109375,-0.4101563,0,0.6757813,0.1582031,0.09375,-0.3820313,0,0.578125,0.1816406,0.0328125,-0.3820313,0,0.5273438,0.1816406,0.403125,-0.3328125,0,0.8359375,0.2226563,0.403125,-0.2484375,0,0.8359375,0.2929688,0.3679688,-0.3960938,0,0.8066406,0.1699219,0.3585938,-0.3984375,0,0.7988281,0.1679688,0.3234375,-0.3984375,0,0.7695313,0.1679688,0.121875,0.225,0,0.6015625,0.6875,0.1148438,0.2226563,0,0.5957031,0.6855469,0.1078125,0.2320313,0,0.5898438,0.6933594,0.0703125,0.225,0,0.5585938,0.6875,0.065625,0.2226563,0,0.5546875,0.6855469,0.05859375,0.2226563,0,0.5488281,0.6855469,-0.3117188,0.2484375,0,0.2402344,0.7070313,-0.3726563,-0.178125,0,0.1894531,0.3515625,-0.4054688,0.1078125,0,0.1621094,0.5898438,-0.4054688,-0.0609375,0,0.1621094,0.4492188],[45,43,74,42,74,43,73,74,42,40,73,42,53,51,78,50,78,51,49,78,50,77,78,49,48,77,49,76,77,48,38,47,37,46,37,47,44,37,46,75,37,44,82,81,80,79,80,81,3,80,79,0,3,79,2,0,79,52,2,79,41,2,52,53,41,52,78,41,53,77,41,78,76,41,77,48,41,76,36,41,48,34,41,36,31,41,34,32,41,31,37,41,32,75,41,37,44,41,75,45,41,44,74,41,45,73,41,74,40,41,73,72,59,71,57,71,59,55,71,57,70,71,55,68,70,55,69,68,55,5,41,22,18,22,41,16,18,41,67,16,41,66,67,41,65,66,41,39,65,41,63,65,39,64,65,63,58,64,63,59,64,58,54,58,63,62,54,63,56,54,62,55,56,62,60,55,62,61,55,60,59,58,57,54,57,58,55,57,54,56,55,54,39,50,52,51,52,50,53,52,51,49,50,39,46,49,39,48,49,46,33,48,46,35,48,33,36,48,35,47,33,46,38,33,47,44,46,39,43,44,39,45,44,43,42,43,39,40,42,39,41,40,39,33,38,30,37,30,38,32,30,37,36,35,34,33,34,35,31,34,33,30,31,33,32,31,30,29,28,26,27,26,28,23,26,27,24,26,23,25,24,23,6,4,19,17,19,4,5,17,4,22,17,5,18,17,22,21,20,12,6,12,20,19,12,6,16,12,19,17,16,19,18,16,17,15,12,16,14,12,15,11,12,14,13,12,11,10,9,8,3,8,9,7,8,3,1,7,3,6,7,1,2,6,1,4,6,2,5,4,2,3,0,1,2,1,0],-0.0000522434711456299,-0.0000252127647399902,0.999947786331177,0.99997478723526,0.158203125,0.158203125,0.837890625,0.728515625,0,0,0,0,[0,0,0,0],[-0.6,-0.6,0.6,0.6],426.666656494141,512,512,512,512,256,256,81.0267486572266,81.0129089355469]},{"id":28758,"path":"Assets/Content/Sprites/Ingredients/cod fillets.png","assetBundleId":-1,"data":["cod fillets",6,28756,[0.03281251,-0.03984375,0,0.4289063,0.2484375,0],[0.4570313,-0.02578125,0,0.8808594,0.4785156,0.4617188,-0.0890625,0,0.8847656,0.4257813,0.4617188,-0.046875,0,0.8847656,0.4609375,0.4546875,-0.1007813,0,0.8789063,0.4160156,0.4148438,-0.1476562,0,0.8457031,0.3769531,0.403125,0.0890625,0,0.8359375,0.5742188,0.3539062,-0.1828125,0,0.7949219,0.3476563,0.3117188,0.1523438,0,0.7597656,0.6269531,0.2203125,0.1851563,0,0.6835938,0.6542969,0.2039063,0.20625,0,0.6699219,0.671875,0.1945313,-0.2460938,0,0.6621094,0.2949219,0.178125,0.2085938,0,0.6484375,0.6738281,0.1125,0.2085938,0,0.59375,0.6738281,0.1078125,-0.2695313,0,0.5898438,0.2753906,0.04921875,0.1992188,0,0.5410156,0.6660156,-0.05859375,-0.2859375,0,0.4511719,0.2617188,-0.07734375,-0.2882813,0,0.4355469,0.2597656,-0.1382813,-0.05390625,0,0.3847656,0.4550781,-0.1945313,-0.06796875,0,0.3378906,0.4433594,-0.3796875,0.1078125,0,0.1835938,0.5898438,-0.3914063,-0.07734375,0,0.1738281,0.4355469,-0.3960938,0.07265625,0,0.1699219,0.5605469,-0.3960938,-0.05859375,0,0.1699219,0.4511719,-0.271875,-0.2882813,0,0.2734375,0.2597656,-0.328125,-0.2039063,0,0.2265625,0.3300781],[24,17,23,16,23,17,22,21,20,19,20,21,18,20,19,14,18,19,17,18,14,16,17,14,15,16,14,13,15,14,12,13,14,10,13,12,11,10,12,9,10,11,6,10,9,8,6,9,7,6,8,5,6,7,4,6,5,0,4,5,3,4,0,1,3,0,2,1,0],-0.000148668885231018,-0.000133514404296875,0.99985134601593,0.999866485595703,0.169921875,0.259765625,0.884765625,0.673828125,0,0,0,0,[0,0,0,0],[-0.6,-0.6,0.6,0.6],426.666656494141,512,512,512,512,256,256,87.0761184692383,133.068359375]},{"id":28764,"path":"Assets/Content/Sprites/Ingredients/molasses.png","assetBundleId":-1,"data":["molasses",6,28762,[0.028125,0.09492187,0,0.4078125,0.4042969,0],[0.4289063,0.1921875,0,0.8574219,0.6601563,0.4359375,0.0890625,0,0.8632813,0.5742188,0.4359375,0.1710937,0,0.8632813,0.6425781,0.4148438,0.02578125,0,0.8457031,0.5214844,0.3539062,-0.1382813,0,0.7949219,0.3847656,0.3375,-0.1804688,0,0.78125,0.3496094,0.2882813,-0.2460938,0,0.7402344,0.2949219,0.2554688,0.3257813,0,0.7128906,0.7714844,0.2367188,0.3023438,0,0.6972656,0.7519531,0.1945313,-0.2929688,0,0.6621094,0.2558594,0.1289063,-0.309375,0,0.6074219,0.2421875,0.0796875,0.3,0,0.5664063,0.75,-0.0140625,0.3117188,0,0.4882813,0.7597656,-0.02109375,-0.309375,0,0.4824219,0.2421875,-0.07734375,0.3632813,0,0.4355469,0.8027344,-0.08203125,0.365625,0,0.4316406,0.8046875,-0.09375,0.365625,0,0.421875,0.8046875,-0.0984375,-0.3046875,0,0.4179688,0.2460938,-0.1710937,-0.2859375,0,0.3574219,0.2617188,-0.1851563,0.2859375,0,0.3457031,0.7382813,-0.2648438,-0.215625,0,0.2792969,0.3203125,-0.3140625,-0.1054688,0,0.2382813,0.4121094,-0.3234375,0.2273438,0,0.2304688,0.6894531,-0.375,0.1757813,0,0.1875,0.6464844,-0.3796875,0.140625,0,0.1835938,0.6171875,-0.3796875,0.075,0,0.1835938,0.5625,-0.2601562,-0.2273438,0,0.2832031,0.3105469,-0.2625,-0.2554688,0,0.28125,0.2871094,-0.2601562,-0.253125,0,0.2832031,0.2890625,-0.2648438,-0.225,0,0.2792969,0.3125,-0.2695313,-0.2554688,0,0.2753906,0.2871094,-0.271875,-0.2273438,0,0.2734375,0.3105469,-0.271875,-0.2507813,0,0.2734375,0.2910156,0.1476562,0.375,0,0.6230469,0.8125,0.1429688,0.3679688,0,0.6191406,0.8066406,0.1476562,0.3726563,0,0.6230469,0.8105469,0.1359375,0.3867188,0,0.6132813,0.8222656,0.1335938,0.3679688,0,0.6113281,0.8066406,0.1289063,0.3867188,0,0.6074219,0.8222656,0.1265625,0.3820313,0,0.6054688,0.8183594,0.1265625,0.3726563,0,0.6054688,0.8105469,-0.0234375,0.4664063,0,0.4804688,0.8886719,-0.01875,0.459375,0,0.484375,0.8828125,-0.01875,0.4664063,0,0.484375,0.8886719,-0.02578125,0.46875,0,0.4785156,0.890625,-0.03515625,0.4757813,0,0.4707031,0.8964844,-0.0375,0.4289063,0,0.46875,0.8574219,-0.0515625,0.4078125,0,0.4570313,0.8398438,-0.06328125,0.4546875,0,0.4472656,0.8789063,-0.0703125,0.4078125,0,0.4414063,0.8398438,-0.07265625,0.4265625,0,0.4394531,0.8554688,-0.07265625,0.4125,0,0.4394531,0.84375,0.0140625,0.4992188,0,0.5117188,0.9160156,0.01875,0.478125,0,0.515625,0.8984375,0.01875,0.496875,0,0.515625,0.9140625,-0.009375,0.4664063,0,0.4921875,0.8886719,-0.0140625,0.4992188,0,0.4882813,0.9160156,-0.0234375,0.4757813,0,0.4804688,0.8964844,-0.02578125,0.4828125,0,0.4785156,0.9023438,-0.02578125,0.4757813,0,0.4785156,0.8964844],[44,45,59,44,59,41,57,41,59,43,41,57,59,58,57,56,57,58,43,57,56,55,43,56,52,55,56,53,55,52,54,53,52,51,50,49,48,49,50,47,49,48,45,47,48,46,47,45,42,46,45,44,42,45,41,42,44,43,42,41,40,39,37,38,37,39,36,37,38,34,37,36,33,34,36,35,34,33,32,31,30,29,30,31,27,30,29,26,27,29,28,27,26,25,24,21,23,21,24,22,21,23,19,21,22,20,21,19,18,20,19,16,18,19,17,18,16,13,17,16,15,13,16,14,13,15,12,13,14,10,13,12,11,10,12,8,10,11,9,10,8,6,9,8,7,6,8,0,6,7,5,6,0,4,5,0,3,4,0,1,3,0,2,1,0],-0.0000522434711456299,-0.0000522434711456299,0.999947786331177,0.999947786331177,0.18359375,0.2421875,0.86328125,0.916015625,0,0,0,0,[0,0,0,0],[-0.6,-0.6,0.6,0.6],426.666656494141,512,512,512,512,256,256,94.0267486572266,124.026748657227]},{"id":28832,"path":"Assets/Content/Sprites/Ingredients/mozarella.png","assetBundleId":-1,"data":["mozarella",6,28830,[-0.03164062,0.01992187,0,0.4230469,0.2964844,0],[0.3914063,-0.009375,0,0.8261719,0.4921875,0.3632813,-0.1664063,0,0.8027344,0.3613281,0.3914063,-0.103125,0,0.8261719,0.4140625,0.3539062,0.08671875,0,0.7949219,0.5722656,0.3164063,-0.20625,0,0.7636719,0.328125,0.2929688,0.178125,0,0.7441406,0.6484375,0.2203125,0.2320313,0,0.6835938,0.6933594,0.1476562,0.2695313,0,0.6230469,0.7246094,0.1382813,-0.2765625,0,0.6152344,0.2695313,-0.04453125,0.271875,0,0.4628906,0.7265625,-0.065625,-0.2765625,0,0.4453125,0.2695313,-0.07734375,0.3164063,0,0.4355469,0.7636719,-0.09140625,-0.2742188,0,0.4238281,0.2714844,-0.1429688,0.3164063,0,0.3808594,0.7636719,-0.2390625,0.2578125,0,0.3007813,0.7148438,-0.2484375,-0.1640625,0,0.2929688,0.3632813,-0.2859375,0.159375,0,0.2617188,0.6328125,-0.3726563,-0.1945313,0,0.1894531,0.3378906,-0.3796875,-0.0140625,0,0.1835938,0.4882813,-0.3820313,0.1710937,0,0.1816406,0.6425781,-0.440625,0.03515625,0,0.1328125,0.5292969,-0.4546875,0.1289063,0,0.1210938,0.6074219,-0.4546875,0.07734375,0,0.1210938,0.5644531,-0.3867188,-0.16875,0,0.1777344,0.359375,-0.4054688,-0.0703125,0,0.1621094,0.4414063],[24,18,23,17,23,18,22,21,20,19,20,21,18,20,19,16,18,19,17,18,16,15,17,16,14,15,16,12,15,14,13,12,14,11,12,13,10,12,11,9,10,11,8,10,9,7,8,9,4,8,7,6,4,7,5,4,6,3,4,5,1,4,3,0,1,3,2,1,0],-0.000148676335811615,-0.000148683786392212,0.99985134601593,0.99985134601593,0.12109375,0.26953125,0.826171875,0.763671875,0,0,0,0,[0,0,0,0],[-0.6,-0.6,0.6,0.6],426.666656494141,512,512,512,512,256,256,62.0761222839355,138.076126098633]},{"id":29098,"path":"Assets/Content/Sprites/Tiles/tile_c2_t5.png","assetBundleId":-1,"data":["tile_c2_t5",6,29096,[0,0,0,1.2,1.2,0],[-1.2,1.2,0,0,1,1.2,-1.2,0,1,0,1.2,1.2,0,1,1,-1.2,-1.2,0,0,0],[3,0,1,2,1,0],0,0,1,1,0,0,1,1,0,0,0,0,[0,0,0,0],[-1.2,-1.2,1.2,1.2],53.3333320617676,128,128,128,128,64,64,0,0]},{"id":28942,"path":"Assets/Content/Sprites/Tiles/tile_c2_t3.png","assetBundleId":-1,"data":["tile_c2_t3",6,28940,[0,0,0,0.5688889,0.5688889,0],[-0.5688889,0.5688889,0,0,1,0.5688889,-0.5688889,0,1,0,0.5688889,0.5688889,0,1,1,-0.5688889,-0.5688889,0,0,0],[3,0,1,2,1,0],0,0,1,1,0,0,1,1,0,0,0,0,[0,0,0,0],[-0.5688889,-0.5688889,0.5688889,0.5688889],112.5,128,128,128,128,64,64,0,0]},{"id":29276,"path":"Assets/Content/Sprites/Ingredients/chicken thighs.png","assetBundleId":-1,"data":["chicken thighs",6,29274,[0.02695313,0.02695313,0,0.4347656,0.3550781,0],[0.4617188,-0.1640625,0,0.8847656,0.3632813,0.459375,-0.253125,0,0.8828125,0.2890625,0.4617188,-0.2414063,0,0.8847656,0.2988281,0.3984375,-0.3140625,0,0.8320313,0.2382813,0.3679688,-0.08671875,0,0.8066406,0.4277344,0.3164063,-0.2953125,0,0.7636719,0.2539063,0.225,0.2765625,0,0.6875,0.7304688,0.1851563,-0.1078125,0,0.6542969,0.4101563,0.1757813,-0.1523438,0,0.6464844,0.3730469,0.1289063,0.3703125,0,0.6074219,0.8085938,0.1289063,-0.328125,0,0.6074219,0.2265625,0.20625,-0.2484375,0,0.671875,0.2929688,0.08671875,0.3796875,0,0.5722656,0.8164063,0.075,-0.328125,0,0.5625,0.2265625,0.06328125,0.3820313,0,0.5527344,0.8183594,0.0328125,-0.2929688,0,0.5273438,0.2558594,-0.00703125,0.3820313,0,0.4941406,0.8183594,-0.02578125,0.3773438,0,0.4785156,0.8144531,-0.0796875,0.3539062,0,0.4335938,0.7949219,-0.1007813,-0.1429688,0,0.4160156,0.3808594,-0.2484375,0.3609375,0,0.2929688,0.8007813,-0.3257813,0.3398438,0,0.2285156,0.7832031,-0.3445313,-0.103125,0,0.2128906,0.4140625,-0.3515625,0.3210938,0,0.2070313,0.7675781,-0.3679688,0.3046875,0,0.1933594,0.7539063,-0.4007813,0.2414063,0,0.1660156,0.7011719,-0.4078125,0.1640625,0,0.1601563,0.6367188,-0.4078125,0.00703125,0,0.1601563,0.5058594],[27,26,22,25,22,26,24,22,25,23,22,24,21,22,23,19,22,21,20,19,21,18,19,20,15,19,18,17,15,18,16,15,17,14,15,16,13,15,14,12,13,14,10,13,12,9,10,12,8,10,9,11,10,8,9,6,8,7,8,6,5,7,6,4,5,6,3,5,4,0,3,4,1,3,0,2,1,0],-0.000148668885231018,-0.0000838041305541992,0.99985134601593,0.999916195869446,0.16015625,0.2265625,0.884765625,0.818359375,0,0,0,0,[0,0,0,0],[-0.6,-0.6,0.6,0.6],426.666656494141,512,512,512,512,256,256,82.0761184692383,116.042907714844]},{"id":29110,"path":"Assets/Content/Sprites/Ingredients/shredded chicken.png","assetBundleId":-1,"data":["shredded chicken",6,29108,[-0.02226563,-0.007031247,0,0.4839844,0.3046875,0],[-0.06328125,-0.2085938,0,0.4472656,0.3261719,-0.06796875,-0.2226563,0,0.4433594,0.3144531,-0.0609375,-0.215625,0,0.4492188,0.3203125,-0.09140625,-0.2085938,0,0.4238281,0.3261719,-0.09140625,-0.225,0,0.4238281,0.3125,-0.09609375,-0.2132813,0,0.4199219,0.3222656,-0.09609375,-0.2203125,0,0.4199219,0.3164063,-0.103125,-0.3,0,0.4140625,0.25,-0.1054688,-0.3117188,0,0.4121094,0.2402344,-0.1007813,-0.3070312,0,0.4160156,0.2441406,-0.1148438,-0.3,0,0.4042969,0.25,-0.1171875,-0.3117188,0,0.4023438,0.2402344,-0.1195313,-0.3046875,0,0.4003906,0.2460938,0.3398438,-0.2367188,0,0.7832031,0.3027344,0.35625,-0.2578125,0,0.796875,0.2851563,0.35625,-0.2367188,0,0.796875,0.3027344,0.2953125,-0.2859375,0,0.7460938,0.2617188,0.2296875,-0.2695313,0,0.6914063,0.2753906,0.2296875,-0.2859375,0,0.6914063,0.2617188,0.08671875,-0.215625,0,0.5722656,0.3203125,0.09140625,-0.225,0,0.5761719,0.3125,0.09140625,-0.2203125,0,0.5761719,0.3164063,0.08671875,-0.2296875,0,0.5722656,0.3085938,0.07265625,-0.215625,0,0.5605469,0.3203125,0.07265625,-0.2296875,0,0.5605469,0.3085938,0.06796875,-0.2203125,0,0.5566406,0.3164063,0.06796875,-0.225,0,0.5566406,0.3125,-0.4523438,-0.0046875,0,0.1230469,0.4960938,-0.4546875,-0.0046875,0,0.1210938,0.4960938,-0.4523438,-0.02109375,0,0.1230469,0.4824219,-0.3351563,-0.1734375,0,0.2207031,0.3554688,-0.3304687,-0.1851563,0,0.2246094,0.3457031,-0.3304687,-0.178125,0,0.2246094,0.3515625,-0.3375,-0.1875,0,0.21875,0.34375,-0.3421875,-0.1757813,0,0.2148438,0.3535156,-0.3421875,-0.1828125,0,0.2148438,0.3476563,-0.45,-0.03515625,0,0.125,0.4707031,-0.45,-0.02109375,0,0.125,0.4824219,-0.4664063,-0.0046875,0,0.1113281,0.4960938,-0.4875,-0.07734375,0,0.09375,0.4355469,-0.4921875,-0.03515625,0,0.08984375,0.4707031,-0.4945313,-0.07734375,0,0.08789063,0.4355469,-0.4992188,-0.07734375,0,0.08398438,0.4355469,-0.5015625,-0.06796875,0,0.08203122,0.4433594,-0.5015625,-0.07734375,0,0.08203122,0.4355469,-0.45,-0.00703125,0,0.125,0.4941406,0.3609375,0.1523438,0,0.8007813,0.6269531,0.39375,-0.01640625,0,0.828125,0.4863281,0.39375,0.04453125,0,0.828125,0.5371094,0.3140625,0.1898438,0,0.7617188,0.6582031,0.2601562,-0.1289063,0,0.7167969,0.3925781,0.1476562,-0.1804688,0,0.6230469,0.3496094,0.09609375,0.2929688,0,0.5800781,0.7441406,0.05625,0.2976563,0,0.546875,0.7480469,0.04921875,-0.1945313,0,0.5410156,0.3378906,-0.0796875,0.2976563,0,0.4335938,0.7480469,-0.1617188,-0.1945313,0,0.3652344,0.3378906,-0.20625,0.2765625,0,0.328125,0.7304688,-0.3351563,-0.1125,0,0.2207031,0.40625,-0.3703125,0.1898438,0,0.1914063,0.6582031,-0.4078125,-0.009375,0,0.1601563,0.4921875,-0.4523438,0.0421875,0,0.1230469,0.5351563,-0.4898438,-0.1359375,0,0.09179688,0.3867188,-0.4898438,-0.08671875,0,0.09179688,0.4277344,-0.4992188,-0.140625,0,0.08398438,0.3828125,-0.5039063,-0.140625,0,0.08007813,0.3828125,-0.50625,-0.084375,0,0.078125,0.4296875,-0.50625,-0.1359375,0,0.078125,0.3867188,0.459375,-0.075,0,0.8828125,0.4375,0.4570313,-0.08671875,0,0.8808594,0.4277344,0.4617188,-0.08203125,0,0.8847656,0.4316406,0.4523438,-0.075,0,0.8769531,0.4375,0.45,-0.08671875,0,0.875,0.4277344,0.4476563,-0.0796875,0,0.8730469,0.4335938,0.4546875,-0.03984375,0,0.8789063,0.4667969,0.4429688,-0.0609375,0,0.8691406,0.4492188,0.4546875,-0.0609375,0,0.8789063,0.4492188,0.4359375,-0.00703125,0,0.8632813,0.4941406,0.4171875,-0.00703125,0,0.8476563,0.4941406,0.4125,-0.009375,0,0.84375,0.4921875,0.4125,-0.02109375,0,0.84375,0.4824219,0.4148438,-0.0046875,0,0.8457031,0.4960938,0.4148438,-0.00703125,0,0.8457031,0.4941406,0.4078125,-0.0140625,0,0.8398438,0.4882813,0.4054688,0.0046875,0,0.8378906,0.5039063,0.4054688,-0.0140625,0,0.8378906,0.4882813,0.4007813,0.0046875,0,0.8339844,0.5039063,0.3960938,0,0,0.8300781,0.5,0.3960938,-0.0046875,0,0.8300781,0.4960938],[88,87,85,86,85,87,84,85,86,83,85,84,81,83,84,79,83,81,82,79,81,80,79,75,78,75,79,77,75,78,74,75,77,76,75,74,73,71,72,69,72,71,68,69,71,70,69,68,67,66,65,42,65,66,64,65,42,62,64,42,41,62,42,63,62,41,37,45,60,27,61,45,59,45,61,60,45,59,58,60,59,57,58,59,56,58,57,55,56,57,54,56,55,53,54,55,51,54,53,52,51,53,49,51,52,50,51,49,47,50,49,46,47,49,48,47,46,29,27,37,45,37,27,44,43,42,40,42,43,41,42,40,39,41,40,38,39,40,36,39,38,29,36,38,28,29,38,37,36,29,35,34,33,30,33,34,31,33,30,32,31,30,29,28,27,26,25,24,23,24,25,22,24,23,19,22,23,20,22,19,21,20,19,18,17,16,13,16,17,14,16,13,15,14,13,12,10,11,8,11,10,7,8,10,9,8,7,6,5,4,3,4,5,1,4,3,0,1,3,2,1,0],-0.000148676335811615,-0.000148668885231018,0.99985134601593,0.99985134601593,0.078125,0.240234375,0.884765625,0.748046875,0,0,0,0,[0,0,0,0],[-0.6,-0.6,0.6,0.6],426.666656494141,512,512,512,512,256,256,40.0761222839355,123.076118469238]},{"id":29324,"path":"Assets/Content/Sprites/Ingredients/bell peppers.png","assetBundleId":-1,"data":["bell peppers",6,29322,[-0.05976564,0.01875001,0,0.4652344,0.3140625,0],[0.103125,0.3328125,0,0.5859375,0.7773438,-0.00234375,0.2109375,0,0.4980469,0.6757813,0.065625,0.2226563,0,0.5546875,0.6855469,-0.046875,0.3328125,0,0.4609375,0.7773438,-0.09140625,0.2367188,0,0.4238281,0.6972656,0.3914063,0.1804688,0,0.8261719,0.6503906,0.4054688,-0.075,0,0.8378906,0.4375,0.4054688,0.1007813,0,0.8378906,0.5839844,0.3914063,-0.1546875,0,0.8261719,0.3710938,0.3304687,0.2414063,0,0.7753906,0.7011719,0.3070312,-0.2554688,0,0.7558594,0.2871094,0.1898438,0.2507813,0,0.6582031,0.7089844,0.159375,-0.2765625,0,0.6328125,0.2695313,0.121875,0.3257813,0,0.6015625,0.7714844,0.04921875,-0.225,0,0.5410156,0.3125,-0.1289063,-0.2953125,0,0.3925781,0.2539063,-0.1523438,0.13125,0,0.3730469,0.609375,-0.2484375,-0.2953125,0,0.2929688,0.2539063,-0.2859375,0.140625,0,0.2617188,0.6171875,-0.3796875,-0.225,0,0.1835938,0.3125,-0.4171875,0.02109375,0,0.1523438,0.5175781,-0.43125,-0.1617188,0,0.140625,0.3652344,-0.4570313,-0.215625,0,0.1191406,0.3203125,-0.4734375,-0.0609375,0,0.1054688,0.4492188,-0.525,-0.1171875,0,0.06249997,0.4023438,-0.525,-0.1875,0,0.06249997,0.34375],[25,24,22,23,22,24,20,22,23,21,22,20,19,21,20,18,19,20,17,19,18,16,17,18,15,17,16,2,15,16,14,15,2,12,14,2,0,12,2,13,12,0,11,12,13,10,12,11,9,10,11,8,10,9,5,8,9,6,8,5,7,6,5,4,3,1,0,1,3,2,1,0],-0.0000522807240486145,-0.0000522434711456299,0.999947726726532,0.999947786331177,0.0624999701976776,0.25390625,0.837890625,0.77734375,0,0,0,0,[0,0,0,0],[-0.6,-0.6,0.6,0.6],426.666656494141,512,512,512,512,256,256,32.0267524719238,130.026748657227]},{"id":29340,"path":"Assets/Content/Sprites/Ingredients/cloves seed.png","assetBundleId":-1,"data":["cloves seed",6,29338,[0,-0.09375,0,0.6,0.50625,0],[0.08203125,-0.5460938,0,0.5683594,0.04492188,0.08671875,-0.5625,0,0.5722656,0.03125,0.08671875,-0.5507813,0,0.5722656,0.04101563,0.0796875,-0.6,0,0.5664063,0,0.03984375,-0.5460938,0,0.5332031,0.04492188,-0.065625,-0.6,0,0.4453125,0,-0.1007813,-0.5554687,0,0.4160156,0.0371094,-0.103125,-0.5578125,0,0.4140625,0.03515625,-0.103125,-0.5789062,0,0.4140625,0.01757815,0.3867188,-0.5226563,0,0.8222656,0.06445313,0.3820313,-0.5390625,0,0.8183594,0.05078125,0.3867188,-0.5273438,0,0.8222656,0.06054688,0.3796875,-0.5203125,0,0.8164063,0.06640628,0.375,-0.5414063,0,0.8125,0.04882813,0.3679688,-0.5320312,0,0.8066406,0.05664065,0.3679688,-0.534375,0,0.8066406,0.0546875,0.3867188,-0.5109375,0,0.8222656,0.07421875,0.39375,-0.5203125,0,0.828125,0.06640628,0.39375,-0.5132813,0,0.828125,0.0722656,0.3820313,-0.515625,0,0.8183594,0.0703125,0.6,-0.4148438,0,1,0.1542969,0.5929688,-0.45,0,0.9941406,0.125,0.6,-0.4382813,0,1,0.1347656,0.571875,-0.4242188,0,0.9765625,0.1464844,0.5460938,-0.4898438,0,0.9550781,0.09179688,0.4945313,-0.4570313,0,0.9121094,0.1191406,0.4664063,-0.4710938,0,0.8886719,0.1074219,0.4546875,-0.4945313,0,0.8789063,0.08789063,0.4476563,-0.4828125,0,0.8730469,0.09765625,0.4476563,-0.4875,0,0.8730469,0.09375,-0.3421875,-0.3,0,0.2148438,0.25,-0.3421875,-0.31875,0,0.2148438,0.234375,-0.3421875,-0.3070312,0,0.2148438,0.2441406,-0.3421875,-0.3328125,0,0.2148438,0.2226563,-0.3632813,-0.3210938,0,0.1972656,0.2324219,-0.3703125,-0.31875,0,0.1914063,0.234375,-0.3867188,-0.3328125,0,0.1777344,0.2226563,-0.375,-0.3234375,0,0.1875,0.2304688,-0.3984375,-0.2835937,0,0.1679688,0.2636719,-0.403125,-0.2835937,0,0.1640625,0.2636719,-0.403125,-0.2976563,0,0.1640625,0.2519531,-0.4125,-0.2835937,0,0.15625,0.2636719,-0.4054688,-0.290625,0,0.1621094,0.2578125,-0.4171875,-0.2835937,0,0.1523438,0.2636719,-0.4242188,-0.290625,0,0.1464844,0.2578125,-0.4242188,-0.3164063,0,0.1464844,0.2363281,-0.3632813,-0.328125,0,0.1972656,0.2265625,-0.3703125,-0.3304687,0,0.1914063,0.2246094,-0.2554688,-0.31875,0,0.2871094,0.234375,-0.2507813,-0.3585938,0,0.2910156,0.2011719,-0.2507813,-0.3328125,0,0.2910156,0.2226563,-0.2648438,-0.309375,0,0.2792969,0.2421875,-0.28125,-0.3796875,0,0.265625,0.1835938,-0.2953125,-0.309375,0,0.2539063,0.2421875,-0.2953125,-0.3164063,0,0.2539063,0.2363281,-0.3046875,-0.3796875,0,0.2460938,0.1835938,-0.3070312,-0.3328125,0,0.2441406,0.2226563,-0.3117188,-0.3328125,0,0.2402344,0.2226563,-0.3117188,-0.365625,0,0.2402344,0.1953125,-0.2976563,-0.309375,0,0.2519531,0.2421875,-0.3117188,-0.3234375,0,0.2402344,0.2304688,-0.1617188,0.3304687,0,0.3652344,0.7753906,-0.1640625,0.3515625,0,0.3632813,0.7929688,-0.1804688,0.3421875,0,0.3496094,0.7851563,-0.159375,0.3609375,0,0.3671875,0.8007813,-0.1476562,0.3304687,0,0.3769531,0.7753906,-0.1476562,0.3421875,0,0.3769531,0.7851563,-0.1617188,0.3304687,0,0.3652344,0.7753906,-0.1734375,0.3679688,0,0.3554688,0.8066406,-0.1851563,0.3679688,0,0.3457031,0.8066406,-0.1898438,0.3492188,0,0.3417969,0.7910156,-0.1921875,0.365625,0,0.3398438,0.8046875,-0.1921875,0.3539062,0,0.3398438,0.7949219,-0.1617188,0.3117188,0,0.3652344,0.7597656,-0.16875,0.2929688,0,0.359375,0.7441406,-0.159375,0.2929688,0,0.3671875,0.7441406,-0.1804688,0.3117188,0,0.3496094,0.7597656,-0.1804688,0.3,0,0.3496094,0.75,-0.1523438,0.3070312,0,0.3730469,0.7558594,-0.1546875,0.2929688,0,0.3710938,0.7441406,-0.1523438,0.2976563,0,0.3730469,0.7480469,-0.1570313,0.3117188,0,0.3691406,0.7597656,-0.159375,-0.2367188,0,0.3671875,0.3027344,-0.1546875,-0.2390625,0,0.3710938,0.3007813,-0.159375,-0.234375,0,0.3671875,0.3046875,-0.1710937,-0.2390625,0,0.3574219,0.3007813,-0.1429688,-0.2390625,0,0.3808594,0.3007813,-0.1828125,-0.2390625,0,0.3476563,0.3007813,-0.1921875,-0.2367188,0,0.3398438,0.3027344,-0.1851563,-0.2367188,0,0.3457031,0.3027344,-0.2015625,-0.2367188,0,0.3320313,0.3027344,-0.3046875,-0.2578125,0,0.2460938,0.2851563,-0.20625,-0.2320313,0,0.328125,0.3066406,-0.1359375,-0.2367188,0,0.3867188,0.3027344,-0.1382813,-0.2390625,0,0.3847656,0.3007813,-0.1570313,-0.2273438,0,0.3691406,0.3105469,-0.159375,-0.2296875,0,0.3671875,0.3085938,-0.1335938,-0.2296875,0,0.3886719,0.3085938,-0.1335938,-0.234375,0,0.3886719,0.3046875,-0.1382813,-0.225,0,0.3847656,0.3125,-0.1546875,-0.225,0,0.3710938,0.3125,-0.13125,-0.2367188,0,0.390625,0.3027344,-0.1382813,-0.2390625,0,0.3847656,0.3007813,-0.1382813,0.3398438,0,0.3847656,0.7832031,-0.1476562,0.2765625,0,0.3769531,0.7304688,-0.1546875,0.1945313,0,0.3710938,0.6621094,-0.1804688,0.1734375,0,0.3496094,0.6445313,-0.1828125,0.159375,0,0.3476563,0.6328125,-0.20625,0.3210938,0,0.328125,0.7675781,-0.1851563,0.2132813,0,0.3457031,0.6777344,-0.20625,0.290625,0,0.328125,0.7421875,-0.2085938,0.2882813,0,0.3261719,0.7402344,-0.215625,0.2882813,0,0.3203125,0.7402344,-0.225,0.2953125,0,0.3125,0.7460938,-0.50625,-0.05625,0,0.078125,0.453125,-0.1617188,0.253125,0,0.3652344,0.7109375,-0.1546875,0.2226563,0,0.3710938,0.6855469,-0.1617188,0.2320313,0,0.3652344,0.6933594,-0.1640625,0.1945313,0,0.3632813,0.6621094,-0.16875,0.2273438,0,0.359375,0.6894531,-0.1710937,0.196875,0,0.3574219,0.6640625,-0.178125,0.2273438,0,0.3515625,0.6894531,-0.2109375,0.328125,0,0.3242188,0.7734375,-0.16875,0.2648438,0,0.359375,0.7207031,-0.178125,0.2648438,0,0.3515625,0.7207031,-0.159375,-0.4523438,0,0.3671875,0.1230469,-0.1617188,-0.4640625,0,0.3652344,0.1132813,-0.1570313,-0.459375,0,0.3691406,0.1171875,-0.1664063,-0.4523438,0,0.3613281,0.1230469,-0.16875,-0.4640625,0,0.359375,0.1132813,-0.1710937,-0.4570313,0,0.3574219,0.1191406,-0.225,0.3210938,0,0.3125,0.7675781,-0.5296875,-0.05625,0,0.05859375,0.453125,-0.6,0.1359375,0,0,0.6132813,-0.5296875,-0.09609375,0,0.05859375,0.4199219,-0.6,-0.046875,0,0,0.4609375,-0.225,0.3328125,0,0.3125,0.7773438,-0.2132813,0.3328125,0,0.3222656,0.7773438,-0.3,-0.3046875,0,0.25,0.2460938,-0.3140625,-0.3070312,0,0.2382813,0.2441406,-0.3140625,-0.3328125,0,0.2382813,0.2226563,-0.3210938,-0.3304687,0,0.2324219,0.2246094,-0.3257813,-0.31875,0,0.2285156,0.234375,-0.3257813,-0.3070312,0,0.2285156,0.2441406,-0.3257813,-0.3304687,0,0.2285156,0.2246094,-0.3375,-0.3304687,0,0.21875,0.2246094,0.346875,-0.271875,0,0.7890625,0.2734375,0.3492188,-0.309375,0,0.7910156,0.2421875,0.3492188,-0.2789063,0,0.7910156,0.2675781,0.3398438,-0.328125,0,0.7832031,0.2265625,0.3257813,-0.2648438,0,0.7714844,0.2792969,0.3210938,-0.328125,0,0.7675781,0.2265625,0.3140625,-0.3234375,0,0.7617188,0.2304688,0.3070312,-0.2648438,0,0.7558594,0.2792969,0.2953125,-0.2765625,0,0.7460938,0.2695313,0.2882813,-0.2929688,0,0.7402344,0.2558594,0.2882813,-0.3070312,0,0.7402344,0.2441406,0.3867188,-0.2742188,0,0.8222656,0.2714844,0.39375,-0.2835937,0,0.828125,0.2636719,0.39375,-0.2765625,0,0.828125,0.2695313,0.3867188,-0.2859375,0,0.8222656,0.2617188,0.3820313,-0.2789063,0,0.8183594,0.2675781,0.084375,0.2601562,0,0.5703125,0.7167969,0.0609375,-0.215625,0,0.5507813,0.3203125,0.084375,0.2484375,0,0.5703125,0.7070313,0.03984375,0.271875,0,0.5332031,0.7265625,0.09609375,0.28125,0,0.5800781,0.734375,0.0328125,0.2742188,0,0.5273438,0.7285156,0.028125,0.2695313,0,0.5234375,0.7246094,-0.0796875,-0.2296875,0,0.4335938,0.3085938,-0.0609375,-0.2296875,0,0.4492188,0.3085938,-0.0890625,0.3726563,0,0.4257813,0.8105469,-0.0796875,-0.2320313,0,0.4335938,0.3066406,-0.0890625,-0.2296875,0,0.4257813,0.3085938,-0.0890625,-0.2320313,0,0.4257813,0.3066406,0.06328125,-0.2273438,0,0.5527344,0.3105469,0.06796875,-0.2367188,0,0.5566406,0.3027344,0.06796875,-0.2320313,0,0.5566406,0.3066406,0.06328125,-0.2414063,0,0.5527344,0.2988281,0.0375,-0.2273438,0,0.53125,0.3105469,0.0375,-0.2414063,0,0.53125,0.2988281,0.0328125,-0.2320313,0,0.5273438,0.3066406,0.0328125,-0.2367188,0,0.5273438,0.3027344,0.00703125,-0.2671875,0,0.5058594,0.2773438,0,-0.2835937,0,0.5,0.2636719,0.00703125,-0.2789063,0,0.5058594,0.2675781,-0.05859375,-0.2671875,0,0.4511719,0.2773438,-0.05859375,-0.2835937,0,0.4511719,0.2636719,0.0890625,-0.2671875,0,0.5742188,0.2773438,0.0890625,-0.2789063,0,0.5742188,0.2675781,0.0890625,-0.2742188,0,0.5742188,0.2714844,0.08671875,-0.2835937,0,0.5722656,0.2636719,0.0703125,-0.2835937,0,0.5585938,0.2636719,0.065625,-0.2671875,0,0.5546875,0.2773438,0.06328125,-0.271875,0,0.5527344,0.2734375,0.06328125,-0.2789063,0,0.5527344,0.2675781,0.1171875,0.271875,0,0.5976563,0.7265625,0.103125,0.2460938,0,0.5859375,0.7050781,0.1078125,0.253125,0,0.5898438,0.7109375,0.09375,0.2460938,0,0.578125,0.7050781,0.1101563,0.2390625,0,0.5917969,0.6992188,0.1054688,0.2414063,0,0.5878906,0.7011719,0.1007813,0.2414063,0,0.5839844,0.7011719,0.09140625,0.2296875,0,0.5761719,0.6914063,0.09140625,0.2226563,0,0.5761719,0.6855469,0.1171875,-0.2648438,0,0.5976563,0.2792969,0.1101563,-0.28125,0,0.5917969,0.265625,0.1171875,-0.2742188,0,0.5976563,0.2714844,0.09609375,-0.2648438,0,0.5800781,0.2792969,0.09609375,-0.28125,0,0.5800781,0.265625,0.1359375,-0.2625,0,0.6132813,0.28125,0.140625,-0.2742188,0,0.6171875,0.2714844,0.140625,-0.2671875,0,0.6171875,0.2773438,0.1359375,-0.2789063,0,0.6132813,0.2675781,0.1242188,-0.2625,0,0.6035156,0.28125,0.1242188,-0.2789063,0,0.6035156,0.2675781,0.1195313,-0.2671875,0,0.5996094,0.2773438,0.1195313,-0.2742188,0,0.5996094,0.2714844,0.1664063,-0.271875,0,0.6386719,0.2734375,0.1640625,-0.271875,0,0.6367188,0.2734375,0.1640625,-0.2765625,0,0.6367188,0.2695313,0.1640625,-0.2601562,0,0.6367188,0.2832031,0.1640625,-0.2625,0,0.6367188,0.28125,0.1664063,-0.2625,0,0.6386719,0.28125,0.1476562,-0.2765625,0,0.6230469,0.2695313,0.1453125,-0.2601562,0,0.6210938,0.2832031,0.1429688,-0.2671875,0,0.6191406,0.2773438,0.1429688,-0.2742188,0,0.6191406,0.2714844,0.1664063,-0.2625,0,0.6386719,0.28125,0.1664063,-0.271875,0,0.6386719,0.2734375,0.1710937,-0.2742188,0,0.6425781,0.2714844,-0.1289063,-0.2367188,0,0.3925781,0.3027344,-0.1289063,-0.2367188,0,0.3925781,0.3027344,-0.13125,0.365625,0,0.390625,0.8046875,-0.140625,0.3632813,0,0.3828125,0.8027344,-0.09375,-0.2414063,0,0.421875,0.2988281,-0.0890625,-0.2367188,0,0.4257813,0.3027344,-0.1242188,-0.2414063,0,0.3964844,0.2988281,-0.0984375,-0.2273438,0,0.4179688,0.3105469,-0.1289063,-0.2273438,0,0.3925781,0.3105469,-0.1078125,0.3328125,0,0.4101563,0.7773438,-0.1125,0.3492188,0,0.40625,0.7910156,-0.1148438,0.3726563,0,0.4042969,0.8105469,-0.1195313,0.3703125,0,0.4003906,0.8085938,0.03984375,0.2648438,0,0.5332031,0.7207031,0.0328125,0.2625,0,0.5273438,0.71875,0.02109375,-0.24375,0,0.5175781,0.296875,0.02109375,-0.2296875,0,0.5175781,0.3085938,-0.0796875,-0.24375,0,0.4335938,0.296875,-0.1125,0.3445313,0,0.40625,0.7871094,-0.1242188,0.3609375,0,0.3964844,0.8007813,-0.1921875,-0.2203125,0,0.3398438,0.3164063,-0.1851563,-0.2296875,0,0.3457031,0.3085938,-0.1851563,-0.2273438,0,0.3457031,0.3105469,-0.2015625,-0.2203125,0,0.3320313,0.3164063,-0.20625,-0.225,0,0.328125,0.3125,-0.159375,-0.225,0,0.3671875,0.3125,-0.1664063,-0.2226563,0,0.3613281,0.3144531,-0.1828125,-0.2226563,0,0.3476563,0.3144531,0.1101563,0.2929688,0,0.5917969,0.7441406,0.1007813,0.2929688,0,0.5839844,0.7441406,0.1101563,0.290625,0,0.5917969,0.7421875,0.1101563,0.2296875,0,0.5917969,0.6914063,0.103125,0.2179688,0,0.5859375,0.6816406,0.09609375,0.2179688,0,0.5800781,0.6816406,0.215625,0.2226563,0,0.6796875,0.6855469,0.1335938,0.2390625,0,0.6113281,0.6992188,0.140625,0.234375,0,0.6171875,0.6953125,0.121875,0.234375,0,0.6015625,0.6953125,0.121875,0.2296875,0,0.6015625,0.6914063,0.1265625,0.2390625,0,0.6054688,0.6992188,0.1382813,0.2203125,0,0.6152344,0.6835938,0.140625,0.225,0,0.6171875,0.6875,0.13125,0.2203125,0,0.609375,0.6835938,0.2671875,-0.1992188,0,0.7226563,0.3339844,0.1265625,-0.2414063,0,0.6054688,0.2988281,0.24375,-0.2273438,0,0.703125,0.3105469,0.075,-0.2226563,0,0.5625,0.3144531,0.07265625,-0.2414063,0,0.5605469,0.2988281,0.0703125,-0.2320313,0,0.5585938,0.3066406,0.478125,-0.05859375,0,0.8984375,0.4511719,0.3304687,-0.1664063,0,0.7753906,0.3613281,0.4289063,-0.0984375,0,0.8574219,0.4179688,0.3023438,0.1640625,0,0.7519531,0.6367188,0.5859375,0,0,0.9882813,0.5,0.2953125,0.1617188,0,0.7460938,0.6347656,0.2601562,0.1265625,0,0.7167969,0.6054688,0.225,0.1289063,0,0.6875,0.6074219,0.2203125,0.1289063,0,0.6835938,0.6074219,0.6,-0.01640625,0,1,0.4863281,0.5976563,-0.06328125,0,0.9980469,0.4472656,0.6,-0.0515625,0,1,0.4570313,0.4640625,-0.1171875,0,0.8867188,0.4023438,0.3257813,-0.2296875,0,0.7714844,0.3085938,0.271875,-0.2484375,0,0.7265625,0.2929688,0.1898438,-0.2742188,0,0.6582031,0.2714844,0.2273438,0.2015625,0,0.6894531,0.6679688,0.2296875,0.2085938,0,0.6914063,0.6738281,0.2320313,0.2085938,0,0.6933594,0.6738281,0.24375,0.2039063,0,0.703125,0.6699219,0.24375,0.1992188,0,0.703125,0.6660156,0.24375,0.1992188,0,0.703125,0.6660156,0.2367188,0.2085938,0,0.6972656,0.6738281,0.2742188,0.1710937,0,0.7285156,0.6425781,0.2601562,0.1289063,0,0.7167969,0.6074219,0.2882813,0.1710937,0,0.7402344,0.6425781,0.2414063,0.1945313,0,0.7011719,0.6621094,0.234375,0.1945313,0,0.6953125,0.6621094,0.2320313,0.13125,0,0.6933594,0.609375,0.2953125,0.1828125,0,0.7460938,0.6523438,0.2953125,0.3,0,0.7460938,0.75,0.2460938,0.2296875,0,0.7050781,0.6914063,0.2414063,0.3820313,0,0.7011719,0.8183594,0.2367188,0.2367188,0,0.6972656,0.6972656,0.2296875,0.2367188,0,0.6914063,0.6972656,0.225,0.2273438,0,0.6875,0.6894531,0.225,0.2179688,0,0.6875,0.6816406,0.2085938,0.271875,0,0.6738281,0.7265625,0.20625,0.2742188,0,0.671875,0.7285156,0.1992188,0.2742188,0,0.6660156,0.7285156,0.1945313,0.271875,0,0.6621094,0.7265625,0.1640625,0.3820313,0,0.6367188,0.8183594,0.1945313,0.2648438,0,0.6621094,0.7207031,0.3140625,0.1710937,0,0.7617188,0.6425781,0.3140625,0.2226563,0,0.7617188,0.6855469,0.2460938,0.2226563,0,0.7050781,0.6855469,0.2296875,0.215625,0,0.6914063,0.6796875,0.2085938,0.2648438,0,0.6738281,0.7207031,0.20625,0.2601562,0,0.671875,0.7167969,0.1992188,0.2601562,0,0.6660156,0.7167969,0.1289063,0.2976563,0,0.6074219,0.7480469,0.1171875,0.290625,0,0.5976563,0.7421875,0.1148438,0.2929688,0,0.5957031,0.7441406,0.1125,0.3117188,0,0.59375,0.7597656,0.1101563,0.31875,0,0.5917969,0.765625,0.1101563,0.3140625,0,0.5917969,0.7617188,0.1078125,0.3164063,0,0.5898438,0.7636719,0.1101563,0.3023438,0,0.5917969,0.7519531,0.103125,0.3164063,0,0.5859375,0.7636719,0.0984375,0.2976563,0,0.5820313,0.7480469,0.09375,0.3070312,0,0.578125,0.7558594,0.09375,0.3023438,0,0.578125,0.7519531,0.1195313,0.2789063,0,0.5996094,0.7324219,0.1195313,0.290625,0,0.5996094,0.7421875,0.1125,0.2882813,0,0.59375,0.7402344,-0.196875,0.3914063,0,0.3359375,0.8261719,-0.1921875,0.375,0,0.3398438,0.8125,-0.1921875,0.3890625,0,0.3398438,0.8242188,-0.1992188,0.3585938,0,0.3339844,0.7988281,-0.196875,0.3960938,0,0.3359375,0.8300781,-0.1921875,0.3960938,0,0.3398438,0.8300781,-0.196875,0.403125,0,0.3359375,0.8359375,-0.1851563,0.4125,0,0.3457031,0.84375,-0.1335938,0.384375,0,0.3886719,0.8203125,-0.1382813,0.365625,0,0.3847656,0.8046875,-0.1335938,0.3679688,0,0.3886719,0.8066406,-0.15,0.365625,0,0.375,0.8046875,-0.1570313,0.4125,0,0.3691406,0.84375,-0.1148438,-0.28125,0,0.4042969,0.265625,-0.1148438,-0.2460938,0,0.4042969,0.2949219,-0.253125,-0.28125,0,0.2890625,0.265625,-0.3375,-0.2648438,0,0.21875,0.2792969,-0.5296875,-0.1078125,0,0.05859375,0.4101563,-0.2085938,0.3960938,0,0.3261719,0.8300781,-0.215625,0.3773438,0,0.3203125,0.8144531,-0.215625,0.3585938,0,0.3203125,0.7988281],[365,364,348,363,348,364,349,348,363,345,348,349,362,134,361,91,361,134,360,361,91,86,360,91,358,360,86,102,358,86,94,358,102,101,358,94,359,358,101,347,350,356,352,356,350,357,356,352,353,356,357,354,356,353,355,354,353,349,351,350,352,350,351,345,349,347,350,347,349,348,345,346,347,346,345,337,335,333,259,337,332,333,332,337,261,259,344,332,344,259,331,344,332,166,260,196,261,196,260,344,196,261,331,196,344,342,196,331,343,342,331,341,340,339,338,339,340,337,339,338,336,337,338,335,337,336,322,320,329,319,329,320,328,329,319,318,328,319,327,328,318,317,327,318,335,334,333,321,333,334,332,333,321,331,332,321,330,331,321,322,330,321,265,330,322,329,265,322,328,265,329,327,265,328,317,265,327,316,315,326,314,326,315,325,326,314,313,325,314,311,325,313,296,297,307,298,307,297,300,307,298,306,307,300,300,301,303,299,303,301,265,316,309,326,309,316,325,309,326,311,309,325,305,309,323,310,323,309,324,323,310,312,320,321,322,321,320,319,320,312,318,319,312,317,318,312,265,317,312,315,265,312,316,265,315,314,315,312,313,314,312,311,313,312,310,311,312,309,311,310,309,302,265,298,265,302,299,302,309,303,299,309,305,303,309,288,296,308,307,308,296,304,308,307,306,304,307,300,304,306,303,304,300,305,304,303,298,302,300,299,300,302,301,300,299,298,297,265,296,265,297,288,265,296,223,276,228,230,228,276,295,230,276,294,295,276,274,294,276,292,294,274,293,294,292,290,293,292,280,290,292,284,290,280,289,290,284,291,290,289,164,204,163,281,163,204,264,281,204,263,281,264,262,281,263,200,281,262,269,281,200,196,269,200,273,281,269,271,281,273,272,281,271,267,281,272,288,281,267,265,288,267,287,281,288,286,281,287,285,281,286,283,281,285,280,281,283,284,280,283,282,281,280,279,277,278,275,278,277,274,275,277,276,275,274,121,124,119,123,119,124,117,119,123,115,117,123,269,268,273,270,273,268,266,273,270,271,273,266,267,271,266,272,271,267,265,266,196,270,196,266,268,196,270,269,196,268,267,266,265,204,203,264,202,264,203,263,264,202,201,263,202,262,263,201,200,262,201,261,260,259,96,256,95,134,132,91,114,91,132,254,91,114,251,254,114,257,251,114,256,257,114,95,256,114,255,91,254,92,91,255,258,251,257,253,251,258,89,252,87,253,87,252,258,87,253,85,87,258,257,85,258,82,85,257,256,82,257,84,82,256,96,84,256,89,88,252,92,255,90,254,90,255,88,90,254,251,88,254,252,88,251,253,252,251,250,239,233,231,233,239,238,239,250,249,238,250,240,238,249,248,172,246,170,246,172,247,246,170,168,167,245,244,245,167,165,244,167,170,168,163,245,163,168,244,163,245,165,163,244,172,169,170,243,242,241,171,241,242,240,241,171,238,240,171,173,238,171,231,239,232,238,232,239,174,232,238,173,174,238,232,174,237,235,237,174,236,235,174,234,233,103,97,103,233,101,97,233,231,101,233,232,101,231,218,229,230,228,230,229,219,222,218,223,218,222,228,218,223,229,218,228,227,226,224,225,224,226,221,224,225,220,224,221,219,220,221,222,219,221,223,222,221,220,219,218,217,216,215,214,215,216,213,215,214,210,213,214,211,213,210,212,211,210,190,188,209,208,209,188,206,209,208,205,206,208,207,206,205,199,203,164,204,164,203,202,203,199,197,202,199,201,202,197,198,201,197,200,201,198,196,200,198,164,162,199,166,199,162,197,199,166,196,197,166,198,197,196,195,194,192,193,192,194,188,192,193,191,192,188,189,191,188,190,189,188,187,186,184,183,184,186,185,184,183,182,181,180,179,180,181,178,180,179,175,178,179,176,178,175,177,176,175,174,173,172,171,172,173,169,172,171,168,169,171,167,168,171,166,167,171,170,169,168,165,167,166,162,165,166,163,165,162,164,163,162,161,157,160,158,160,157,159,158,157,156,155,152,154,152,155,153,152,154,150,152,153,151,152,150,149,151,150,146,149,150,147,149,146,148,147,146,31,32,145,143,145,32,144,145,143,142,144,143,142,139,141,140,141,139,57,140,139,60,57,139,138,60,139,59,60,138,53,59,138,113,131,112,122,112,131,111,112,122,108,111,122,110,111,108,131,136,122,137,122,136,135,133,134,132,134,133,131,132,133,114,132,131,113,114,131,130,128,129,126,129,128,125,126,128,127,126,125,61,76,63,77,63,76,73,76,61,74,124,77,121,77,124,123,124,74,115,123,74,75,115,74,122,63,108,109,108,63,77,109,63,121,109,77,120,109,121,119,120,121,118,120,119,117,118,119,116,118,117,115,116,117,75,116,115,114,113,95,112,95,113,111,95,112,110,95,111,108,95,110,107,95,108,109,107,108,106,95,107,105,95,106,100,95,105,99,100,105,104,99,105,103,99,104,97,99,103,102,86,94,94,93,101,93,98,101,97,101,98,95,100,93,99,93,100,97,93,99,98,93,97,84,96,83,95,83,96,93,83,95,86,83,93,94,86,93,92,90,91,87,91,90,86,91,87,88,87,90,89,87,88,85,86,87,83,86,85,82,83,85,84,83,82,73,81,75,79,75,81,78,79,81,80,79,78,77,76,74,73,74,76,75,74,73,72,71,70,69,70,71,63,70,69,68,63,69,62,63,68,64,62,68,61,62,64,67,61,64,65,67,64,66,65,64,63,62,61,57,60,56,59,56,60,54,56,59,53,54,59,58,57,55,56,55,57,54,55,56,52,55,54,53,52,54,51,52,53,49,52,51,48,49,51,50,49,48,37,35,47,46,47,35,34,46,35,37,47,36,33,36,47,46,33,47,34,33,46,45,44,36,43,36,44,41,36,43,40,36,41,42,40,41,39,36,40,38,36,39,35,36,38,30,35,38,37,36,35,34,35,30,33,34,30,31,33,30,32,31,30,29,28,27,26,27,28,24,27,26,25,24,26,23,24,25,21,24,23,20,21,23,22,21,20,19,16,9,17,9,16,18,17,16,15,14,13,12,13,14,10,13,12,9,10,12,11,10,9,8,7,5,6,5,7,4,5,6,3,5,4,0,3,4,1,3,0,2,1,0],0,0,1,1,0,0,1,0.84375,0,0,0,0,[0,0,0,0],[-0.6,-0.6,0.6,0.6],426.666656494141,512,512,512,512,256,256,0,0]},{"id":29400,"path":"Assets/Content/Sprites/Ingredients/enchilada sauce.png","assetBundleId":-1,"data":["enchilada sauce",6,29398,[0.028125,0.09492187,0,0.4078125,0.4042969,0],[-0.2578125,-0.2320313,0,0.2851563,0.3066406,-0.2625,-0.2578125,0,0.28125,0.2851563,-0.2578125,-0.2507813,0,0.2851563,0.2910156,-0.2648438,-0.225,0,0.2792969,0.3125,-0.2671875,-0.225,0,0.2773438,0.3125,-0.2671875,-0.2578125,0,0.2773438,0.2851563,-0.2742188,-0.2296875,0,0.2714844,0.3085938,-0.2742188,-0.2554688,0,0.2714844,0.2871094,0.2414063,0.3,0,0.7011719,0.75,0.2507813,0.2859375,0,0.7089844,0.7382813,0.2554688,0.309375,0,0.7128906,0.7578125,0.2414063,0.2953125,0,0.7011719,0.7460938,0.4171875,0.1828125,0,0.8476563,0.6523438,0.4359375,0.09375,0,0.8632813,0.578125,0.4359375,0.1570313,0,0.8632813,0.6308594,0.3984375,-0.0234375,0,0.8320313,0.4804688,0.3609375,0.2460938,0,0.8007813,0.7050781,0.346875,-0.159375,0,0.7890625,0.3671875,0.3023438,-0.2296875,0,0.7519531,0.3085938,0.271875,0.3023438,0,0.7265625,0.7519531,0.2507813,-0.271875,0,0.7089844,0.2734375,0.1429688,-0.309375,0,0.6191406,0.2421875,0.1007813,0.3140625,0,0.5839844,0.7617188,-0.0375,0.365625,0,0.46875,0.8046875,-0.046875,-0.309375,0,0.4609375,0.2421875,-0.09609375,0.365625,0,0.4199219,0.8046875,-0.103125,0.3632813,0,0.4140625,0.8027344,-0.1359375,-0.3,0,0.3867188,0.25,-0.2320313,-0.2460938,0,0.3066406,0.2949219,-0.2695313,-0.2109375,0,0.2753906,0.3242188,-0.3257813,0.2320313,0,0.2285156,0.6933594,-0.3796875,0.1570313,0,0.1835938,0.6308594,-0.3796875,0.0703125,0,0.1835938,0.5585938,0.1476562,0.375,0,0.6230469,0.8125,0.1429688,0.3679688,0,0.6191406,0.8066406,0.1476562,0.3726563,0,0.6230469,0.8105469,0.1359375,0.3867188,0,0.6132813,0.8222656,0.1335938,0.3679688,0,0.6113281,0.8066406,0.1289063,0.3867188,0,0.6074219,0.8222656,0.1265625,0.3820313,0,0.6054688,0.8183594,0.1265625,0.3726563,0,0.6054688,0.8105469,-0.0234375,0.4664063,0,0.4804688,0.8886719,-0.01875,0.459375,0,0.484375,0.8828125,-0.01875,0.4664063,0,0.484375,0.8886719,-0.02578125,0.46875,0,0.4785156,0.890625,-0.03515625,0.4757813,0,0.4707031,0.8964844,-0.0375,0.4289063,0,0.46875,0.8574219,-0.0515625,0.4078125,0,0.4570313,0.8398438,-0.06328125,0.4546875,0,0.4472656,0.8789063,-0.0703125,0.4078125,0,0.4414063,0.8398438,-0.07265625,0.4265625,0,0.4394531,0.8554688,-0.07265625,0.4125,0,0.4394531,0.84375,0.0140625,0.4992188,0,0.5117188,0.9160156,0.01875,0.478125,0,0.515625,0.8984375,0.01875,0.496875,0,0.515625,0.9140625,-0.009375,0.4664063,0,0.4921875,0.8886719,-0.0140625,0.4992188,0,0.4882813,0.9160156,-0.0234375,0.4757813,0,0.4804688,0.8964844,-0.02578125,0.4828125,0,0.4785156,0.9023438,-0.02578125,0.4757813,0,0.4785156,0.8964844],[44,45,59,44,59,41,57,41,59,43,41,57,59,58,57,56,57,58,43,57,56,55,43,56,52,55,56,53,55,52,54,53,52,51,50,49,48,49,50,47,49,48,45,47,48,46,47,45,42,46,45,44,42,45,41,42,44,43,42,41,40,39,37,38,37,39,36,37,38,34,37,36,33,34,36,35,34,33,32,31,29,30,29,31,26,29,30,28,29,26,27,28,26,24,27,26,25,24,26,23,24,25,21,24,23,22,21,23,9,21,22,20,21,9,18,20,9,10,18,9,19,18,10,16,18,19,17,18,16,15,17,16,12,15,16,13,15,12,14,13,12,11,8,9,10,9,8,7,6,5,4,5,6,1,5,4,3,1,4,0,1,3,2,1,0],-0.0000522434711456299,-0.0000522434711456299,0.999947786331177,0.999947786331177,0.18359375,0.2421875,0.86328125,0.916015625,0,0,0,0,[0,0,0,0],[-0.6,-0.6,0.6,0.6],426.666656494141,512,512,512,512,256,256,94.0267486572266,124.026748657227]},{"id":29408,"path":"Assets/Content/Sprites/Tiles/tile_c3_t2.png","assetBundleId":-1,"data":["tile_c3_t2",6,29406,[0,0,0,0.5688889,0.5688889,0],[-0.5688889,0.5688889,0,0,1,0.5688889,-0.5688889,0,1,0,0.5688889,0.5688889,0,1,1,-0.5688889,-0.5688889,0,0,0],[3,0,1,2,1,0],0,0,1,1,0,0,1,1,0,0,0,0,[0,0,0,0],[-0.5688889,-0.5688889,0.5688889,0.5688889],112.5,128,128,128,128,64,64,0,0]},{"id":29328,"path":"Assets/Content/Sprites/Ingredients/ketchup.png","assetBundleId":-1,"data":["ketchup",6,29326,[0,0.01289062,0,0.31875,0.4792969,0],[-0.1101563,-0.4289063,0,0.4082031,0.1425781,-0.2789063,-0.4664063,0,0.2675781,0.1113281,-0.1101563,-0.4664063,0,0.4082031,0.1113281,-0.290625,-0.4289063,0,0.2578125,0.1425781,-0.290625,-0.4546875,0,0.2578125,0.1210938,-0.2929688,-0.43125,0,0.2558594,0.140625,-0.2929688,-0.4453125,0,0.2558594,0.1289063,0.1734375,-0.440625,0,0.6445313,0.1328125,0.1757813,-0.4570313,0,0.6464844,0.1191406,0.1757813,-0.45,0,0.6464844,0.125,0.1640625,-0.4640625,0,0.6367188,0.1132813,0.0796875,-0.4640625,0,0.5664063,0.1132813,0.0703125,-0.440625,0,0.5585938,0.1328125,0.0703125,-0.4570313,0,0.5585938,0.1191406,0.2929688,-0.45,0,0.7441406,0.125,0.290625,-0.4640625,0,0.7421875,0.1132813,0.2929688,-0.459375,0,0.7441406,0.1171875,0.2882813,-0.440625,0,0.7402344,0.1328125,0.225,-0.440625,0,0.6875,0.1328125,0.2179688,-0.4523438,0,0.6816406,0.1230469,0.2179688,-0.4640625,0,0.6816406,0.1132813,0.1992188,-0.4453125,0,0.6660156,0.1289063,0.2015625,-0.459375,0,0.6679688,0.1171875,0.2015625,-0.4523438,0,0.6679688,0.1230469,0.1992188,-0.4617188,0,0.6660156,0.1152344,0.1757813,-0.4453125,0,0.6464844,0.1289063,0.1757813,-0.4617188,0,0.6464844,0.1152344,-0.1734375,0.4921875,0,0.3554688,0.9101563,-0.225,-0.1007813,0,0.3125,0.4160156,-0.2203125,-0.2484375,0,0.3164063,0.2929688,-0.2859375,0.4054688,0,0.2617188,0.8378906,0.3164063,-0.4054688,0,0.7636719,0.1621094,0.3140625,-0.4195313,0,0.7617188,0.1503906,0.31875,-0.4125,0,0.765625,0.15625,0.2273438,-0.2132813,0,0.6894531,0.3222656,0.159375,0.4921875,0,0.6328125,0.9101563,0.2203125,0.4195313,0,0.6835938,0.8496094,-0.3164063,-0.4195313,0,0.2363281,0.1503906,-0.31875,-0.4101563,0,0.234375,0.1582031],[38,29,37,32,37,29,27,32,29,34,32,27,35,34,27,36,34,35,31,32,34,33,32,31,30,27,28,29,28,27,26,8,24,9,24,8,25,24,9,21,24,25,22,24,21,23,22,21,20,19,15,18,15,19,17,15,18,14,15,17,16,15,14,13,12,11,7,11,12,10,11,7,8,10,7,9,8,7,6,5,4,3,4,5,1,4,3,0,1,3,2,1,0],-0.0000252127647399902,-0.00000377744436264038,0.99997478723526,0.999996244907379,0.234375,0.111328125,0.765625,0.91015625,0,0,0,0,[0,0,0,0],[-0.6,-0.6,0.6,0.6],426.666656494141,512,512,512,512,256,256,120.012908935547,57.0019340515137]}],"text-assets":[{"id":24696,"path":"Assets/TextMesh Pro/Resources/LineBreaking Leading Characters.txt","assetBundleId":-1,"data":["LineBreaking Leading Characters",null,"([｛〔〈《「『【〘〖〝‘“｟«$—…‥〳〴〵\\［（{£¥\"々〇＄￥￦ #"]},{"id":25940,"path":"Assets/TextMesh Pro/Shaders/TMPro_Mobile.cginc","assetBundleId":-1,"data":["TMPro_Mobile",null,""]},{"id":24876,"path":"Assets/TextMesh Pro/Shaders/TMPro.cginc","assetBundleId":-1,"data":["TMPro",null,""]},{"id":24698,"path":"Assets/TextMesh Pro/Resources/LineBreaking Following Characters.txt","assetBundleId":-1,"data":["LineBreaking Following Characters",null,")]｝〕〉》」』】〙〗〟’”｠»ヽヾーァィゥェォッャュョヮヵヶぁぃぅぇぉっゃゅょゎゕゖㇰㇱㇲㇳㇴㇵㇶㇷㇸㇹㇺㇻㇼㇽㇾㇿ々〻‐゠–〜?!‼⁇⁈⁉・、%,.:;。！？］）：；＝}¢°\"†‡℃〆％，．"]},{"id":27622,"path":"Assets/TextMesh Pro/Shaders/TMPro_Surface.cginc","assetBundleId":-1,"data":["TMPro_Surface",null,""]},{"id":29284,"path":"Assets/TextMesh Pro/Sprites/EmojiOne.json","assetBundleId":-1,"data":["EmojiOne",null,"{\"frames\": [\r\n\r\n{\r\n\t\"filename\": \"1f60a.png\",\r\n\t\"frame\": {\"x\":0,\"y\":0,\"w\":128,\"h\":128},\r\n\t\"rotated\": false,\r\n\t\"trimmed\": false,\r\n\t\"spriteSourceSize\": {\"x\":0,\"y\":0,\"w\":128,\"h\":128},\r\n\t\"sourceSize\": {\"w\":128,\"h\":128},\r\n\t\"pivot\": {\"x\":0.5,\"y\":0.5}\r\n},\r\n{\r\n\t\"filename\": \"1f60b.png\",\r\n\t\"frame\": {\"x\":128,\"y\":0,\"w\":128,\"h\":128},\r\n\t\"rotated\": false,\r\n\t\"trimmed\": false,\r\n\t\"spriteSourceSize\": {\"x\":0,\"y\":0,\"w\":128,\"h\":128},\r\n\t\"sourceSize\": {\"w\":128,\"h\":128},\r\n\t\"pivot\": {\"x\":0.5,\"y\":0.5}\r\n},\r\n{\r\n\t\"filename\": \"1f60d.png\",\r\n\t\"frame\": {\"x\":256,\"y\":0,\"w\":128,\"h\":128},\r\n\t\"rotated\": false,\r\n\t\"trimmed\": false,\r\n\t\"spriteSourceSize\": {\"x\":0,\"y\":0,\"w\":128,\"h\":128},\r\n\t\"sourceSize\": {\"w\":128,\"h\":128},\r\n\t\"pivot\": {\"x\":0.5,\"y\":0.5}\r\n},\r\n{\r\n\t\"filename\": \"1f60e.png\",\r\n\t\"frame\": {\"x\":384,\"y\":0,\"w\":128,\"h\":128},\r\n\t\"rotated\": false,\r\n\t\"trimmed\": false,\r\n\t\"spriteSourceSize\": {\"x\":0,\"y\":0,\"w\":128,\"h\":128},\r\n\t\"sourceSize\": {\"w\":128,\"h\":128},\r\n\t\"pivot\": {\"x\":0.5,\"y\":0.5}\r\n},\r\n{\r\n\t\"filename\": \"1f600.png\",\r\n\t\"frame\": {\"x\":0,\"y\":128,\"w\":128,\"h\":128},\r\n\t\"rotated\": false,\r\n\t\"trimmed\": false,\r\n\t\"spriteSourceSize\": {\"x\":0,\"y\":0,\"w\":128,\"h\":128},\r\n\t\"sourceSize\": {\"w\":128,\"h\":128},\r\n\t\"pivot\": {\"x\":0.5,\"y\":0.5}\r\n},\r\n{\r\n\t\"filename\": \"1f601.png\",\r\n\t\"frame\": {\"x\":128,\"y\":128,\"w\":128,\"h\":128},\r\n\t\"rotated\": false,\r\n\t\"trimmed\": false,\r\n\t\"spriteSourceSize\": {\"x\":0,\"y\":0,\"w\":128,\"h\":128},\r\n\t\"sourceSize\": {\"w\":128,\"h\":128},\r\n\t\"pivot\": {\"x\":0.5,\"y\":0.5}\r\n},\r\n{\r\n\t\"filename\": \"1f602.png\",\r\n\t\"frame\": {\"x\":256,\"y\":128,\"w\":128,\"h\":128},\r\n\t\"rotated\": false,\r\n\t\"trimmed\": false,\r\n\t\"spriteSourceSize\": {\"x\":0,\"y\":0,\"w\":128,\"h\":128},\r\n\t\"sourceSize\": {\"w\":128,\"h\":128},\r\n\t\"pivot\": {\"x\":0.5,\"y\":0.5}\r\n},\r\n{\r\n\t\"filename\": \"1f603.png\",\r\n\t\"frame\": {\"x\":384,\"y\":128,\"w\":128,\"h\":128},\r\n\t\"rotated\": false,\r\n\t\"trimmed\": false,\r\n\t\"spriteSourceSize\": {\"x\":0,\"y\":0,\"w\":128,\"h\":128},\r\n\t\"sourceSize\": {\"w\":128,\"h\":128},\r\n\t\"pivot\": {\"x\":0.5,\"y\":0.5}\r\n},\r\n{\r\n\t\"filename\": \"1f604.png\",\r\n\t\"frame\": {\"x\":0,\"y\":256,\"w\":128,\"h\":128},\r\n\t\"rotated\": false,\r\n\t\"trimmed\": false,\r\n\t\"spriteSourceSize\": {\"x\":0,\"y\":0,\"w\":128,\"h\":128},\r\n\t\"sourceSize\": {\"w\":128,\"h\":128},\r\n\t\"pivot\": {\"x\":0.5,\"y\":0.5}\r\n},\r\n{\r\n\t\"filename\": \"1f605.png\",\r\n\t\"frame\": {\"x\":128,\"y\":256,\"w\":128,\"h\":128},\r\n\t\"rotated\": false,\r\n\t\"trimmed\": false,\r\n\t\"spriteSourceSize\": {\"x\":0,\"y\":0,\"w\":128,\"h\":128},\r\n\t\"sourceSize\": {\"w\":128,\"h\":128},\r\n\t\"pivot\": {\"x\":0.5,\"y\":0.5}\r\n},\r\n{\r\n\t\"filename\": \"1f606.png\",\r\n\t\"frame\": {\"x\":256,\"y\":256,\"w\":128,\"h\":128},\r\n\t\"rotated\": false,\r\n\t\"trimmed\": false,\r\n\t\"spriteSourceSize\": {\"x\":0,\"y\":0,\"w\":128,\"h\":128},\r\n\t\"sourceSize\": {\"w\":128,\"h\":128},\r\n\t\"pivot\": {\"x\":0.5,\"y\":0.5}\r\n},\r\n{\r\n\t\"filename\": \"1f609.png\",\r\n\t\"frame\": {\"x\":384,\"y\":256,\"w\":128,\"h\":128},\r\n\t\"rotated\": false,\r\n\t\"trimmed\": false,\r\n\t\"spriteSourceSize\": {\"x\":0,\"y\":0,\"w\":128,\"h\":128},\r\n\t\"sourceSize\": {\"w\":128,\"h\":128},\r\n\t\"pivot\": {\"x\":0.5,\"y\":0.5}\r\n},\r\n{\r\n\t\"filename\": \"1f618.png\",\r\n\t\"frame\": {\"x\":0,\"y\":384,\"w\":128,\"h\":128},\r\n\t\"rotated\": false,\r\n\t\"trimmed\": false,\r\n\t\"spriteSourceSize\": {\"x\":0,\"y\":0,\"w\":128,\"h\":128},\r\n\t\"sourceSize\": {\"w\":128,\"h\":128},\r\n\t\"pivot\": {\"x\":0.5,\"y\":0.5}\r\n},\r\n{\r\n\t\"filename\": \"1f923.png\",\r\n\t\"frame\": {\"x\":128,\"y\":384,\"w\":128,\"h\":128},\r\n\t\"rotated\": false,\r\n\t\"trimmed\": false,\r\n\t\"spriteSourceSize\": {\"x\":0,\"y\":0,\"w\":128,\"h\":128},\r\n\t\"sourceSize\": {\"w\":128,\"h\":128},\r\n\t\"pivot\": {\"x\":0.5,\"y\":0.5}\r\n},\r\n{\r\n\t\"filename\": \"263a.png\",\r\n\t\"frame\": {\"x\":256,\"y\":384,\"w\":128,\"h\":128},\r\n\t\"rotated\": false,\r\n\t\"trimmed\": false,\r\n\t\"spriteSourceSize\": {\"x\":0,\"y\":0,\"w\":128,\"h\":128},\r\n\t\"sourceSize\": {\"w\":128,\"h\":128},\r\n\t\"pivot\": {\"x\":0.5,\"y\":0.5}\r\n},\r\n{\r\n\t\"filename\": \"2639.png\",\r\n\t\"frame\": {\"x\":384,\"y\":384,\"w\":128,\"h\":128},\r\n\t\"rotated\": false,\r\n\t\"trimmed\": false,\r\n\t\"spriteSourceSize\": {\"x\":0,\"y\":0,\"w\":128,\"h\":128},\r\n\t\"sourceSize\": {\"w\":128,\"h\":128},\r\n\t\"pivot\": {\"x\":0.5,\"y\":0.5}\r\n}],\r\n\"meta\": {\r\n\t\"app\": \"http://www.codeandweb.com/texturepacker\",\r\n\t\"version\": \"1.0\",\r\n\t\"image\": \"EmojiOne.png\",\r\n\t\"format\": \"RGBA8888\",\r\n\t\"size\": {\"w\":512,\"h\":512},\r\n\t\"scale\": \"1\",\r\n\t\"smartupdate\": \"$TexturePacker:SmartUpdate:196a26a2e149d875b91ffc8fa3581e76:fc928c7e275404b7e0649307410475cb:424723c3774975ddb2053fd5c4b85f6e$\"\r\n}\r\n}\r\n"]},{"id":27494,"path":"Assets/TextMesh Pro/Shaders/TMPro_Properties.cginc","assetBundleId":-1,"data":["TMPro_Properties",null,""]},{"id":27236,"path":"Assets/TextMesh Pro/Sprites/EmojiOne Attribution.txt","assetBundleId":-1,"data":["EmojiOne Attribution",null,"This sample of beautiful emojis are provided by EmojiOne https://www.emojione.com/\r\n\r\nPlease visit their website to view the complete set of their emojis and review their licensing terms."]}],"textures":[{"id":24052,"type":0,"path":"Assets/Content/Sprites/Tiles/tile_c1_t4.png","assetBundleId":-1,"data":["tile_c1_t4",128,128,1,1,1,0,47,1,1,1,124,0,0,1,1]},{"id":24048,"type":0,"path":"Assets/Content/Sprites/Tiles/tile_background.png","assetBundleId":-1,"data":["tile_background",128,128,1,1,1,0,47,1,1,1,124,0,0,1,1]},{"id":24058,"type":0,"path":"Assets/Content/Sprites/Ingredients/apple.png","assetBundleId":-1,"data":["apple",512,512,1,1,1,0,47,1,1,1,124,0,0,1,1]},{"id":24060,"type":0,"path":"Assets/Content/Sprites/Tiles/tile_c1_t1.png","assetBundleId":-1,"data":["tile_c1_t1",128,128,1,1,1,0,47,1,1,1,124,0,0,1,1]},{"id":24050,"type":0,"path":"Assets/Content/Sprites/Ingredients/cinnamon.png","assetBundleId":-1,"data":["cinnamon",512,512,1,1,1,0,47,1,1,1,124,0,0,1,1]},{"id":24064,"type":0,"path":"Assets/Content/Sprites/Ingredients/feta chesee.png","assetBundleId":-1,"data":["feta chesee",512,512,1,1,1,0,47,1,1,1,124,0,0,1,1]},{"id":24066,"type":0,"path":"Assets/Content/Sprites/Tiles/tile_c1_t3.png","assetBundleId":-1,"data":["tile_c1_t3",128,128,1,1,1,0,47,1,1,1,124,0,0,1,1]},{"id":24056,"type":0,"path":"Assets/Content/Sprites/Tiles/tile_c1_t2.png","assetBundleId":-1,"data":["tile_c1_t2",128,128,1,1,1,0,47,1,1,1,124,0,0,1,1]},{"id":24062,"type":0,"path":"Assets/Content/Sprites/Tiles/tile_c1_t5.png","assetBundleId":-1,"data":["tile_c1_t5",128,128,1,1,1,0,47,1,1,1,124,0,0,1,1]},{"id":24068,"type":0,"path":"Assets/Content/Sprites/Tiles/tile_c3_t4.png","assetBundleId":-1,"data":["tile_c3_t4",128,128,1,1,1,0,4,1,1,1,8,0,0,1,1]},{"id":24054,"type":0,"path":"Assets/Content/Sprites/Ingredients/spinach.png","assetBundleId":-1,"data":["spinach",512,512,1,1,1,0,47,1,1,1,124,0,0,1,1]},{"id":24552,"type":0,"path":"Assets/Content/Sprites/Quest/bg.png","assetBundleId":-1,"data":["bg",288,512,1,1,1,0,47,1,1,1,124,0,0,1,1]},{"id":24650,"type":0,"path":"Assets/Content/Sprites/Quest/dotted line.png","assetBundleId":-1,"data":["dotted line",146,146,1,1,1,0,4,1,1,1,8,0,0,1,1]},{"id":24630,"type":0,"path":"Assets/TextMesh Pro/Resources/Fonts & Materials/LiberationSans SDF.asset","assetBundleId":-1,"data":["LiberationSans SDF Atlas",512,512,1,1,1,0,1,0,0,1,54,0,0,0,0]},{"id":24072,"type":0,"path":"Assets/Content/Sprites/Tiles/tile_c3_t1.png","assetBundleId":-1,"data":["tile_c3_t1",128,128,1,1,1,0,4,1,1,1,8,0,0,1,1]},{"id":24332,"type":0,"path":"Assets/Content/Sprites/Dock/slot_background.png","assetBundleId":-1,"data":["slot_background",256,256,1,1,1,0,47,1,1,1,124,0,0,1,1]},{"id":24554,"type":0,"path":"Assets/Content/Sprites/Quest/end_card.png","assetBundleId":-1,"data":["end_card",288,512,1,1,1,0,45,1,1,1,120,0,0,1,1]},{"id":24658,"type":0,"path":"Assets/Content/Sprites/Ingredients/dill.png","assetBundleId":-1,"data":["dill",512,512,1,1,1,0,47,1,1,1,124,0,0,1,1]},{"id":24070,"type":0,"path":"Assets/Content/Sprites/Tiles/tile_c2_t4.png","assetBundleId":-1,"data":["tile_c2_t4",128,128,1,1,1,0,4,1,1,1,8,0,0,1,1]},{"id":24656,"type":0,"path":"Assets/Content/Sprites/Ingredients/garlic.png","assetBundleId":-1,"data":["garlic",512,512,1,1,1,0,47,1,1,1,124,0,0,1,1]},{"id":24662,"type":0,"path":"Assets/Content/Sprites/Ingredients/lemon.png","assetBundleId":-1,"data":["lemon",512,512,1,1,1,0,47,1,1,1,124,0,0,1,1]},{"id":24684,"type":0,"path":"Assets/Content/Sprites/background.png","assetBundleId":-1,"data":["background",512,512,1,1,1,0,45,1,1,1,120,0,0,1,1]},{"id":24660,"type":0,"path":"Assets/Content/Sprites/Ingredients/olive oil.png","assetBundleId":-1,"data":["olive oil",512,512,1,1,1,0,47,1,1,1,124,0,0,1,1]},{"id":24702,"type":0,"path":"Assets/TextMesh Pro/Sprites/EmojiOne.png","assetBundleId":-1,"data":["EmojiOne",512,512,10,1,1,0,47,1,1,1,124,0,0,1,1]},{"id":24970,"type":0,"path":"Assets/Content/Sprites/Ingredients/vanila.png","assetBundleId":-1,"data":["vanila",512,512,1,1,1,0,47,1,1,1,124,0,0,1,1]},{"id":24810,"type":0,"path":"Assets/Content/Sprites/Ingredients/yeast.png","assetBundleId":-1,"data":["yeast",512,512,1,1,1,0,47,1,1,1,124,0,0,1,1]},{"id":24994,"type":0,"path":"Assets/Content/Sprites/Ingredients/eggplant.png","assetBundleId":-1,"data":["eggplant",512,512,1,1,1,0,47,1,1,1,124,0,0,1,1]},{"id":25012,"type":0,"path":"Assets/Content/Sprites/Ingredients/ham.png","assetBundleId":-1,"data":["ham",512,512,1,1,1,0,47,1,1,1,124,0,0,1,1]},{"id":25018,"type":0,"path":"Assets/Content/Sprites/Ingredients/makaroni noodle.png","assetBundleId":-1,"data":["makaroni noodle",512,512,1,1,1,0,47,1,1,1,124,0,0,1,1]},{"id":25026,"type":0,"path":"Assets/Content/Sprites/Ingredients/fajita seasoning.png","assetBundleId":-1,"data":["fajita seasoning",512,512,1,1,1,0,47,1,1,1,124,0,0,1,1]},{"id":25116,"type":0,"path":"Assets/Content/Sprites/Ingredients/almond.png","assetBundleId":-1,"data":["almond",512,512,1,1,1,0,47,1,1,1,124,0,0,1,1]},{"id":25158,"type":0,"path":"Assets/Content/Sprites/Ingredients/salmon fillets.png","assetBundleId":-1,"data":["salmon fillets",512,512,1,1,1,0,47,1,1,1,124,0,0,1,1]},{"id":25100,"type":0,"path":"Assets/Content/Sprites/Ingredients/cheddar cheese.png","assetBundleId":-1,"data":["cheddar cheese",512,512,1,1,1,0,47,1,1,1,124,0,0,1,1]},{"id":25198,"type":0,"path":"Assets/Content/Sprites/Ingredients/pastry dought.png","assetBundleId":-1,"data":["pastry dought",512,512,1,1,1,0,47,1,1,1,124,0,0,1,1]},{"id":25372,"type":0,"path":"Assets/Content/Sprites/Ingredients/pizza dough.png","assetBundleId":-1,"data":["pizza dough",512,512,1,1,1,0,47,1,1,1,124,0,0,1,1]},{"id":25332,"type":0,"path":"Assets/Content/Sprites/Ingredients/zucini.png","assetBundleId":-1,"data":["zucini",512,512,1,1,1,0,47,1,1,1,124,0,0,1,1]},{"id":25432,"type":0,"path":"Assets/Content/Sprites/Ingredients/milk.png","assetBundleId":-1,"data":["milk",512,512,1,1,1,0,47,1,1,1,124,0,0,1,1]},{"id":25406,"type":0,"path":"Assets/Content/Sprites/Ingredients/pie crust.png","assetBundleId":-1,"data":["pie crust",512,512,1,1,1,0,47,1,1,1,124,0,0,1,1]},{"id":25436,"type":0,"path":"Assets/Content/Sprites/Tiles/Special/tile_crate.png","assetBundleId":-1,"data":["tile_crate",512,512,1,1,1,0,47,1,1,1,124,0,0,1,1]},{"id":25466,"type":0,"path":"Assets/Content/Sprites/Ingredients/ricotta cheese.png","assetBundleId":-1,"data":["ricotta cheese",512,512,1,1,1,0,47,1,1,1,124,0,0,1,1]},{"id":25510,"type":0,"path":"Assets/Content/Sprites/Particles/spark_custom.png","assetBundleId":-1,"data":["spark_custom",256,256,7,1,1,0,47,0,1,1,124,0,0,0,0]},{"id":25520,"type":0,"path":"Assets/Content/Sprites/Ingredients/breadcrumbs.png","assetBundleId":-1,"data":["breadcrumbs",512,512,1,1,1,0,47,1,1,1,124,0,0,1,1]},{"id":25536,"type":0,"path":"Assets/Content/Sprites/Ingredients/brie cheese.png","assetBundleId":-1,"data":["brie cheese",512,512,1,1,1,0,47,1,1,1,124,0,0,1,1]},{"id":25540,"type":0,"path":"Assets/Content/Sprites/Ingredients/pepperoni.png","assetBundleId":-1,"data":["pepperoni",512,512,1,1,1,0,47,1,1,1,124,0,0,1,1]},{"id":25548,"type":0,"path":"Assets/Content/Sprites/Ingredients/lasagna noodle.png","assetBundleId":-1,"data":["lasagna noodle",512,512,1,1,1,0,47,1,1,1,124,0,0,1,1]},{"id":25738,"type":0,"path":"Assets/Content/Sprites/Ingredients/ground beef.png","assetBundleId":-1,"data":["ground beef",512,512,1,1,1,0,47,1,1,1,124,0,0,1,1]},{"id":25710,"type":0,"path":"Assets/Content/Sprites/Ingredients/berrie.png","assetBundleId":-1,"data":["berrie",512,512,1,1,1,0,47,1,1,1,124,0,0,1,1]},{"id":25734,"type":0,"path":"Assets/Content/Sprites/Ingredients/phyllo dough.png","assetBundleId":-1,"data":["phyllo dough",512,512,1,1,1,0,47,1,1,1,124,0,0,1,1]},{"id":25790,"type":0,"path":"Assets/Content/Sprites/Ingredients/permasan.png","assetBundleId":-1,"data":["permasan",512,512,1,1,1,0,47,1,1,1,124,0,0,1,1]},{"id":25784,"type":0,"path":"Assets/Content/Sprites/Ingredients/ziti noodle.png","assetBundleId":-1,"data":["ziti noodle",512,512,1,1,1,0,47,1,1,1,124,0,0,1,1]},{"id":25828,"type":0,"path":"Assets/Content/Sprites/Ingredients/raspberry jam.png","assetBundleId":-1,"data":["raspberry jam",512,512,1,1,1,0,47,1,1,1,124,0,0,1,1]},{"id":25770,"type":0,"path":"Assets/Content/Sprites/Ingredients/coriander seed.png","assetBundleId":-1,"data":["coriander seed",512,512,1,1,1,0,47,1,1,1,124,0,0,1,1]},{"id":25834,"type":0,"path":"Assets/Content/Sprites/Tiles/Special/tile_ice_2.png","assetBundleId":-1,"data":["tile_ice_2",256,256,1,1,1,0,47,1,1,1,124,0,0,1,1]},{"id":25990,"type":0,"path":"Assets/Content/Sprites/Ingredients/sour cream.png","assetBundleId":-1,"data":["sour cream",512,512,1,1,1,0,47,1,1,1,124,0,0,1,1]},{"id":25954,"type":0,"path":"Assets/Content/Sprites/Ingredients/béchamel sauce.png","assetBundleId":-1,"data":["béchamel sauce",512,512,1,1,1,0,47,1,1,1,124,0,0,1,1]},{"id":26010,"type":0,"path":"Assets/Content/Sprites/Ingredients/walnut.png","assetBundleId":-1,"data":["walnut",512,512,1,1,1,0,47,1,1,1,124,0,0,1,1]},{"id":26042,"type":0,"path":"Assets/Content/Sprites/Ingredients/tortillas.png","assetBundleId":-1,"data":["tortillas",512,512,1,1,1,0,47,1,1,1,124,0,0,1,1]},{"id":26080,"type":0,"path":"Assets/Content/Sprites/Ingredients/mustard.png","assetBundleId":-1,"data":["mustard",512,512,1,1,1,0,47,1,1,1,124,0,0,1,1]},{"id":26108,"type":0,"path":"Assets/Content/Sprites/Ingredients/rosemary.png","assetBundleId":-1,"data":["rosemary",512,512,1,1,1,0,47,1,1,1,124,0,0,1,1]},{"id":26118,"type":0,"path":"Assets/Content/Sprites/Ingredients/bacon.png","assetBundleId":-1,"data":["bacon",512,512,1,1,1,0,47,1,1,1,124,0,0,1,1]},{"id":26124,"type":0,"path":"Assets/Content/Sprites/Ingredients/ginger.png","assetBundleId":-1,"data":["ginger",512,512,1,1,1,0,47,1,1,1,124,0,0,1,1]},{"id":26130,"type":0,"path":"Assets/Content/Sprites/Ingredients/mushroom.png","assetBundleId":-1,"data":["mushroom",512,512,1,1,1,0,47,1,1,1,124,0,0,1,1]},{"id":26168,"type":0,"path":"Assets/Content/Sprites/Tiles/Special/tile_ice_1.png","assetBundleId":-1,"data":["tile_ice_1",256,256,1,1,1,0,47,1,1,1,124,0,0,1,1]},{"id":26180,"type":0,"path":"Assets/Content/Sprites/Tiles/Special/tile_link.png","assetBundleId":-1,"data":["tile_link",256,256,1,1,1,0,47,1,1,1,124,0,0,1,1]},{"id":26216,"type":0,"path":"Assets/Content/Sprites/Ingredients/chiken broth.png","assetBundleId":-1,"data":["chiken broth",512,512,1,1,1,0,47,1,1,1,124,0,0,1,1]},{"id":26248,"type":0,"path":"Assets/Content/Sprites/Ingredients/mashed potatoes.png","assetBundleId":-1,"data":["mashed potatoes",512,512,1,1,1,0,47,1,1,1,124,0,0,1,1]},{"id":26332,"type":0,"path":"Assets/Content/Sprites/Ingredients/tomato.png","assetBundleId":-1,"data":["tomato",512,512,1,1,1,0,47,1,1,1,124,0,0,1,1]},{"id":26352,"type":0,"path":"Assets/Content/Sprites/Ingredients/tofu.png","assetBundleId":-1,"data":["tofu",512,512,1,1,1,0,47,1,1,1,124,0,0,1,1]},{"id":26394,"type":0,"path":"Assets/Content/Sprites/Ingredients/ygrt.png","assetBundleId":-1,"data":["ygrt",512,512,1,1,1,0,47,1,1,1,124,0,0,1,1]},{"id":26496,"type":0,"path":"Assets/Content/Sprites/Ingredients/butter.png","assetBundleId":-1,"data":["butter",512,512,1,1,1,0,47,1,1,1,124,0,0,1,1]},{"id":26558,"type":0,"path":"Assets/Content/Sprites/Ingredients/bread.png","assetBundleId":-1,"data":["bread",512,512,1,1,1,0,47,1,1,1,124,0,0,1,1]},{"id":26506,"type":0,"path":"Assets/Content/Sprites/Ingredients/cream.png","assetBundleId":-1,"data":["cream",512,512,1,1,1,0,47,1,1,1,124,0,0,1,1]},{"id":26574,"type":0,"path":"Assets/Content/Sprites/Ingredients/lemon juice.png","assetBundleId":-1,"data":["lemon juice",512,512,1,1,1,0,47,1,1,1,124,0,0,1,1]},{"id":26578,"type":0,"path":"Assets/Content/Sprites/Tiles/tile_c3_t5.png","assetBundleId":-1,"data":["tile_c3_t5",128,128,1,1,1,0,4,1,1,1,8,0,0,1,1]},{"id":26594,"type":0,"path":"Assets/Content/Sprites/Ingredients/tilapia fillets.png","assetBundleId":-1,"data":["tilapia fillets",512,512,1,1,1,0,47,1,1,1,124,0,0,1,1]},{"id":26640,"type":0,"path":"Assets/Content/Sprites/Ingredients/cream cheese.png","assetBundleId":-1,"data":["cream cheese",512,512,1,1,1,0,47,1,1,1,124,0,0,1,1]},{"id":26666,"type":0,"path":"Assets/Content/Sprites/Ingredients/peas.png","assetBundleId":-1,"data":["peas",512,512,1,1,1,0,47,1,1,1,124,0,0,1,1]},{"id":26692,"type":0,"path":"Assets/Content/Sprites/Particles/cloud_blurry.png","assetBundleId":-1,"data":["cloud_blurry",256,256,1,1,1,0,47,1,1,1,124,0,0,1,1]},{"id":26744,"type":0,"path":"Assets/Content/Sprites/Ingredients/Worcestershire sauce.png","assetBundleId":-1,"data":["Worcestershire sauce",512,512,1,1,1,0,47,1,1,1,124,0,0,1,1]},{"id":26810,"type":0,"path":"Assets/Content/Sprites/Ingredients/pinto bean.png","assetBundleId":-1,"data":["pinto bean",512,512,1,1,1,0,47,1,1,1,124,0,0,1,1]},{"id":26848,"type":0,"path":"Assets/Content/Sprites/Ingredients/salt.png","assetBundleId":-1,"data":["salt",512,512,1,1,1,0,47,1,1,1,124,0,0,1,1]},{"id":26934,"type":0,"path":"Assets/Content/Sprites/Ingredients/pepper.png","assetBundleId":-1,"data":["pepper",512,512,1,1,1,0,47,1,1,1,124,0,0,1,1]},{"id":26968,"type":0,"path":"Assets/Content/Sprites/Tiles/Special/tile_ice_3.png","assetBundleId":-1,"data":["tile_ice_3",256,256,1,1,1,0,47,1,1,1,124,0,0,1,1]},{"id":26976,"type":0,"path":"Assets/Content/Sprites/Tiles/new tile_c1_t1.png","assetBundleId":-1,"data":["new tile_c1_t1",128,128,1,1,1,0,47,1,1,1,124,0,0,1,1]},{"id":26984,"type":0,"path":"Assets/Content/Sprites/Ingredients/marinara sauce.png","assetBundleId":-1,"data":["marinara sauce",512,512,1,1,1,0,47,1,1,1,124,0,0,1,1]},{"id":27004,"type":0,"path":"Assets/Content/Sprites/Tiles/tile_c2_t2.png","assetBundleId":-1,"data":["tile_c2_t2",128,128,1,1,1,0,4,1,1,1,8,0,0,1,1]},{"id":27030,"type":0,"path":"Assets/Content/Sprites/Ingredients/turmeric.png","assetBundleId":-1,"data":["turmeric",512,512,1,1,1,0,47,1,1,1,124,0,0,1,1]},{"id":27010,"type":0,"path":"Assets/Content/Sprites/Ingredients/cumin.png","assetBundleId":-1,"data":["cumin",512,512,1,1,1,0,47,1,1,1,124,0,0,1,1]},{"id":27112,"type":0,"path":"Assets/Content/Sprites/Ingredients/rice.png","assetBundleId":-1,"data":["rice",512,512,1,1,1,0,47,1,1,1,124,0,0,1,1]},{"id":27188,"type":0,"path":"Assets/Content/Sprites/Ingredients/Gruyère chese.png","assetBundleId":-1,"data":["Gruyère chese",512,512,1,1,1,0,47,1,1,1,124,0,0,1,1]},{"id":27196,"type":0,"path":"Assets/Content/Sprites/Ingredients/honey.png","assetBundleId":-1,"data":["honey",512,512,1,1,1,0,47,1,1,1,124,0,0,1,1]},{"id":27300,"type":0,"path":"Assets/Content/Sprites/Ingredients/chicken breasts.png","assetBundleId":-1,"data":["chicken breasts",512,512,1,1,1,0,47,1,1,1,124,0,0,1,1]},{"id":27374,"type":0,"path":"Assets/Content/Sprites/Ingredients/carrot.png","assetBundleId":-1,"data":["carrot",512,512,1,1,1,0,47,1,1,1,124,0,0,1,1]},{"id":27456,"type":0,"path":"Assets/Content/Sprites/Tiles/tile_c3_t3.png","assetBundleId":-1,"data":["tile_c3_t3",128,128,1,1,1,0,4,1,1,1,8,0,0,1,1]},{"id":27512,"type":0,"path":"Assets/Content/Sprites/Ingredients/lemon zest.png","assetBundleId":-1,"data":["lemon zest",512,512,1,1,1,0,47,1,1,1,124,0,0,1,1]},{"id":27524,"type":0,"path":"Assets/Content/Sprites/Tiles/Special/tile_unknown.png","assetBundleId":-1,"data":["tile_unknown",512,512,1,1,1,0,47,1,1,1,124,0,0,1,1]},{"id":27538,"type":0,"path":"Assets/Content/Sprites/Ingredients/egg.png","assetBundleId":-1,"data":["egg",512,512,1,1,1,0,47,1,1,1,124,0,0,1,1]},{"id":27562,"type":0,"path":"Assets/Content/Sprites/Ingredients/chiken full.png","assetBundleId":-1,"data":["chiken full",512,512,1,1,1,0,47,1,1,1,124,0,0,1,1]},{"id":27610,"type":0,"path":"Assets/Content/Sprites/Ingredients/chickpeas.png","assetBundleId":-1,"data":["chickpeas",512,512,1,1,1,0,47,1,1,1,124,0,0,1,1]},{"id":27696,"type":0,"path":"Assets/Content/Sprites/Ingredients/russet potatoes.png","assetBundleId":-1,"data":["russet potatoes",512,512,1,1,1,0,47,1,1,1,124,0,0,1,1]},{"id":27744,"type":0,"path":"Assets/Content/Sprites/Ingredients/sweet petato.png","assetBundleId":-1,"data":["sweet petato",512,512,1,1,1,0,47,1,1,1,124,0,0,1,1]},{"id":27764,"type":0,"path":"Assets/Content/Sprites/Ingredients/oat.png","assetBundleId":-1,"data":["oat",512,512,1,1,1,0,47,1,1,1,124,0,0,1,1]},{"id":27840,"type":0,"path":"Assets/Content/Sprites/Ingredients/parsley.png","assetBundleId":-1,"data":["parsley",512,512,1,1,1,0,47,1,1,1,124,0,0,1,1]},{"id":27806,"type":0,"path":"Assets/Content/Sprites/EXAMPLE.png","assetBundleId":-1,"data":["EXAMPLE",288,512,1,1,1,0,47,1,1,1,124,0,0,1,1]},{"id":28046,"type":0,"path":"Assets/Content/Sprites/Ingredients/masala salt.png","assetBundleId":-1,"data":["masala salt",512,512,1,1,1,0,47,1,1,1,124,0,0,1,1]},{"id":28016,"type":0,"path":"Assets/Content/Sprites/Ingredients/flour.png","assetBundleId":-1,"data":["flour",512,512,1,1,1,0,47,1,1,1,124,0,0,1,1]},{"id":28072,"type":0,"path":"Assets/Content/Sprites/Ingredients/sugar.png","assetBundleId":-1,"data":["sugar",512,512,1,1,1,0,47,1,1,1,124,0,0,1,1]},{"id":28102,"type":0,"path":"Assets/Content/Sprites/Ingredients/soy sauce.png","assetBundleId":-1,"data":["soy sauce",512,512,1,1,1,0,47,1,1,1,124,0,0,1,1]},{"id":28140,"type":0,"path":"Assets/Content/Sprites/Tiles/tile_c2_t1.png","assetBundleId":-1,"data":["tile_c2_t1",128,128,1,1,1,0,4,1,1,1,8,0,0,1,1]},{"id":28180,"type":0,"path":"Assets/Content/Sprites/Ingredients/ground turkey.png","assetBundleId":-1,"data":["ground turkey",512,512,1,1,1,0,47,1,1,1,124,0,0,1,1]},{"id":28278,"type":0,"path":"Assets/Content/Sprites/Ingredients/groung lamb.png","assetBundleId":-1,"data":["groung lamb",512,512,1,1,1,0,47,1,1,1,124,0,0,1,1]},{"id":28308,"type":0,"path":"Assets/Content/Sprites/Ingredients/onion.png","assetBundleId":-1,"data":["onion",512,512,1,1,1,0,47,1,1,1,124,0,0,1,1]},{"id":28374,"type":0,"path":"Assets/Content/Sprites/Ingredients/chives.png","assetBundleId":-1,"data":["chives",512,512,1,1,1,0,47,1,1,1,124,0,0,1,1]},{"id":28378,"type":0,"path":"Assets/Content/Sprites/Ingredients/sesame oil.png","assetBundleId":-1,"data":["sesame oil",512,512,1,1,1,0,47,1,1,1,124,0,0,1,1]},{"id":28412,"type":0,"path":"Assets/Content/Sprites/Ingredients/thyme.png","assetBundleId":-1,"data":["thyme",512,512,1,1,1,0,47,1,1,1,124,0,0,1,1]},{"id":28552,"type":0,"path":"Assets/Content/Sprites/Ingredients/Dijon mustard.png","assetBundleId":-1,"data":["Dijon mustard",512,512,1,1,1,0,47,1,1,1,124,0,0,1,1]},{"id":28430,"type":0,"path":"Assets/Content/Sprites/Ingredients/pecan.png","assetBundleId":-1,"data":["pecan",512,512,1,1,1,0,47,1,1,1,124,0,0,1,1]},{"id":28594,"type":0,"path":"Assets/Content/Sprites/Ingredients/brown sugar.png","assetBundleId":-1,"data":["brown sugar",512,512,1,1,1,0,47,1,1,1,124,0,0,1,1]},{"id":28620,"type":0,"path":"Assets/Content/Sprites/Ingredients/puff pastry.png","assetBundleId":-1,"data":["puff pastry",512,512,1,1,1,0,47,1,1,1,124,0,0,1,1]},{"id":28738,"type":0,"path":"Assets/Content/Sprites/Ingredients/shrimp.png","assetBundleId":-1,"data":["shrimp",512,512,1,1,1,0,47,1,1,1,124,0,0,1,1]},{"id":28762,"type":0,"path":"Assets/Content/Sprites/Ingredients/molasses.png","assetBundleId":-1,"data":["molasses",512,512,1,1,1,0,47,1,1,1,124,0,0,1,1]},{"id":28830,"type":0,"path":"Assets/Content/Sprites/Ingredients/mozarella.png","assetBundleId":-1,"data":["mozarella",512,512,1,1,1,0,47,1,1,1,124,0,0,1,1]},{"id":28756,"type":0,"path":"Assets/Content/Sprites/Ingredients/cod fillets.png","assetBundleId":-1,"data":["cod fillets",512,512,1,1,1,0,47,1,1,1,124,0,0,1,1]},{"id":28940,"type":0,"path":"Assets/Content/Sprites/Tiles/tile_c2_t3.png","assetBundleId":-1,"data":["tile_c2_t3",128,128,1,1,1,0,4,1,1,1,8,0,0,1,1]},{"id":29108,"type":0,"path":"Assets/Content/Sprites/Ingredients/shredded chicken.png","assetBundleId":-1,"data":["shredded chicken",512,512,1,1,1,0,47,1,1,1,124,0,0,1,1]},{"id":29096,"type":0,"path":"Assets/Content/Sprites/Tiles/tile_c2_t5.png","assetBundleId":-1,"data":["tile_c2_t5",128,128,1,1,1,0,4,1,1,1,8,0,0,1,1]},{"id":29274,"type":0,"path":"Assets/Content/Sprites/Ingredients/chicken thighs.png","assetBundleId":-1,"data":["chicken thighs",512,512,1,1,1,0,47,1,1,1,124,0,0,1,1]},{"id":29322,"type":0,"path":"Assets/Content/Sprites/Ingredients/bell peppers.png","assetBundleId":-1,"data":["bell peppers",512,512,1,1,1,0,47,1,1,1,124,0,0,1,1]},{"id":29338,"type":0,"path":"Assets/Content/Sprites/Ingredients/cloves seed.png","assetBundleId":-1,"data":["cloves seed",512,512,1,1,1,0,47,1,1,1,124,0,0,1,1]},{"id":29326,"type":0,"path":"Assets/Content/Sprites/Ingredients/ketchup.png","assetBundleId":-1,"data":["ketchup",512,512,1,1,1,0,47,1,1,1,124,0,0,1,1]},{"id":29398,"type":0,"path":"Assets/Content/Sprites/Ingredients/enchilada sauce.png","assetBundleId":-1,"data":["enchilada sauce",512,512,1,1,1,0,47,1,1,1,124,0,0,1,1]},{"id":29406,"type":0,"path":"Assets/Content/Sprites/Tiles/tile_c3_t2.png","assetBundleId":-1,"data":["tile_c3_t2",128,128,1,1,1,0,4,1,1,1,8,0,0,1,1]}]}